<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>宏基因组基础</title>
      <link href="/posts/67a9752c/"/>
      <url>/posts/67a9752c/</url>
      
        <content type="html"><![CDATA[<h1 id="微生物群落研究-宏基因组测序">微生物群落研究-宏基因组测序</h1><p><a href="https://www.bilibili.com/video/BV1hB4y1C74p/?spm_id_from=333.337.search-card.all.click&amp;vd_source=ea78e03d02c651ab9a1849ee5454e98b">参考视频</a></p><h1 id="名词解释">名词解释</h1><h2 id="高通量数据">高通量数据</h2><p>高通量筛选技术是指：<br>以分子和细胞水平的实验方法为基础、以微孔板作为实验工具载体，以自动化操作系统执行实验过程，以灵敏快速的检测仪器采集实验结果，以计算机分析处理实验数据，从而可在同一时间检测千万量级样品的技术。它具有微量、 快速、灵敏和准确等特点，可以通过一次实验获得大量的信息。<br>根据实验模型的不同，高通量筛选可以分为分子水平的筛选和细胞水平的筛选；根据筛选策略的不同，又可分为基于靶点的筛选和基于表型的筛选。<br>分子水平的药物筛选一般多为基于靶点的筛选，围绕拟开发药物作用的靶点设计实验。一般而言这些作用靶点是具有特定生理功能且具有明确靶标的蛋白质，如激酶、甲基化酶、去乙酰化酶和受体等。此外，一些编码功能明确的DNA也越来越多地成为了药物作用的靶点。<br>分子水平的药物筛选操作相对简单，且成本较低<br>但这种方法的前提是靶点明确，且易大量获得，还要有相对成熟的实验体系。<br>通常将候选化合物与靶点混合后，通过酶联免疫、荧光共振能量转移、荧光偏振、表面等离子体共振、Alphascreen、ADP-glo等方法定量测定化合物与靶点的相互作用，或是检测蛋白质-配体结合的结构、动力学和亲和度，从而作为筛选活性化合物的依据。<br>由于药物在体内的作用并不仅仅取决于其与靶酶的作用程度，吸收、分布、代谢、排泄均会对药物的作用产生极大的影响，仅仅一道薄薄的细胞膜就能够阻挡住许多候选化合物成为药物的道路，因而分子水平的药物筛选存在着许多不确定因素。<br>相比之下，细胞水平的药物筛选是一种更接近生理条件的药物筛选模型<br>这类方法大多以细胞为研究对象，其模型是拟开发药物作用的靶细胞，将候选化合物作用于通过细胞培养技术获取的靶细胞，采用与分子水平筛选类似的检测技术或是显微成像方法，分析测定化合物对各项细胞功能的影响，例如CCK8法检测细胞增殖、划痕检测细胞迁移、BiFC检测分子互作、报告基因检测靶标调控等，从而对大量化合物进行筛选。<br>细胞水平筛选的关键特征之一是可以一次筛选多个靶标，例如使用显微成像技术可以观察到多个标记荧光分子的靶标蛋白分布和表达情况。适用于对靶点所涉及的信号通路的研究以及对特定细胞产生毒性作用的化合物发现等。<br>需要注意的是，虽然细胞水平的药物筛选模型更接近生理条件，筛选准确率高，但由于需要建立细胞模型，其操作也更复杂，成本更高，且数据之间的平行性略低；另外由于技术的限制，有些靶标还不能进行细胞水平的药物筛选。<br>总体来说，分子水平的筛选和细胞水平的筛选都是高通量药物筛选中常用的筛选模型，通常情况下需组合使用，所得结果互为印证，是先导化合物发现过程中必要的研究方法。</p><h2 id="丰度-abundance">丰度（Abundance）</h2><p>丰度是生态学中用来描述一个生物群落中某一种或某些生物个体数目的概念。具体而言，丰度指的是一定面积或体积内某一物种的个体数目，通常以个体数目或百分比来衡量。例如，在一个森林生态系统中，我们可以用丰度来描述其中某一种树木的数量，比如一定面积内的树木个数。</p><h2 id="单细胞测序">单细胞测序</h2><p>简介<br>单细胞测序技术，简单来说，就是在单个细胞水平上，对基因组、转录组及表观基因组水平进行测序分析的技术。传统的测序，是在多细胞基础上进行的，实际上得到的是一堆细胞中信号的均值，丢失了细胞异质性（细胞之间的差异）的信息。而单细胞测序技术能够检出混杂样品测序所无法得到的异质性信息，从而很好的解决了这一问题。<br>转录组（transcriptome）广义上指某一生理条件下，细胞内所有转录产物的集合，包括信使RNA、核糖体RNA、转运RNA及非编码RNA；狭义上指所有mRNA的集合。<br>在分子生物学和遗传学领域，基因组是指生物体所有遗传物质的总和。这些遗传物质包括DNA或RNA（病毒RNA）。<br>基因组包括编码DNA和非编码DNA、线粒体DNA和叶绿体DNA。</p><h2 id="基线特征">基线特征</h2><p>是指研究开始时，施加干预措施之前所收集的每个试验参与者的人口统计学资料、临床资料以及其他变量资料。<code>Samples before drop current MMSE missing</code>在文中代表排除了被诊断患有痴呆或基线时缺少MMSE或抑郁评分的受试者。各个变量代表不同的问卷问题，详情可在SPSS中查看</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>阅读文献衰老与寿命演化</title>
      <link href="/posts/8d4220bd/"/>
      <url>/posts/8d4220bd/</url>
      
        <content type="html"><![CDATA[<h1 id="rt">RT</h1><p><a href="https://www.clinicalkey.com/#!/content/playContent/1-s2.0-S0168952523001865?returnurl=null&amp;referrer=null">文献链接</a><br><a href="https://www.clinicalkey.com/#!/content/playContent/1-s2.0-S0168952523001865?returnurl=null&amp;referrer=null">公众号辅助阅读</a></p><h1 id="ai辅助阅读">AI辅助阅读</h1><p>这篇文章主要讲了以下几个方面：</p><ul><li><strong>衰老和寿命的进化理论</strong>：文章介绍了衰老是由于早期生存和繁殖的基因对后期生存的影响不平衡而导致的，以及不同物种的寿命差异是由于不同的进化轨迹和权衡所造成的。</li><li><strong>动物王国中极端长寿者的启示</strong>：文章分析了不同物种的寿命与其生活史、代谢率、体温、保护性表型和性别等因素的关系，以及一些表现出“可忽略衰老”的物种的特点。</li><li><strong>极端长寿物种的比较基因组学</strong>：文章利用长读测序和基因组组装的技术，对一些极端长寿或短寿的物种的基因组进行了比较，发现了一些与衰老相关的基因和通路在不同物种中的进化模式和选择信号。</li><li><strong>衰老的功能基因组学</strong>：文章介绍了一些利用细胞培养模型来验证比较基因组学发现的方法和结果，以及一些探索基因与环境相互作用对衰老影响的研究。</li><li><strong>衰老的群体遗传学</strong>：文章讨论了人类群体中与衰老和寿命相关的遗传变异的分布和选择压力，以及一些影响寿命的社会文化和环境因素。</li></ul><p>您好，这是Copilot。我可以帮您分析网页上的内容。😊【分析有误】</p><p>根据当前网页的内容，这篇文章没有使用任何数学算法或者统计学方法。这篇文章主要是从进化生物学的角度，综述了老化和寿命的演化原理和机制，以及一些最新的研究进展。文章主要基于比较基因组学、功能基因组学和群体遗传学的数据和分析，没有涉及复杂的数学模型或者统计推断。文章中的图表也主要是用来展示不同物种或者基因的寿命相关性或者选择压力的变化，没有使用特殊的数学算法或者统计学方法。</p><h1 id="数学方法">数学方法</h1><p>年龄和死亡率之间的关系通常使用Gompertz风险函数进行建模</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>一些文章的总结231221</title>
      <link href="/posts/a0072d6f/"/>
      <url>/posts/a0072d6f/</url>
      
        <content type="html"><![CDATA[<h1 id="巴尔的摩老化追踪研究的纵向表型老化指标">巴尔的摩老化追踪研究的纵向表型老化指标</h1><p>在巴尔的摩衰老纵向研究（BLSA）中作者基于BLSA数据（该数据由巴尔的摩长寿研究（Baltimore Longitudinal Study of Aging），是美国国家老龄化研究所（National Institute on Aging）的一个持续招募的队列研究，旨在研究健康老化的过程，数据为非公开数据需要申请）提出一个基于生物学、表型和功能三个层次的衰老概念框架，以及一个基于四个表型领域（身体成分、能量代谢、稳态机制和神经退行性/神经可塑性）的衰老表型框架，作者纵向收集了四个领域（身体成分、能量学、稳态机制和神经退行性/神经可塑性）和功能结果的表型综合列表，证明加速纵向表型老化与更快的身体和认知衰退、更快的多病积累和更短的生存期有关。作者认为纵向数据相比于横断面数据更能解释个体的差异，且之前的分析衰老速度的方法对对没有疾病临床证据的年轻人的信息量要小得多，生物学水平的损伤积累与衰老的表型和功能表现的出现之间存在相当大的延迟，为了改善这些问题推进老年科学研究作者提出了上文所述的分层框架来研究身体机能变化，认知功能变化，多病等对纵向表型衰老评分的影响。值得一提的是调整基线年龄、性别和性别与时间之间的相互作用，以及基线年龄和时间，整体纵向表型评分降低一分（即衰老表型的减速下降）。最后作者发现整体纵向表型评分&gt;0（红色）的组包括经历加速表型衰老轨迹的受试者，与总体纵向表型评分≤0的组相比，死亡率更高。<br>在该文中纵向表型衰老指标的构建方法是利用了巴尔的摩长寿研究（BLSA）的数据对35个表型特征进行了纵向追踪，计算了每个个体的表型变化速率与同龄人群的平均速率的差异，并将其标准化和平均，得到了一个全局的纵向表型衰老指标。纵向表型衰老指标的验证方法是文章分析了纵向表型衰老指标与身体和认知功能的变化、多发性疾病的累积和生存期的关系，发现纵向表型衰老指标能够独立地预测功能衰退、疾病负担和死亡风险，且比单一领域的表型指标或横断面的表型或表观遗传指标更具优势。<br>该文使用以下数学方法：多项式回归，用于拟合各种老化表型的年龄轨迹，包括线性和非线性的模型，得出一些年龄轨迹是线性的（白细胞介素-6、C 反应蛋白、白蛋白、红细胞分布宽度），而另一些是非线性的（腰围、腰围/身高比、体重指数、瘦体重）；混合效应模型，用于评估全局纵向表型评分和各个领域的纵向表型评分与身体和认知功能的变化之间的关系，以及多发病指数的变化；生存分析，用于评估全局纵向表型评分和死亡风险之间的关系，使用 Cox 比例风险模型和 Kaplan-Meier 曲线；相关分析：用于评估不同领域的纵向表型评分之间的相关性，以及纵向表型评分和表观遗传年龄加速度之间的相关性，得出四个领域特异性纵向表型评分之间的相关性适中（范围在 0.03 到 0.10 之间），表明跨表型结构域的衰老率存在显着的个体内部异质性。</p><h2 id="数学方法应用与描述">数学方法应用与描述</h2><p>暂无</p><h1 id="to-promote-healthy-aging-focus-on-the-environment">To promote healthy aging, focus on the environment</h1><p>在促进健康老龄化，关注环境一文中，作者认为造成健康老龄化变化的主要原因是环境，包括化学、物理、生物和社会等多个维度的环境暴露。这些环境因素可以通过直接或间接的途径影响老化的分子机制，导致不同的老化轨迹和老年疾病风险。而对人类来说，遗传因素占大多数慢性衰老疾病风险变异的&lt;50%，占长寿变异的&lt;10%，因此环境因素是影响健康老龄化的主要因素之一。文章将环境因素分为化学、物理、生物和社会四个维度，指出它们可以通过直接或间接的途径影响衰老的分子过程，如DNA损伤、表观遗传变化、线粒体功能障碍、氧化应激、炎症等。作者认为分子标记物在促进我们对衰老过程及其与环境因素关系的理解方面发挥着至关重要的作用，文章介绍了一些可以测量老化过程的分子标记，如表观遗传时钟，它们可以提供关于老化的分子特征的信息，使研究者能够识别与老化相关的关键生物变化和环境因素的影响，并通过识别分子标记物，开发有针对性的干预措施例如生活方式干预，以减轻环境因素对衰老的负面影响。作者还呼吁呼吁采取社会变革的措施，消除历史上造成的压迫和暴力的遗留影响，改善弱势群体的环境条件，促进健康衰老和衰老健康平等。<br>这篇文章是综述性文章，没用用到数学方法以及数据库，但这篇文章关于环境对寿命的影响的论述给我在数据分析上有所启发，在数据分析时也可以着重对比环境中不同因素比如空气质量，人文社会条件，个体不同行为对衰老的影响。</p><h1 id="16个国家65岁及以上人群的爱好参与和心理健康">16个国家65岁及以上人群的爱好参与和心理健康</h1><p>16个国家65岁及以上人群的爱好参与和心理健康是一篇经典的使用统计学方法分析医学数据的文章，作者认为目前的研究缺乏跨国的比较，尚不清楚不同文化背景下的结果是否一致，也没有统一的业余爱好的定义和测量方法。因此，该研究旨在整合来自16个国家的五个纵向研究的数据，探索业余爱好参与与多维心理健康指标之间的关系，以及这些关系是否受到国家因素的影响。该研究使用了来自英国、日本、美国、中国和欧洲的五个纵向研究的数据，涵盖了93,263名65岁及以上的参与者。业余爱好参与是根据参与者在闲暇时间从事的有趣活动（如艺术、手工、阅读、游戏、运动、园艺、志愿服务和社团活动）来定义和测量的。心理健康指标包括抑郁症状、自我报告的健康状况、幸福感和生活满意度。本研究使用了固定效应模型和多国元分析来比较业余爱好参与和心理健康之间的纵向关系，同时控制了一些混杂因素，如性别、年龄、教育程度、婚姻状况、收入、就业状况、长期健康状况和日常生活能力，并主要通过荟萃分析[meta分析]来该研究爱好和抑郁症状，自我报告的健康状况，快乐，生活满意度的相关性，发现爱好对生活满意度有益。作者还使用了多层模型和元回归分析来探索国家因素（如国民幸福指数、国内生产总值、基尼系数和预期寿命）对结果的影响和调节作用，发现当爱好参与与国家层面因素的交互作用时，基尼指数、世界幸福指数、国家财富和预期寿命对爱好与抑郁、生活满意度和自我报告健康之间的关联有较小的调节作用，但对幸福感没有调节作用。</p><h2 id="数学方法应用与描述">数学方法应用与描述</h2><p><a href="https://zhuanlan.zhihu.com/p/650683609">固定效应模型——面板数据分析</a><br><a href="https://bookdown.org/mwheymans/bookmi/pooling-correlation-coefficients-1.html">Pooling correlation coefficients</a><br><a href="https://zhuanlan.zhihu.com/p/431865174">统计知识扫盲：相关系数</a><br><a href="https://zhuanlan.zhihu.com/p/69170497">一文看懂各类型 Meta 分析[荟萃分析]</a></p><h1 id="social-connection-and-mortality-in-uk-biobank-a-prospective-cohort-analysis">Social connection and mortality in UK Biobank: a prospective cohort analysis</h1><p>在英国生物样本库的社会联系和死亡率：前瞻性队列分析一文中，作者认为社会联系的不同方面（功能性和结构性）与死亡率有关，但很少有研究同时考察它们的独立和联合效应，所以该研究旨在探讨功能性和结构性社会联系的独立和联合影响对全因和心血管疾病（CVD）死亡率的影响。作者利用英国生物样本库研究的基线数据，使用Cox比例风险模型分析社会联系与死亡率的关系。社会联系使用两个功能性（能否向亲近的人倾诉和经常感到孤独）和三个结构性（亲友拜访频率、每周团体活动和是否独居）指标来评估。最后研究结果：在平均 12.6 年的随访期间，有 33,135（7.2%）名参与者死亡，其中 5112（1.1%）名死于 CVD。所有社会联系指标都与两种死亡结果独立相关。亲友拜访频率低于每月一次的参与者死亡风险更高，表明存在一个阈值效应。功能性和结构性社会联系之间存在交互作用，例如，与每天拜访亲友且不独居的参与者相比，那些从不拜访亲友且独居的参与者全因死亡风险增加 77%，CVD 死亡风险增加 123%。当将所有指标综合为功能性和结构性社会联系的总体指标时，发现两者之间存在加性交互作用，即同时具有功能性和结构性孤立的参与者死亡风险最高。最后，作者也使用了荟萃分析对不同社会联系的不同表现形式和死亡率的相关性进行了说明。</p><h1 id="life-expectancy-can-increase-by-up-to-10-years-following-sustained-shifts-towards-healthier-diets-in-the-united-kingdom">Life expectancy can increase by up to 10 years following sustained shifts towards healthier diets in the United Kingdom</h1><p>关于文章在英国，随着持续转向更健康的饮食，预期寿命可以增加长达 10 年，这篇文章和英国生物样本库的社会联系和死亡率：前瞻性队列分析一文一样，使用了英国生物样本数据库进行分析。作者主要分析了不同食物组的摄入量与全因死亡率的关系，以及持续改善饮食模式对预期寿命的影响。文章发现，寿命最长的饮食模式是中等摄入全谷物、水果、鱼和白肉；高摄入牛奶和乳制品、蔬菜、坚果和豆类；相对低摄入鸡蛋、红肉和含糖饮料；低摄入精制谷物和加工肉类。文章估计，40岁的英国成年人，如果从中等饮食模式改变为寿命最长的饮食模式，可以预期增加约3年的寿命；如果从最不健康的饮食模式改变为寿命最长的饮食模式，可以预期增加约10年的寿命。文章还比较了遵循英国公共卫生部门推荐的“饮食指南”（Eatwell Guide）的饮食模式与寿命的关系，发现也有相当大的寿命增益。该文章在分析方法层面估计了食物摄入与全因死亡风险的关系，并研究了不同种类食物摄入与死亡风险的相关性。该文的创新之处在于估计了不同年龄和性别的人群在持续改变食物选择后的寿命预期变化，考虑了不同食物组和死亡风险之间的相关性和效应延迟。</p><h2 id="数学方法应用与描述">数学方法应用与描述</h2><p>您好，这是 Copilot。我可以帮助您分析网页内容。😊<br>根据当前网页的内容，这篇文章用了以下的统计学方法：</p><ul><li><strong>生存分析</strong>：用于估计食物摄入与全因死亡风险的关系，使用了<strong>Cox比例风险模型</strong>和<strong>Kaplan–Meier曲线</strong>[未使用]。</li><li><strong>剂量-反应元分析</strong>：用于综合前瞻性研究中食物摄入与死亡风险的相关性，使用了<strong>随机效应模型</strong>和<strong>非线性回归模型</strong>【存疑】。</li><li><strong>敏感性分析</strong>：用于检验结果的稳健性，使用了<strong>排除法</strong>、<strong>调整法</strong>和<strong>地标分析</strong>等方法【存疑】。</li></ul><h1 id="通过深度学习寻找菌群中的基石物种">通过深度学习寻找菌群中的基石物种</h1><p>在通过深度学习寻找菌群中的基石物种一文中，作者认为微生物群落中含有关键物种，其移除会导致微生物组结构和功能发生巨大变化。然而，目前仍缺乏一种有效的方法来系统地识别微生物群落中的关键物种。主要是由于我们对微生物动力学的了解有限，以及操纵微生物群落的实验和伦理困难。所以作者提出了一个基于深度学习的数据驱动的Keystone物种识别（DKI）框架来解决这一挑战。作者的核心思想是通过使用从该栖息地收集的微生物组样本训练深度学习模型，隐式学习特定栖息地微生物群落的组装规则。深度学习模型使我们能够通过对物种移除进行思想实验来量化来自该栖息地的任何微生物组样本中每个物种的群落特异性基石。作者使用群落生态学中经典种群动力学模型生成的合成数据系统地验证了该DKI框架。然后，我们应用DKI来分析人类肠道、口腔微生物组、土壤和珊瑚微生物组数据。最后发现，那些在不同群落中具有高中位数基石的类群表现出很强的群落特异性，其中许多在文献中被报道为基石类群。方法上作者使用种识别（DKI）框架，然后使用Python代码预测物种组成（cNODE2）和R代码计算关键性，最后使用R计算每个样本中每个存在的梯形函数以分析各个样本中不同物种的基石性。该文章使用的数据库如下：肠道微生物组数据是从精选的MetagenomicData中收集的32数据库。口腔微生物组数据可在中国国家基因库数据库（CNGBdb）的CNGB序列档案（CNSA）（CNSA CNP0000687用于4D-SZ队列，CNP0001221用于云南队列）。珊瑚和土壤微生物组数据来自Qiita40（ID 10895 和 2104）。支持该文研究结果的数据在 https://github.com/spxuw/DKI 上提供。</p><h1 id="阅读若干文章本人对数据分析的一些浅显思考">阅读若干文章本人对数据分析的一些浅显思考</h1><p>通过阅读若干论文，包括但不局限于四篇以生物医学统计方法为主的论文，一篇关于环境的综述，一篇深度学习寻找菌群中的基石物种。本人发现以生物医学统计方法为主的论文分析方法层面有相似性比如相关性分析，其中Kaplan–Meier曲线,固定效应模型，Meta 分析[荟萃分析]等名词出现的频率较高，且作者都使用R语言进行代码编写。四篇生物医学统计方法为主的论文方法相近，只是分析角度不同，四篇文章中三篇仅使用了单一国家的数据库【英国生物样本库2篇，美国巴尔的摩长寿研究1篇（Baltimore Longitudinal Study of Aging）】仅一篇分析了16个国家65岁及以上人群的数据库，因此本人认为分析相似指标在不同文化背景下的结果是否一致或者分析各个指标是否会受到国家因素的影响仍是一个值得探究的方向；而另外三篇其中一篇提出了作者自定义的衰老表型框架具有创新性，其余两篇则是从社会联系和食物方面分析与死亡率的相关性。本人认为在生物医学统计方向的研究还可以与机器学习结合，比如先前有作者研究使用支持向量机和集成模型，来识别有认知障碍风险的老年人，最后使用通过曲线下面积 （AUC）、灵敏度和特异性来衡量模型性能。将Meta 分析[荟萃分析]等统计学方法与siler结合，分析影响因子通过调节五参数对死亡率的影响或许也可行。关于环境的综述也给本人思考，文中提到社会环境，空气质量等因素是影响死亡率的主要因素之一，或许可以横向比较不同国家医疗条件或者同一国家不同时期PM2.5状态对人口死亡率的影响。而一篇深度学习寻找菌群中的基石物种的分析方法最具有创新性，作者使用了深度学习方法构建了DKI框架，该方法开源，如果有合适的数据集则可分析某一群落的基石物种也具有可行性。下文将对本人阅读的文章进行详细阐述。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>数字图像处理小作业同态滤波</title>
      <link href="/posts/73ba5d08/"/>
      <url>/posts/73ba5d08/</url>
      
        <content type="html"><![CDATA[<h1 id="同态滤波">同态滤波</h1><p><a href="https://blog.csdn.net/qq_38463737/article/details/118756133">Python图像的频域图像增强-同态滤波器黑白图片处理</a><a href="https://zhuanlan.zhihu.com/p/515812634">黑边处理2有注释代码</a><br><a href="https://zhuanlan.zhihu.com/p/521590771#:~:text=%E9%A2%91%E5%9F%9F%20%EF%BC%9A%E4%BB%A5%20%E7%A9%BA%E9%97%B4%E9%A2%91%E7%8E%87,%E4%B8%BA%E8%87%AA%E5%8F%98%E9%87%8F%E6%8F%8F%E8%BF%B0%E5%9B%BE%E5%83%8F%E7%9A%84%E7%89%B9%E5%BE%81%2C%E5%8F%AF%E4%BB%A5%E5%B0%86%E4%B8%80%E5%B9%85%E5%9B%BE%E5%83%8F%E5%83%8F%E5%85%83%E5%80%BC%E5%9C%A8%E7%A9%BA%E9%97%B4%E4%B8%8A%E7%9A%84%E5%8F%98%E5%8C%96%E5%88%86%E8%A7%A3%E4%B8%BA%E5%85%B7%E6%9C%89%E4%B8%8D%E5%90%8C%E6%8C%AF%E5%B9%85%E3%80%81%E7%A9%BA%E9%97%B4%E9%A2%91%E7%8E%87%E5%92%8C%E7%9B%B8%E4%BD%8D%E7%9A%84%E7%AE%80%E6%8C%AF%E5%87%BD%E6%95%B0%E7%9A%84%20%E7%BA%BF%E6%80%A7%20%E5%8F%A0%E5%8A%A0%EF%BC%8C%E5%9B%BE%E5%83%8F%E4%B8%AD%E5%90%84%E7%A7%8D%E7%A9%BA%E9%97%B4%E9%A2%91%E7%8E%87%E6%88%90%E5%88%86%E7%9A%84%E7%BB%84%E6%88%90%E5%92%8C%E5%88%86%E5%B8%83%E7%A7%B0%E4%B8%BA%20%E5%9B%BE%E5%83%8F%E9%A2%91%E8%B0%B1%E3%80%82">数字图像空间域 频域</a><br>同态滤波是一种在频域中同时能够压缩图像的亮度范围和增强图像对比度的方法。下面推导同态滤波的流程:<br>基于图像成像模型:一幅图像f(x, y)可以表示成它的照度分量i(x, y)与反射分量r(x, y)的乘积。<br>成像模型(照度和反射) :<br>f(x,y)=i(x,y)r(x,y)<br>(1)两边取对数:<br>lnf(x,y)= lni(x, y) +Inr(x,y)<br>(2)两边取傅立叶变换:<br>F(u,v)= I(u,v) + R(u,v)<br>(3)用一频域函数H(u, v)处理F(u, v):<br>H(u,v)F(u,v)= H(u,v)I(u,v)+ H(u,v)R(u,v)<br><a href="https://blog.csdn.net/m0_37661841/article/details/103716165">算法解释</a><br>对于一幅由物理过程产生的图像f(x,y)，可以表示为照射分量i(x,y)和反射分量r(x,y)的乘积。0&lt;i(x,y)&lt;∞，0&lt;r(x,y)&lt;1。i(x,y)描述景物的照明，变化缓慢，处于低频成分。r(x,y)描述景物的细节，变化较快，处于高频成分。因为该性质是乘积性质的，所以不能直接使用傅里叶变换对i(x,y)和r(x,y)进行控制，因此可以先对f(x,y)取对数，分离i(x,y)和r(x,y)。取完对数后先进行归一化再进行傅里叶变换。在这个过程中，由于f(x,y)的取值范围为[0, L-1]，为了避免出现ln(0)的情况，故采用ln ( f(x,y) + 1 ) 来表示。<br>然后取二维傅里叶变换，得到 Z(u,v) = Fi(u,v) + Fr(u,v)，并使用np.fft.fftshift()把转换后的频域图的低频部分放到图像中间，起到便于观察的作用。<br>再使用一个滤波器，对Z(u,v)进行滤波，有 S(u,v) = H(u,v) Z(u,v) = H(u,v)Fi(u,v) + H(u,v)Fr(u,v)。<br>滤波后，进行依次进行np.fft.ifftshift()和二维反傅里叶变换，有 s(x, y) = IDFT( S(u,v) )。<br>最后，取指数还原，得到最后处理后的图像。g(x,y) = exp^(s(x,y)) = i0(x,y)+r0(x,y)。由于我们之前使用ln ( f(x,y)+1)，因此此处使用exp^(s(x,y)) - 1。由于之前使用了归一化这里在取完指数后再乘以255进行反归一化。 i0(x,y)和r0(x,y)分别是处理后图像的照射分量和入射分量。<br>黑白图片的同态滤波代码：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> cv2</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">homomorphic_filter</span>(<span class="params">src, d0=<span class="number">2</span>, r1=<span class="number">1.0</span>, rh=<span class="number">2.0</span>, c=<span class="number">4</span>, h=<span class="number">2.0</span>, l=<span class="number">0.5</span></span>):</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 图像灰度化处理，BGR转为GRAY</span></span><br><span class="line">    <span class="built_in">print</span>(src.shape)</span><br><span class="line">    gray = src.copy()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">len</span>(src.shape) &gt; <span class="number">2</span>:  <span class="comment"># 维度&gt;2</span></span><br><span class="line">        gray = cv2.cvtColor(src, cv2.COLOR_BGR2GRAY)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 图像格式处理</span></span><br><span class="line">    <span class="comment"># 转为np.float64格式</span></span><br><span class="line">    gray = np.float64(gray)</span><br><span class="line">    <span class="built_in">print</span>(gray.dtype)</span><br><span class="line">    <span class="built_in">print</span>(gray.<span class="built_in">max</span>(), gray.<span class="built_in">min</span>())</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 对数域</span></span><br><span class="line">    gray = np.log(gray + <span class="number">1.0</span>)</span><br><span class="line">    gray = gray / np.log(<span class="number">256</span>)  <span class="comment"># 归一化</span></span><br><span class="line">    <span class="built_in">print</span>(gray.<span class="built_in">max</span>(), gray.<span class="built_in">min</span>())</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 傅里叶变换</span></span><br><span class="line">    <span class="comment">#np.fft.fft2() 二维傅里叶变换</span></span><br><span class="line">    gray_fft = np.fft.fft2(gray)</span><br><span class="line">    <span class="comment">#np.fft.fftshift() 把转换后的频域图的低频部分放到图像中间，仅起到便于观察的作用</span></span><br><span class="line">    gray_fftshift = np.fft.fftshift(gray_fft)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># arange函数用于创建等差数组</span></span><br><span class="line">    rows, cols = gray.shape</span><br><span class="line">    <span class="built_in">print</span>(rows,cols)</span><br><span class="line">    M, N = np.meshgrid(np.arange(-cols // <span class="number">2</span>, cols // <span class="number">2</span>),</span><br><span class="line">                       np.arange(-rows // <span class="number">2</span>, rows // <span class="number">2</span>))  <span class="comment"># 注意，//就是除法</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 频率域滤波</span></span><br><span class="line">    <span class="comment">#滤波器</span></span><br><span class="line">    D = np.sqrt(M ** <span class="number">2</span> + N ** <span class="number">2</span>)</span><br><span class="line">    Z = (rh - r1) * (<span class="number">1</span> - np.exp(-c * (D ** <span class="number">2</span> / d0 ** <span class="number">2</span>))) + r1  <span class="comment"># filter</span></span><br><span class="line">    dst_fftshift = Z * gray_fftshift</span><br><span class="line">    <span class="comment"># dst_fftshift = (h - l) * dst_fftshift + l</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 傅里叶反变换（之前是正变换，现在该反变换变回去了）</span></span><br><span class="line">    dst_ifftshift = np.fft.ifftshift(dst_fftshift)</span><br><span class="line">    dst_ifft = np.fft.ifft2(dst_ifftshift)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 选取元素的模</span></span><br><span class="line">    dst = np.<span class="built_in">abs</span>(dst_ifft)</span><br><span class="line">    <span class="built_in">print</span>(dst.<span class="built_in">min</span>(), dst.<span class="built_in">max</span>())</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 对数反变换</span></span><br><span class="line">    dst = np.exp(dst) - <span class="number">1</span></span><br><span class="line">    <span class="built_in">print</span>(dst.<span class="built_in">min</span>(), dst.<span class="built_in">max</span>())</span><br><span class="line">    dst = (dst - dst.<span class="built_in">min</span>()) / (dst.<span class="built_in">max</span>() - dst.<span class="built_in">min</span>())  <span class="comment"># 归一化</span></span><br><span class="line">    <span class="built_in">print</span>(dst.<span class="built_in">min</span>(), dst.<span class="built_in">max</span>())</span><br><span class="line">    dst *= <span class="number">255</span>  <span class="comment">#反归一化？</span></span><br><span class="line">    <span class="built_in">print</span>(dst.<span class="built_in">min</span>(), dst.<span class="built_in">max</span>())</span><br><span class="line"></span><br><span class="line">    <span class="comment"># dst中，比0小的都会变成0，比255大的都变成255</span></span><br><span class="line">    <span class="comment"># uint8是专门用于存储各种图像的（包括RGB，灰度图像等），范围是从0–255</span></span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    numpy中clip函数用法详解</span></span><br><span class="line"><span class="string">    numpy.clip(a, a_min, a_max, out=None)</span></span><br><span class="line"><span class="string">    参数说明</span></span><br><span class="line"><span class="string">    a : 输入的数组</span></span><br><span class="line"><span class="string">    a_min: 限定的最小值 也可以是数组 如果为数组时 shape必须和a一样</span></span><br><span class="line"><span class="string">    a_max:限定的最大值 也可以是数组 shape和a一样</span></span><br><span class="line"><span class="string">    out：剪裁后的数组存入的数组</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    dst = np.uint8(np.clip(dst, <span class="number">0</span>,<span class="number">255</span>))</span><br><span class="line">    <span class="keyword">return</span> dst</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    <span class="comment"># 把图片变成了(400, 400)丢失了RGB通道信息</span></span><br><span class="line">    img = cv2.resize(cv2.imread(<span class="string">&#x27;./img/ys.jpg&#x27;</span>, <span class="number">0</span>), (<span class="number">400</span>, <span class="number">400</span>))</span><br><span class="line">    img_new = homomorphic_filter(img)</span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    按水平方向（列顺序）堆叠数组构成一个新的数组</span></span><br><span class="line"><span class="string">    堆叠的数组需要具有相同的维度</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    contrast = np.hstack((img, img_new))</span><br><span class="line">    cv2.imshow(<span class="string">&#x27;contrast&#x27;</span>, contrast)</span><br><span class="line">    cv2.waitKey()</span><br><span class="line">    cv2.destroyAllWindows()</span><br></pre></td></tr></table></figure><p>彩色图片的同态滤波代码：python版本暂未发现</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#python版本暂未发现</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>数字图像PPT</title>
      <link href="/posts/3bbc5f58/"/>
      <url>/posts/3bbc5f58/</url>
      
        <content type="html"><![CDATA[<h1 id="文章及其思维概要">文章及其思维概要</h1><p><a href="https://paperswithcode.com/paper/improving-nighttime-driving-scene">通过双图像自适应可学习滤波器改善夜间驾驶场景分割</a>开源代码看第二个</p><h2 id="概要">概要</h2><p>主要内容：<br>这篇文章的第一部分主要介绍了一种改善夜间驾驶场景分割的方法，称为双重图像自适应可学习滤波器（DIAL-Filters）。该方法的目的是利用不同照明条件下驾驶场景图像的内在特征，提高语义分割的性能。DIAL-Filters包括两个部分，一个是图像自适应处理模块（IAPM），另一个是可学习的引导滤波器（LGF）。¹[1]作者设计了有监督和无监督的分割框架，可以端到端地训练DIAL-Filters，并在几个夜间分割数据集上进行了实验，证明了其有效性和优越性。<br>算法：<br>这篇文章使用了以下的算法：</p><ul><li><strong>CNN-PP</strong>: 一个基于卷积神经网络的参数预测器，用于根据输入图像的亮度、对比度和曝光信息，自适应地预测不同的图像滤波器的超参数。</li><li><strong>DIF</strong>: 一组可微分的图像滤波器，包括曝光、伽马、对比度和锐化，用于增强输入图像的质量和细节。</li><li><strong>LGF</strong>: 一个可学习的引导滤波器，用于在分割网络的输出后，保留边缘和细节，提高分割性能。</li><li><strong>DeepLabV2</strong>，<strong>RefineNet</strong>，<strong>PSPNet</strong>: 三种经典的语义分割网络，用于从增强后的图像中预测每个像素的类别。</li><li><strong>DANNet</strong>: 一个基于对抗学习的域适应网络，用于从有标签的白天图像到无标签的夜晚图像的无监督分割。</li></ul><p>此外，该文章还提出了一种改善夜间驾驶场景分割的方法，称为双重图像自适应可学习滤波器（DIAL-Filters）。该方法的目的是利用不同照明条件下驾驶场景图像的内在特征，提高语义分割的性能。DIAL-Filters包括两个部分，一个是图像自适应处理模块（IAPM），另一个是可学习的引导滤波器（LGF）。作者设计了有监督和无监督的分割框架，可以端到端地训练DIAL-Filters，并在几个夜间分割数据集上进行了实验，证明了其有效性和优越性。更多关于DIAL-Filters的优化信息，您可以参考<a href="https://zhuanlan.zhihu.com/p/634647903">这篇文章</a>。<br>参考：<br>(1) 中科院一区顶刊 TCSVT 2023 | DIAL-Filters: 显著提升模糊夜视场景下的检测和分割性能！ - 知乎. https://zhuanlan.zhihu.com/p/634647903.<br>(2) 中科院一区顶刊 TCSVT 2023 | DIAL-Filters: 显著提升模糊夜视场景下的检测和分割性能！-CSDN博客. https://blog.csdn.net/CVHub/article/details/131039479.<br>(3) DIAL-Filters: 显著提升模糊夜视场景下的检测和分割性能！ - 极术社区 - 连接开发者与智能计算生态. https://aijishu.com/a/1060000000406110.<br>(4) IA-SEG项目中DIAL-Filters（IAPM模块+LGF模块）使用解读-CSDN博客. https://blog.csdn.net/a486259/article/details/132630524.</p><h2 id="名词解释">名词解释</h2><p>端到端的学习解释：<br>端到端，是相对于 非端到端 而言的。在机器学习最开始的时候，人们并不是直接输入原始数据，获得最终结果；而是首先通过特征提取，对原始数据进行初步的处理，然后再对于得到的特征进行学习，得出分类or回归的结果。比如使用一些hand-crafted functions作为特征描述符等等。<br>因此，在这种情况下（非端到端），特征的提取会对模型的最终表现有着巨大的影响。而特征描述符的书写又具有很大的经验成分，所以是一件比较困难的任务。<br>端到端的学习，就是把特征提取的任务也交给模型去做，直接输入原始数据或者经过些微预处理的数据，让模型自己进行特征提取。<br><a href="https://zhuanlan.zhihu.com/p/463037788">CNN-PP</a><br>DIF只是一个概念，<a href="https://blog.csdn.net/COCO56/article/details/100640767">方差用Var(X)或D(X)来表示</a>,<a href="https://blog.csdn.net/wanjiac/article/details/108686596">协方差（Covariance, Cov）</a><br><a href="https://zhuanlan.zhihu.com/p/41475332">分割网络Segmentation Network</a><br><a href="https://zhuanlan.zhihu.com/p/38200980"> Dropout</a><br><a href="https://blog.csdn.net/BlueBlueSkyZ/article/details/80558252">FC layer</a><br><a href="https://blog.csdn.net/smallworldxyl/article/details/121401875">语义分割指标---MIoU详细介绍</a></p><div class="btns rounded grid5">            <a class="button" href='https://d0.ananas.chaoxing.com/download/7a999cbdd15c36d9d81e42f9c4722e71?at_=1702549222481&ak_=8c00dea5c6d680a41518d92e996669a7&ad_=6e36756ae1b75ae188bbb14b3628202e&fn=%E4%BD%95%E4%BD%B3%E6%A5%A0_%E8%B5%B5%E5%BF%97%E4%BC%9F%E5%9B%BE%E5%83%8F%E5%A4%84%E7%90%86%E6%B1%87%E6%8A%A51213%E6%99%9A.pptx' title='下载PPT'><i class='fas fa-download'></i>下载PPT</a>          </div>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>数字图像处理作业美颜</title>
      <link href="/posts/8ab9a1e3/"/>
      <url>/posts/8ab9a1e3/</url>
      
        <content type="html"><![CDATA[<h1 id="要求">要求</h1><p>请选取一幅人脸图片，在保证头发丝和背景等区域的清晰度的同时，对面部皮肤做美颜处理。<br>要求：<br>写清楚具体算法流程<br>图像原图与结果图(如有中间步骤图，也请提交)<br>关键代码</p><h2 id="算法选择">算法选择</h2><h3 id="方案一人脸检测-部位美颜">方案一人脸检测+部位美颜</h3><p><a href="https://zhuanlan.zhihu.com/p/29718304">300行Python实现基于人脸特征的美颜算法</a><br>为了学习该历程创建了虚拟环境<code>conda activate pymeiyan</code><br>发现py3.6版本<a href="https://blog.csdn.net/xiaojun1288/article/details/121357721">报错python setup.py egg_info解决</a><br><a href="https://blog.csdn.net/whc18858/article/details/127135973">pip install 与 conda install 的使用区别conda install 安装的库都会放在anaconda3/pkgs目录下。这样的好处就是，当在某个环境下已经下载好了某个库，再在另一个环境中还需要这个库时，就可以直接从pkgs目录下将该库复制至新环境而不用重复下载</a>,建议在conda虚拟环境中使用conda install太卡<br>运行dlib中的示例文件，遇到报错<br>RuntimeError: Unexpected version found while deserializing dlib::shape_predictor.<br>原因：.bz2文件直接修改文件名为.dat报这个错<br>解决办法：.bz2文件解压得到.dat文件，执行.py文件执行正常。<br>目前只是把程序复现了，还需再加个自定义函数以降低HSV的红色通道就行了。<a href="https://wenku.csdn.net/answer/f132c673b02d4df19952b03b1fafed5e">参考1</a>效果不好<br>该程序已经复现，但是有些类中的方法没完全看懂【231213】</p><h3 id="2局部祛痘和磨皮算法">2局部祛痘和磨皮算法</h3><p><a href="https://blog.csdn.net/csdn1e/article/details/121833703">ndarray中符合条件的元素进行处理---numpy中的where函数</a><br><a href="https://blog.csdn.net/liyuanjinglyj/article/details/115299189">双边滤波可行示例</a>,<a href="https://blog.csdn.net/qq_49478668/article/details/123488527">双边滤波的介绍</a></p><h2 id="基于降低红色通道阈值灰度和双边滤波美化人像">基于降低红色通道阈值灰度和双边滤波美化人像</h2><h3 id="算法流程">算法流程</h3><p>本文使用的原始图片如图1所示，该图片在额头部分有较多痘痘。由于痘痘偏红色，因此本文先对图片的红色通道高于255*0.6低于255的灰度值进行呈比例降低，目的是淡化痘痘颜色；然后，本文使用双边滤波，具体使用OpenCV中的双边滤波函数cv2.bilateralFilter（），双边滤波会综合考虑距离和色彩的权重结果，既能够有效地去除噪声，又能够较好地保护边缘信息避免对原图的非脸面信息造成失真。再使用cv2.addWeighted权重加法函数，来对输入图像和前两步处理后的图像进行融合各自的权重分别为alpha和beta，以防止双边滤波后丢失太多细节；最后，进行图像锐化和对比度这些细节调节以便优化输出处理后的图像。</p><h3 id="代码">代码</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> cv2</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> PIL</span><br><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> ImageEnhance</span><br><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 人脸磨皮</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">facial_meihua_effect</span>(<span class="params">filepath,output_name</span>):</span><br><span class="line">    <span class="comment">#祛痘</span></span><br><span class="line">    <span class="comment"># 读取图像默认BGR空间</span></span><br><span class="line">    image = cv2.imread(filepath)</span><br><span class="line">    <span class="comment"># 转换颜色空间为BGR</span></span><br><span class="line">    image_bgr = cv2.cvtColor(image, cv2.COLOR_BGR2RGB)</span><br><span class="line">    a = image_bgr[:, :, <span class="number">2</span>]</span><br><span class="line">    <span class="comment"># 减少红色通道的灰度</span></span><br><span class="line">    <span class="built_in">print</span>(a, <span class="built_in">type</span>(a), <span class="built_in">print</span>(<span class="string">&#x27;ndarray的形状: &#x27;</span>, a.shape))</span><br><span class="line">    xsl, ysl = a.shape</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(xsl):</span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(ysl):</span><br><span class="line">            <span class="keyword">if</span> a[i, j] &gt;= <span class="number">255</span> * <span class="number">0.8</span> <span class="keyword">and</span> a[i, j] &lt; <span class="number">250</span>:</span><br><span class="line">                a[i, j] = a[i, j]*<span class="number">0.95</span></span><br><span class="line">    <span class="built_in">print</span>(a, <span class="built_in">type</span>(a), <span class="built_in">print</span>(<span class="string">&#x27;ndarray的形状: &#x27;</span>, a.shape))</span><br><span class="line">    <span class="comment"># 将图像转换回RGB颜色空间</span></span><br><span class="line">    image_qvdou = cv2.cvtColor(image_bgr, cv2.COLOR_RGB2BGR)</span><br><span class="line">    <span class="comment"># 对原始使用双边滤波</span></span><br><span class="line">    blur_img = cv2.bilateralFilter(image_qvdou, <span class="number">100</span>, <span class="number">90</span>,<span class="number">90</span>)</span><br><span class="line">    <span class="comment"># 滤波后与原始图像融合</span></span><br><span class="line">    result_img = cv2.addWeighted(image_qvdou, <span class="number">0.3</span>, blur_img, <span class="number">0.7</span>, <span class="number">0</span>)</span><br><span class="line">    cv2.imwrite(<span class="string">f&quot;<span class="subst">&#123;output_name&#125;</span>_1.jpg&quot;</span>, result_img)</span><br><span class="line">    image = Image.<span class="built_in">open</span>(<span class="string">f&quot;<span class="subst">&#123;output_name&#125;</span>_1.jpg&quot;</span>)</span><br><span class="line">    <span class="comment"># 锐度调节</span></span><br><span class="line">    enh_img = ImageEnhance.Sharpness(image)</span><br><span class="line">    image_sharped = enh_img.enhance(<span class="number">1.5</span>)</span><br><span class="line">    <span class="comment"># 对比度调节</span></span><br><span class="line">    con_img = ImageEnhance.Contrast(image_sharped)</span><br><span class="line">    image_con = con_img.enhance(<span class="number">1.15</span>)</span><br><span class="line">    image_con.save(<span class="string">f&quot;<span class="subst">&#123;output_name&#125;</span>.jpg&quot;</span>)</span><br><span class="line">    <span class="comment"># 美白</span></span><br><span class="line">    img1 = cv2.imread(filepath)</span><br><span class="line">    img2 = cv2.imread(<span class="string">f&quot;<span class="subst">&#123;output_name&#125;</span>.jpg&quot;</span>)</span><br><span class="line">    cv2.imshow(<span class="string">&quot;original&quot;</span>, img1)</span><br><span class="line">    cv2.imshow(<span class="string">&quot;meihua&quot;</span>, img2)</span><br><span class="line">    cv2.waitKey()</span><br><span class="line">    cv2.destroyAllWindows()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    input_path = <span class="string">&#x27;./img/ys.jpg&#x27;</span></span><br><span class="line">    output_name=<span class="string">&#x27;meihuahou&#x27;</span></span><br><span class="line">    facial_meihua_effect(input_path,output_name)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>机器学习白板推导</title>
      <link href="/posts/83d847fd/"/>
      <url>/posts/83d847fd/</url>
      
        <content type="html"><![CDATA[<h1 id="白板推导">白板推导</h1><p><a href="https://www.jianshu.com/p/709a12a3abf0">笔记</a><br><a href="https://github.com/fengdu78/lihang-code">统计学习jupyter参考1</a><br>正态分布（Normal distribution），也称“常态分布”，又名高斯分布（Gaussian distribution）</p><h2 id="p15">P15</h2><p><a href="https://blog.csdn.net/Dust_Evc/article/details/127502272">点积内积的区分</a>特别是点积=矩阵积【往往带有转置】的转换<br><a href="https://www.zhihu.com/question/68544859">w的转置对w求导并不是1</a>这个在工程矩阵里也有涉及</p><h2 id="p19">P19</h2><p><a href="https://zhuanlan.zhihu.com/p/74586507">判别式模型和生成式模型</a><br><a href="https://zhuanlan.zhihu.com/p/32480810">MLE和MAP：最大似然估计和最大后验估计</a></p><h2 id="p21">P21</h2><p>朴素贝叶斯就朴素在这个假设。P(x1,x2|y)=P(x1|y)P(x2|y);因此可以得到7分钟那个最下面的式子<br><a href="https://zhuanlan.zhihu.com/p/59550457">Categorical Distribution</a><br>将一个小球放入两个桶，记变量x 为第一个桶里面有的小球个数，那么只有 0 个或者 1 个，所以是服从伯努利分布；<br>将 n 个小球放入两个桶，记变量 x 为第一个桶里面的小球个数，那么最少可能有 0 个，最多可能有 n 个，所以服从二项分布；<br>将一个小球放入 k 个桶，记变量 x 为 k 个桶内的小球个数，所以是一个向量，并且是One-hot的形式，因为这个小球只能在一个桶里面，所以是服从Categorical分布；<br>将 n 个小球放入 k 个桶，记变量 x 为 k 个桶内的小球个数，是一个向量，并且向量元素的和为 n，所以是服从多项分布。<br><a href="https://zhuanlan.zhihu.com/p/634296763">one-hot</a></p><h1 id="p22">P22</h1><p><a href="https://zhuanlan.zhihu.com/p/42122611">统计学习：变量选择之Lasso降维</a><br>L1正则化应用于线性回归的损失函数时，它被称为Lasso回归，因此Lasso回归也相当于正则化，通常用L2<a href="https://zhuanlan.zhihu.com/p/422372647">参考</a>。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>pytorch学习</title>
      <link href="/posts/b118e8cc/"/>
      <url>/posts/b118e8cc/</url>
      
        <content type="html"><![CDATA[<h1 id="安装环境">安装环境</h1><p><a href="https://www.bilibili.com/video/BV1hE411t7RN/?p=2&amp;spm_id_from=333.1007.top_right_bar_window_history.content.click&amp;vd_source=ea78e03d02c651ab9a1849ee5454e98b">参考视频</a><br><a href="https://blog.csdn.net/qq_43198568/article/details/105626024">使用 Anaconda Navigator 换源（最简单）</a><br>因为学完了吴恩达机器学习，然后数学公式这边有点欠缺，打算看大部分西瓜书和统计学习方法后再学那个白板；pytorch也是在anaconda中安装环境，<code>conda create -n pytorch python=3.6</code>创建名为pytorch的环境，激活环境<code>conda activate pytorch</code>在进入环境安装pytorch，注意cuda版本是可以选的，用<code>nvidia-smi</code>查看当前显卡驱动的cuda版本也就是这个版本可以自定义，那么上次sleap出错会不会是cuda版本的问题，然后在<a href="https://pytorch.org/get-started/locally/">pytorch官网</a>选择合适的版本生成安装代码例如<code>conda install pytorch torchvision torchaudio pytorch-cuda=12.1 -c pytorch -c nvidia</code></p><h1 id="使用环境">使用环境</h1><p>pycharm可以选择anaconda中创建的环境</p><h1 id="巧用dir-help-pyc终端">巧用dir,help,pyc终端</h1><p>dir()打开，看见<br>help():说明书<br>dir(pytorch)<br>输出：1、2、3<br>dir(pytorch.3)<br>输出：<br>a.b,c<br>help(pytorch.3.a)<br>输出：<br>将此扳手放在特定地方，然后拧动<br>看到dir输出__a__说明具体到函数了<br>pyc终端中可以试验函数的具体数值如b=range(1,3)</p><h2 id="pyc切换解释器">pyc切换解释器</h2><p>在编辑配置里添加python解释器选择对应的解释器,pyc里可以右键文件选择复制全局/相对路径，右下角也可以直接切换解释器</p><h1 id="pytorch加载数据初认识">PyTorch加载数据初认识</h1><p>Dataset：提供一种方式去获取数据及其label；如何获取每一个数据及其label；告诉我们总共有多少的数据<br>Dataloader：为后面的网络提供不同的数据形式<br>P6加载数据的类代码</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">MyData</span>(<span class="title class_ inherited__">Dataset</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self,root_dir,label_dir</span>):</span><br><span class="line">        self.root_dir=root_dir</span><br><span class="line">        self.label_dir=label_dir</span><br><span class="line">        self.path=os.path.join(self.root_dir,self.label_dir)</span><br><span class="line">        self.img_path=os.listdir(self.path)</span><br><span class="line">        <span class="keyword">def</span> <span class="title function_">__getitem__</span>(<span class="params">self,idx</span>):</span><br><span class="line">            img_name=self.img_path[idx]</span><br><span class="line">            img_item_path=os.path.join(self.root_dir,self.label_dir,img_name)</span><br><span class="line">            img=Image.<span class="built_in">open</span>(img_item_path)</span><br><span class="line">            label=self.label_dir</span><br><span class="line">            <span class="keyword">return</span> img,labeld</span><br><span class="line">        <span class="keyword">def</span> <span class="title function_">__len__</span>(<span class="params">self</span>):</span><br><span class="line">            <span class="keyword">return</span> <span class="built_in">len</span>(self.img_path)</span><br></pre></td></tr></table></figure><p>对蚂蚁图像批量赋予标签代码</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line">root_dir=<span class="string">&quot;练手数据集/train&quot;</span></span><br><span class="line">target_dir=<span class="string">&quot;ants_image&quot;</span></span><br><span class="line">img_path=os.listdir(os.path.join(root_dir,target_dir))</span><br><span class="line"><span class="built_in">print</span>(img_path)</span><br><span class="line"><span class="comment"># import pdb</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># pdb.set_trace()</span></span><br><span class="line"><span class="comment"># 比如ants_label就是取前面的ants</span></span><br><span class="line">label=target_dir.split(<span class="string">&#x27;_&#x27;</span>)[<span class="number">0</span>]</span><br><span class="line">out_dir=<span class="string">&quot;ants_label&quot;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> img_path:</span><br><span class="line">    file_name=i.split(<span class="string">&#x27;.jpg&#x27;</span>)[<span class="number">0</span>]</span><br><span class="line">    <span class="comment">#输出至目录并写入label如ants</span></span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(os.path.join(root_dir,out_dir,<span class="string">&quot;&#123;&#125;.txt&quot;</span>.<span class="built_in">format</span>(file_name)),<span class="string">&#x27;w&#x27;</span>)<span class="keyword">as</span> f:</span><br><span class="line">        f.write(label)</span><br></pre></td></tr></table></figure><p>如果报错把<code>root_dir=&quot;练手数据集/train&quot;</code>改成<code>root_dir=./&quot;练手数据集/train&quot;</code>即可</p><h1 id="p9">P9</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> torchvision <span class="keyword">import</span> transforms</span><br><span class="line"><span class="keyword">from</span> torch.utils.tensorboard <span class="keyword">import</span> SummaryWriter</span><br><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line"><span class="comment"># python的用法-》tensor数据类型</span></span><br><span class="line"><span class="comment"># 通过transforms.ToTensor:去看两个问测</span></span><br><span class="line"><span class="comment">#2、为什么我们需要Tensor数据类型</span></span><br><span class="line">writer=SummaryWriter(<span class="string">&quot;./logs&quot;</span>)</span><br><span class="line">img_path=<span class="string">&quot;./练手数据集/train/ants_image/0013035.jpg&quot;</span></span><br><span class="line">img=Image.<span class="built_in">open</span>(img_path)</span><br><span class="line"><span class="comment">#1、transforms该如何使用(python)</span></span><br><span class="line"><span class="comment"># 调用库中的类工具</span></span><br><span class="line">tensor_trans=transforms.ToTensor()</span><br><span class="line"><span class="comment"># 类的实例化然后传值？</span></span><br><span class="line">tensor_img=tensor_trans(img)</span><br><span class="line"><span class="built_in">print</span>(tensor_img)</span><br><span class="line">writer.add_image(<span class="string">&quot;Tensor_img&quot;</span>,tensor_img)</span><br><span class="line">writer.close()</span><br></pre></td></tr></table></figure><h1 id="p10">P10</h1><p>pycharm终端无法显示环境,调用log得手动打代码</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">conda activate pytorch</span><br><span class="line">tensorboard --logdir=logs</span><br></pre></td></tr></table></figure><h3 id="常见的transforms">常见的Transforms</h3><p>*输入 *PiL *Image.open()<br>*输出 *tensor *ToTensor()<br>*作用 *narrays *cv.imread()</p><h3 id="类中-call-的用法">类中__call__的用法</h3><p>使用call可以直接给实例赋值调用。不需要子函数，说白了就是c++的运算符重载？</p><h3 id="pyc查看结构">pyc查看结构</h3><p>ctrl+左键进入模块py目录，左侧查看模块结构和函数，ctrl+P查看属性提示<br>tensor后的图片tensor_img[2][1][0],第一个2似乎表示通道，第二，3个表征像素位置，从0开始计数<br>writer.add_image(&quot;Tensor_imgN&quot;,img_norm,2)最后一个参数可调整步长，滑动查看之前的log</p><h3 id="randomcrop-随机裁剪但也能指定参数">RandomCrop 随机裁剪但也能指定参数</h3><p>指定参数的作用是随机裁剪的大小，必须小于原图<br>compose就相当于前面的两步转为一步,图片操作的组合</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> torchvision <span class="keyword">import</span> transforms</span><br><span class="line"><span class="keyword">from</span> torch.utils.tensorboard <span class="keyword">import</span> SummaryWriter</span><br><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line"><span class="comment"># python的用法-》tensor数据类型</span></span><br><span class="line"><span class="comment"># 通过transforms.ToTensor:去看两个问测</span></span><br><span class="line"><span class="comment">#2、为什么我们需要Tensor数据类型</span></span><br><span class="line">writer=SummaryWriter(<span class="string">&quot;./logs&quot;</span>)</span><br><span class="line">img_path=<span class="string">&quot;./练手数据集/train/ants_image/0013035.jpg&quot;</span></span><br><span class="line">img=Image.<span class="built_in">open</span>(img_path)</span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">ToTensor()</span></span><br><span class="line"><span class="string">的使用</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="comment">#1、transforms该如何使用(python)</span></span><br><span class="line"><span class="comment"># 调用库中的类工具</span></span><br><span class="line">tensor_trans=transforms.ToTensor()</span><br><span class="line"><span class="comment"># 类的实例化然后传值？</span></span><br><span class="line">tensor_img=tensor_trans(img)</span><br><span class="line"><span class="built_in">print</span>(tensor_img)</span><br><span class="line">writer.add_image(<span class="string">&quot;Tensor_img&quot;</span>,tensor_img)</span><br><span class="line"><span class="comment"># writer.close()</span></span><br><span class="line"><span class="comment"># 归一化</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">output[channel] = </span></span><br><span class="line"><span class="string">(input[channel] - mean[channel]) / std[channel]</span></span><br><span class="line"><span class="string">两个长度为三的数组，</span></span><br><span class="line"><span class="string">分别表示三个通道的平均值和标准差</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="comment"># 第一个0似乎表示通道，第二，3个表征像素位置，从0开始计数</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(tensor_img[<span class="number">2</span>][<span class="number">1</span>][<span class="number">0</span>])</span><br><span class="line">trans_norm=transforms.Normalize([<span class="number">0.5</span>,<span class="number">1</span>,<span class="number">0.5</span>],[<span class="number">1</span>,<span class="number">0.5</span>,<span class="number">0.5</span>])</span><br><span class="line">img_norm=trans_norm(tensor_img)</span><br><span class="line"><span class="built_in">print</span>(img_norm[<span class="number">2</span>][<span class="number">1</span>][<span class="number">0</span>])</span><br><span class="line">writer.add_image(<span class="string">&quot;Tensor_imgN&quot;</span>,img_norm,<span class="number">2</span>)</span><br><span class="line"><span class="comment"># Resize</span></span><br><span class="line"><span class="built_in">print</span>(img.size)</span><br><span class="line">trans_resize=transforms.Resize((<span class="number">512</span>,<span class="number">512</span>))</span><br><span class="line"><span class="comment">#img PIL -&gt;resize -&gt;img_resize PIL</span></span><br><span class="line">img_resize=trans_resize(img)</span><br><span class="line"><span class="comment">#img_resize PIL -&gt;totensor -&gt;img_resize tensor</span></span><br><span class="line">img_resize=tensor_trans(img_resize)</span><br><span class="line">writer.add_image(<span class="string">&quot;Resize&quot;</span>,img_resize,<span class="number">0</span>)</span><br><span class="line"><span class="comment">#Compose resize 2</span></span><br><span class="line">trans_resize_2=transforms.Resize(<span class="number">512</span>)</span><br><span class="line"><span class="comment"># compose就相当于前面的两步转为一步</span></span><br><span class="line">trans_compose=transforms.Compose([trans_resize_2,tensor_trans])</span><br><span class="line">img_resize_2=trans_compose(img)</span><br><span class="line">writer.add_image(<span class="string">&quot;Resize&quot;</span>,img_resize_2,<span class="number">1</span>)</span><br><span class="line"><span class="comment"># RandomCrop 随机裁剪但也能指定参数</span></span><br><span class="line">trans_random=transforms.RandomCrop(<span class="number">51</span>)</span><br><span class="line">trans_compose_2=transforms.Compose([trans_random,tensor_trans])</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">10</span>):</span><br><span class="line">    img_crop=trans_compose_2(img)</span><br><span class="line">    writer.add_image(<span class="string">&quot;Randomcrop&quot;</span>,img_crop,i)</span><br><span class="line"></span><br><span class="line">writer.close()</span><br></pre></td></tr></table></figure><h1 id="p15">P15</h1><p>batch_size的作用是在test_data中取若干个数据</p><h1 id="p16-神经网络的基本骨架-nn-module的使用">P16 神经网络的基本骨架-nn.Module的使用</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">forward</span>(<span class="params">self,x</span>):</span><br><span class="line">    x=F.relu(self.conv1(x))</span><br><span class="line">    <span class="keyword">return</span> F.relu(self.conv2(x))</span><br></pre></td></tr></table></figure><p>以上代码进行了如下操作：<br>1输入：X<br>2卷积<br>3非线性<br>4卷积<br>5非线性<br>6输出<br>在pyc中Windows ctrl+o可以重写方法</p><h1 id="p16">P16</h1><p>torch.tensor和torch.Tensor也有区别哦</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> torch</span><br><span class="line"><span class="keyword">import</span> torch.nn.functional <span class="keyword">as</span> F</span><br><span class="line"></span><br><span class="line"><span class="built_in">input</span>=torch.tensor([[<span class="number">1</span>,<span class="number">2</span>,<span class="number">0</span>,<span class="number">3</span>,<span class="number">1</span>],[<span class="number">0</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">1</span>]</span><br><span class="line">                       ,[<span class="number">1</span>,<span class="number">2</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>],[<span class="number">5</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">1</span>,<span class="number">1</span>]</span><br><span class="line">                       ,[<span class="number">2</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>]])</span><br><span class="line">kernel=torch.tensor([[<span class="number">1</span>,<span class="number">2</span>,<span class="number">1</span>],</span><br><span class="line">[<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>],</span><br><span class="line">[<span class="number">2</span>,<span class="number">1</span>,<span class="number">0</span>]])</span><br><span class="line"><span class="comment">#尺寸变换以适应Input四参数 经查证红字有误 第一个参数是batch size样本数量 第二个参数是channel图像的通道数量</span></span><br><span class="line"><span class="built_in">input</span>=torch.reshape(<span class="built_in">input</span>,(<span class="number">1</span>,<span class="number">1</span>,<span class="number">5</span>,<span class="number">5</span>))</span><br><span class="line">kernel=torch.reshape(kernel,(<span class="number">1</span>,<span class="number">1</span>,<span class="number">3</span>,<span class="number">3</span>))</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">input</span>.shape)</span><br><span class="line"><span class="built_in">print</span>(kernel.shape)</span><br><span class="line">output=F.conv2d(<span class="built_in">input</span>,kernel,stride=<span class="number">1</span>)</span><br><span class="line"><span class="built_in">print</span>(output)</span><br></pre></td></tr></table></figure><h1 id="p18">P18</h1><p>Out_channel=3相当于三个卷积核卷积后叠加输出的数组，其形式相当于RGB三通道<br>代码</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> torch</span><br><span class="line"><span class="keyword">import</span>  torchvision</span><br><span class="line"><span class="keyword">from</span> torch <span class="keyword">import</span> nn</span><br><span class="line"><span class="keyword">from</span> torch.utils.data <span class="keyword">import</span> DataLoader</span><br><span class="line"><span class="keyword">from</span> torch.nn <span class="keyword">import</span> Conv2d</span><br><span class="line"><span class="keyword">from</span> torch.utils.tensorboard <span class="keyword">import</span> SummaryWriter</span><br><span class="line"></span><br><span class="line">dataset=torchvision.datasets.CIFAR10(<span class="string">&quot;../data&quot;</span>,train=<span class="literal">False</span>,transform=torchvision.transforms.ToTensor(),download=<span class="literal">True</span>)</span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">BATCH_SIZE的含义</span></span><br><span class="line"><span class="string">BATCH_SIZE:即一次训练所抓取的数据样本数量；</span></span><br><span class="line"><span class="string">BATCH_SIZE的大小影响训练速度和模型优化。同时按照以上代码可知，其大小同样影响每一epoch训练模型次数。</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line">dataloader=DataLoader(dataset,batch_size=<span class="number">64</span>)</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Tudui</span>(nn.Module):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">super</span>(Tudui,self).__init__()</span><br><span class="line">        self.conv1=Conv2d(in_channels=<span class="number">3</span>,out_channels=<span class="number">6</span>,kernel_size=<span class="number">3</span>,stride=<span class="number">1</span>,padding=<span class="number">0</span>)</span><br><span class="line">    <span class="comment">#forward写卷积逻辑跟函数</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">forward</span>(<span class="params">self,x</span>):</span><br><span class="line">        x=self.conv1(x)</span><br><span class="line">        <span class="keyword">return</span> x</span><br><span class="line"></span><br><span class="line">step=<span class="number">0</span></span><br><span class="line">tudui1=Tudui()</span><br><span class="line">writer=SummaryWriter(<span class="string">&quot;dataloader&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(tudui1)</span><br><span class="line"><span class="keyword">for</span> data <span class="keyword">in</span> dataloader:</span><br><span class="line">    imgs,targets=data</span><br><span class="line">    output=tudui1(imgs)</span><br><span class="line">    <span class="built_in">print</span>(imgs.shape)</span><br><span class="line">    <span class="built_in">print</span>(output.shape)</span><br><span class="line">    writer.add_images(<span class="string">&quot;input&quot;</span>,imgs,step)</span><br><span class="line">    output=torch.reshape(output,(-<span class="number">1</span>,<span class="number">3</span>,<span class="number">30</span>,<span class="number">30</span>))</span><br><span class="line"></span><br><span class="line">    writer.add_images(<span class="string">&quot;output&quot;</span>,output,step)</span><br><span class="line">    step=step+<span class="number">1</span></span><br></pre></td></tr></table></figure><h1 id="p19">P19</h1><p>池化层的步长默认是卷积核的大小,最大池化，就是取其中的最大值<br>ceil 允许有出界部分；floor 不允许<br>池化和卷积不一样的<br>矩阵版代码：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> torch</span><br><span class="line"><span class="keyword">from</span> torch <span class="keyword">import</span> nn</span><br><span class="line"><span class="keyword">from</span> torch.nn <span class="keyword">import</span> MaxPool2d</span><br><span class="line"></span><br><span class="line"><span class="built_in">input</span>=torch.tensor([[<span class="number">1</span>,<span class="number">2</span>,<span class="number">0</span>,<span class="number">3</span>,<span class="number">1</span>],</span><br><span class="line">[<span class="number">0</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">1</span>],</span><br><span class="line">[<span class="number">1</span>,<span class="number">2</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>],</span><br><span class="line">[<span class="number">5</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">1</span>,<span class="number">1</span>],</span><br><span class="line">[<span class="number">2</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>]],dtype=torch.float32)</span><br><span class="line"><span class="comment"># 原来是个二维的现在成四维的了</span></span><br><span class="line"><span class="built_in">input</span>=torch.reshape(<span class="built_in">input</span>,(-<span class="number">1</span>,<span class="number">1</span>,<span class="number">5</span>,<span class="number">5</span>))</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">input</span>.shape)</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Tudui</span>(nn.Module):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">super</span>(Tudui,self).__init__()</span><br><span class="line">        self.maxpool1=MaxPool2d(kernel_size=<span class="number">3</span>,ceil_mode=<span class="literal">False</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">forward</span>(<span class="params">self,<span class="built_in">input</span></span>):</span><br><span class="line">        output=self.maxpool1(<span class="built_in">input</span>)</span><br><span class="line">        <span class="keyword">return</span>  output</span><br><span class="line">tudui=Tudui()</span><br><span class="line">output=tudui(<span class="built_in">input</span>)</span><br><span class="line"><span class="built_in">print</span>(output)</span><br></pre></td></tr></table></figure><p>数据集版代码：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> torch</span><br><span class="line"><span class="keyword">import</span> torchvision</span><br><span class="line"><span class="keyword">from</span> torch <span class="keyword">import</span> nn</span><br><span class="line"><span class="keyword">from</span> torch.nn <span class="keyword">import</span> MaxPool2d</span><br><span class="line"><span class="keyword">from</span> torch.utils.data <span class="keyword">import</span> DataLoader</span><br><span class="line"><span class="keyword">from</span> torch.utils.tensorboard <span class="keyword">import</span> SummaryWriter</span><br><span class="line"></span><br><span class="line">dataset=torchvision.datasets.CIFAR10(<span class="string">&quot;../data&quot;</span>,train=<span class="literal">False</span>,transform=torchvision.transforms.ToTensor(),download=<span class="literal">True</span>)</span><br><span class="line">dataloader=DataLoader(dataset,batch_size=<span class="number">64</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Tudui</span>(nn.Module):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">super</span>(Tudui,self).__init__()</span><br><span class="line">        self.maxpool1=MaxPool2d(kernel_size=<span class="number">3</span>,ceil_mode=<span class="literal">False</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">forward</span>(<span class="params">self,<span class="built_in">input</span></span>):</span><br><span class="line">        output=self.maxpool1(<span class="built_in">input</span>)</span><br><span class="line">        <span class="keyword">return</span>  output</span><br><span class="line">tudui=Tudui()</span><br><span class="line">writer=SummaryWriter(<span class="string">&quot;dataloadermaxpoolc&quot;</span>)</span><br><span class="line">step=<span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> data <span class="keyword">in</span> dataloader:</span><br><span class="line">    imgs, targets=data</span><br><span class="line">    writer.add_images(<span class="string">&quot;input&quot;</span>, imgs, step)</span><br><span class="line">    output=tudui(imgs)</span><br><span class="line">    writer.add_images(<span class="string">&quot;output&quot;</span>, output, step)</span><br><span class="line">    step=step+<span class="number">1</span></span><br><span class="line">writer.close()</span><br></pre></td></tr></table></figure><p>数据集版导入数据集后处理后的照片像是加了一层马赛克</p><h1 id="p20">P20</h1><p>nn_relu.py<br>矩阵版代码：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> torch</span><br><span class="line"><span class="keyword">import</span> torchvision</span><br><span class="line"><span class="keyword">from</span> torch <span class="keyword">import</span> nn</span><br><span class="line"><span class="keyword">from</span> torch.nn <span class="keyword">import</span> ReLU</span><br><span class="line"><span class="keyword">from</span> torch.utils.tensorboard <span class="keyword">import</span> SummaryWriter</span><br><span class="line"></span><br><span class="line"><span class="built_in">input</span>=torch.tensor([[<span class="number">1</span>,-<span class="number">0.5</span>],</span><br><span class="line">[-<span class="number">1</span>,<span class="number">3</span>]])</span><br><span class="line">output=torch.reshape(<span class="built_in">input</span>,(-<span class="number">1</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">2</span>))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Tudui</span>(nn.Module):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">super</span>(Tudui,self).__init__()</span><br><span class="line">        self.relu1=ReLU()</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">forward</span>(<span class="params">self,<span class="built_in">input</span></span>):</span><br><span class="line">        output=self.relu1(<span class="built_in">input</span>)</span><br><span class="line">        <span class="keyword">return</span> output</span><br><span class="line"></span><br><span class="line">tudui=Tudui()</span><br><span class="line">output=tudui(<span class="built_in">input</span>)</span><br><span class="line"><span class="built_in">print</span>(output)</span><br></pre></td></tr></table></figure><h1 id="p21">P21</h1><p>报错是因为数据集batch之后剩了16张图片，dataloader的参数drop_last设为true就不报错了,torch.flatten()用于把数据展平比如把二维展平成一维</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> torch</span><br><span class="line"><span class="keyword">import</span> torchvision</span><br><span class="line"><span class="keyword">from</span> torch <span class="keyword">import</span> nn</span><br><span class="line"><span class="keyword">from</span> torch.nn <span class="keyword">import</span> Linear</span><br><span class="line"><span class="keyword">from</span> torch.utils.data <span class="keyword">import</span> DataLoader</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">dataset=torchvision.datasets.CIFAR10(<span class="string">&quot;../data&quot;</span>,train=<span class="literal">False</span>,transform=torchvision.transforms.ToTensor(),download=<span class="literal">True</span>)</span><br><span class="line">dataloader=DataLoader(dataset, batch_size=<span class="number">64</span>, drop_last=<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Tudui</span>(nn.Module):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">super</span>(Tudui,self).__init__()</span><br><span class="line">        self.linear1=Linear(<span class="number">196608</span>,<span class="number">10</span>)</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">forward</span>(<span class="params">self,<span class="built_in">input</span></span>):</span><br><span class="line">        output=self.linear1(<span class="built_in">input</span>)</span><br><span class="line">        <span class="keyword">return</span> output</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">tudui=Tudui()</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> data <span class="keyword">in</span> dataloader:</span><br><span class="line">    imgs, targets=data</span><br><span class="line">    <span class="built_in">print</span>(imgs.shape)</span><br><span class="line">    <span class="comment"># 变换维度以传入神经网络</span></span><br><span class="line">    output=torch.reshape(imgs,(<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,-<span class="number">1</span>))</span><br><span class="line"></span><br><span class="line">    output=torch.flatten(imgs)</span><br><span class="line">    <span class="built_in">print</span>(output.shape)</span><br><span class="line">    output=tudui(output)</span><br><span class="line">    <span class="built_in">print</span>(output.shape)</span><br></pre></td></tr></table></figure><h1 id="p22">P22</h1><p>CIFAR10代表有十个类别,<a href="https://blog.csdn.net/hy592070616/article/details/129504980">torch.ones</a><br>这个是不太推荐的版本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> torch</span><br><span class="line"><span class="keyword">from</span> torch <span class="keyword">import</span> nn</span><br><span class="line"><span class="keyword">from</span> torch.nn <span class="keyword">import</span> Conv2d, MaxPool2d, Flatten, Linear</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Tudui</span>(nn.Module):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">super</span>(Tudui,self).__init__()</span><br><span class="line">        <span class="comment">#详情看图</span></span><br><span class="line">        self.conv1=Conv2d(<span class="number">3</span>,<span class="number">32</span>,<span class="number">5</span>,padding=<span class="number">2</span>)</span><br><span class="line">        self.maxpool1=MaxPool2d(<span class="number">2</span>)</span><br><span class="line">        self.conv2=Conv2d(<span class="number">32</span>,<span class="number">32</span>,<span class="number">5</span>,padding=<span class="number">2</span>)</span><br><span class="line">        self.maxpool2=MaxPool2d(<span class="number">2</span>)</span><br><span class="line">        self.conv3=Conv2d(<span class="number">32</span>,<span class="number">64</span>,<span class="number">5</span>,padding=<span class="number">2</span>)</span><br><span class="line">        self.maxpool3=MaxPool2d(<span class="number">2</span>)</span><br><span class="line">        self.flatten=Flatten()</span><br><span class="line">        self.linear1=Linear(<span class="number">1024</span>,<span class="number">64</span>)</span><br><span class="line">        self.linear2=Linear(<span class="number">64</span>,<span class="number">10</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">forward</span>(<span class="params">self,x</span>):</span><br><span class="line">        x=self.conv1(x)</span><br><span class="line">        x=self.maxpool1(x)</span><br><span class="line">        x=self.conv2(x)</span><br><span class="line">        x=self.maxpool2(x)</span><br><span class="line">        x=self.conv3(x)</span><br><span class="line">        x=self.maxpool3(x)</span><br><span class="line">        x=self.flatten(x)</span><br><span class="line">        x=self.linear1(x)</span><br><span class="line">        x=self.linear2(x)</span><br><span class="line">        <span class="keyword">return</span> x</span><br><span class="line">tudui=Tudui()</span><br><span class="line"><span class="built_in">print</span>(tudui)</span><br><span class="line"><span class="built_in">input</span>=torch.ones((<span class="number">64</span>,<span class="number">3</span>,<span class="number">32</span>,<span class="number">32</span>))</span><br><span class="line">output=tudui(<span class="built_in">input</span>)</span><br><span class="line"><span class="built_in">print</span>(output.shape)</span><br></pre></td></tr></table></figure><p>网络整合的版本</p><h1 id="p23">P23</h1><p>所以是反向传播来计算梯度，根据梯度来更新参数，实现loss最小化</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> torch</span><br><span class="line"><span class="keyword">from</span> torch <span class="keyword">import</span> nn</span><br><span class="line"><span class="keyword">from</span> torch.nn <span class="keyword">import</span> L1Loss</span><br><span class="line">inputs=torch.tensor([<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>],dtype=torch.float32)</span><br><span class="line">targets=torch.tensor([<span class="number">1</span>,<span class="number">2</span>,<span class="number">5</span>],dtype=torch.float32)</span><br><span class="line">inputs=torch.reshape(inputs,(<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">3</span>))</span><br><span class="line">targets=torch.reshape(targets,(<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">3</span>))</span><br><span class="line">loss=L1Loss(reduction=<span class="string">&#x27;sum&#x27;</span>)</span><br><span class="line">result=loss(inputs,targets)</span><br><span class="line">loss_mse=nn.MSELoss()</span><br><span class="line">result_mse=loss_mse(inputs,targets)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(result)</span><br><span class="line"><span class="built_in">print</span>(result_mse)</span><br><span class="line">x=torch.tensor([<span class="number">0.1</span>,<span class="number">0.2</span>,<span class="number">0.3</span>])</span><br><span class="line">y=torch.tensor([<span class="number">1</span>])</span><br><span class="line">x=torch.reshape(x,(<span class="number">1</span>,<span class="number">3</span>))</span><br><span class="line">loss_cross=nn.CrossEntropyLoss()</span><br><span class="line">result_cross=loss_cross(x,y)</span><br><span class="line"><span class="built_in">print</span>(result_cross)</span><br></pre></td></tr></table></figure><h1 id="p24">P24</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> torch</span><br><span class="line"><span class="keyword">import</span> torchvision</span><br><span class="line"><span class="keyword">from</span> torch <span class="keyword">import</span> nn</span><br><span class="line"><span class="keyword">from</span> torch.nn <span class="keyword">import</span> Conv2d, MaxPool2d, Flatten, Linear, Sequential</span><br><span class="line"><span class="keyword">from</span> torch.utils.data <span class="keyword">import</span> DataLoader</span><br><span class="line"><span class="keyword">from</span> torch.utils.tensorboard <span class="keyword">import</span> SummaryWriter</span><br><span class="line"></span><br><span class="line">dataset=torchvision.datasets.CIFAR10(<span class="string">&quot;../data&quot;</span>,train=<span class="literal">False</span>,transform=torchvision.transforms.ToTensor(),download=<span class="literal">True</span>)</span><br><span class="line">dataloader=DataLoader(dataset, batch_size=<span class="number">1</span>)</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Tudui</span>(nn.Module):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">super</span>(Tudui,self).__init__()</span><br><span class="line">        <span class="comment">#详情看图</span></span><br><span class="line">        self.model1=Sequential(</span><br><span class="line">            Conv2d(<span class="number">3</span>, <span class="number">32</span>, <span class="number">5</span>, padding=<span class="number">2</span>),</span><br><span class="line">            MaxPool2d(<span class="number">2</span>),</span><br><span class="line">            Conv2d(<span class="number">32</span>, <span class="number">32</span>, <span class="number">5</span>, padding=<span class="number">2</span>),</span><br><span class="line">            MaxPool2d(<span class="number">2</span>),</span><br><span class="line">            Conv2d(<span class="number">32</span>, <span class="number">64</span>, <span class="number">5</span>, padding=<span class="number">2</span>),</span><br><span class="line">            MaxPool2d(<span class="number">2</span>),</span><br><span class="line">            Flatten(),</span><br><span class="line">            Linear(<span class="number">1024</span>, <span class="number">64</span>),</span><br><span class="line">            Linear(<span class="number">64</span>, <span class="number">10</span>)</span><br><span class="line">        )</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">forward</span>(<span class="params">self,x</span>):</span><br><span class="line">        x=self.model1(x)</span><br><span class="line">        <span class="keyword">return</span> x</span><br><span class="line">tudui=Tudui()</span><br><span class="line"><span class="keyword">for</span> data <span class="keyword">in</span> dataloader:</span><br><span class="line">    imgs,targets=data</span><br><span class="line">    outputs=tudui(imgs)</span><br><span class="line">    <span class="built_in">print</span>(outputs)</span><br><span class="line">    <span class="built_in">print</span>(targets)</span><br><span class="line">    loss=nn.CrossEntropyLoss()</span><br><span class="line">    result_loss=loss(outputs, targets)</span><br><span class="line">    <span class="built_in">print</span>(result_loss)</span><br><span class="line">    result_loss.backward()</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;ok&quot;</span>)</span><br></pre></td></tr></table></figure><h1 id="p25">P25</h1><p>优化问题</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> torch</span><br><span class="line"><span class="keyword">import</span> torchvision</span><br><span class="line"><span class="keyword">from</span> torch <span class="keyword">import</span> nn</span><br><span class="line"><span class="keyword">from</span> torch.nn <span class="keyword">import</span> Conv2d, MaxPool2d, Flatten, Linear, Sequential</span><br><span class="line"><span class="keyword">from</span> torch.utils.data <span class="keyword">import</span> DataLoader</span><br><span class="line"><span class="keyword">from</span> torch.utils.tensorboard <span class="keyword">import</span> SummaryWriter</span><br><span class="line"></span><br><span class="line">dataset=torchvision.datasets.CIFAR10(<span class="string">&quot;../data&quot;</span>,train=<span class="literal">False</span>,transform=torchvision.transforms.ToTensor(),download=<span class="literal">True</span>)</span><br><span class="line">dataloader=DataLoader(dataset, batch_size=<span class="number">1</span>)</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Tudui</span>(nn.Module):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">super</span>(Tudui,self).__init__()</span><br><span class="line">        <span class="comment">#详情看图</span></span><br><span class="line">        self.model1=Sequential(</span><br><span class="line">            Conv2d(<span class="number">3</span>, <span class="number">32</span>, <span class="number">5</span>, padding=<span class="number">2</span>),</span><br><span class="line">            MaxPool2d(<span class="number">2</span>),</span><br><span class="line">            Conv2d(<span class="number">32</span>, <span class="number">32</span>, <span class="number">5</span>, padding=<span class="number">2</span>),</span><br><span class="line">            MaxPool2d(<span class="number">2</span>),</span><br><span class="line">            Conv2d(<span class="number">32</span>, <span class="number">64</span>, <span class="number">5</span>, padding=<span class="number">2</span>),</span><br><span class="line">            MaxPool2d(<span class="number">2</span>),</span><br><span class="line">            Flatten(),</span><br><span class="line">            Linear(<span class="number">1024</span>, <span class="number">64</span>),</span><br><span class="line">            Linear(<span class="number">64</span>, <span class="number">10</span>)</span><br><span class="line">        )</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">forward</span>(<span class="params">self,x</span>):</span><br><span class="line">        x=self.model1(x)</span><br><span class="line">        <span class="keyword">return</span> x</span><br><span class="line">tudui=Tudui()</span><br><span class="line">optim=torch.optim.SGD(tudui.parameters(),lr=<span class="number">0.01</span>)</span><br><span class="line"><span class="keyword">for</span> epoch <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">20</span>):</span><br><span class="line">    running_loss=<span class="number">0.0</span></span><br><span class="line">    <span class="keyword">for</span> data <span class="keyword">in</span> dataloader:</span><br><span class="line">        imgs,targets=data</span><br><span class="line">        outputs=tudui(imgs)</span><br><span class="line">        loss=nn.CrossEntropyLoss()</span><br><span class="line">        result_loss=loss(outputs, targets)</span><br><span class="line">        <span class="comment">#梯度清理防止保留上次的梯度迭代</span></span><br><span class="line">        optim.zero_grad()</span><br><span class="line">        result_loss.backward()</span><br><span class="line">        optim.step()</span><br><span class="line">        running_loss=running_loss+result_loss</span><br><span class="line">    <span class="built_in">print</span>(running_loss)</span><br></pre></td></tr></table></figure><h1 id="p26">P26</h1><p>pretrained=True就是会加载网络默认的参数<a href="https://blog.csdn.net/weixin_41278720/article/details/80759933">参考</a></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">import</span> torchvision</span><br><span class="line"><span class="keyword">from</span> torch <span class="keyword">import</span> nn</span><br><span class="line"></span><br><span class="line"><span class="comment"># train_data=torchvision.datasets.ImageNet(&quot;../data_image_net&quot;,split=&quot;train&quot;,download=True,transform=torchvision.transforms.ToTensor())</span></span><br><span class="line">vgg16_true=torchvision.models.vgg16(pretrained=<span class="literal">True</span>)</span><br><span class="line">vgg16_false=torchvision.models.vgg16(pretrained=<span class="literal">False</span>)</span><br><span class="line"><span class="built_in">print</span>(vgg16_true)</span><br><span class="line"></span><br><span class="line">train_data=torchvision.datasets.CIFAR10(<span class="string">&quot;../data&quot;</span>,train=<span class="literal">True</span>,transform=torchvision.transforms.ToTensor(),download=<span class="literal">True</span>)</span><br><span class="line"><span class="comment"># 对vgg16_true的classifier层增加一层线性层</span></span><br><span class="line">vgg16_true.classifier.add_module(<span class="string">&quot;add_linear&quot;</span>,nn.Linear(<span class="number">1000</span>,<span class="number">10</span>))</span><br><span class="line"><span class="built_in">print</span>(vgg16_true)</span><br><span class="line"><span class="comment"># vgg16的[6]层进行修改,线性层修改为4096，10</span></span><br><span class="line"><span class="built_in">print</span>(vgg16_false)</span><br><span class="line">vgg16_false.classifier[<span class="number">6</span>]=nn.Linear(<span class="number">4096</span>,<span class="number">10</span>)</span><br><span class="line"><span class="built_in">print</span>(vgg16_false)</span><br></pre></td></tr></table></figure><h1 id="p27">P27</h1><p>保存</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">import</span> torchvision</span><br><span class="line"><span class="keyword">import</span> torch</span><br><span class="line"><span class="keyword">from</span> torch <span class="keyword">import</span> nn</span><br><span class="line"></span><br><span class="line">vgg16=torchvision.models.vgg16(pretrained=<span class="literal">False</span>)</span><br><span class="line"><span class="comment"># 保存方式1保存网络结构+模型参数</span></span><br><span class="line">torch.save(vgg16,<span class="string">&quot;vgg16_method1.pth&quot;</span>)</span><br><span class="line"><span class="comment">#加载模型方式1</span></span><br><span class="line">model=torch.load(<span class="string">&quot;vgg16_method1.pth&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(model)</span><br><span class="line"><span class="comment"># 保存方式2，模型参数（官方推荐空间小）</span></span><br><span class="line">torch.save(vgg16.state_dict(),<span class="string">&quot;vgg16_method2.pth&quot;</span>)</span><br><span class="line"><span class="comment">#加载模型参数</span></span><br><span class="line">model=torch.load(<span class="string">&quot;vgg16_method2.pth&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(model)</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Tudui</span>(nn.Module):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">super</span>(Tudui, self).__init__()</span><br><span class="line">        self.Conv1=nn.Conv2d(<span class="number">3</span>,<span class="number">64</span>,kernel_size=<span class="number">3</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">forward</span>(<span class="params">self, x</span>):</span><br><span class="line">        x=self.Conv1(x)</span><br><span class="line">        <span class="keyword">return</span> x</span><br><span class="line">tudui=Tudui()</span><br><span class="line">torch.save(tudui,<span class="string">&quot;tudui_method1.pth&quot;</span>)</span><br><span class="line"><span class="comment">#这句话如果要在别的py文件里加载是要复制Class类或者import Tudui</span></span><br><span class="line">model1=torch.load(<span class="string">&quot;tudui_method1.pth&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(model1)</span><br></pre></td></tr></table></figure><p><a href="https://www.bilibili.com/video/BV1hE411t7RN/?p=27&amp;spm_id_from=333.1007.top_right_bar_window_history.content.click&amp;vd_source=ea78e03d02c651ab9a1849ee5454e98b">CNN中stride（步幅）和padding（填充）的详细理解</a><br>图像卷积后像素大小没变</p><h1 id="p28">P28</h1><p>item()可以把tensor中的数值取出来,应该说0是指定第0轴[竖着看]，1指定第1轴[横着看]</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> torch</span><br><span class="line"><span class="keyword">import</span> torchvision</span><br><span class="line"><span class="keyword">from</span> torch <span class="keyword">import</span> nn</span><br><span class="line"><span class="keyword">from</span> torch.utils.data <span class="keyword">import</span> DataLoader</span><br><span class="line"><span class="keyword">from</span> torch.utils.tensorboard <span class="keyword">import</span> SummaryWriter</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> model <span class="keyword">import</span> Tudui</span><br><span class="line"></span><br><span class="line"><span class="comment"># 添加tensorboard</span></span><br><span class="line">writer=SummaryWriter(<span class="string">&quot;logs_train&quot;</span>)</span><br><span class="line"><span class="comment"># 准备数据集</span></span><br><span class="line">train_data=torchvision.datasets.CIFAR10(root=<span class="string">&quot;../data&quot;</span>,train=<span class="literal">True</span>,transform=torchvision.transforms.ToTensor(),</span><br><span class="line">download=<span class="literal">True</span>)</span><br><span class="line">test_data=torchvision.datasets.CIFAR10(root=<span class="string">&quot;../data&quot;</span>,train=<span class="literal">False</span>,transform=torchvision.transforms.ToTensor(),</span><br><span class="line">download=<span class="literal">True</span>)</span><br><span class="line"><span class="comment"># length 长度</span></span><br><span class="line">train_data_size=<span class="built_in">len</span>(train_data)</span><br><span class="line">test_data_size=<span class="built_in">len</span>(test_data)</span><br><span class="line"><span class="comment"># 如果train_data_size代表训练数据集的长度</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;训练数据集的长度为&#123;&#125;&quot;</span>.<span class="built_in">format</span>(train_data_size))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;测试数据集的长度为&#123;&#125;&quot;</span>.<span class="built_in">format</span>(test_data_size))</span><br><span class="line"></span><br><span class="line"><span class="comment"># 利用DataLoader来加载数据集</span></span><br><span class="line">train_dataloader=DataLoader(train_data,batch_size=<span class="number">64</span>)</span><br><span class="line">test_dataloader=DataLoader(test_data,batch_size=<span class="number">64</span>)</span><br><span class="line"><span class="comment">#创建网络模型</span></span><br><span class="line">tudui=Tudui()</span><br><span class="line"><span class="comment">#损失函数</span></span><br><span class="line">loss_fn=nn.CrossEntropyLoss()</span><br><span class="line"><span class="comment">#优化器</span></span><br><span class="line">learning_rate=<span class="number">1e-2</span></span><br><span class="line">optimizer=torch.optim.SGD(tudui.parameters(),lr=learning_rate)</span><br><span class="line"><span class="comment"># 设置训练网络的一些参数</span></span><br><span class="line">total_train_step=<span class="number">0</span></span><br><span class="line"><span class="comment"># 训练的轮数</span></span><br><span class="line">epoch=<span class="number">10</span></span><br><span class="line">total_test_step=<span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(epoch):</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;第&#123;&#125;轮训练开始&quot;</span>.<span class="built_in">format</span>(i+<span class="number">1</span>))</span><br><span class="line">    <span class="comment"># 训练步骤开始</span></span><br><span class="line">    <span class="keyword">for</span> data <span class="keyword">in</span> train_dataloader:</span><br><span class="line">        imgs,targets=data</span><br><span class="line">        outputs=tudui(imgs)</span><br><span class="line">        loss=loss_fn(outputs,targets)</span><br><span class="line">        <span class="comment"># 优化器模型cc</span></span><br><span class="line">        optimizer.zero_grad()</span><br><span class="line">        loss.backward()</span><br><span class="line">        optimizer.step()</span><br><span class="line"></span><br><span class="line">        total_train_step=total_train_step+<span class="number">1</span></span><br><span class="line">        <span class="keyword">if</span> total_train_step % <span class="number">10</span>==<span class="number">0</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;训练次数:&#123;&#125;，Loss:&#123;&#125;&quot;</span>.<span class="built_in">format</span>(total_train_step,loss.item()))</span><br><span class="line">            writer.add_scalar(<span class="string">&quot;train_loss&quot;</span>,loss.item(),total_train_step)</span><br><span class="line">    <span class="comment"># 测试步骤开始</span></span><br><span class="line">    total_test_loss=<span class="number">0</span></span><br><span class="line">    total_accuracy=<span class="number">0</span></span><br><span class="line">    <span class="comment"># with torch.no_grad():的意思是测试过程中不用对模型进行调优直接用现有的模型就行</span></span><br><span class="line">    <span class="keyword">with</span> torch.no_grad():</span><br><span class="line">        <span class="keyword">for</span> data <span class="keyword">in</span> test_dataloader:</span><br><span class="line">            imgs,targets=data</span><br><span class="line">            outputs=tudui(imgs)</span><br><span class="line">            loss=loss_fn(outputs,targets)</span><br><span class="line">            total_test_loss=total_test_loss+loss.item()</span><br><span class="line">            accuracy=(outputs.argmax(<span class="number">1</span>)==targets).<span class="built_in">sum</span>()</span><br><span class="line">            total_accuracy=total_accuracy+accuracy</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;整体测试集上的LOSS：&#123;&#125;&quot;</span>.<span class="built_in">format</span>(total_test_loss))</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;整体测试集上的正确率：&#123;&#125;&quot;</span>.<span class="built_in">format</span>(total_accuracy/test_data_size))</span><br><span class="line">    total_test_step = total_test_step+<span class="number">1</span></span><br><span class="line">    writer.add_scalar(<span class="string">&quot;test_loss&quot;</span>, loss.item(), total_test_step)</span><br><span class="line">    writer.add_scalar(<span class="string">&quot;test_accuracy&quot;</span>, total_accuracy/test_data_size, total_test_step)</span><br><span class="line">    torch.save(tudui,<span class="string">&quot;tudui_&#123;&#125;.pth&quot;</span>.<span class="built_in">format</span>(i))</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;模型已保存&quot;</span>)</span><br><span class="line"></span><br><span class="line">writer.close()</span><br></pre></td></tr></table></figure><h1 id="gpu训练">GPU训练</h1><p>第一种训练方式新增以下代码</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> torch.cuda.is_available():</span><br><span class="line">    tudui=tudui.cuda()</span><br><span class="line"><span class="keyword">if</span> torch.cuda.is_available():</span><br><span class="line">    loss_fn=loss_fn.cuda()</span><br><span class="line"><span class="keyword">if</span> torch.cuda.is_available():</span><br><span class="line">    imgs=imgs.cuda()</span><br><span class="line">    targets=targets.cuda()</span><br></pre></td></tr></table></figure><p>start_time=time.time()<br>end_time = time.time()<br>这两句话可以看情况加<br>tudui.train()<br>tudui.eval()</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> torch</span><br><span class="line"><span class="keyword">import</span> torchvision</span><br><span class="line"><span class="keyword">from</span> torch <span class="keyword">import</span> nn</span><br><span class="line"><span class="keyword">from</span> torch.utils.data <span class="keyword">import</span> DataLoader</span><br><span class="line"><span class="keyword">from</span> torch.utils.tensorboard <span class="keyword">import</span> SummaryWriter</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">from</span> model <span class="keyword">import</span> Tudui</span><br><span class="line"></span><br><span class="line"><span class="comment"># 添加tensorboard</span></span><br><span class="line">writer=SummaryWriter(<span class="string">&quot;logs_train&quot;</span>)</span><br><span class="line">start_time=time.time()</span><br><span class="line"><span class="comment"># 准备数据集</span></span><br><span class="line">train_data=torchvision.datasets.CIFAR10(root=<span class="string">&quot;../data&quot;</span>,train=<span class="literal">True</span>,transform=torchvision.transforms.ToTensor(),</span><br><span class="line">download=<span class="literal">True</span>)</span><br><span class="line">test_data=torchvision.datasets.CIFAR10(root=<span class="string">&quot;../data&quot;</span>,train=<span class="literal">False</span>,transform=torchvision.transforms.ToTensor(),</span><br><span class="line">download=<span class="literal">True</span>)</span><br><span class="line"><span class="comment"># length 长度</span></span><br><span class="line">train_data_size=<span class="built_in">len</span>(train_data)</span><br><span class="line">test_data_size=<span class="built_in">len</span>(test_data)</span><br><span class="line"><span class="comment"># 如果train_data_size代表训练数据集的长度</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;训练数据集的长度为&#123;&#125;&quot;</span>.<span class="built_in">format</span>(train_data_size))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;测试数据集的长度为&#123;&#125;&quot;</span>.<span class="built_in">format</span>(test_data_size))</span><br><span class="line"></span><br><span class="line"><span class="comment"># 利用DataLoader来加载数据集</span></span><br><span class="line">train_dataloader=DataLoader(train_data,batch_size=<span class="number">64</span>)</span><br><span class="line">test_dataloader=DataLoader(test_data,batch_size=<span class="number">64</span>)</span><br><span class="line"><span class="comment">#创建网络模型</span></span><br><span class="line">tudui=Tudui()</span><br><span class="line"><span class="keyword">if</span> torch.cuda.is_available():</span><br><span class="line">    tudui=tudui.cuda()</span><br><span class="line"></span><br><span class="line"><span class="comment">#损失函数</span></span><br><span class="line">loss_fn=nn.CrossEntropyLoss()</span><br><span class="line"><span class="keyword">if</span> torch.cuda.is_available():</span><br><span class="line">    loss_fn=loss_fn.cuda()</span><br><span class="line"><span class="comment">#优化器</span></span><br><span class="line">learning_rate=<span class="number">1e-2</span></span><br><span class="line">optimizer=torch.optim.SGD(tudui.parameters(),lr=learning_rate)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置训练网络的一些参数</span></span><br><span class="line">total_train_step=<span class="number">0</span></span><br><span class="line"><span class="comment"># 训练的轮数</span></span><br><span class="line">epoch=<span class="number">10</span></span><br><span class="line">total_test_step=<span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(epoch):</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;第&#123;&#125;轮训练开始&quot;</span>.<span class="built_in">format</span>(i+<span class="number">1</span>))</span><br><span class="line">    <span class="comment"># 训练步骤开始</span></span><br><span class="line">    tudui.train()</span><br><span class="line">    <span class="keyword">for</span> data <span class="keyword">in</span> train_dataloader:</span><br><span class="line">        imgs,targets=data</span><br><span class="line">        <span class="keyword">if</span> torch.cuda.is_available():</span><br><span class="line">            imgs=imgs.cuda()</span><br><span class="line">            targets=targets.cuda()</span><br><span class="line">        outputs=tudui(imgs)</span><br><span class="line">        loss=loss_fn(outputs,targets)</span><br><span class="line">        <span class="comment"># 优化器模型cc</span></span><br><span class="line">        optimizer.zero_grad()</span><br><span class="line">        loss.backward()</span><br><span class="line">        optimizer.step()</span><br><span class="line"></span><br><span class="line">        total_train_step=total_train_step+<span class="number">1</span></span><br><span class="line">        <span class="keyword">if</span> total_train_step % <span class="number">100</span>==<span class="number">0</span>:</span><br><span class="line">            end_time = time.time()</span><br><span class="line">            <span class="built_in">print</span>(end_time - start_time)</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;训练次数:&#123;&#125;，Loss:&#123;&#125;&quot;</span>.<span class="built_in">format</span>(total_train_step,loss.item()))</span><br><span class="line">            writer.add_scalar(<span class="string">&quot;train_loss&quot;</span>,loss.item(),total_train_step)</span><br><span class="line">    <span class="comment"># 测试步骤开始</span></span><br><span class="line">    tudui.<span class="built_in">eval</span>()</span><br><span class="line">    total_test_loss=<span class="number">0</span></span><br><span class="line">    total_accuracy=<span class="number">0</span></span><br><span class="line">    <span class="comment"># with torch.no_grad():的意思是测试过程中不用对模型进行调优直接用现有的模型就行</span></span><br><span class="line">    <span class="keyword">with</span> torch.no_grad():</span><br><span class="line">        <span class="keyword">for</span> data <span class="keyword">in</span> test_dataloader:</span><br><span class="line">            imgs,targets=data</span><br><span class="line">            <span class="keyword">if</span> torch.cuda.is_available():</span><br><span class="line">                imgs = imgs.cuda()</span><br><span class="line">                targets = targets.cuda()</span><br><span class="line">            outputs=tudui(imgs)</span><br><span class="line">            loss=loss_fn(outputs,targets)</span><br><span class="line">            total_test_loss=total_test_loss+loss.item()</span><br><span class="line">            accuracy=(outputs.argmax(<span class="number">1</span>)==targets).<span class="built_in">sum</span>()</span><br><span class="line">            total_accuracy=total_accuracy+accuracy</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;整体测试集上的LOSS：&#123;&#125;&quot;</span>.<span class="built_in">format</span>(total_test_loss))</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;整体测试集上的正确率：&#123;&#125;&quot;</span>.<span class="built_in">format</span>(total_accuracy/test_data_size))</span><br><span class="line">    total_test_step = total_test_step+<span class="number">1</span></span><br><span class="line">    writer.add_scalar(<span class="string">&quot;test_loss&quot;</span>, loss.item(), total_test_step)</span><br><span class="line">    writer.add_scalar(<span class="string">&quot;test_accuracy&quot;</span>, total_accuracy/test_data_size, total_test_step)</span><br><span class="line">    torch.save(tudui,<span class="string">&quot;tudui_&#123;&#125;.pth&quot;</span>.<span class="built_in">format</span>(i))</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;模型已保存&quot;</span>)</span><br><span class="line">writer.close()</span><br></pre></td></tr></table></figure><p>第二种训练方式主要使用语句<code>device=torch.device(&quot;cuda&quot; if torch.cuda.is_available() else &quot;cpu&quot;)</code><br>在第9行要加image=image.convert('RGB')<br>因为png格式是四个通道，除了RGB三通道外，还有一个透明度通道。<br>所以，我们调用image=image.convert(RGB),保留其颜色通道<br>当然，如果图片本来就是三个颜色通道，经过此操作，不变。<br>加上这一步后，可以适应png,jpg各种格式的图片。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> torch</span><br><span class="line"><span class="keyword">import</span> torchvision</span><br><span class="line"><span class="keyword">from</span> torch <span class="keyword">import</span> nn</span><br><span class="line"><span class="keyword">from</span> torch.nn <span class="keyword">import</span> Sequential, Conv2d, MaxPool2d, Flatten, Linear</span><br><span class="line"><span class="keyword">from</span> torch.utils.data <span class="keyword">import</span> DataLoader</span><br><span class="line"><span class="keyword">from</span> torch.utils.tensorboard <span class="keyword">import</span> SummaryWriter</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">from</span> model <span class="keyword">import</span> Tudui</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#定义训练设备</span></span><br><span class="line">device=torch.device(<span class="string">&quot;cuda&quot;</span> <span class="keyword">if</span> torch.cuda.is_available() <span class="keyword">else</span> <span class="string">&quot;cpu&quot;</span>)</span><br><span class="line"><span class="comment"># device=torch.device(&quot;cuda&quot;)</span></span><br><span class="line"><span class="comment"># device=torch.device(&quot;cpu&quot;)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 添加tensorboard</span></span><br><span class="line">writer=SummaryWriter(<span class="string">&quot;logs_train&quot;</span>)</span><br><span class="line">start_time=time.time()</span><br><span class="line"><span class="comment"># 准备数据集</span></span><br><span class="line">train_data=torchvision.datasets.CIFAR10(root=<span class="string">&quot;../data&quot;</span>,train=<span class="literal">True</span>,transform=torchvision.transforms.ToTensor(),</span><br><span class="line">download=<span class="literal">True</span>)</span><br><span class="line">test_data=torchvision.datasets.CIFAR10(root=<span class="string">&quot;../data&quot;</span>,train=<span class="literal">False</span>,transform=torchvision.transforms.ToTensor(),</span><br><span class="line">download=<span class="literal">True</span>)</span><br><span class="line"><span class="comment"># length 长度</span></span><br><span class="line">train_data_size=<span class="built_in">len</span>(train_data)</span><br><span class="line">test_data_size=<span class="built_in">len</span>(test_data)</span><br><span class="line"><span class="comment"># 如果train_data_size代表训练数据集的长度</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;训练数据集的长度为&#123;&#125;&quot;</span>.<span class="built_in">format</span>(train_data_size))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;测试数据集的长度为&#123;&#125;&quot;</span>.<span class="built_in">format</span>(test_data_size))</span><br><span class="line"></span><br><span class="line"><span class="comment"># 利用DataLoader来加载数据集</span></span><br><span class="line">train_dataloader=DataLoader(train_data,batch_size=<span class="number">64</span>)</span><br><span class="line">test_dataloader=DataLoader(test_data,batch_size=<span class="number">64</span>)</span><br><span class="line"><span class="comment">#创建网络模型</span></span><br><span class="line">tudui=Tudui()</span><br><span class="line">tudui=tudui.to(device)</span><br><span class="line"></span><br><span class="line"><span class="comment">#损失函数</span></span><br><span class="line">loss_fn=nn.CrossEntropyLoss()</span><br><span class="line"><span class="comment">#这个不另外赋值</span></span><br><span class="line">loss_fn=loss_fn.to(device)</span><br><span class="line"><span class="comment">#优化器</span></span><br><span class="line">learning_rate=<span class="number">1e-2</span></span><br><span class="line">optimizer=torch.optim.SGD(tudui.parameters(),lr=learning_rate)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置训练网络的一些参数</span></span><br><span class="line">total_train_step=<span class="number">0</span></span><br><span class="line"><span class="comment"># 训练的轮数</span></span><br><span class="line">epoch=<span class="number">10</span></span><br><span class="line">total_test_step=<span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(epoch):</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;第&#123;&#125;轮训练开始&quot;</span>.<span class="built_in">format</span>(i+<span class="number">1</span>))</span><br><span class="line">    <span class="comment"># 训练步骤开始</span></span><br><span class="line">    tudui.train()</span><br><span class="line">    <span class="keyword">for</span> data <span class="keyword">in</span> train_dataloader:</span><br><span class="line">        imgs,targets=data</span><br><span class="line">        imgs=imgs.to(device)</span><br><span class="line">        targets=targets.to(device)</span><br><span class="line">        outputs=tudui(imgs)</span><br><span class="line">        loss=loss_fn(outputs,targets)</span><br><span class="line">        <span class="comment"># 优化器模型cc</span></span><br><span class="line">        optimizer.zero_grad()</span><br><span class="line">        loss.backward()</span><br><span class="line">        optimizer.step()</span><br><span class="line"></span><br><span class="line">        total_train_step=total_train_step+<span class="number">1</span></span><br><span class="line">        <span class="keyword">if</span> total_train_step % <span class="number">100</span>==<span class="number">0</span>:</span><br><span class="line">            end_time = time.time()</span><br><span class="line">            <span class="built_in">print</span>(end_time - start_time)</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;训练次数:&#123;&#125;，Loss:&#123;&#125;&quot;</span>.<span class="built_in">format</span>(total_train_step,loss.item()))</span><br><span class="line">            writer.add_scalar(<span class="string">&quot;train_loss&quot;</span>,loss.item(),total_train_step)</span><br><span class="line">    <span class="comment"># 测试步骤开始</span></span><br><span class="line">    tudui.<span class="built_in">eval</span>()</span><br><span class="line">    total_test_loss=<span class="number">0</span></span><br><span class="line">    total_accuracy=<span class="number">0</span></span><br><span class="line">    <span class="comment"># with torch.no_grad():的意思是测试过程中不用对模型进行调优直接用现有的模型就行</span></span><br><span class="line">    <span class="keyword">with</span> torch.no_grad():</span><br><span class="line">        <span class="keyword">for</span> data <span class="keyword">in</span> test_dataloader:</span><br><span class="line">            imgs,targets=data</span><br><span class="line">            <span class="keyword">if</span> torch.cuda.is_available():</span><br><span class="line">                imgs = imgs.cuda()</span><br><span class="line">                targets = targets.cuda()</span><br><span class="line">            outputs=tudui(imgs)</span><br><span class="line">            loss=loss_fn(outputs,targets)</span><br><span class="line">            total_test_loss=total_test_loss+loss.item()</span><br><span class="line">            accuracy=(outputs.argmax(<span class="number">1</span>)==targets).<span class="built_in">sum</span>()</span><br><span class="line">            total_accuracy=total_accuracy+accuracy</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;整体测试集上的LOSS：&#123;&#125;&quot;</span>.<span class="built_in">format</span>(total_test_loss))</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;整体测试集上的正确率：&#123;&#125;&quot;</span>.<span class="built_in">format</span>(total_accuracy/test_data_size))</span><br><span class="line">    total_test_step = total_test_step+<span class="number">1</span></span><br><span class="line">    writer.add_scalar(<span class="string">&quot;test_loss&quot;</span>, loss.item(), total_test_step)</span><br><span class="line">    writer.add_scalar(<span class="string">&quot;test_accuracy&quot;</span>, total_accuracy/test_data_size, total_test_step)</span><br><span class="line">    torch.save(tudui,<span class="string">&quot;tudui_&#123;&#125;.pth&quot;</span>.<span class="built_in">format</span>(i))</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;模型已保存&quot;</span>)</span><br><span class="line">model=torch.load(<span class="string">&quot;tudui_0.pth&quot;</span>)</span><br><span class="line">writer.close()</span><br></pre></td></tr></table></figure><p>输入/输出类型都应该为cuda，如果出现常见错误: RuntimeError: Input type (torch.FloatTensor) and weight type (torch.cuda.FloatTensor)，则添加：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">device=torch.device(<span class="string">&quot;cuda&quot;</span> <span class="keyword">if</span> torch.cuda.is_available() <span class="keyword">else</span> <span class="string">&quot;cpu&quot;</span>)  </span><br><span class="line">image=image.to(device)  </span><br></pre></td></tr></table></figure><p>如果模型参数使用gpu训练的而本机环境只有CPU则用语句<code>map_location=torch.device('cpu')</code>转换</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>甲磺酸73浓度siler分析</title>
      <link href="/posts/d5bdee9a/"/>
      <url>/posts/d5bdee9a/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="仅大鸟本人可访问!" data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="a60c19daade412180c56607b362bb5964754ddd5bd9401fb85aabb2d7a6d6275"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-up">      <input class="hbe hbe-input-field hbe-input-field-up" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-up" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-up">Hey, password is required here.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>使用机器学习算法预测中国老年人的认知障碍并识别可改变的因素阅读</title>
      <link href="/posts/bb223095/"/>
      <url>/posts/bb223095/</url>
      
        <content type="html"><![CDATA[<h1 id="原文链接">原文链接</h1><p><a href="https://www.frontiersin.org/articles/10.3389/fnagi.2022.977034/full">原文</a><br><a href="https://github.com/Weiren-Wang/CLHLS_Coginitive_Impairment/tree/main">部分开源代码</a><br><a href="http://chads.nsd.pku.edu.cn/sjzx/tcsj/508264.htm">数据集介绍</a></p><h2 id="复现">复现</h2><p><code>from CLHLS.get_3year_data import get_period_data</code>中的CLHLS代表文件夹后的.<a href="https://blog.csdn.net/weixin_44305115/article/details/115297325">参考</a><br>用python处理时要把.sav转为.csv文件：法一：用spss导出不过发现导出的文件不太符合规则,选择utf-8，但是输出结果与作者的一致，因此应该没有问题。<br>法二：用R中的模块</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">library<span class="punctuation">(</span>foreign<span class="punctuation">)</span></span><br><span class="line">write.table<span class="punctuation">(</span>read.spss<span class="punctuation">(</span><span class="string">&quot;inFile.sav&quot;</span><span class="punctuation">)</span><span class="punctuation">,</span> file<span class="operator">=</span><span class="string">&quot;outFile.csv&quot;</span><span class="punctuation">,</span> <span class="built_in">quote</span> <span class="operator">=</span> <span class="literal">TRUE</span><span class="punctuation">,</span> sep <span class="operator">=</span> <span class="string">&quot;,&quot;</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure><p>文件Descriptive Data.ipynb用于数据预处理。<br><a href="https://www.runoob.com/python/python-func-enumerate.html">Python enumerate() 函数</a><br><a href="https://blog.csdn.net/weixin_44852067/article/details/122238481">.columns属性以返回给定 DataFrame 的列标签</a><br>csv文件形式和sav一样所以直接用sav看更直观，csv只是处理数据比较方便，变量视图可以看到问过的问题和答案，变量_5代表随访到2005年时做过的调查<br>这些数据虽然有些是02到18有些是05到18，但是应该调查人群不同<br>.key()可以获得字典中所有的键，而不是键值。<br>语法dictionary.keys()<br>使用示例&gt;&gt;&gt; list({'Chinasoft':'China', 'Microsoft':'USA'}.keys())<br>['Chinasoft', 'Microsoft']<br>在pandas中，value_counts常用于数据表的计数及排序，它可以用来查看数据表中，指定列里有多少个不同的数据值，并计算每个不同值有在该列中的个数，同时还能根据需要进行排序<a href="https://zhuanlan.zhihu.com/p/113342292">参考</a>。<br><a href="https://www.runoob.com/python/python-lists.html">列表(List)</a><br><a href="https://www.runoob.com/python/python-func-map.html">函数map() 会根据提供的函数对指定序列做映射。第一个参数 function 以参数序列中的每一个元素调用 function 函数，返回包含每次 function 函数返回值的新列表。</a><br>以下代码段的解释：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 根据需要用到的变量名和三年后的后缀 得到 需要用到的三年后的变量名</span></span><br><span class="line"><span class="comment">## 11年前，后续年份随访调查的年龄字段叫vage_年份； 11年后，后续年份随访调查的年龄字段叫trueage_年份；</span></span><br><span class="line"><span class="keyword">if</span> start_year != <span class="number">2011</span>:</span><br><span class="line">    three_years_later_columns = <span class="built_in">list</span>(</span><br><span class="line">        <span class="built_in">map</span>(<span class="keyword">lambda</span> x: x + year_index <span class="keyword">if</span> x != <span class="string">&#x27;trueage&#x27;</span> <span class="keyword">else</span> <span class="string">&#x27;vage&#x27;</span> + year_index, basic_columns))</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    three_years_later_columns = <span class="built_in">list</span>(<span class="built_in">map</span>(<span class="keyword">lambda</span> x: x + year_index, basic_columns))</span><br></pre></td></tr></table></figure><p>这个操作的作用就是获得三年后随访的变量名，11年前，后续年份随访调查的年龄字段叫vage_年份； 11年后，后续年份随访调查的年龄字段叫trueage_年份，这里的x取值和<code>if start_year != 2011:</code>这句话有关<br>因为个人信息问题只在初始年记录，后续年没有，把三年后的个人信息问题去掉留下三年后的问题信息，然后把起始年的信息加上，代码如下</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 个人信息问题只在初始年记录，后续年没有，把三年后的个人信息问题去掉</span></span><br><span class="line">    <span class="keyword">for</span> personal_stable_variable <span class="keyword">in</span> <span class="built_in">list</span>(<span class="built_in">map</span>(<span class="keyword">lambda</span> x: x + year_index, [<span class="string">&#x27;a2&#x27;</span>, <span class="string">&#x27;f1&#x27;</span>, <span class="string">&#x27;a1&#x27;</span>, <span class="string">&#x27;a41&#x27;</span>, <span class="string">&#x27;a43&#x27;</span>])):</span><br><span class="line">        three_years_later_columns.remove(personal_stable_variable)</span><br><span class="line"><span class="comment">#总共的信息把三年后的个人信息问题去掉留下三年后的问题信息，然后把起始年的信息加上</span></span><br><span class="line">    total_columns = basic_columns + three_years_later_columns</span><br></pre></td></tr></table></figure><p>筛选3年后随访还活着且没失访的老年人，比如dth11_14代表11年开始调查到14年还有是否活着0代表14年还存活<br>下面的代码用于处理有缺失值的问卷变量：<br>因为问卷中8代表缺失值，而其中一些变量值可取8因此先进行分类讨论：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 以下问题的问卷选项中存在官方的取值8，或者有可能出现取值8。所以不能将这些变量的8作为缺失处理</span></span><br><span class="line">questions_may_contain8 = [<span class="string">&#x27;vage&#x27;</span>, <span class="string">&#x27;trueage&#x27;</span>, <span class="string">&#x27;a2&#x27;</span>, <span class="string">&#x27;a41&#x27;</span>, <span class="string">&#x27;f1&#x27;</span>, <span class="string">&#x27;b21&#x27;</span>, <span class="string">&#x27;b22&#x27;</span>, <span class="string">&#x27;b23&#x27;</span>, <span class="string">&#x27;b24&#x27;</span>, <span class="string">&#x27;b25&#x27;</span>, <span class="string">&#x27;b26&#x27;</span>, <span class="string">&#x27;b27&#x27;</span>,</span><br><span class="line">                          <span class="string">&#x27;d75&#x27;</span>, <span class="string">&#x27;d86&#x27;</span>, <span class="string">&#x27;d12&#x27;</span>, <span class="string">&#x27;c11&#x27;</span>, <span class="string">&#x27;c12&#x27;</span>, <span class="string">&#x27;c13&#x27;</span>, <span class="string">&#x27;c14&#x27;</span>, <span class="string">&#x27;c15&#x27;</span>, <span class="string">&#x27;c16&#x27;</span>, <span class="string">&#x27;c21a&#x27;</span>, <span class="string">&#x27;c21b&#x27;</span>, <span class="string">&#x27;c21c&#x27;</span>,</span><br><span class="line">                          <span class="string">&#x27;c31a&#x27;</span>, <span class="string">&#x27;c31b&#x27;</span>, <span class="string">&#x27;c31c&#x27;</span>, <span class="string">&#x27;c31d&#x27;</span>, <span class="string">&#x27;c31e&#x27;</span>, <span class="string">&#x27;c32&#x27;</span>, <span class="string">&#x27;c41a&#x27;</span>, <span class="string">&#x27;c41b&#x27;</span>, <span class="string">&#x27;c41c&#x27;</span>, <span class="string">&#x27;c51a&#x27;</span>, <span class="string">&#x27;c51b&#x27;</span>,</span><br><span class="line">                          <span class="string">&#x27;c52&#x27;</span>, <span class="string">&#x27;c53a&#x27;</span>, <span class="string">&#x27;c53b&#x27;</span>, <span class="string">&#x27;c53c&#x27;</span>]</span><br><span class="line">year_index = <span class="string">&#x27;_&#x27;</span> + <span class="built_in">str</span>(start_year + <span class="number">3</span>)[-<span class="number">1</span>] <span class="keyword">if</span> start_year + <span class="number">3</span> &lt; <span class="number">2010</span> <span class="keyword">else</span> <span class="string">&#x27;_&#x27;</span> + <span class="built_in">str</span>(start_year + <span class="number">3</span>)[-<span class="number">2</span>:]</span><br><span class="line">later_questions_may_contain8 = <span class="built_in">list</span>(<span class="built_in">map</span>(<span class="keyword">lambda</span> x: x + year_index, questions_may_contain8))</span><br><span class="line">total_questions_may_contain8 = questions_may_contain8 + later_questions_may_contain8</span><br></pre></td></tr></table></figure><p>而剩余变量含8的可能会是缺失值,<a href="https://www.cnblogs.com/dataAnalysis/p/9353245.html">replace函数</a>，这段代码把由数字代表的缺失值用NAN描述了。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 把剩下的变量中的按codebook说明的缺失取值或不合理取值变成缺失值。</span></span><br><span class="line">    variable_needed_processed = <span class="built_in">list</span>(<span class="built_in">set</span>(df.columns) - <span class="built_in">set</span>(total_questions_may_contain8))</span><br><span class="line">    new_df = df.copy()</span><br><span class="line">    <span class="keyword">for</span> var <span class="keyword">in</span> variable_needed_processed:</span><br><span class="line">        new_df[var] = new_df[var].replace(<span class="number">8</span>, np.nan)</span><br><span class="line">        new_df[var] = new_df[var].replace(<span class="number">88</span>, np.nan)</span><br><span class="line">        new_df[var] = new_df[var].replace(<span class="number">888</span>, np.nan)</span><br><span class="line">        new_df[var] = new_df[var].replace(<span class="number">8888</span>, np.nan)</span><br><span class="line">        new_df[var] = new_df[var].replace(<span class="number">9</span>, np.nan)</span><br><span class="line">        new_df[var] = new_df[var].replace(<span class="number">99</span>, np.nan)</span><br><span class="line">        new_df[var] = new_df[var].replace(<span class="number">99</span>, np.nan)</span><br><span class="line">        new_df[var] = new_df[var].replace(<span class="number">9999</span>, np.nan)</span><br></pre></td></tr></table></figure><p>下面代码似乎在计算各个变量中缺失的概率,<a href="https://blog.csdn.net/Mr_HHH/article/details/79488517">df.isnull()</a>,df.isnull().any()则会判断哪些”列”存在缺失值,new_df.loc[:, new_df.isnull().any()].isnull().sum()就是把所有有缺失值的列累加，最后除以总数，就是缺失的概率。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;Missing values situation&#x27;</span>)</span><br><span class="line">    <span class="built_in">print</span>(</span><br><span class="line">        (new_df.loc[:, new_df.isnull().<span class="built_in">any</span>()].isnull().<span class="built_in">sum</span>() / <span class="built_in">len</span>(df)).apply(<span class="keyword">lambda</span> x: <span class="built_in">str</span>(<span class="string">&#x27;%.2f&#x27;</span> % (x * <span class="number">100</span>)) + <span class="string">&#x27;%&#x27;</span>))</span><br><span class="line"><span class="comment"># 用众数填补变量的缺失值这个待会打下断点</span></span><br><span class="line">    <span class="keyword">for</span> col <span class="keyword">in</span> new_df.columns[new_df.isnull().<span class="built_in">any</span>()]:</span><br><span class="line">        mode = new_df[col].value_counts().sort_values(ascending=<span class="literal">False</span>).index[<span class="number">0</span>]</span><br><span class="line">        new_df[col].fillna(mode, inplace=<span class="literal">True</span>)</span><br></pre></td></tr></table></figure><p>去掉MMSE问题全部不能回答【总共23个问题】的人员，也就是删掉一些行数，<code>new_df = new_df[new_df.isnull().sum(axis=1) &lt; 23]</code>代表有任何一个问题能回答就保留，最后该段代码统计减去未统计MMSE的人数</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 去掉MMSE问题全部不能回答的</span></span><br><span class="line">MMSE_questions = [<span class="string">&#x27;c11&#x27;</span>, <span class="string">&#x27;c12&#x27;</span>, <span class="string">&#x27;c13&#x27;</span>, <span class="string">&#x27;c14&#x27;</span>, <span class="string">&#x27;c15&#x27;</span>, <span class="string">&#x27;c21a&#x27;</span>, <span class="string">&#x27;c21b&#x27;</span>, <span class="string">&#x27;c21c&#x27;</span>, <span class="string">&#x27;c31a&#x27;</span>, <span class="string">&#x27;c31b&#x27;</span>, <span class="string">&#x27;c31c&#x27;</span>, <span class="string">&#x27;c31d&#x27;</span>, <span class="string">&#x27;c31e&#x27;</span>,</span><br><span class="line">                  <span class="string">&#x27;c32&#x27;</span>, <span class="string">&#x27;c41a&#x27;</span>, <span class="string">&#x27;c41b&#x27;</span>, <span class="string">&#x27;c41c&#x27;</span>, <span class="string">&#x27;c51a&#x27;</span>, <span class="string">&#x27;c51b&#x27;</span>, <span class="string">&#x27;c52&#x27;</span>, <span class="string">&#x27;c53a&#x27;</span>, <span class="string">&#x27;c53b&#x27;</span>, <span class="string">&#x27;c53c&#x27;</span>]</span><br><span class="line">MMSE_questions_later = <span class="built_in">list</span>(<span class="built_in">map</span>(<span class="keyword">lambda</span> x: x + year_index, MMSE_questions))</span><br><span class="line"><span class="keyword">for</span> var <span class="keyword">in</span> MMSE_questions:</span><br><span class="line">    new_df[var] = new_df[var].replace(<span class="number">8</span>, np.nan)</span><br><span class="line">    new_df[var] = new_df[var].replace(<span class="number">88</span>, np.nan)</span><br><span class="line">    new_df[var] = new_df[var].replace(<span class="number">888</span>, np.nan)</span><br><span class="line">    new_df[var] = new_df[var].replace(<span class="number">8888</span>, np.nan)</span><br><span class="line">    new_df[var] = new_df[var].replace(<span class="number">9</span>, np.nan)</span><br><span class="line">    new_df[var] = new_df[var].replace(<span class="number">99</span>, np.nan)</span><br><span class="line">    new_df[var] = new_df[var].replace(<span class="number">99</span>, np.nan)</span><br><span class="line">    new_df[var] = new_df[var].replace(<span class="number">9999</span>, np.nan)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;Samples before drop current MMSE missing : &#x27;</span>, <span class="built_in">len</span>(new_df))</span><br><span class="line">new_df = new_df[new_df.isnull().<span class="built_in">sum</span>(axis=<span class="number">1</span>) &lt; <span class="number">23</span>]</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;Samples before drop current MMSE missing : &#x27;</span>, <span class="built_in">len</span>(new_df))</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> var <span class="keyword">in</span> MMSE_questions_later:</span><br><span class="line">    new_df[var] = new_df[var].replace(<span class="number">8</span>, np.nan)</span><br><span class="line">    new_df[var] = new_df[var].replace(<span class="number">88</span>, np.nan)</span><br><span class="line">    new_df[var] = new_df[var].replace(<span class="number">888</span>, np.nan)</span><br><span class="line">    new_df[var] = new_df[var].replace(<span class="number">8888</span>, np.nan)</span><br><span class="line">    new_df[var] = new_df[var].replace(<span class="number">9</span>, np.nan)</span><br><span class="line">    new_df[var] = new_df[var].replace(<span class="number">99</span>, np.nan)</span><br><span class="line">    new_df[var] = new_df[var].replace(<span class="number">99</span>, np.nan)</span><br><span class="line">    new_df[var] = new_df[var].replace(<span class="number">9999</span>, np.nan)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;Samples before drop later MMSE missing : &#x27;</span>, <span class="built_in">len</span>(new_df))</span><br><span class="line">new_df = new_df[new_df.isnull().<span class="built_in">sum</span>(axis=<span class="number">1</span>) &lt; <span class="number">23</span>]</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;Samples before drop later MMSE missing : &#x27;</span>, <span class="built_in">len</span>(new_df))</span><br></pre></td></tr></table></figure><p>统计大于60岁的人数，并于之前对比。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;Before drop age&lt;60 : &#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;Wave 1: &#x27;</span>,<span class="built_in">len</span>(first_wave_new))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;Wave 2: &#x27;</span>,<span class="built_in">len</span>(second_wave_new))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;Wave 3: &#x27;</span>,<span class="built_in">len</span>(third_wave_new))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;Wave 4: &#x27;</span>,<span class="built_in">len</span>(fourth_wave_new))</span><br><span class="line">first_wave_new = first_wave_new[first_wave_new.trueage&gt;=<span class="number">60</span>]</span><br><span class="line">second_wave_new = second_wave_new[second_wave_new.trueage&gt;=<span class="number">60</span>]</span><br><span class="line">third_wave_new = third_wave_new[third_wave_new.trueage&gt;=<span class="number">60</span>]</span><br><span class="line">fourth_wave_new = fourth_wave_new[fourth_wave_new.trueage&gt;=<span class="number">60</span>]</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;After drop age&lt;60 : &#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;Wave 1: &#x27;</span>,<span class="built_in">len</span>(first_wave_new))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;Wave 2: &#x27;</span>,<span class="built_in">len</span>(second_wave_new))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;Wave 3: &#x27;</span>,<span class="built_in">len</span>(third_wave_new))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;Wave 4: &#x27;</span>,<span class="built_in">len</span>(fourth_wave_new))</span><br></pre></td></tr></table></figure><h3 id="数据预处理总述">数据预处理总述</h3><p>数据处理阶段一，纳入了 2002 年至 2014 年间的 4 波非重叠的 3 年调查数据，和所需的各个列变量【调查变量】，我们首先纳入了 2002 年至 2014 年间的 4 波非重叠的 3 年调查数据。参与者选择的详细流程图如图 1 所示。所有参与者每 3 年接受一次随访（一波）。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">get_data_between_start_to_end</span>(<span class="params">df,start_year</span>):</span><br><span class="line">    <span class="comment"># 根据输入df的起始年份得到三年后的变量后缀，如输入2002年的df，则三年后的变量后缀为 _5，输入2011年的，三年后变量后缀则为_14</span></span><br><span class="line">    <span class="comment"># 使用str()函数 转换为字符串使其可以使用下标索引访问</span></span><br><span class="line">    short_year = <span class="built_in">str</span>(start_year+<span class="number">3</span>)[-<span class="number">1</span>] <span class="keyword">if</span> start_year+<span class="number">3</span> &lt; <span class="number">2010</span> <span class="keyword">else</span> <span class="built_in">str</span>(start_year+<span class="number">3</span>)[-<span class="number">2</span>:]</span><br><span class="line">    variable_list = []</span><br><span class="line">    index = <span class="number">0</span></span><br><span class="line">    minux_index = <span class="built_in">len</span>(short_year)+<span class="number">1</span></span><br><span class="line">    <span class="comment"># 把起始年份的变量名称收集记起来，读取列标签名</span></span><br><span class="line">    <span class="comment"># 三年期的问卷变量</span></span><br><span class="line">    <span class="keyword">for</span> i,variable <span class="keyword">in</span> <span class="built_in">enumerate</span>(df.columns):</span><br><span class="line">        <span class="comment">#如果变量中包含截止年份信息</span></span><br><span class="line">        <span class="keyword">if</span> variable[-minux_index:] == <span class="string">&#x27;_&#x27;</span> + short_year:</span><br><span class="line">            index = i</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        <span class="comment">#这里的语句没有在if里面需要特别注意</span></span><br><span class="line">        variable_list.append(variable)</span><br><span class="line">    <span class="built_in">print</span>(index)</span><br><span class="line">     <span class="comment"># 把三年后的变量名称收集起来，每两次访问的变量之间都有一个&quot;dth年份_年份&quot;变量进行隔开&quot;dth年份_年份&quot;就相当于另一个周期，所以以该变量为分割提取，遇到该变量就停止</span></span><br><span class="line">    <span class="comment"># 当年的问卷变量</span></span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(index,<span class="built_in">len</span>(df.columns)):</span><br><span class="line">        <span class="keyword">if</span> df.columns[j] == <span class="string">&#x27;dth&#x27;</span>+<span class="built_in">str</span>(start_year+<span class="number">3</span>)[-<span class="number">2</span>:]+<span class="string">&#x27;_&#x27;</span>+<span class="built_in">str</span>(start_year+<span class="number">6</span>)[-<span class="number">2</span>:] <span class="keyword">or</span> df.columns[j][-<span class="number">3</span>:] == <span class="string">&#x27;_&#x27;</span>+<span class="built_in">str</span>(start_year+<span class="number">7</span>)[-<span class="number">2</span>:]:</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        variable_list.append(df.columns[j])</span><br><span class="line">    <span class="comment"># 根据变量名提取出当年，和三年期的问卷变量，其他年份的抛弃</span></span><br><span class="line">    <span class="built_in">print</span>(variable_list)</span><br><span class="line">    <span class="keyword">return</span> df.loc[:,variable_list]</span><br></pre></td></tr></table></figure><p>数据预处理和统计,根据变量dth02_05统计出三年间存活，死亡，失踪的各个项目人数</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">数据预处理和统计</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_df_peo_3years_situation</span>(<span class="params">data02to05,data05to08,data08to11,data11to14</span>):</span><br><span class="line">    <span class="comment">#错误数据预处理</span></span><br><span class="line">    <span class="comment"># data11to14里的dth11_14字段中有&#x27; &#x27;空格字符，所以该字段为字符串类型，需要将其改为数值型</span></span><br><span class="line">    data11to14.dth11_14 = pd.to_numeric(data11to14.dth11_14,errors = <span class="string">&#x27;coerce&#x27;</span>)</span><br><span class="line">    <span class="comment"># data08to11中有一位老年人的dth11_14字段中值为2011，经核对该老人为存活者，所以将其改为0</span></span><br><span class="line">    data08to11.loc[data08to11[data08to11.dth08_11 == <span class="number">2011</span>].index,<span class="string">&#x27;dth08_11&#x27;</span>] = <span class="number">0</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 整理各组数据的起始调查人数，三年存活人数，三年死亡人数，三年失访人数&#123;典型的无效数据&#125;</span></span><br><span class="line">    observations = []</span><br><span class="line">    survivor = []</span><br><span class="line">    death = []</span><br><span class="line">    missing = []</span><br><span class="line">    df_dict = &#123;<span class="string">&#x27;df1&#x27;</span>:data02to05,<span class="string">&#x27;df2&#x27;</span>:data05to08,<span class="string">&#x27;df3&#x27;</span>:data08to11,<span class="string">&#x27;df4&#x27;</span>:data11to14&#125;</span><br><span class="line">    df_var_dict = &#123;<span class="string">&#x27;df1&#x27;</span>:<span class="string">&#x27;dth02_05&#x27;</span>,<span class="string">&#x27;df2&#x27;</span>:<span class="string">&#x27;dth05_08&#x27;</span>,<span class="string">&#x27;df3&#x27;</span>:<span class="string">&#x27;dth08_11&#x27;</span>,<span class="string">&#x27;df4&#x27;</span>:<span class="string">&#x27;dth11_14&#x27;</span>&#125;</span><br><span class="line">    <span class="keyword">for</span> df <span class="keyword">in</span> df_dict.keys():</span><br><span class="line">        <span class="built_in">print</span>(df) <span class="comment">#df1 df2 df3 df4</span></span><br><span class="line">        <span class="built_in">print</span>(df_dict[df]) <span class="comment">#各个data02to05完整数组</span></span><br><span class="line">        <span class="built_in">print</span>(<span class="built_in">len</span>(df_dict[df]))  <span class="comment"># 各个data02to05完整数组的行数就是总统计人数</span></span><br><span class="line">        counter = df_dict[df][df_var_dict[df]].value_counts()</span><br><span class="line">        observations.append(<span class="built_in">len</span>(df_dict[df]))</span><br><span class="line">        survivor.append(counter[<span class="number">0</span>])</span><br><span class="line">        death.append(counter[<span class="number">1</span>])</span><br><span class="line">        missing.append(counter[-<span class="number">9</span>])</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> pd.DataFrame(&#123;<span class="string">&#x27;start year observations&#x27;</span>:observations,</span><br><span class="line">                     <span class="string">&#x27;survivor&#x27;</span>:survivor,</span><br><span class="line">                      <span class="string">&#x27;death&#x27;</span>:death,</span><br><span class="line">                      <span class="string">&#x27;missing&#x27;</span>:missing&#125;,index = [<span class="string">&#x27;2002 to 2005&#x27;</span>,<span class="string">&#x27;2005 to 2008&#x27;</span>,<span class="string">&#x27;2008 to 2011&#x27;</span>,<span class="string">&#x27;2011 to 2014&#x27;</span>])</span><br><span class="line"></span><br><span class="line">situation = get_df_peo_3years_situation(data02to05,data05to08,data08to11,data11to14)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;Number of investgated elders situations : &#x27;</span>,<span class="string">&#x27;\n&#x27;</span>,situation)</span><br></pre></td></tr></table></figure><p>筛选出还活着的列表然后取特定的列变量，把三年后的初始个人信息问题去掉</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">get_wave_data</span>(<span class="params">df, start_year</span>):</span><br><span class="line">    <span class="comment"># 需要用到的变量名</span></span><br><span class="line">    basic_columns = [<span class="string">&#x27;a1&#x27;</span>, <span class="string">&#x27;trueage&#x27;</span>, <span class="string">&#x27;a2&#x27;</span>, <span class="string">&#x27;f1&#x27;</span>, <span class="string">&#x27;f41&#x27;</span>, <span class="string">&#x27;f34&#x27;</span>, <span class="string">&#x27;a41&#x27;</span>, <span class="string">&#x27;a43&#x27;</span>, <span class="string">&#x27;a51&#x27;</span>,  <span class="comment"># personal info</span></span><br><span class="line">                     <span class="string">&#x27;b21&#x27;</span>, <span class="string">&#x27;b22&#x27;</span>, <span class="string">&#x27;b23&#x27;</span>, <span class="string">&#x27;b24&#x27;</span>, <span class="string">&#x27;b25&#x27;</span>, <span class="string">&#x27;b26&#x27;</span>, <span class="string">&#x27;b27&#x27;</span>,  <span class="comment"># psychological status</span></span><br><span class="line">                     <span class="string">&#x27;d71&#x27;</span>, <span class="string">&#x27;d72&#x27;</span>, <span class="string">&#x27;d75&#x27;</span>, <span class="string">&#x27;d81&#x27;</span>, <span class="string">&#x27;d82&#x27;</span>, <span class="string">&#x27;d86&#x27;</span>, <span class="string">&#x27;d91&#x27;</span>, <span class="string">&#x27;d92&#x27;</span>, <span class="string">&#x27;d31&#x27;</span>, <span class="string">&#x27;d32&#x27;</span>,  <span class="comment"># living style</span></span><br><span class="line">                     <span class="string">&#x27;d11b&#x27;</span>, <span class="string">&#x27;d11c&#x27;</span>, <span class="string">&#x27;d11d&#x27;</span>, <span class="string">&#x27;d11e&#x27;</span>, <span class="string">&#x27;d11f&#x27;</span>, <span class="string">&#x27;d11g&#x27;</span>, <span class="string">&#x27;d11h&#x27;</span>, <span class="string">&#x27;d12&#x27;</span>,  <span class="comment"># social activities</span></span><br><span class="line">                     <span class="string">&#x27;e1&#x27;</span>, <span class="string">&#x27;e2&#x27;</span>, <span class="string">&#x27;e3&#x27;</span>, <span class="string">&#x27;e4&#x27;</span>, <span class="string">&#x27;e5&#x27;</span>, <span class="string">&#x27;e6&#x27;</span>,  <span class="comment"># ADL</span></span><br><span class="line">                     <span class="string">&#x27;g15a1&#x27;</span>, <span class="string">&#x27;g15b1&#x27;</span>, <span class="string">&#x27;g15c1&#x27;</span>, <span class="string">&#x27;g15d1&#x27;</span>, <span class="string">&#x27;g15e1&#x27;</span>, <span class="string">&#x27;g15f1&#x27;</span>, <span class="string">&#x27;g15g1&#x27;</span>, <span class="string">&#x27;g15h1&#x27;</span>, <span class="string">&#x27;g15i1&#x27;</span>, <span class="string">&#x27;g15j1&#x27;</span>, <span class="string">&#x27;g15k1&#x27;</span>,</span><br><span class="line">                     <span class="string">&#x27;g15l1&#x27;</span>, <span class="string">&#x27;g15m1&#x27;</span>, <span class="string">&#x27;g15n1&#x27;</span>, <span class="string">&#x27;g15o1&#x27;</span>,  <span class="comment"># chronic diseases</span></span><br><span class="line">                     <span class="string">&#x27;c11&#x27;</span>, <span class="string">&#x27;c12&#x27;</span>, <span class="string">&#x27;c13&#x27;</span>, <span class="string">&#x27;c14&#x27;</span>, <span class="string">&#x27;c15&#x27;</span>, <span class="string">&#x27;c16&#x27;</span>, <span class="string">&#x27;c21a&#x27;</span>, <span class="string">&#x27;c21b&#x27;</span>, <span class="string">&#x27;c21c&#x27;</span>, <span class="string">&#x27;c31a&#x27;</span>, <span class="string">&#x27;c31b&#x27;</span>, <span class="string">&#x27;c31c&#x27;</span>, <span class="string">&#x27;c31d&#x27;</span>,</span><br><span class="line">                     <span class="string">&#x27;c31e&#x27;</span>, <span class="string">&#x27;c32&#x27;</span>, <span class="string">&#x27;c41a&#x27;</span>, <span class="string">&#x27;c41b&#x27;</span>, <span class="string">&#x27;c41c&#x27;</span>, <span class="string">&#x27;c51a&#x27;</span>, <span class="string">&#x27;c51b&#x27;</span>, <span class="string">&#x27;c52&#x27;</span>, <span class="string">&#x27;c53a&#x27;</span>, <span class="string">&#x27;c53b&#x27;</span>, <span class="string">&#x27;c53c&#x27;</span>,</span><br><span class="line">                     <span class="comment"># CI measurement</span></span><br><span class="line">                     ]</span><br><span class="line">    year_index = <span class="string">&#x27;_&#x27;</span> + <span class="built_in">str</span>(start_year + <span class="number">3</span>)[-<span class="number">1</span>] <span class="keyword">if</span> start_year + <span class="number">3</span> &lt; <span class="number">2010</span> <span class="keyword">else</span> <span class="string">&#x27;_&#x27;</span> + <span class="built_in">str</span>(start_year + <span class="number">3</span>)[-<span class="number">2</span>:]</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 根据需要用到的变量名和三年后的后缀 得到 需要用到的三年后的变量名</span></span><br><span class="line">    <span class="comment">## 11年前，后续年份随访调查的年龄字段叫vage_年份； 11年后，后续年份随访调查的年龄字段叫trueage_年份；</span></span><br><span class="line">    <span class="keyword">if</span> start_year != <span class="number">2011</span>:</span><br><span class="line">        three_years_later_columns = <span class="built_in">list</span>(</span><br><span class="line">            <span class="built_in">map</span>(<span class="keyword">lambda</span> x: x + year_index <span class="keyword">if</span> x != <span class="string">&#x27;trueage&#x27;</span> <span class="keyword">else</span> <span class="string">&#x27;vage&#x27;</span> + year_index, basic_columns))</span><br><span class="line">        <span class="built_in">print</span>(three_years_later_columns)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        three_years_later_columns = <span class="built_in">list</span>(<span class="built_in">map</span>(<span class="keyword">lambda</span> x: x + year_index, basic_columns))</span><br><span class="line">        <span class="built_in">print</span>(three_years_later_columns)</span><br><span class="line">    <span class="comment"># 个人信息问题只在初始年记录，后续年没有，把三年后的个人信息问题去掉</span></span><br><span class="line">    <span class="keyword">for</span> personal_stable_variable <span class="keyword">in</span> <span class="built_in">list</span>(<span class="built_in">map</span>(<span class="keyword">lambda</span> x: x + year_index, [<span class="string">&#x27;a2&#x27;</span>, <span class="string">&#x27;f1&#x27;</span>, <span class="string">&#x27;a1&#x27;</span>, <span class="string">&#x27;a41&#x27;</span>, <span class="string">&#x27;a43&#x27;</span>])):</span><br><span class="line">        three_years_later_columns.remove(personal_stable_variable)</span><br><span class="line">    total_columns = basic_columns + three_years_later_columns</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 筛选3年后随访还活着且没失访的老年人</span></span><br><span class="line">    death_index_var = <span class="string">&#x27;dth&#x27;</span> + <span class="built_in">str</span>(start_year)[-<span class="number">2</span>:] + <span class="string">&#x27;_&#x27;</span> + <span class="built_in">str</span>(start_year + <span class="number">3</span>)[-<span class="number">2</span>:]</span><br><span class="line">    <span class="comment">#live_df变量的意思是筛选出还活着的列表</span></span><br><span class="line">    live_df = df[df[death_index_var] == <span class="number">0</span>]</span><br><span class="line">    <span class="built_in">print</span>(live_df)</span><br><span class="line">    <span class="comment"># 筛选出还活着的列表然后取特定的列变量</span></span><br><span class="line">    wave_data = live_df[total_columns]</span><br><span class="line">    <span class="built_in">print</span>(wave_data)</span><br><span class="line">    <span class="keyword">for</span> column <span class="keyword">in</span> wave_data.columns:</span><br><span class="line">        <span class="comment"># 转为数字型</span></span><br><span class="line">        wave_data[column] = pd.to_numeric(wave_data[column], errors=<span class="string">&#x27;coerce&#x27;</span>)</span><br><span class="line">    <span class="keyword">return</span> wave_data</span><br></pre></td></tr></table></figure><p>统计各个项的缺失概率，并用众数填补变量的缺失值并把MMSE问题全部不能回答的人去掉</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">replace_abnormal_and_fill_nan</span>(<span class="params">df, start_year</span>):</span><br><span class="line">    <span class="comment"># 以下问题的问卷选项中存在官方的取值8，或者有可能出现取值8。所以不能将这些变量的8作为缺失处理</span></span><br><span class="line">    questions_may_contain8 = [<span class="string">&#x27;vage&#x27;</span>, <span class="string">&#x27;trueage&#x27;</span>, <span class="string">&#x27;a2&#x27;</span>, <span class="string">&#x27;a41&#x27;</span>, <span class="string">&#x27;f1&#x27;</span>, <span class="string">&#x27;b21&#x27;</span>, <span class="string">&#x27;b22&#x27;</span>, <span class="string">&#x27;b23&#x27;</span>, <span class="string">&#x27;b24&#x27;</span>, <span class="string">&#x27;b25&#x27;</span>, <span class="string">&#x27;b26&#x27;</span>, <span class="string">&#x27;b27&#x27;</span>,</span><br><span class="line">                              <span class="string">&#x27;d75&#x27;</span>, <span class="string">&#x27;d86&#x27;</span>, <span class="string">&#x27;d12&#x27;</span>, <span class="string">&#x27;c11&#x27;</span>, <span class="string">&#x27;c12&#x27;</span>, <span class="string">&#x27;c13&#x27;</span>, <span class="string">&#x27;c14&#x27;</span>, <span class="string">&#x27;c15&#x27;</span>, <span class="string">&#x27;c16&#x27;</span>, <span class="string">&#x27;c21a&#x27;</span>, <span class="string">&#x27;c21b&#x27;</span>, <span class="string">&#x27;c21c&#x27;</span>,</span><br><span class="line">                              <span class="string">&#x27;c31a&#x27;</span>, <span class="string">&#x27;c31b&#x27;</span>, <span class="string">&#x27;c31c&#x27;</span>, <span class="string">&#x27;c31d&#x27;</span>, <span class="string">&#x27;c31e&#x27;</span>, <span class="string">&#x27;c32&#x27;</span>, <span class="string">&#x27;c41a&#x27;</span>, <span class="string">&#x27;c41b&#x27;</span>, <span class="string">&#x27;c41c&#x27;</span>, <span class="string">&#x27;c51a&#x27;</span>, <span class="string">&#x27;c51b&#x27;</span>,</span><br><span class="line">                              <span class="string">&#x27;c52&#x27;</span>, <span class="string">&#x27;c53a&#x27;</span>, <span class="string">&#x27;c53b&#x27;</span>, <span class="string">&#x27;c53c&#x27;</span>]</span><br><span class="line">    year_index = <span class="string">&#x27;_&#x27;</span> + <span class="built_in">str</span>(start_year + <span class="number">3</span>)[-<span class="number">1</span>] <span class="keyword">if</span> start_year + <span class="number">3</span> &lt; <span class="number">2010</span> <span class="keyword">else</span> <span class="string">&#x27;_&#x27;</span> + <span class="built_in">str</span>(start_year + <span class="number">3</span>)[-<span class="number">2</span>:]</span><br><span class="line">    later_questions_may_contain8 = <span class="built_in">list</span>(<span class="built_in">map</span>(<span class="keyword">lambda</span> x: x + year_index, questions_may_contain8))</span><br><span class="line">    total_questions_may_contain8 = questions_may_contain8 + later_questions_may_contain8</span><br><span class="line">    <span class="comment"># 把剩下的变量中的按codebook说明的缺失取值或不合理取值变成缺失值。</span></span><br><span class="line">    variable_needed_processed = <span class="built_in">list</span>(<span class="built_in">set</span>(df.columns) - <span class="built_in">set</span>(total_questions_may_contain8))</span><br><span class="line">    new_df = df.copy()</span><br><span class="line">    <span class="keyword">for</span> var <span class="keyword">in</span> variable_needed_processed:</span><br><span class="line">        new_df[var] = new_df[var].replace(<span class="number">8</span>, np.nan)</span><br><span class="line">        new_df[var] = new_df[var].replace(<span class="number">88</span>, np.nan)</span><br><span class="line">        new_df[var] = new_df[var].replace(<span class="number">888</span>, np.nan)</span><br><span class="line">        new_df[var] = new_df[var].replace(<span class="number">8888</span>, np.nan)</span><br><span class="line">        new_df[var] = new_df[var].replace(<span class="number">9</span>, np.nan)</span><br><span class="line">        new_df[var] = new_df[var].replace(<span class="number">99</span>, np.nan)</span><br><span class="line">        new_df[var] = new_df[var].replace(<span class="number">99</span>, np.nan)</span><br><span class="line">        new_df[var] = new_df[var].replace(<span class="number">9999</span>, np.nan)</span><br><span class="line">    <span class="comment"># 用众数填补变量的缺失值</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;Missing values situation&#x27;</span>)</span><br><span class="line">    <span class="built_in">print</span>(</span><br><span class="line">        (new_df.loc[:, new_df.isnull().<span class="built_in">any</span>()].isnull().<span class="built_in">sum</span>() / <span class="built_in">len</span>(df)).apply(<span class="keyword">lambda</span> x: <span class="built_in">str</span>(<span class="string">&#x27;%.2f&#x27;</span> % (x * <span class="number">100</span>)) + <span class="string">&#x27;%&#x27;</span>))</span><br><span class="line">    <span class="keyword">for</span> col <span class="keyword">in</span> new_df.columns[new_df.isnull().<span class="built_in">any</span>()]:</span><br><span class="line">        mode = new_df[col].value_counts().sort_values(ascending=<span class="literal">False</span>).index[<span class="number">0</span>]</span><br><span class="line">        new_df[col].fillna(mode, inplace=<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 去掉MMSE问题全部不能回答的</span></span><br><span class="line">    MMSE_questions = [<span class="string">&#x27;c11&#x27;</span>, <span class="string">&#x27;c12&#x27;</span>, <span class="string">&#x27;c13&#x27;</span>, <span class="string">&#x27;c14&#x27;</span>, <span class="string">&#x27;c15&#x27;</span>, <span class="string">&#x27;c21a&#x27;</span>, <span class="string">&#x27;c21b&#x27;</span>, <span class="string">&#x27;c21c&#x27;</span>, <span class="string">&#x27;c31a&#x27;</span>, <span class="string">&#x27;c31b&#x27;</span>, <span class="string">&#x27;c31c&#x27;</span>, <span class="string">&#x27;c31d&#x27;</span>, <span class="string">&#x27;c31e&#x27;</span>,</span><br><span class="line">                      <span class="string">&#x27;c32&#x27;</span>, <span class="string">&#x27;c41a&#x27;</span>, <span class="string">&#x27;c41b&#x27;</span>, <span class="string">&#x27;c41c&#x27;</span>, <span class="string">&#x27;c51a&#x27;</span>, <span class="string">&#x27;c51b&#x27;</span>, <span class="string">&#x27;c52&#x27;</span>, <span class="string">&#x27;c53a&#x27;</span>, <span class="string">&#x27;c53b&#x27;</span>, <span class="string">&#x27;c53c&#x27;</span>]</span><br><span class="line">    MMSE_questions_later = <span class="built_in">list</span>(<span class="built_in">map</span>(<span class="keyword">lambda</span> x: x + year_index, MMSE_questions))</span><br><span class="line">    <span class="keyword">for</span> var <span class="keyword">in</span> MMSE_questions:</span><br><span class="line">        new_df[var] = new_df[var].replace(<span class="number">8</span>, np.nan)</span><br><span class="line">        new_df[var] = new_df[var].replace(<span class="number">88</span>, np.nan)</span><br><span class="line">        new_df[var] = new_df[var].replace(<span class="number">888</span>, np.nan)</span><br><span class="line">        new_df[var] = new_df[var].replace(<span class="number">8888</span>, np.nan)</span><br><span class="line">        new_df[var] = new_df[var].replace(<span class="number">9</span>, np.nan)</span><br><span class="line">        new_df[var] = new_df[var].replace(<span class="number">99</span>, np.nan)</span><br><span class="line">        new_df[var] = new_df[var].replace(<span class="number">99</span>, np.nan)</span><br><span class="line">        new_df[var] = new_df[var].replace(<span class="number">9999</span>, np.nan)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;Samples before drop current MMSE missing : &#x27;</span>, <span class="built_in">len</span>(new_df))</span><br><span class="line">    new_df = new_df[new_df.isnull().<span class="built_in">sum</span>(axis=<span class="number">1</span>) &lt; <span class="number">23</span>]</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;Samples before drop current MMSE missing : &#x27;</span>, <span class="built_in">len</span>(new_df))</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> var <span class="keyword">in</span> MMSE_questions_later:</span><br><span class="line">        new_df[var] = new_df[var].replace(<span class="number">8</span>, np.nan)</span><br><span class="line">        new_df[var] = new_df[var].replace(<span class="number">88</span>, np.nan)</span><br><span class="line">        new_df[var] = new_df[var].replace(<span class="number">888</span>, np.nan)</span><br><span class="line">        new_df[var] = new_df[var].replace(<span class="number">8888</span>, np.nan)</span><br><span class="line">        new_df[var] = new_df[var].replace(<span class="number">9</span>, np.nan)</span><br><span class="line">        new_df[var] = new_df[var].replace(<span class="number">99</span>, np.nan)</span><br><span class="line">        new_df[var] = new_df[var].replace(<span class="number">99</span>, np.nan)</span><br><span class="line">        new_df[var] = new_df[var].replace(<span class="number">9999</span>, np.nan)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;Samples before drop later MMSE missing : &#x27;</span>, <span class="built_in">len</span>(new_df))</span><br><span class="line">    new_df = new_df[new_df.isnull().<span class="built_in">sum</span>(axis=<span class="number">1</span>) &lt; <span class="number">23</span>]</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;Samples before drop later MMSE missing : &#x27;</span>, <span class="built_in">len</span>(new_df))</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> new_df</span><br></pre></td></tr></table></figure><p>整合并筛选出&gt;60岁的人</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">get_period_data</span>():</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;Reading data ...&#x27;</span>)</span><br><span class="line">    data_02to18 = pd.read_csv(<span class="string">&#x27;./data/clhls_2002_2018_utf8.csv&#x27;</span>,low_memory=<span class="literal">False</span>)</span><br><span class="line">    data_05to18 = pd.read_csv(<span class="string">&#x27;./data/clhls_2005_2018_utf8.csv&#x27;</span>,low_memory=<span class="literal">False</span>)</span><br><span class="line">    data_08to18 = pd.read_csv(<span class="string">&#x27;./data/clhls_2008_2018_utf8.csv&#x27;</span>,low_memory=<span class="literal">False</span>)</span><br><span class="line">    data_11to18 = pd.read_csv(<span class="string">&#x27;./data/clhls_2011_2018_utf8.csv&#x27;</span>,low_memory=<span class="literal">False</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;Getting 3 year periods data ...&#x27;</span>)</span><br><span class="line">    data02to05 = get_data_between_start_to_end(data_02to18,<span class="number">2002</span>)</span><br><span class="line">    data05to08 = get_data_between_start_to_end(data_05to18,<span class="number">2005</span>)</span><br><span class="line">    data08to11 = get_data_between_start_to_end(data_08to18,<span class="number">2008</span>)</span><br><span class="line">    data11to14 = get_data_between_start_to_end(data_11to18,<span class="number">2011</span>)</span><br><span class="line">    </span><br><span class="line">    situation = get_df_peo_3years_situation(data02to05,data05to08,data08to11,data11to14)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;Number of investgated elders situations : &#x27;</span>,<span class="string">&#x27;\n&#x27;</span>,situation)</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;Selecting needed variables ...&#x27;</span>)</span><br><span class="line">    first_wave = get_wave_data(data02to05,<span class="number">2002</span>)</span><br><span class="line">    second_wave = get_wave_data(data05to08,<span class="number">2005</span>)</span><br><span class="line">    third_wave = get_wave_data(data08to11,<span class="number">2008</span>)</span><br><span class="line">    fourth_wave = get_wave_data(data11to14,<span class="number">2011</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;Filling missing values ...&#x27;</span>)</span><br><span class="line">    first_wave_new = replace_abnormal_and_fill_nan(first_wave,<span class="number">2002</span>)</span><br><span class="line">    second_wave_new = replace_abnormal_and_fill_nan(second_wave,<span class="number">2005</span>)</span><br><span class="line">    third_wave_new = replace_abnormal_and_fill_nan(third_wave,<span class="number">2008</span>)</span><br><span class="line">    fourth_wave_new = replace_abnormal_and_fill_nan(fourth_wave,<span class="number">2011</span>)</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;Before drop age&lt;60 : &#x27;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;Wave 1: &#x27;</span>,<span class="built_in">len</span>(first_wave_new))</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;Wave 2: &#x27;</span>,<span class="built_in">len</span>(second_wave_new))</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;Wave 3: &#x27;</span>,<span class="built_in">len</span>(third_wave_new))</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;Wave 4: &#x27;</span>,<span class="built_in">len</span>(fourth_wave_new))</span><br><span class="line">    first_wave_new = first_wave_new[first_wave_new.trueage&gt;=<span class="number">60</span>]</span><br><span class="line">    second_wave_new = second_wave_new[second_wave_new.trueage&gt;=<span class="number">60</span>]</span><br><span class="line">    third_wave_new = third_wave_new[third_wave_new.trueage&gt;=<span class="number">60</span>]</span><br><span class="line">    fourth_wave_new = fourth_wave_new[fourth_wave_new.trueage&gt;=<span class="number">60</span>]</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;After drop age&lt;60 : &#x27;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;Wave 1: &#x27;</span>,<span class="built_in">len</span>(first_wave_new))</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;Wave 2: &#x27;</span>,<span class="built_in">len</span>(second_wave_new))</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;Wave 3: &#x27;</span>,<span class="built_in">len</span>(third_wave_new))</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;Wave 4: &#x27;</span>,<span class="built_in">len</span>(fourth_wave_new))</span><br><span class="line">    <span class="keyword">return</span> first_wave_new,second_wave_new,third_wave_new,fourth_wave_new</span><br></pre></td></tr></table></figure><p>第二部分获得CI score，depression score，ADL score三项的分数<br>先定位到CI score，depression score，ADL score三项的变量</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## CI score</span></span><br><span class="line">    new_df = df.copy()</span><br><span class="line">    current_questions = [<span class="string">&#x27;c11&#x27;</span>,<span class="string">&#x27;c12&#x27;</span>,<span class="string">&#x27;c13&#x27;</span>,<span class="string">&#x27;c14&#x27;</span>,<span class="string">&#x27;c15&#x27;</span>,<span class="string">&#x27;c16&#x27;</span>,<span class="string">&#x27;c21a&#x27;</span>,<span class="string">&#x27;c21b&#x27;</span>,<span class="string">&#x27;c21c&#x27;</span>,<span class="string">&#x27;c31a&#x27;</span>,<span class="string">&#x27;c31b&#x27;</span>,<span class="string">&#x27;c31c&#x27;</span>,<span class="string">&#x27;c31d&#x27;</span>,<span class="string">&#x27;c31e&#x27;</span>,<span class="string">&#x27;c32&#x27;</span>,<span class="string">&#x27;c41a&#x27;</span>,<span class="string">&#x27;c41b&#x27;</span>,<span class="string">&#x27;c41c&#x27;</span>,<span class="string">&#x27;c51a&#x27;</span>,<span class="string">&#x27;c51b&#x27;</span>,<span class="string">&#x27;c52&#x27;</span>,<span class="string">&#x27;c53a&#x27;</span>,<span class="string">&#x27;c53b&#x27;</span>,<span class="string">&#x27;c53c&#x27;</span>]</span><br><span class="line">    year_index = <span class="string">&#x27;_&#x27;</span>+<span class="built_in">str</span>(start_year+<span class="number">3</span>)[-<span class="number">1</span>] <span class="keyword">if</span> start_year + <span class="number">3</span> &lt; <span class="number">2010</span> <span class="keyword">else</span> <span class="string">&#x27;_&#x27;</span>+<span class="built_in">str</span>(start_year+<span class="number">3</span>)[-<span class="number">2</span>:]</span><br><span class="line">    three_year_questions = <span class="built_in">list</span>(<span class="built_in">map</span>(<span class="keyword">lambda</span> x:x+year_index,[<span class="string">&#x27;c11&#x27;</span>,<span class="string">&#x27;c12&#x27;</span>,<span class="string">&#x27;c13&#x27;</span>,<span class="string">&#x27;c14&#x27;</span>,<span class="string">&#x27;c15&#x27;</span>,<span class="string">&#x27;c16&#x27;</span>,<span class="string">&#x27;c21a&#x27;</span>,<span class="string">&#x27;c21b&#x27;</span>,<span class="string">&#x27;c21c&#x27;</span>,<span class="string">&#x27;c31a&#x27;</span>,<span class="string">&#x27;c31b&#x27;</span>,<span class="string">&#x27;c31c&#x27;</span>,<span class="string">&#x27;c31d&#x27;</span>,<span class="string">&#x27;c31e&#x27;</span>,<span class="string">&#x27;c32&#x27;</span>,<span class="string">&#x27;c41a&#x27;</span>,<span class="string">&#x27;c41b&#x27;</span>,<span class="string">&#x27;c41c&#x27;</span>,<span class="string">&#x27;c51a&#x27;</span>,<span class="string">&#x27;c51b&#x27;</span>,<span class="string">&#x27;c52&#x27;</span>,<span class="string">&#x27;c53a&#x27;</span>,<span class="string">&#x27;c53b&#x27;</span>,<span class="string">&#x27;c53c&#x27;</span>]))</span><br><span class="line">    questions = current_questions + three_year_questions</span><br><span class="line"><span class="comment">#     for column in questions:</span></span><br><span class="line"><span class="comment">#         new_df[column] = pd.to_numeric(new_df[column],errors = &#x27;coerce&#x27;)</span></span><br></pre></td></tr></table></figure><p><a href="https://zhuanlan.zhihu.com/p/340770847">apply()方法</a>，apply()方法中的函数是calculate_CI_score，该函数还是可计算当年统计的CI分数和三年后统计的CI分数，该函数如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">calculate_CI_score</span>(<span class="params">x,periods = <span class="string">&#x27;current&#x27;</span>,start_year = <span class="literal">None</span></span>):</span><br><span class="line">    <span class="keyword">if</span> periods == <span class="string">&#x27;current&#x27;</span>:</span><br><span class="line">        questions = [<span class="string">&#x27;c11&#x27;</span>,<span class="string">&#x27;c12&#x27;</span>,<span class="string">&#x27;c13&#x27;</span>,<span class="string">&#x27;c14&#x27;</span>,<span class="string">&#x27;c15&#x27;</span>,<span class="string">&#x27;c16&#x27;</span>,<span class="string">&#x27;c21a&#x27;</span>,<span class="string">&#x27;c21b&#x27;</span>,<span class="string">&#x27;c21c&#x27;</span>,<span class="string">&#x27;c31a&#x27;</span>,<span class="string">&#x27;c31b&#x27;</span>,<span class="string">&#x27;c31c&#x27;</span>,<span class="string">&#x27;c31d&#x27;</span>,<span class="string">&#x27;c31e&#x27;</span>,<span class="string">&#x27;c32&#x27;</span>,<span class="string">&#x27;c41a&#x27;</span>,<span class="string">&#x27;c41b&#x27;</span>,<span class="string">&#x27;c41c&#x27;</span>,<span class="string">&#x27;c51a&#x27;</span>,<span class="string">&#x27;c51b&#x27;</span>,<span class="string">&#x27;c52&#x27;</span>,<span class="string">&#x27;c53a&#x27;</span>,<span class="string">&#x27;c53b&#x27;</span>,<span class="string">&#x27;c53c&#x27;</span>]</span><br><span class="line">    <span class="keyword">elif</span> periods == <span class="string">&#x27;three_years_later&#x27;</span>:</span><br><span class="line">        year_index = <span class="string">&#x27;_&#x27;</span>+<span class="built_in">str</span>(start_year+<span class="number">3</span>)[-<span class="number">1</span>] <span class="keyword">if</span> start_year + <span class="number">3</span> &lt; <span class="number">2010</span> <span class="keyword">else</span> <span class="string">&#x27;_&#x27;</span>+<span class="built_in">str</span>(start_year+<span class="number">3</span>)[-<span class="number">2</span>:]</span><br><span class="line">        questions = <span class="built_in">list</span>(<span class="built_in">map</span>(<span class="keyword">lambda</span> x:x+year_index,[<span class="string">&#x27;c11&#x27;</span>,<span class="string">&#x27;c12&#x27;</span>,<span class="string">&#x27;c13&#x27;</span>,<span class="string">&#x27;c14&#x27;</span>,<span class="string">&#x27;c15&#x27;</span>,<span class="string">&#x27;c16&#x27;</span>,<span class="string">&#x27;c21a&#x27;</span>,<span class="string">&#x27;c21b&#x27;</span>,<span class="string">&#x27;c21c&#x27;</span>,<span class="string">&#x27;c31a&#x27;</span>,<span class="string">&#x27;c31b&#x27;</span>,<span class="string">&#x27;c31c&#x27;</span>,<span class="string">&#x27;c31d&#x27;</span>,<span class="string">&#x27;c31e&#x27;</span>,<span class="string">&#x27;c32&#x27;</span>,<span class="string">&#x27;c41a&#x27;</span>,<span class="string">&#x27;c41b&#x27;</span>,<span class="string">&#x27;c41c&#x27;</span>,<span class="string">&#x27;c51a&#x27;</span>,<span class="string">&#x27;c51b&#x27;</span>,<span class="string">&#x27;c52&#x27;</span>,<span class="string">&#x27;c53a&#x27;</span>,<span class="string">&#x27;c53b&#x27;</span>,<span class="string">&#x27;c53c&#x27;</span>]))</span><br><span class="line">    CI_score = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> question <span class="keyword">in</span> questions:</span><br><span class="line">        <span class="keyword">if</span> question[<span class="number">0</span>:<span class="number">3</span>] != <span class="string">&#x27;c16&#x27;</span>: <span class="comment">#如果不是数食物的题</span></span><br><span class="line">            <span class="keyword">if</span> x[question] == <span class="number">1</span>:CI_score += <span class="number">1</span></span><br><span class="line">        <span class="keyword">else</span>: <span class="comment">#如果是数食物的题</span></span><br><span class="line">            food_score = x[question] <span class="keyword">if</span> x[question]&lt;=<span class="number">7</span> <span class="keyword">else</span> <span class="number">7</span></span><br><span class="line">            CI_score += food_score</span><br><span class="line">    <span class="keyword">return</span> CI_score</span><br></pre></td></tr></table></figure><p>具体统计的CI分数和三年后统计的CI分数</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">new_df[<span class="string">&#x27;current_CI_score&#x27;</span>] = new_df.apply(<span class="keyword">lambda</span> x:calculate_CI_score(x),axis = <span class="number">1</span>)</span><br><span class="line">    new_df[<span class="string">&#x27;later_CI_score&#x27;</span>] = new_df.apply(<span class="keyword">lambda</span> x:calculate_CI_score(x,periods = <span class="string">&#x27;three_years_later&#x27;</span>,start_year = start_year),axis = <span class="number">1</span>)</span><br></pre></td></tr></table></figure><p>统计完成后新增了分数列，删除相关变量列，凡是会对原数组作出修改并返回一个新数组的，往往都有一个 inplace可选参数。如果手动设定为True（默认为False），那么原数组直接就被替换。也就是说，采用inplace=True之后，原数组名（如2和3情况所示）对应的内存值直接改变；<br>（1）drop函数的使用：删除行、删除列</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span> frame.drop([<span class="string">&#x27;a&#x27;</span>])</span><br><span class="line"><span class="built_in">print</span> frame.drop([<span class="string">&#x27;Ohio&#x27;</span>], axis = <span class="number">1</span>)</span><br></pre></td></tr></table></figure><p>本文是预测认知障碍，认知障碍被定义为 MMSE 评分低于 18，所以使用函数判断是否有障碍</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">get_CI_label</span>(<span class="params">x,periods</span>):</span><br><span class="line">    <span class="keyword">if</span> periods == <span class="string">&#x27;current&#x27;</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span> <span class="keyword">if</span> x.current_CI_score&gt;= <span class="number">18</span> <span class="keyword">else</span> <span class="number">1</span></span><br><span class="line">    <span class="keyword">if</span> periods == <span class="string">&#x27;three_years_later&#x27;</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span> <span class="keyword">if</span> x.later_CI_score&gt;= <span class="number">18</span> <span class="keyword">else</span> <span class="number">1</span></span><br></pre></td></tr></table></figure><p>一下代码中清理行变量，人数的关键是<code>new_df.dropna(subset = ['depression_score','depression_score_later'],axis = 0,inplace = True)</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;Before drop Depression missing : &#x27;</span>,<span class="built_in">len</span>(new_df))</span><br><span class="line">new_df.drop(questions,axis = <span class="number">1</span>,inplace = <span class="literal">True</span>)</span><br><span class="line">new_df.dropna(subset = [<span class="string">&#x27;depression_score&#x27;</span>,<span class="string">&#x27;depression_score_later&#x27;</span>],axis = <span class="number">0</span>,inplace = <span class="literal">True</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;After drop Depression missing : &#x27;</span>,<span class="built_in">len</span>(new_df))</span><br></pre></td></tr></table></figure><p>计算只留下所有问题都回答了的样本的抑郁得分，其余的depression_score以nan填充，再用<code>new_df.dropna(subset = ['depression_score','depression_score_later'],axis = 0,inplace = True)</code>把nan的人数去除掉<br>变量处理语句</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 性别改为0女，1男</span></span><br><span class="line">df[<span class="string">&#x27;a1&#x27;</span>] = df[<span class="string">&#x27;a1&#x27;</span>].apply(<span class="keyword">lambda</span> x:<span class="number">0</span> <span class="keyword">if</span> x==<span class="number">2</span> <span class="keyword">else</span> <span class="number">1</span>)</span><br></pre></td></tr></table></figure><p>根据a1的单元格数值x修改a1为0女，1男可能是作者习惯吧，然后用<code>def process_personal_variant_variable(df,start_year)</code>也是继续修改赋值<br>总体改变问卷变量的标识使其更容易理解</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">get_training_df</span>(<span class="params">df1,df2,df3,df4</span>):</span><br><span class="line">    drop_list = [<span class="string">&#x27;d72&#x27;</span>,<span class="string">&#x27;d75&#x27;</span>,<span class="string">&#x27;d82&#x27;</span>,<span class="string">&#x27;d86&#x27;</span>,<span class="string">&#x27;d92&#x27;</span>] <span class="comment"># 用不到的变量</span></span><br><span class="line">    rename_dict_base = &#123;<span class="string">&#x27;a1&#x27;</span>:<span class="string">&#x27;gender&#x27;</span>,<span class="string">&#x27;a43&#x27;</span>:<span class="string">&#x27;residence&#x27;</span>,<span class="string">&#x27;a51&#x27;</span>:<span class="string">&#x27;co-habitation&#x27;</span>,<span class="string">&#x27;d71&#x27;</span>:<span class="string">&#x27;smoke&#x27;</span>,<span class="string">&#x27;d81&#x27;</span>:<span class="string">&#x27;alcohol&#x27;</span>,<span class="string">&#x27;d91&#x27;</span>:<span class="string">&#x27;exercise&#x27;</span>,<span class="string">&#x27;d31&#x27;</span>:<span class="string">&#x27;eat_fruits&#x27;</span>,<span class="string">&#x27;d32&#x27;</span>:<span class="string">&#x27;eat_vegs&#x27;</span>,<span class="string">&#x27;d11b&#x27;</span>:<span class="string">&#x27;outdoor_activity&#x27;</span>,<span class="string">&#x27;d11c&#x27;</span>:<span class="string">&#x27;plant_flower_bird&#x27;</span>,<span class="string">&#x27;d11d&#x27;</span>:<span class="string">&#x27;read_news_books&#x27;</span>,</span><br><span class="line">                          <span class="string">&#x27;d11e&#x27;</span>:<span class="string">&#x27;raise_domestic_animals&#x27;</span>,<span class="string">&#x27;d11f&#x27;</span>:<span class="string">&#x27;majong_or_cards&#x27;</span>,<span class="string">&#x27;d11g&#x27;</span>:<span class="string">&#x27;tv_or_radio&#x27;</span>,<span class="string">&#x27;d11h&#x27;</span>:<span class="string">&#x27;social_activity&#x27;</span>,<span class="string">&#x27;d12&#x27;</span>:<span class="string">&#x27;tour_times&#x27;</span>,</span><br><span class="line">                          <span class="string">&#x27;g15a1&#x27;</span>:<span class="string">&#x27;hypertension&#x27;</span>,<span class="string">&#x27;g15b1&#x27;</span>:<span class="string">&#x27;diabetes&#x27;</span>,<span class="string">&#x27;g15c1&#x27;</span>:<span class="string">&#x27;heart_disease&#x27;</span>,<span class="string">&#x27;g15d1&#x27;</span>:<span class="string">&#x27;stoke_CVD&#x27;</span>,<span class="string">&#x27;g15e1&#x27;</span>:<span class="string">&#x27;trachea_or_lung&#x27;</span>,</span><br><span class="line">                          <span class="string">&#x27;g15f1&#x27;</span>:<span class="string">&#x27;tuberculosis&#x27;</span>,<span class="string">&#x27;g15g1&#x27;</span>:<span class="string">&#x27;cataracts&#x27;</span>,<span class="string">&#x27;g15h1&#x27;</span>:<span class="string">&#x27;glaucoma&#x27;</span>,<span class="string">&#x27;g15i1&#x27;</span>:<span class="string">&#x27;cancer&#x27;</span>,<span class="string">&#x27;g15j1&#x27;</span>:<span class="string">&#x27;prostate&#x27;</span>,<span class="string">&#x27;g15k1&#x27;</span>:<span class="string">&#x27;stomach_ulcer&#x27;</span>,</span><br><span class="line">                          <span class="string">&#x27;g15l1&#x27;</span>:<span class="string">&#x27;Parkinson&#x27;</span>,<span class="string">&#x27;g15m1&#x27;</span>:<span class="string">&#x27;bedsore&#x27;</span>,<span class="string">&#x27;g15n1&#x27;</span>:<span class="string">&#x27;arthritis&#x27;</span>,<span class="string">&#x27;g15o1&#x27;</span>:<span class="string">&#x27;dementia&#x27;</span>&#125; <span class="comment"># 把问卷题目代码改为变量名</span></span><br><span class="line">    later_year = [<span class="number">2005</span>,<span class="number">2008</span>,<span class="number">2011</span>,<span class="number">2014</span>]</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span> df,year <span class="keyword">in</span> <span class="built_in">zip</span>([df1,df2,df3,df4],later_year):</span><br><span class="line">        year_index = <span class="string">&#x27;_&#x27;</span>+<span class="built_in">str</span>(year)[-<span class="number">1</span>] <span class="keyword">if</span> year&lt;<span class="number">2011</span> <span class="keyword">else</span> <span class="string">&#x27;_&#x27;</span>+<span class="built_in">str</span>(year)[-<span class="number">2</span>:]</span><br><span class="line">        drop_list_later = <span class="built_in">list</span>(<span class="built_in">map</span>(<span class="keyword">lambda</span> x:x+year_index,drop_list))</span><br><span class="line">        rename_dict = rename_dict_base.copy()</span><br><span class="line">        <span class="keyword">for</span> key <span class="keyword">in</span> rename_dict_base.keys():</span><br><span class="line">            later_key = key+year_index</span><br><span class="line">            rename_dict[later_key] = rename_dict[key]+<span class="string">&#x27;_3years_later&#x27;</span></span><br><span class="line"></span><br><span class="line">        df.drop(drop_list+drop_list_later,axis = <span class="number">1</span>,inplace = <span class="literal">True</span>)</span><br><span class="line">        df.rename(columns = rename_dict,inplace = <span class="literal">True</span>)</span><br><span class="line">        </span><br><span class="line">        ind = -<span class="number">2</span> <span class="keyword">if</span> year &lt; <span class="number">2011</span> <span class="keyword">else</span> -<span class="number">3</span></span><br><span class="line">        <span class="keyword">for</span> col <span class="keyword">in</span> df.columns:</span><br><span class="line">            <span class="keyword">if</span> col[ind:] == year_index:</span><br><span class="line">                df.rename(columns = &#123;col:col[:ind]+<span class="string">&#x27;_3years_later&#x27;</span>&#125;,inplace = <span class="literal">True</span>)</span><br><span class="line">    <span class="keyword">return</span> pd.concat([df1,df2,df3,df4],axis = <span class="number">0</span>)</span><br></pre></td></tr></table></figure><p>构建CI分数变化值，如遇到数值型变量则先标准化，<a href="https://blog.csdn.net/iqdutao/article/details/107464701">特征工程中的样本不均衡处理方法是本代码中的重点</a></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">get_total_df</span>(<span class="params">wave1,wave2,wave3,wave4</span>):</span><br><span class="line">    df1 = wave1.copy()</span><br><span class="line">    df2 = wave2.copy()</span><br><span class="line">    df3 = wave3.copy()</span><br><span class="line">    df4 = wave4.copy()</span><br><span class="line"></span><br><span class="line">    total_df = get_training_df(df1,df2,df3,df4)</span><br><span class="line"></span><br><span class="line">    <span class="comment">#### 补处理</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 去掉得痴呆症的老人，痴呆会对CI有影响</span></span><br><span class="line">    total_df = total_df[total_df.dementia == <span class="number">0</span>]</span><br><span class="line">    total_df = total_df[total_df.dementia_3years_later == <span class="number">0</span>]</span><br><span class="line">    <span class="keyword">del</span> total_df[<span class="string">&#x27;dementia&#x27;</span>]</span><br><span class="line">    <span class="keyword">del</span> total_df[<span class="string">&#x27;dementia_3years_later&#x27;</span>]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 标准化数值型变量</span></span><br><span class="line">    scaler1,scaler2,scaler3,scaler4 = StandardScaler(),StandardScaler(),StandardScaler(),StandardScaler()</span><br><span class="line">    total_df[<span class="string">&#x27;depression_score&#x27;</span>] = scaler1.fit_transform(np.array(total_df[<span class="string">&#x27;depression_score&#x27;</span>]).reshape(-<span class="number">1</span>,<span class="number">1</span>))</span><br><span class="line">    total_df[<span class="string">&#x27;depression_score_later&#x27;</span>] = scaler2.fit_transform(np.array(total_df[<span class="string">&#x27;depression_score_later&#x27;</span>]).reshape(-<span class="number">1</span>,<span class="number">1</span>))</span><br><span class="line">    total_df[<span class="string">&#x27;tour_times&#x27;</span>] = scaler3.fit_transform(np.array(total_df[<span class="string">&#x27;tour_times&#x27;</span>]).reshape(-<span class="number">1</span>,<span class="number">1</span>))</span><br><span class="line">    total_df[<span class="string">&#x27;tour_times_3years_later&#x27;</span>] = scaler4.fit_transform(np.array(total_df[<span class="string">&#x27;tour_times_3years_later&#x27;</span>]).reshape(-<span class="number">1</span>,<span class="number">1</span>))</span><br><span class="line"></span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 构建变量：CI分数变化值</span></span><br><span class="line">    total_df[<span class="string">&#x27;CI_diff&#x27;</span>] = total_df[<span class="string">&#x27;later_CI_score&#x27;</span>] - total_df[<span class="string">&#x27;current_CI_score&#x27;</span>]</span><br><span class="line">    <span class="keyword">return</span> total_df</span><br></pre></td></tr></table></figure><p>以下代码用于统计性别属性中，认知障碍是否有认知障碍的人数和占比，<a href="https://zhuanlan.zhihu.com/p/101284491">Groupby用法</a>,读取第二列的值<code>data1 = data.iloc[:, 1]</code><br>对某个特征<code>var</code>的总体CI进行分类</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">get_categorical_describe</span>(<span class="params">total_df,var</span>):</span><br><span class="line">    grouped = total_df.groupby([<span class="string">&#x27;later_CI&#x27;</span>,var]).count().iloc[:,<span class="number">1</span>]</span><br><span class="line">    not_CI = grouped[<span class="built_in">list</span>(<span class="built_in">map</span>(<span class="keyword">lambda</span> x:<span class="literal">True</span> <span class="keyword">if</span> x[<span class="number">0</span>]==<span class="number">0</span> <span class="keyword">else</span> <span class="literal">False</span>,<span class="built_in">list</span>(grouped.index)))]</span><br><span class="line">    CI = grouped[<span class="built_in">list</span>(<span class="built_in">map</span>(<span class="keyword">lambda</span> x:<span class="literal">True</span> <span class="keyword">if</span> x[<span class="number">0</span>]==<span class="number">1</span> <span class="keyword">else</span> <span class="literal">False</span>,<span class="built_in">list</span>(grouped.index)))]</span><br><span class="line">    res_notCI = [<span class="number">0</span>]*<span class="built_in">len</span>(total_df[var].unique())</span><br><span class="line">    res_CI = [<span class="number">0</span>]*<span class="built_in">len</span>(total_df[var].unique())</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(not_CI)):</span><br><span class="line">        res_notCI[i] = <span class="built_in">str</span>(not_CI.iloc[i])+ <span class="string">&#x27;(&#x27;</span> + <span class="built_in">str</span>(<span class="string">&#x27;%.2f&#x27;</span> %(not_CI.iloc[i]/(not_CI.iloc[i]+CI.iloc[i])*<span class="number">100</span>)) +<span class="string">&#x27;)&#x27;</span></span><br><span class="line">        res_CI[i] = <span class="built_in">str</span>(CI.iloc[i]) + <span class="string">&#x27;(&#x27;</span> + <span class="built_in">str</span>(<span class="string">&#x27;%.2f&#x27;</span> %(CI.iloc[i]/(not_CI.iloc[i]+CI.iloc[i])*<span class="number">100</span>)) + <span class="string">&#x27;)&#x27;</span></span><br><span class="line">    df = pd.concat([pd.DataFrame(res_notCI),pd.DataFrame(res_CI)],axis = <span class="number">1</span>)</span><br><span class="line">    df.columns = [<span class="string">&#x27;not_CI&#x27;</span>,<span class="string">&#x27;CI&#x27;</span>]</span><br><span class="line">    <span class="keyword">return</span> df</span><br></pre></td></tr></table></figure><p>按vae变量算later_CI的Mean(SD)值,重点在于理解<code>mean_ = total_df.groupby('later_CI').mean()[var]</code><br>在期刊论文中表示标准差时，请写成“mean (SD)”也就是说输出的第一个变量是mean，第二个变量是标准差SD</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">get_numerical_describe</span>(<span class="params">total_df,var</span>):</span><br><span class="line">    mean_ = total_df.groupby(<span class="string">&#x27;later_CI&#x27;</span>).mean()[var]</span><br><span class="line">    std_ = total_df.groupby(<span class="string">&#x27;later_CI&#x27;</span>).std()[var]</span><br><span class="line">    res = [<span class="number">0</span>]*<span class="built_in">len</span>(mean_)</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(mean_)):</span><br><span class="line">        res[i] = <span class="built_in">str</span>(<span class="string">&#x27;%.4f&#x27;</span> %mean_[i]) + <span class="string">&#x27;(&#x27;</span> + <span class="built_in">str</span>(<span class="string">&#x27;%.4f&#x27;</span> %std_[i]) + <span class="string">&#x27;)&#x27;</span></span><br><span class="line">    <span class="keyword">return</span> pd.DataFrame(&#123;<span class="string">&#x27;not_CI&#x27;</span>:res[<span class="number">0</span>],<span class="string">&#x27;CI&#x27;</span>:res[<span class="number">1</span>]&#125;,index = [<span class="string">&#x27;Mean(SD)&#x27;</span>])</span><br></pre></td></tr></table></figure><p>默认情况下，pandas 是不超出屏幕的显示范围的，如果表的行数很多，它会截断中间的行只显示一部分。我们可以通过设置display.max_rows来控制显示的最大行数，比如我想设置显示200行。<code>pd.set_option('display.max_rows', 200)</code><br>然后统计统计各个变量的函数</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">get_var_describe_test</span>(<span class="params">df,var</span>):</span><br><span class="line">    population = <span class="built_in">list</span>(df.groupby(var).count().iloc[:,<span class="number">1</span>].sort_index())</span><br><span class="line">    population_rate = <span class="built_in">list</span>(<span class="built_in">map</span>(<span class="keyword">lambda</span> x:<span class="built_in">str</span>(x)+<span class="string">&#x27;(&#x27;</span>+<span class="built_in">str</span>(<span class="string">&#x27;&#123;:.2f&#125;&#x27;</span>.<span class="built_in">format</span>(x/<span class="built_in">sum</span>(population)*<span class="number">100</span>))+<span class="string">&#x27;%&#x27;</span>+<span class="string">&#x27;)&#x27;</span>,population))</span><br><span class="line">    value_index = <span class="built_in">list</span>(df.groupby(var).count().iloc[:,<span class="number">1</span>].sort_index().index)</span><br><span class="line"></span><br><span class="line">    current_CI_count = df.groupby([var,<span class="string">&#x27;current_CI&#x27;</span>]).count().iloc[:,<span class="number">1</span>]</span><br><span class="line">    CI_now_index = <span class="built_in">list</span>(<span class="built_in">map</span>(<span class="keyword">lambda</span> x:<span class="literal">True</span> <span class="keyword">if</span> x[<span class="number">1</span>] == <span class="number">1</span> <span class="keyword">else</span> <span class="literal">False</span>,current_CI_count.index))</span><br><span class="line">    not_CI_now_index = <span class="built_in">list</span>(<span class="built_in">map</span>(<span class="keyword">lambda</span> x:<span class="literal">True</span> <span class="keyword">if</span> x[<span class="number">1</span>] == <span class="number">0</span> <span class="keyword">else</span> <span class="literal">False</span>,current_CI_count.index))</span><br><span class="line">    CI_now_population = <span class="built_in">list</span>(current_CI_count[CI_now_index])</span><br><span class="line">    not_CI_now_population = <span class="built_in">list</span>(current_CI_count[not_CI_now_index])</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span> i,value <span class="keyword">in</span> <span class="built_in">enumerate</span>(not_CI_now_population):</span><br><span class="line">        <span class="keyword">if</span> value/population[i]  == <span class="number">1</span>:<span class="comment"># 如果某组去都没有CI，为了保持列表长度相同，在CI组补0</span></span><br><span class="line">            CI_now_population.insert(i,<span class="number">0</span>)</span><br><span class="line">        not_CI_now_population[i] = <span class="built_in">str</span>(not_CI_now_population[i])+<span class="string">&#x27;(&#x27;</span>+<span class="built_in">str</span>(<span class="string">&#x27;&#123;:.2f&#125;&#x27;</span>.<span class="built_in">format</span>(not_CI_now_population[i]/population[i]*<span class="number">100</span>))+<span class="string">&#x27;%&#x27;</span>+<span class="string">&#x27;)&#x27;</span></span><br><span class="line">    <span class="keyword">for</span> i,value <span class="keyword">in</span> <span class="built_in">enumerate</span>(CI_now_population):</span><br><span class="line">        CI_now_population[i] = <span class="built_in">str</span>(CI_now_population[i])+<span class="string">&#x27;(&#x27;</span>+<span class="built_in">str</span>(<span class="string">&#x27;&#123;:.2f&#125;&#x27;</span>.<span class="built_in">format</span>(CI_now_population[i]/population[i]*<span class="number">100</span>))+<span class="string">&#x27;%&#x27;</span>+<span class="string">&#x27;)&#x27;</span></span><br><span class="line">    </span><br><span class="line"></span><br><span class="line">    later_CI_count = df.groupby([var,<span class="string">&#x27;later_CI&#x27;</span>]).count().iloc[:,<span class="number">1</span>]</span><br><span class="line">    CI_later_index = <span class="built_in">list</span>(<span class="built_in">map</span>(<span class="keyword">lambda</span> x:<span class="literal">True</span> <span class="keyword">if</span> x[<span class="number">1</span>] == <span class="number">1</span> <span class="keyword">else</span> <span class="literal">False</span>,later_CI_count.index))</span><br><span class="line">    not_CI_later_index = <span class="built_in">list</span>(<span class="built_in">map</span>(<span class="keyword">lambda</span> x:<span class="literal">True</span> <span class="keyword">if</span> x[<span class="number">1</span>] == <span class="number">0</span> <span class="keyword">else</span> <span class="literal">False</span>,later_CI_count.index))</span><br><span class="line">    CI_later_population = <span class="built_in">list</span>(later_CI_count[CI_later_index])</span><br><span class="line">    not_CI_later_population = <span class="built_in">list</span>(later_CI_count[not_CI_later_index])</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span> i,value <span class="keyword">in</span> <span class="built_in">enumerate</span>(not_CI_later_population):</span><br><span class="line">        <span class="keyword">if</span> value/population[i]  == <span class="number">1</span>:<span class="comment"># 如果某组去都没有CI，为了保持列表长度相同，在CI组补0</span></span><br><span class="line">            CI_later_population.insert(i,<span class="number">0</span>)</span><br><span class="line">        not_CI_later_population[i] = <span class="built_in">str</span>(not_CI_later_population[i])+<span class="string">&#x27;(&#x27;</span>+<span class="built_in">str</span>(<span class="string">&#x27;&#123;:.2f&#125;&#x27;</span>.<span class="built_in">format</span>(not_CI_later_population[i]/population[i]*<span class="number">100</span>))+<span class="string">&#x27;%&#x27;</span>+<span class="string">&#x27;)&#x27;</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span> i,value <span class="keyword">in</span> <span class="built_in">enumerate</span>(CI_later_population):</span><br><span class="line">        CI_later_population[i] = <span class="built_in">str</span>(CI_later_population[i])+<span class="string">&#x27;(&#x27;</span>+<span class="built_in">str</span>(<span class="string">&#x27;&#123;:.2f&#125;&#x27;</span>.<span class="built_in">format</span>(CI_later_population[i]/population[i]*<span class="number">100</span>))+<span class="string">&#x27;%&#x27;</span>+<span class="string">&#x27;)&#x27;</span></span><br><span class="line">    </span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> pd.DataFrame(&#123;<span class="string">&#x27;value&#x27;</span>:value_index,<span class="string">&#x27;population&#x27;</span>:population_rate,<span class="string">&#x27;CI now&#x27;</span>:CI_now_population,<span class="string">&#x27;not CI now&#x27;</span>:not_CI_now_population,</span><br><span class="line">                          <span class="string">&#x27;CI 3 years later&#x27;</span>:CI_later_population,<span class="string">&#x27;not CI 3 years later&#x27;</span>:not_CI_later_population&#125;)</span><br></pre></td></tr></table></figure><p>在第一部分代码中最后还对各个变量进行了假设检验,python内置values()函数返回一个字典中所有值。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">get_pvalues</span>(<span class="params">total_df</span>):</span><br><span class="line">    var_list = [<span class="string">&#x27;agegroup&#x27;</span>,<span class="string">&#x27;nation_group&#x27;</span>,<span class="string">&#x27;education&#x27;</span>,<span class="string">&#x27;martial_status&#x27;</span>,<span class="string">&#x27;economy_status&#x27;</span>,<span class="string">&#x27;ADL&#x27;</span>]</span><br><span class="line">    rename_dict_base = &#123;<span class="string">&#x27;a1&#x27;</span>:<span class="string">&#x27;gender&#x27;</span>,<span class="string">&#x27;a43&#x27;</span>:<span class="string">&#x27;residence&#x27;</span>,<span class="string">&#x27;a51&#x27;</span>:<span class="string">&#x27;co-habitation&#x27;</span>,<span class="string">&#x27;d71&#x27;</span>:<span class="string">&#x27;smoke&#x27;</span>,<span class="string">&#x27;d81&#x27;</span>:<span class="string">&#x27;alcohol&#x27;</span>,<span class="string">&#x27;d91&#x27;</span>:<span class="string">&#x27;exercise&#x27;</span>,<span class="string">&#x27;d31&#x27;</span>:<span class="string">&#x27;eat_fruits&#x27;</span>,<span class="string">&#x27;d32&#x27;</span>:<span class="string">&#x27;eat_vegs&#x27;</span>,<span class="string">&#x27;d11b&#x27;</span>:<span class="string">&#x27;outdoor_activity&#x27;</span>,<span class="string">&#x27;d11c&#x27;</span>:<span class="string">&#x27;plant_flower_bird&#x27;</span>,<span class="string">&#x27;d11d&#x27;</span>:<span class="string">&#x27;read_news_books&#x27;</span>,</span><br><span class="line">                          <span class="string">&#x27;d11e&#x27;</span>:<span class="string">&#x27;raise_domestic_animals&#x27;</span>,<span class="string">&#x27;d11f&#x27;</span>:<span class="string">&#x27;majong_or_cards&#x27;</span>,<span class="string">&#x27;d11g&#x27;</span>:<span class="string">&#x27;tv_or_radio&#x27;</span>,<span class="string">&#x27;d11h&#x27;</span>:<span class="string">&#x27;social_activity&#x27;</span>,</span><br><span class="line">                          <span class="string">&#x27;g15a1&#x27;</span>:<span class="string">&#x27;hypertension&#x27;</span>,<span class="string">&#x27;g15b1&#x27;</span>:<span class="string">&#x27;diabetes&#x27;</span>,<span class="string">&#x27;g15c1&#x27;</span>:<span class="string">&#x27;heart_disease&#x27;</span>,<span class="string">&#x27;g15d1&#x27;</span>:<span class="string">&#x27;stoke_CVD&#x27;</span>,<span class="string">&#x27;g15e1&#x27;</span>:<span class="string">&#x27;trachea_or_lung&#x27;</span>,</span><br><span class="line">                          <span class="string">&#x27;g15f1&#x27;</span>:<span class="string">&#x27;tuberculosis&#x27;</span>,<span class="string">&#x27;g15g1&#x27;</span>:<span class="string">&#x27;cataracts&#x27;</span>,<span class="string">&#x27;g15h1&#x27;</span>:<span class="string">&#x27;glaucoma&#x27;</span>,<span class="string">&#x27;g15i1&#x27;</span>:<span class="string">&#x27;cancer&#x27;</span>,<span class="string">&#x27;g15j1&#x27;</span>:<span class="string">&#x27;prostate&#x27;</span>,<span class="string">&#x27;g15k1&#x27;</span>:<span class="string">&#x27;stomach_ulcer&#x27;</span>,</span><br><span class="line">                          <span class="string">&#x27;g15l1&#x27;</span>:<span class="string">&#x27;Parkinson&#x27;</span>,<span class="string">&#x27;g15m1&#x27;</span>:<span class="string">&#x27;bedsore&#x27;</span>,<span class="string">&#x27;g15n1&#x27;</span>:<span class="string">&#x27;arthritis&#x27;</span>&#125;</span><br><span class="line">    descrptive_vars = var_list + <span class="built_in">list</span>(rename_dict_base.values())</span><br><span class="line">    numerical_vars = [<span class="string">&#x27;depression_score&#x27;</span>,<span class="string">&#x27;tour_times&#x27;</span>]</span><br><span class="line">    var_name = []</span><br><span class="line">    pvalues = []</span><br><span class="line">    <span class="keyword">for</span> var <span class="keyword">in</span> descrptive_vars:</span><br><span class="line">        kf_data = np.array(total_df.groupby([<span class="string">&#x27;later_CI&#x27;</span>,var]).count().iloc[:,<span class="number">0</span>]).reshape(<span class="number">2</span>,<span class="built_in">len</span>(total_df[var].unique()))</span><br><span class="line">        kf = chi2_contingency(kf_data)</span><br><span class="line">        var_name.append(var)</span><br><span class="line">        pvalues.append(kf[<span class="number">1</span>])</span><br><span class="line">    <span class="keyword">for</span> var <span class="keyword">in</span> numerical_vars:</span><br><span class="line">        a = total_df[total_df.later_CI == <span class="number">0</span>][var]</span><br><span class="line">        b = total_df[total_df.later_CI == <span class="number">1</span>][var]</span><br><span class="line">        t_res = ttest_ind(a, b)</span><br><span class="line">        var_name.append(var)</span><br><span class="line">        pvalues.append(t_res.pvalue)</span><br><span class="line">    df_out = pd.DataFrame(&#123;<span class="string">&#x27;Variable&#x27;</span>:var_name,<span class="string">&#x27;p-values&#x27;</span>:pvalues&#125;)</span><br><span class="line">    <span class="keyword">return</span> df_out</span><br></pre></td></tr></table></figure><p>p值检验，descrptive_vars和numerical_vars的p值算法是不一样的，前者用chi2_contingency卡方检验后者用ttest_ind</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">get_pvalues</span>(<span class="params">total_df</span>):</span><br><span class="line">    var_list = [<span class="string">&#x27;agegroup&#x27;</span>,<span class="string">&#x27;nation_group&#x27;</span>,<span class="string">&#x27;education&#x27;</span>,<span class="string">&#x27;martial_status&#x27;</span>,<span class="string">&#x27;economy_status&#x27;</span>,<span class="string">&#x27;ADL&#x27;</span>]</span><br><span class="line">    rename_dict_base = &#123;<span class="string">&#x27;a1&#x27;</span>:<span class="string">&#x27;gender&#x27;</span>,<span class="string">&#x27;a43&#x27;</span>:<span class="string">&#x27;residence&#x27;</span>,<span class="string">&#x27;a51&#x27;</span>:<span class="string">&#x27;co-habitation&#x27;</span>,<span class="string">&#x27;d71&#x27;</span>:<span class="string">&#x27;smoke&#x27;</span>,<span class="string">&#x27;d81&#x27;</span>:<span class="string">&#x27;alcohol&#x27;</span>,<span class="string">&#x27;d91&#x27;</span>:<span class="string">&#x27;exercise&#x27;</span>,<span class="string">&#x27;d31&#x27;</span>:<span class="string">&#x27;eat_fruits&#x27;</span>,<span class="string">&#x27;d32&#x27;</span>:<span class="string">&#x27;eat_vegs&#x27;</span>,<span class="string">&#x27;d11b&#x27;</span>:<span class="string">&#x27;outdoor_activity&#x27;</span>,<span class="string">&#x27;d11c&#x27;</span>:<span class="string">&#x27;plant_flower_bird&#x27;</span>,<span class="string">&#x27;d11d&#x27;</span>:<span class="string">&#x27;read_news_books&#x27;</span>,</span><br><span class="line">                          <span class="string">&#x27;d11e&#x27;</span>:<span class="string">&#x27;raise_domestic_animals&#x27;</span>,<span class="string">&#x27;d11f&#x27;</span>:<span class="string">&#x27;majong_or_cards&#x27;</span>,<span class="string">&#x27;d11g&#x27;</span>:<span class="string">&#x27;tv_or_radio&#x27;</span>,<span class="string">&#x27;d11h&#x27;</span>:<span class="string">&#x27;social_activity&#x27;</span>,</span><br><span class="line">                          <span class="string">&#x27;g15a1&#x27;</span>:<span class="string">&#x27;hypertension&#x27;</span>,<span class="string">&#x27;g15b1&#x27;</span>:<span class="string">&#x27;diabetes&#x27;</span>,<span class="string">&#x27;g15c1&#x27;</span>:<span class="string">&#x27;heart_disease&#x27;</span>,<span class="string">&#x27;g15d1&#x27;</span>:<span class="string">&#x27;stoke_CVD&#x27;</span>,<span class="string">&#x27;g15e1&#x27;</span>:<span class="string">&#x27;trachea_or_lung&#x27;</span>,</span><br><span class="line">                          <span class="string">&#x27;g15f1&#x27;</span>:<span class="string">&#x27;tuberculosis&#x27;</span>,<span class="string">&#x27;g15g1&#x27;</span>:<span class="string">&#x27;cataracts&#x27;</span>,<span class="string">&#x27;g15h1&#x27;</span>:<span class="string">&#x27;glaucoma&#x27;</span>,<span class="string">&#x27;g15i1&#x27;</span>:<span class="string">&#x27;cancer&#x27;</span>,<span class="string">&#x27;g15j1&#x27;</span>:<span class="string">&#x27;prostate&#x27;</span>,<span class="string">&#x27;g15k1&#x27;</span>:<span class="string">&#x27;stomach_ulcer&#x27;</span>,</span><br><span class="line">                          <span class="string">&#x27;g15l1&#x27;</span>:<span class="string">&#x27;Parkinson&#x27;</span>,<span class="string">&#x27;g15m1&#x27;</span>:<span class="string">&#x27;bedsore&#x27;</span>,<span class="string">&#x27;g15n1&#x27;</span>:<span class="string">&#x27;arthritis&#x27;</span>&#125;</span><br><span class="line">    descrptive_vars = var_list + <span class="built_in">list</span>(rename_dict_base.values())</span><br><span class="line">    numerical_vars = [<span class="string">&#x27;depression_score&#x27;</span>,<span class="string">&#x27;tour_times&#x27;</span>]</span><br><span class="line">    var_name = []</span><br><span class="line">    pvalues = []</span><br><span class="line">    <span class="keyword">for</span> var <span class="keyword">in</span> descrptive_vars:</span><br><span class="line">        kf_data = np.array(total_df.groupby([<span class="string">&#x27;later_CI&#x27;</span>,var]).count().iloc[:,<span class="number">0</span>]).reshape(<span class="number">2</span>,<span class="built_in">len</span>(total_df[var].unique()))</span><br><span class="line">        kf = chi2_contingency(kf_data)</span><br><span class="line">        var_name.append(var)</span><br><span class="line">        pvalues.append(kf[<span class="number">1</span>])</span><br><span class="line">    <span class="keyword">for</span> var <span class="keyword">in</span> numerical_vars:</span><br><span class="line">        a = total_df[total_df.later_CI == <span class="number">0</span>][var]</span><br><span class="line">        b = total_df[total_df.later_CI == <span class="number">1</span>][var]</span><br><span class="line">        t_res = ttest_ind(a, b)</span><br><span class="line">        var_name.append(var)</span><br><span class="line">        pvalues.append(t_res.pvalue)</span><br><span class="line">    df_out = pd.DataFrame(&#123;<span class="string">&#x27;Variable&#x27;</span>:var_name,<span class="string">&#x27;p-values&#x27;</span>:pvalues&#125;)</span><br><span class="line">    <span class="keyword">return</span> df_out</span><br></pre></td></tr></table></figure><p>第一部分结束<br>第二部分：<br>先沿用第一部分合并数据成总的df，然后计算三年变量和当年变量的diff差异如以下函数所示：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">get_current_diff_variable_list</span>(<span class="params">total_df</span>):</span><br><span class="line">    current_variables = []</span><br><span class="line">    later_variables = []</span><br><span class="line">    <span class="keyword">for</span> col <span class="keyword">in</span> total_df.columns:</span><br><span class="line">        <span class="keyword">if</span> col[-<span class="number">12</span>:] == <span class="string">&#x27;3years_later&#x27;</span>:</span><br><span class="line">            <span class="comment">#三年后的变量</span></span><br><span class="line">            later_variables.append(col)</span><br><span class="line">        <span class="keyword">if</span> col[-<span class="number">12</span>:] != <span class="string">&#x27;3years_later&#x27;</span>:</span><br><span class="line">            <span class="comment">#当前的变量</span></span><br><span class="line">            current_variables.append(col)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> var <span class="keyword">in</span> [<span class="string">&#x27;current_CI_score&#x27;</span>,</span><br><span class="line">                 <span class="string">&#x27;later_CI_score&#x27;</span>,</span><br><span class="line">                 <span class="string">&#x27;current_CI&#x27;</span>,</span><br><span class="line">                 <span class="string">&#x27;later_CI&#x27;</span>,</span><br><span class="line">                 <span class="string">&#x27;depression_score_later&#x27;</span>,</span><br><span class="line">                 <span class="string">&#x27;ADL_later&#x27;</span>,</span><br><span class="line">                 <span class="string">&#x27;CI_diff&#x27;</span></span><br><span class="line">                 ]:</span><br><span class="line">        current_variables.remove(var)</span><br><span class="line"></span><br><span class="line">    later_variables.extend([<span class="string">&#x27;ADL_later&#x27;</span>,<span class="string">&#x27;depression_score_later&#x27;</span>])</span><br><span class="line">    person_basic_variables = [<span class="string">&#x27;gender&#x27;</span>,<span class="string">&#x27;residence&#x27;</span>,<span class="string">&#x27;education&#x27;</span>,<span class="string">&#x27;borned_prov&#x27;</span>,<span class="string">&#x27;nation_group&#x27;</span>]</span><br><span class="line"></span><br><span class="line">    current_variables_without_personal = current_variables.copy()</span><br><span class="line">    <span class="comment">#移除个人信息【初始值】</span></span><br><span class="line">    <span class="keyword">for</span> var <span class="keyword">in</span> person_basic_variables:</span><br><span class="line">        current_variables_without_personal.remove(var)</span><br><span class="line"></span><br><span class="line">    current_variables_without_personal.sort()</span><br><span class="line">    later_variables.sort()</span><br><span class="line">    <span class="comment">#计算差异</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;Creating diff variables based on current variables and 3 years later variables ...&#x27;</span>)</span><br><span class="line">    <span class="keyword">for</span> x,y <span class="keyword">in</span> <span class="built_in">zip</span>(current_variables_without_personal,later_variables):</span><br><span class="line">        total_df[x+<span class="string">&#x27;_diff&#x27;</span>] = total_df[y] - total_df[x]</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;Done!&#x27;</span>)</span><br><span class="line">        </span><br><span class="line">    diff_var = <span class="built_in">list</span>(<span class="built_in">map</span>(<span class="keyword">lambda</span> x:x+<span class="string">&#x27;_diff&#x27;</span>,current_variables_without_personal))</span><br><span class="line">    current_variables.remove(<span class="string">&#x27;dementia&#x27;</span>)</span><br><span class="line">    diff_var.remove(<span class="string">&#x27;dementia_diff&#x27;</span>)</span><br><span class="line">    <span class="keyword">return</span> current_variables,diff_var</span><br></pre></td></tr></table></figure><p>然后调用逻辑回归,这里调用的是model = sm.Logit(y,x.astype(float)).fit()应该是个库与先前教程中的是不同的是有点复杂的以后有做这方面研究的话可以看，这里其实是用了多重线性回归。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">total_df_for_logit = total_df.copy()</span><br><span class="line"><span class="keyword">for</span> col <span class="keyword">in</span> total_df_for_logit.columns:</span><br><span class="line">    total_df_for_logit[col] = pd.to_numeric(total_df_for_logit[col],downcast=<span class="string">&#x27;float&#x27;</span>)</span><br></pre></td></tr></table></figure><p>具体逻辑回归函数</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">logistic_regression</span>(<span class="params">input_df,label_column,categorical_variable_list=[],CI_alpha=<span class="number">0.05</span>,standardized_diff = <span class="literal">False</span></span>):</span><br><span class="line">    df = input_df.copy()</span><br><span class="line">    <span class="keyword">if</span> standardized_diff:</span><br><span class="line">        diff_var = <span class="built_in">list</span>(<span class="built_in">filter</span>(<span class="keyword">lambda</span> x:<span class="literal">True</span> <span class="keyword">if</span> x[-<span class="number">4</span>:] == <span class="string">&#x27;diff&#x27;</span> <span class="keyword">else</span> <span class="literal">False</span>,df.columns))</span><br><span class="line">        <span class="keyword">if</span> diff_var:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&#x27;Standardizing diff variables ...&#x27;</span>)</span><br><span class="line">            <span class="keyword">for</span> var <span class="keyword">in</span> diff_var:</span><br><span class="line">                df[var] = df[var].apply(<span class="keyword">lambda</span> x:x <span class="keyword">if</span> x&lt;= <span class="number">0</span> <span class="keyword">else</span> <span class="number">1</span>)</span><br><span class="line">                df[var] = df[var].apply(<span class="keyword">lambda</span> x:x <span class="keyword">if</span> x&gt;=<span class="number">0</span> <span class="keyword">else</span> -<span class="number">1</span>)</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&#x27;Standardize diff variables done!&#x27;</span>)</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 一起逻辑回归</span></span><br><span class="line">    x_col = [column <span class="keyword">for</span> column <span class="keyword">in</span> df.columns <span class="keyword">if</span> label_column <span class="keyword">not</span> <span class="keyword">in</span> column <span class="keyword">and</span> column <span class="keyword">not</span> <span class="keyword">in</span> categorical_variable_list]</span><br><span class="line">    y_col = [column <span class="keyword">for</span> column <span class="keyword">in</span> df.columns <span class="keyword">if</span> column == label_column]</span><br><span class="line">    <span class="comment"># </span></span><br><span class="line">    <span class="keyword">if</span> <span class="string">&#x27;borned_prov&#x27;</span> <span class="keyword">in</span> x_col:x_col.remove(<span class="string">&#x27;borned_prov&#x27;</span>)</span><br><span class="line">    <span class="keyword">if</span> <span class="string">&#x27;agegroup_3years_later&#x27;</span> <span class="keyword">in</span> x_col:x_col.remove(<span class="string">&#x27;agegroup_3years_later&#x27;</span>)</span><br><span class="line">    <span class="keyword">if</span> <span class="string">&#x27;agegroup_diff&#x27;</span> <span class="keyword">in</span> x_col:x_col.remove(<span class="string">&#x27;agegroup_diff&#x27;</span>)</span><br><span class="line"> </span><br><span class="line">    x = np.array(df[x_col])</span><br><span class="line">    <span class="keyword">if</span> categorical_variable_list:</span><br><span class="line">        onehot_cat_var = pd.get_dummies(df[categorical_variable_list[<span class="number">0</span>]],prefix = categorical_variable_list[<span class="number">0</span>])</span><br><span class="line">        drop_ref_col = <span class="built_in">list</span>(<span class="built_in">filter</span>(<span class="keyword">lambda</span> x:<span class="literal">True</span> <span class="keyword">if</span> x[-<span class="number">2</span>:] == <span class="string">&#x27;_0&#x27;</span> <span class="keyword">or</span> x[-<span class="number">4</span>:] == <span class="string">&#x27;_0.0&#x27;</span> <span class="keyword">else</span> <span class="literal">False</span>,onehot_cat_var.columns))</span><br><span class="line">        onehot_cat_var.drop(drop_ref_col,axis = <span class="number">1</span>,inplace = <span class="literal">True</span>)</span><br><span class="line">        <span class="keyword">for</span> variable <span class="keyword">in</span> categorical_variable_list[<span class="number">1</span>:]:</span><br><span class="line">            tmp = pd.get_dummies(df[variable],prefix = variable)</span><br><span class="line">            drop_ref_col = <span class="built_in">list</span>(<span class="built_in">filter</span>(<span class="keyword">lambda</span> x:<span class="literal">True</span> <span class="keyword">if</span> x[-<span class="number">2</span>:] == <span class="string">&#x27;_0&#x27;</span> <span class="keyword">or</span> x[-<span class="number">4</span>:] == <span class="string">&#x27;_0.0&#x27;</span> <span class="keyword">else</span> <span class="literal">False</span>,tmp.columns))</span><br><span class="line">            tmp.drop(drop_ref_col,axis = <span class="number">1</span>,inplace = <span class="literal">True</span>)</span><br><span class="line">            onehot_cat_var = pd.concat([onehot_cat_var,tmp],axis = <span class="number">1</span>)</span><br><span class="line">        onehot_cat_var_values = np.array(onehot_cat_var)</span><br><span class="line">        x = np.hstack([x,onehot_cat_var_values])</span><br><span class="line">    y = np.array(df[label_column].astype(<span class="built_in">float</span>)).reshape(-<span class="number">1</span>)</span><br><span class="line">    model = sm.Logit(y,x.astype(<span class="built_in">float</span>)).fit()</span><br><span class="line">    para = pd.DataFrame(np.exp(model.conf_int(CI_alpha)),columns = [<span class="string">&#x27;95%lower&#x27;</span>,<span class="string">&#x27;95%upper&#x27;</span>])</span><br><span class="line">    para[<span class="string">&#x27;coef&#x27;</span>] = model.params</span><br><span class="line">    para[<span class="string">&#x27;OddRatio&#x27;</span>] = np.exp(para.coef)</span><br><span class="line">    x_name = x_col.copy()</span><br><span class="line">    <span class="keyword">if</span> categorical_variable_list:</span><br><span class="line">        x_name.extend(onehot_cat_var.columns)</span><br><span class="line">    para[<span class="string">&#x27;Variable&#x27;</span>] = x_name</span><br><span class="line">    para[<span class="string">&#x27;pvalues&#x27;</span>] = model.pvalues</span><br><span class="line"></span><br><span class="line">    var_value_count = []</span><br><span class="line">    <span class="keyword">for</span> vari <span class="keyword">in</span> x_name:</span><br><span class="line">        <span class="keyword">if</span> vari[-<span class="number">1</span>] == <span class="string">&#x27;0&#x27;</span>:</span><br><span class="line">            <span class="keyword">if</span> vari[-<span class="number">4</span>] == <span class="string">&#x27;-&#x27;</span>:</span><br><span class="line">                var_value = <span class="built_in">float</span>(vari[-<span class="number">4</span>:])</span><br><span class="line">                var_name = vari[:-<span class="number">5</span>]</span><br><span class="line">                <span class="built_in">print</span>(vari)</span><br><span class="line">                var_value_count.append(<span class="built_in">len</span>(df[df[var_name]==var_value]))</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                var_value = <span class="built_in">float</span>(vari[-<span class="number">3</span>:])</span><br><span class="line">                var_name = vari[:-<span class="number">4</span>]</span><br><span class="line">                var_value_count.append(<span class="built_in">len</span>(df[df[var_name]==var_value]))</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            var_value_count.append(<span class="built_in">len</span>(df[df[vari]==<span class="number">1</span>]))</span><br><span class="line">    para[<span class="string">&#x27;Num of samples&#x27;</span>] = var_value_count</span><br><span class="line">    para = para[[<span class="string">&#x27;Variable&#x27;</span>,<span class="string">&#x27;Num of samples&#x27;</span>,<span class="string">&#x27;coef&#x27;</span>,<span class="string">&#x27;OddRatio&#x27;</span>,<span class="string">&#x27;95%lower&#x27;</span>,<span class="string">&#x27;95%upper&#x27;</span>,<span class="string">&#x27;pvalues&#x27;</span>]]</span><br><span class="line">    std_x = np.array((df[x_col]-np.mean(df[x_col]))/np.std(df[x_col]))</span><br><span class="line">    <span class="keyword">if</span> categorical_variable_list:</span><br><span class="line">        std_x = np.hstack([std_x,onehot_cat_var_values])</span><br><span class="line">    model2 = sm.Logit(y,std_x.astype(<span class="built_in">float</span>)).fit()</span><br><span class="line">    importance_df = pd.DataFrame(para[<span class="string">&#x27;Variable&#x27;</span>])</span><br><span class="line">    importance_df[<span class="string">&#x27;coef&#x27;</span>] = model2.params</span><br><span class="line">    importance_df.sort_values(by = <span class="string">&#x27;coef&#x27;</span>,ascending=<span class="literal">False</span>,key=np.<span class="built_in">abs</span>,inplace = <span class="literal">True</span>)</span><br><span class="line">    importance_df[<span class="string">&#x27;importance&#x27;</span>] = <span class="built_in">range</span>(<span class="number">1</span>,<span class="built_in">len</span>(importance_df)+<span class="number">1</span>)</span><br><span class="line">    importance_df.drop(<span class="string">&#x27;coef&#x27;</span>,axis=<span class="number">1</span>,inplace=<span class="literal">True</span>)</span><br><span class="line">    importance_df.set_index(<span class="string">&#x27;importance&#x27;</span>,inplace = <span class="literal">True</span>)</span><br><span class="line">    </span><br><span class="line"><span class="comment">#     # 单个变量回归</span></span><br><span class="line"><span class="comment">#     single_para = pd.DataFrame(columns = [&#x27;Variable&#x27;,&#x27;solo_coef&#x27;,&#x27;solo_OddRatio&#x27;,&#x27;solo_95%lower&#x27;,&#x27;solo_95%upper&#x27;,&#x27;solo_pvalues&#x27;])</span></span><br><span class="line"><span class="comment">#     for j in range(x.shape[1]):</span></span><br><span class="line"><span class="comment">#         single_x = x[:,j]</span></span><br><span class="line"><span class="comment">#         variable = x_name[j]</span></span><br><span class="line"><span class="comment">#         single_model = sm.Logit(y,single_x.astype(float)).fit()</span></span><br><span class="line"><span class="comment">#         solo_coef = single_model.params</span></span><br><span class="line"><span class="comment">#         solo_OR = np.exp(single_model.params)</span></span><br><span class="line"><span class="comment">#         solo_lower = np.exp(single_model.conf_int(CI_alpha)[0][0])</span></span><br><span class="line"><span class="comment">#         solo_upper = np.exp(single_model.conf_int(CI_alpha)[0][1])</span></span><br><span class="line"><span class="comment">#         solo_pvalue = single_model.pvalues</span></span><br><span class="line"><span class="comment">#         temp = pd.DataFrame(&#123;&#x27;Variable&#x27;:variable,&#x27;solo_coef&#x27;:solo_coef,&#x27;solo_OddRatio&#x27;:solo_OR,&#x27;solo_95%lower&#x27;:solo_lower,&#x27;solo_95%upper&#x27;:solo_upper,&#x27;solo_pvalues&#x27;:solo_pvalue&#125;)</span></span><br><span class="line"><span class="comment">#         single_para = pd.concat([single_para,temp],axis = 0)</span></span><br><span class="line"><span class="comment">#     para = pd.merge(para,single_para,on = &#x27;Variable&#x27;)  </span></span><br><span class="line">                                </span><br><span class="line">    res = &#123;<span class="string">&#x27;summary&#x27;</span>:model.summary(),</span><br><span class="line">       <span class="string">&#x27;params&#x27;</span>:para,</span><br><span class="line">       <span class="string">&#x27;feature_importance&#x27;</span>:importance_df&#125;</span><br><span class="line">    <span class="keyword">return</span> res</span><br></pre></td></tr></table></figure><p>在上一步逻辑回归中计算了百分之95置信区间此处用在OR()中，OR值是《流行病学》中的重要概念，称作“优势比”（odds ratio），也称“比值比”，反映的是某种暴露与结局的关联强度。<a href="https://zhuanlan.zhihu.com/p/243312136">逻辑回归和OR值</a>,所谓研究“暴露对结局”的影响，这里的“结局”在本例中就指“是否患有糖尿病”，一般可以等同于我们前面说的“因变量Y”。<br>所谓的“优势”可以理解为“暴露比值”！那怎么理解暴露比值呢？<br>在本例中，对于患有糖尿病的对象，暴露比值为：吸烟的比例除以不吸烟的比例，即为：24/16 = 1.50；<br>同样，在不患有糖尿病的人群中，也可以计算一个吸烟的比例除以不吸烟的比例，即为：18/22 = 0.82。<br>把这两个比例相除，就得到了吸烟与糖尿病相关关系的OR值，即OR = 1.50/0.82= 1.83&gt;1,说明是比较相关的也是一个分析相关性的数据，p值可能更多的是分析差异性【重要但本代码中的OR值还要结合逻辑回归代码比较是用逻辑回归模型估计比值比（OR）和 95% 置信区间 （CI），本文的OR小于1是降低了认知障碍发生的风险。】</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">get_OR</span>(<span class="params">x</span>):</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">str</span>(<span class="string">&#x27;%.2f&#x27;</span> %x[<span class="string">&#x27;OddRatio&#x27;</span>])+<span class="string">&#x27;(&#x27;</span>+<span class="built_in">str</span>(<span class="string">&#x27;%.2f&#x27;</span> %x[<span class="string">&#x27;95%lower&#x27;</span>]) +<span class="string">&#x27;,&#x27;</span>+<span class="built_in">str</span>(<span class="string">&#x27;%.2f&#x27;</span> %x[<span class="string">&#x27;95%upper&#x27;</span>]) + <span class="string">&#x27;)&#x27;</span></span><br></pre></td></tr></table></figure><p>本代码还计算了差异的相关性</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">output2.loc[<span class="built_in">list</span>(<span class="built_in">set</span>(output2.index)-<span class="built_in">set</span>(output1.Variable)),:].sort_values(by = <span class="string">&#x27;Variable&#x27;</span>)</span><br></pre></td></tr></table></figure><p>筛选出p值小于0.05的差异变量</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">significant_pos_diff = output2.loc[diff_variables_pos,:].query(<span class="string">&#x27;pvalues&lt;0.05&#x27;</span>)</span><br><span class="line">significant_pos_diff</span><br></pre></td></tr></table></figure><p>后面还需要以后研究</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">need_divide_diff = <span class="built_in">list</span>(<span class="built_in">map</span>(<span class="keyword">lambda</span> x:x[:-<span class="number">4</span>],<span class="built_in">list</span>(significant_pos_diff.index)))</span><br><span class="line"><span class="keyword">if</span> <span class="string">&#x27;exercise_diff&#x27;</span> <span class="keyword">in</span> need_divide_diff:</span><br><span class="line">    need_divide_diff.remove(<span class="string">&#x27;exercise_diff&#x27;</span>)</span><br></pre></td></tr></table></figure><p>最后本文为比较了各种算法的结果包括SVM最后比较了他们的准确性等指标，这篇文章还分析了纵向行为变化与认知障碍之间关联</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>工程矩阵笔记</title>
      <link href="/posts/1ed1c48a/"/>
      <url>/posts/1ed1c48a/</url>
      
        <content type="html"><![CDATA[<h2 id="第一章-线性空间和线性映射">第一章、线性空间和线性映射</h2><h3 id="第一节：线性空间">第一节：线性空间</h3><h2 id="第三章">第三章</h2><p>行列式因子<br>定义：λ-矩阵A(λ)的全部的非零k阶子式的首项系数为1的最大公因式Dk (λ)称为k阶行列式因子。比如-2λ+1就不属于<br>不变因子和行列式因子的关系：不变因子di ，行列式因子Di 。通常d1 =D1=1 ，d2 =D2 /D1 …,dr =Dr /Dr-1 。Dr其实是r阶矩阵的最大公因式，又能被前一项整除因此可以方便的确定<br>要是给出的矩阵是对角形式的，用行列式因子能很快的求解出不变因子，从而求出Smith标准型。<br>初等因子：把不变因子分解成一次因式子的方幂，λ<sup>2</sup>是而（λ<sup>2</sup>+1）就属于二次因式，如果有形如（λ+1）<sup>2</sup>的不变因子则初等因子直接就是（λ+1）<sup>2</sup>不用再次细分<br>如果是对角线矩阵那么他的对角线元素就是初等因子，可以先化为对角阵再求初等因子(已知初等因子可求得Jordan矩阵)，<a href="https://www.zhihu.com/question/472185994">再根据初等因子求不变因子</a>,已知不变因子可求Smith矩阵(非零次不变因子次数的总和即为数字方阵的阶数)。<br>或者用标准方法（速度慢）：求数字矩阵的初等因子，不变因子，smith,jordan应该先把A-&gt;A(λ)【λE-A】-&gt;根据A(λ)的秩求Dk-D1-&gt;不变因子-&gt;初等因子（不含常数）<br>对角矩阵的初等因子就是对角线元素<br>详情看平板工程矩阵笔记<br><a href="https://zhuanlan.zhihu.com/p/435934457">初等因子可以得到Jordan矩阵</a></p><h2 id="第四章矩阵分解">第四章矩阵分解</h2><h3 id="矩阵的满秩分解">矩阵的满秩分解</h3><p>书本P151不难,将A通过初等行变换变成指定形式,然后在原A中取列无关的向量构成B，C中取行无关向量构成C。</p><h3 id="矩阵的正交三角分解-ur-qr分解">矩阵的正交三角分解(UR, QR分解)</h3><p>P154，把A唯一的分解为A=UR用来求解方程Ax=b;-&gt;URx=b,U=(v1,v2,v3)，其中v1,v2,v3由A的列向量<a href="https://zhuanlan.zhihu.com/p/136627868">Schmidit正交化标准化</a>，<a href="https://zhuanlan.zhihu.com/p/39448632">()代表内积</a>所得，对于实对称矩阵，不同特征值对应的特征向量相互正交，仅作单位化即可。</p><h3 id="lu分解有时间就看">LU分解有时间就看</h3><p><a href="https://www.bilibili.com/video/BV1PY411Z7B9/?spm_id_from=333.788&amp;vd_source=ea78e03d02c651ab9a1849ee5454e98b">参考1</a></p><h3 id="矩阵的奇异值分解">矩阵的奇异值分解</h3><p>对于任何一个矩阵都有rank(A<sup>H</sup>A)=rank(AA<sup>H</sup>)=rank(A)<br><a href="https://www.bilibili.com/video/BV1cD4y1k7rU/?spm_id_from=333.788.recommend_more_video.-1&amp;vd_source=ea78e03d02c651ab9a1849ee5454e98b">奇异值分解视频</a><br><a href="https://www.bilibili.com/video/BV1po4y1i7ik/?spm_id_from=333.337.search-card.all.click&amp;vd_source=ea78e03d02c651ab9a1849ee5454e98b">奇异值分解视频推荐</a><br>奇异值最好从大到小排列<br>矩阵右上角H ，表示共轭转置，在复数矩阵中用。若是实矩阵，与转置符号T相同【不是逆，P156例题中的U<sup>H</sup>=U<sup>(-1)</sup>，因为U是酉矩阵】，<a href="https://zhuanlan.zhihu.com/p/120333258">Hermite矩阵正定矩阵、半正定矩阵</a>。<a href="https://blog.csdn.net/ms961516792/article/details/107591019">常见的几类矩阵（正交矩阵、酉矩阵、正规矩阵等）</a><br>2、AHA和AAH都是正半定Hermite矩阵=&gt;AAH和AHA的特征值=&gt;奇异值的定义[书本P157 4.3.1]  Hermite矩阵A<sup>H</sup>=A<br>3、正规矩阵的奇异值为非零特征值之模长<br>4、奇异值分解的定理（两种形式）、U1和V1之间的关系可以加速求解速度</p><h3 id="正规矩阵的谱分解的定义">正规矩阵的谱分解的定义</h3><p><a href="https://www.bilibili.com/video/BV1YP411P7Tg/?spm_id_from=333.337.search-card.all.click&amp;vd_source=ea78e03d02c651ab9a1849ee5454e98b">参考</a>\</p><h2 id="第五章-特征值的估计">第五章、特征值的估计</h2><h3 id="第一节：特征值界的估计">第一节：特征值界的估计</h3><p><a href="https://www.bilibili.com/video/BV1V24y1u7i5/?spm_id_from=333.880.my_history.page.click&amp;vd_source=ea78e03d02c651ab9a1849ee5454e98b">特征值的界、圆盘定理、特征值的分布范围、谱半径及其估计</a></p><h3 id="1-schur不等式">1、Schur不等式</h3><h3 id="2-特征值的模长实部虚部上界">2、特征值的模长实部虚部上界</h3><h2 id="第三节：rayleigh商">第三节：Rayleigh商</h2><p>1、定义、性质定理（尤其最大最小）:书本P144定理3.11.1，2<br><a href="https://www.bilibili.com/video/BV1mG411F7MQ/?spm_id_from=333.337.search-card.all.click&amp;vd_source=ea78e03d02c651ab9a1849ee5454e98b">广义特征向量</a></p><h2 id="第六章-矩阵范数及矩阵级数">第六章、矩阵范数及矩阵级数</h2><h3 id="第一节：向量范数">第一节：向量范数</h3><p>1、向量范数的定义-3条<br>2、向量的p-范数，包括1范数、2范数、无穷范数<br><a href="https://www.bilibili.com/video/BV1BA411C729/?spm_id_from=333.337.search-card.all.click&amp;vd_source=ea78e03d02c651ab9a1849ee5454e98b">三分钟速成向量范数</a></p><h3 id="第二节：矩阵范数">第二节：矩阵范数</h3><p>1、<a href="https://www.bilibili.com/video/BV1DT4y1z7CA?t=391.5">矩阵范数的定义-4条</a><br>2、<a href="https://blog.csdn.net/qq_43657442/article/details/105240853">矩阵的m1范数</a><br>3、矩阵的Frobenius范数、性质<br><a href="https://www.bilibili.com/video/BV1HD4y1u7yD/?spm_id_from=333.788&amp;vd_source=ea78e03d02c651ab9a1849ee5454e98b">矩阵范数速成</a></p><h1 id="矩阵幂级数">矩阵幂级数</h1><p>书本P217，<a href="https://www.bilibili.com/video/BV1e84y1T7Me/?spm_id_from=333.337.search-card.all.click&amp;vd_source=ea78e03d02c651ab9a1849ee5454e98b">矩阵（幂）级数</a><br><a href="https://baike.baidu.com/item/%E8%B0%B1%E5%8D%8A%E5%BE%84/9098794?fr=ge_ala">谱半径</a></p><h2 id="考点">考点</h2><p>第五章一二四节不考，第三节填空题<br>第一章重点考填空题<br>第二章主要也是定义，考的也不会太多<br>正交化公式记一下<br>酉，正交变换不考<br>幂等矩阵投影变换不考<br>第二章第二节正交化方法易考，各种矩阵定义需知道，变换不考<br>第三章有至少一道大题<br>初等因子考试必求<br>涉及后续jordan标准型，smith标准型求解过程<br>求相似变换矩阵不作要求<br>rayleigh商要知道大概率考填空题<br>广义逆考会考<br>伪逆矩阵有一道大题<br>Kronecker积会考【Kronecker 积第一节相关定理证明】<br>线性矩阵代数方程会考<br>题型大概为填空5题，其余均大题<br>章节目录参考压缩文件</p><h1 id="好题解析">好题解析</h1><p><a href="https://zhidao.baidu.com/question/129422889.html">已知A是n阶方阵，A的平方等于2A，求sin3A</a><br><a href="https://www.bilibili.com/video/BV1De4y1r7AM/?spm_id_from=333.337.search-card.all.click&amp;vd_source=ea78e03d02c651ab9a1849ee5454e98b">矩阵函数</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>图书馆借书归档</title>
      <link href="/posts/9a04f79b/"/>
      <url>/posts/9a04f79b/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="仅本人可访问!" data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="ac7fcb16b48a52924ea034e3ff116b1ffdc201c46269648f8f92c3fe73e1edcb">4a073aef6f17ceb90153b60dc70c7df28c4a95ddb955ee51f4107897434437f3afa596ccdec3ff84843dc688f2c455844adb3663e59d3f37b31f5247703704a2f1680fb92a91643349b6804cda4c97eee8aa84c44b7cdf47564ec0ca5af75950c7765172d18cb2f9ecf1cba0176e12dec1baa3b86d5fc70de30a210d567ea931d234c6841b74bca9d4b8eba3992924d3f6fb648dabd86f74f81cf041330c5b0fcdaff3641a4232fe3ad7b5cf620ab60c71b8058078875b788255edb85d5f3a8a16b345b662c4e66270db7be52e3859aacdf931a6aaef7286fa285d789ae4b913fe07b4504c818c992a1a780bfaa9c8d59197248ee10364a3b6fd880b40c7d8bf92fdedc0ca61d30c04af91f8e654283a0d375ccee39b60d9e1c74589f2d0892e3619dd2bb5e31a9871d69de57327b8c798cbd22c1aaa3c6b4f5949c8536479e4d8028862f585033ecd49a2671b7bf2226fe20ccdc9b0a72d13b4f79e9894c1793c4b050d29c4a12bafb93b2e0569d05de4a3a3ccfbd992fac2de405c0cf2f023921de44bc951fc5f258d6b8b8df409a4a2f9cd561e0db25be5e29667d92b50e175186e33a1d47e8451bb739b741cde00363567a3bf450bfb005f72066ba310b82c73d3b74a184c94b0ac1dfa7ac344e131271f2538a5f612ae0966cca67e7c4a299651dc176b9d1bc60d506142358bdcbcee6326795343a6fc79af2f51fe247569a91caf015868e3c7d0edddbd803a0d5d389cf03b1a9803bef447ab2872e1e619b0d8b3b968a75fe10334b5fb7d7e6d74ea25c3750e38144a4f3189d0361a6ace26525f7e6ec69e94e1c9507fd0fe083165ad06521553245defc03ae8c282c0c4df50e72586d0b7740aade8123fea034054cf801c2c9be5258e1126fa5d040f3b239e23fb28e9001457f5eb7c6de5907481616d90d990e12cb220f361728d99ea2678808ae6415790d821dc0b9326ee0eb2bfb02dafc2c4c3e07de6a7a1c9d5480c295343b7f0b1f1a62dc2ae52a21980161d87a1ae4645fb8a73001afb465d04073a616066c688b23036aa9a17c1bea0d566a3e26501a678725f247db9132771585cfecf4a28c3248af3121108f8d4d691a4c0c615c6069d461a67733157ae</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-up">      <input class="hbe hbe-input-field hbe-input-field-up" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-up" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-up">Hey, password is required here.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>图像处理笔记</title>
      <link href="/posts/2c8ab67f/"/>
      <url>/posts/2c8ab67f/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="仅大鸟本人可访问!" data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="10332c47a71c6f40a6185e079c912217a8af41e84943abcd573ea1970e0d5f87"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>软件工程大作业</title>
      <link href="/posts/aedc49a2/"/>
      <url>/posts/aedc49a2/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="仅大鸟本人可访问!" data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="1adb095f768392b6fcbd8d0cfb4f81e9a2120b8a97dd34c9b9ee386288b3f9ea"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>0904-至今日志</title>
      <link href="/posts/ef833777/"/>
      <url>/posts/ef833777/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="个人日志仅大鸟本人可访问!" data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="0170ad60e6c9fd94735e2b94074b49d457cab5a6fce1e50ce00cb9774fc4970c"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-up">      <input class="hbe hbe-input-field hbe-input-field-up" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-up" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-up">Hey, password is required here.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>自行车换刹车油以及最近的记录</title>
      <link href="/posts/91b9527b/"/>
      <url>/posts/91b9527b/</url>
      
        <content type="html"><![CDATA[<h1 id="后刹行程长换刹车油">后刹行程长换刹车油</h1><p>上次我爸帮换了油从手把处加的，因为打开后刹的快速卸油开关直接漏油而且针管插不进去需要使用转接头<br>才发现后刹不是喜玛诺的，现在又漏油了活塞无法弹回，通过完全拆卸重装能恢复如初</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>siler函数R语言复现</title>
      <link href="/posts/cdfbe1fa/"/>
      <url>/posts/cdfbe1fa/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="仅本人可访问!" data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="0b6b45e4b264d8b90cac68861c6679787b69a1bbfb3e9aab75bce297eee93a8c">4a073aef6f17ceb90153b60dc70c7df28c4a95ddb955ee51f4107897434437f3c890b2ea1c1df07f4b30b45f127c5e5885d403a6d9c9b781f3bbe3a57d7eb60c595367dcb77d07248bc7c90d75604e820deca7caaaa429b83bd45494a945fd0d87f644b6ada7f67f9a681c5b99709cdbd8734c9a1e24663b05cc3422eb00fcf730956eefc7812c09915f96282cdbedb99073722b7f8724ca2d5b08684b952fe7d6fba643daba605f58fb06f0e5a461835331a41f9f0498ece73b618cb05ea52939c31dd2955f63d7d9bb74677358412089be16a5aa042037421bb8b0bdd26cf12efe11a0cd476839e71d4b5ec291e31a6355ad485ca440bc1d48595d16c4aab59fd1a2eb9dd2c824544324e3297f9859fb28165d94edc9698599a0932f61bff16cf66cca5512aa028ec3cdd6db0ca701306415b7449397ca3cbb848979de05aee5e2968f1fd97645ce52db95f6c96084afe17cf1ab304db8b26094bd6b835997b9bbdafdc06175395339b77b6d0f0af343264049653e8894bf68c9058959d98b26fc6dd72e2521e77660ee7d894ec3b7f2009d7ee5b1f93483c68908be748adf51cee7ae8a28f5d3947dbd368d2abee85c302c05afb2bb9a1f7f0e81d373424ec553182a2e6ce72e5fe2f1bf32a002585d825d607ad849f3b925ea0b722e09064d4e5530ae91e78eecafed74ad82b7fc3815efd9ecc971239d469a7de161a818fe17fb9fff322df8d3ada7c717ceda455bd07a1bb2fadf42a865c5fab313991ec5312692cfeaf326740fefd7af567f1506a77356053291de068cb0dce338120dc5d6ffbe4702fbcfdfd59cc84319d4db153db65ba35a8968ae145e897b2fa6d537e80cfcff45d92dcd95400bb2de1170686ed1baee82101ca9f71720f75962e8d85f271e2282036e77d261afd6db5b162c6cbe145ee924caf32abc2ee88b207f2004ab050df67fdc70676ff2484d26bc8e493a6a5a242ef8e0775dc77c1bbde8237aae860f285fd9779ede7d69d64dcaa4d214afb809a7407412e55ff58e08b14853999912871591711b27577d987c34977f9ad8848618aeac3b29fb0c924c02d6880de4f43ad8dbc19da342ed263c436a043ab2831e06080a476d6daa562b221fbde81c873a958974a42ef01b4e8f387688f7c0da5c2374e457888cfc206ff6c36bdc0c8826d3bf3457e87bf38ffc0d82e805a989a4593b643a40d2ab45d5f61f99265cee81c4d91fe5a9befd78e45400924d8c1628c56f02d4eedc2fabfca7ce1b962acbdb0c2f568b6f789f8cf54e747f6ce1875f7b9a3f0b32f6c708e69a40b0c8c0b90c8283f0f7b4c0a90f54b68ac3ae62771061d13ef0bc1dceb083e4336242183ae8dd661c75a089f8283629a64c47ecb76f9d110f95d84241c9042df083751f8cb066a67bc8371ca39654bb6cfadbcecf3d0d39fe41836a64301068c880d97b2b5f0c7fe599cc9fa7ffa481cb9e7b6379044da434e787a4000c8cf24822c6e73fa0d5301a06b358ec822bb2948a52f1d98b3882f5355cacbc640a6f5a1a14b4a0cde4b6b2dd311f3d8322a09636715be06ac1a30a33e303511f289f607e427c3ca3755f3e3979ea5b8af5f522e56551bc90beb77fb3662e97e99e107f97a829e5232f7481f1a7ff874eea2bd5f3bba0d03574e9ac00a6babf6a693ca02659f24c44a7edd2c97e05c652a36eecc1cdf638ba48e40ab077e7768d08a52b879a5f468b67221e582dc557e8e736a17c426261ddf996882ec4220a7bca61b40f46ad0f523865c57428d5eb0a2336ba524796a98220b892693eaa87763c4204f0433ddb38b8a2aa2b4033832509abfa84851bd6361c09cad90c5b5888ff6e036a92ac6cb5558003cadf534ffb8bd5872465c4d4aabba6fe98594d963b81b03a87e2994fd5f084cc170ce205451e14218eaa86318ec6b9a2d2e86297eeebad0986df8faf4b41d95cda6aeb068531ca88342106f02ee3eb077d57dc33855917b4d4c76f2e85f1e3b3d86aba0879ce474194ba371e6793f8a7efc865b19f9acac019ada5cbfb4a4e7b3aeb8626e5f0168049adc827a0bc3e283255ec30f613f8753ac0e99f61d6b23c7545aa34f3fd14f6d969993412fde684f20c164b8fe6f7d8ffbe136d1bf5f14ff10da9e802e0312266e4e49f47ab29e25e43f1d0f5ae4a76698d35f2cf7d5a336c7a1e5507f45c70cb66bd1e99649edbfbae76234a4fa45bfa8dadc5130e8051b92ab5ed43b1e15362105fba12fa1fd5438fbd2c7c243223fd20fad8d1a0fd877d56e361e80f53395c04908004178ee324bb818a775cb03a909976447497f3813e67a776e86493bf26f1346af713686f26b64ded08be12dcdbd38122180cdb911487823e5968cb948b3d642428c4e170bb6b169d94a8d09f7aefee60175f004b11e27cfdddd57a4413a5047ec81858ffe9bdff81f1f690e927dd821b1826d229966466552b226f86fbc6f91390fa7bddc6c042c874af3e1aedebc225ed83e57f03215b3232c2490d43a7cdfe833d3e088e0213bb9be4494f1f7a8c8c11067d0ccad47463a676d3bbdd65c29da314a408f6ef1b396824a43fa5cbd5641d6d6f63b96c615c8213ebad9a602f321fa0f97dc66d71e2f2d3cb34c8cad04ddcef87f5bd66f21a481da42808cd7f6e12b86e20d939ce525f7229683f3c9e0a78d119ee5326e427b56a99e672661acb57d43d716c6a431c3e3fba00eac67b5fc847f95da7b667ad9345ff3a7b8633f813596040d22cb90d9576e2c6761c03c3e3d97888f7ec9e4c71272d96eb27d3e7ad20ca43b9d9f7aacf76a41d022ed8a4bcc487821fc5a83ad6c13b90dd192349b6130a42d0dbc787302b6569013ae473bae64d67ca3fb149151f0865606d964eddfcc32bf76ceb8d600c3b83133adb5bb07716cdde3ebe1f8ffb0b4c5c75d6c75dec7efa994ed442980746162f9225f2ee5f72d64e62fcfdce430446cb5557f5953bf11e680fcc0ab27d64ff2ed43ce97ab02c79cb62e6b3547e16cebcc0de7f3437831fc8af260ce2f31822b458ec425ff267288ef32009e2c70c1f395489c236da631d2da8c353b0ed16bd1e9de54995b69ad8173d78f7f4c6b28977d3edb288ae7bd3e2da090b5348daf5146911c38ba54ef560b47b792f73f56394ff7835d6e5b793df906d3fd5d58659996bd75c6eceaf7db55d45642217cc20eb36140f206959cd9542f243634ddab7e029a857ba33a1d1757ce7c52cef711943fba10a11dcba3745a2d444c2b1c4744fbda6fda742c81348995b3f39176a29bd2abfc2c2a8d0e45960ee1d0011c67d03f449f14b0ff667bf096b1bd8ba9f2324c5f5a204bd87d7f9e2fcef498660200cb7679e5ede6f4fc5d03f65000ba319a68c7a98c9eeeb3f7bd0e3733f834ad9de451d5b227b9b4a9c05b10bc7a292d15941a597f71cff174b1dbcb8a843f46c9e2b6df4045f7e6be0f58a5733f693349d1fa89b60600e7b8b252a498cd75041044cf19ff9743d011eae9c3b7314fe6128863875de43a03763fb924d1e7010f316f91872494f29a4dc30451b5a9d1ce24fd5d50e666fbe215617d3e72a496b776d85514d325925da516bc32bf9e926a09a0e1507cb5c86210d8641c6256152098db252acfbdd1dde43d0a4926952fe3be4971a2d58f720dd0f095535361cbe6e52d0319d7eea15827e185f5ee09fc552faae1c82b9ae613fd93f45882651b795c517444073a9b23efc8d924063834b68b84a4e56beb682ef3ee231143d8bf26864b8d1628f532654089622cb30bbdc9b4e3f6253aed8e68502836124174f2c7e2feba2c3b2e929b100d6b792add04918ef683ab21254cd05ae90a98f7df931497a0a71cc506177184372cb85fca175bfac4c5f311689e86991fa5f4efdf5edae62851813975176f9dd9b9560915dab16db93ecf4789be81e66b65c16674e05f6a5c84d87a921522da3844db6b418327a80978d626b6262578bf5df35078a0d1aea1112976e4142e8b33aaeee7c7084bea3299c1084f0fcc7111038db03933891a0320e7c5351dea6e9c73fc96ffa1f428c05cf54ec7f87f0333be4af29d2ba77351040af735a8b6b7f2baf87fa1e1982b6cbd79ba8e9a4e19ca83e141384eab5d8d5d3639f321819f97d69b4f42a6c1fa5b0983633924ba00012cc07af8867e97ba4d5eaccc548eec531c5fba3de8abef93cd36b22b49211ac01069f294f365f1c7f6c69437e564c266c318c6c4db82c8233c851874090b68fab7feb33020b8fe831d6e5b12fa4bdd5872a098492e7bebfd8f37531ae853fa29fa6fc5addbd9aa6df2d5aa05cf4bfb34cbd5688439c5599532b039dda026e51087698a237e3f377690eade82fe5af0a10a524d1dc11fc579274f77802ff3dac44020005ef6a9e93538e57d866b3e4f077878cfa5d5ffab205c062c95fa820f3d0b1e06bfd6c07e48537d6592bd516922637b927ece76155c3cb46b8a38e2b71fdf49cfdc229811bc172640e7fe47542d86fcc020476dc830c1bf7ae4ef81e49e93fcbf6adf95b3ced2932d4848246651b788ba4f8e3d0529a370f13cbc04fbb0c497b7f5c3610c8a3b9e8f7088669cd2492226da52b2266589301c999dd297af1b7662c50576faaf6139da443c9834be42ad30b96faef6db676ae14f222c87c75695841afca076402e7038fefc67f3709a34c4587220a1e5d894d9d0297d90a9eec33a3069f592a5fbd16867bcc09873d907ff17482f331fc304b31225694cfd5d2e385809903b876aa419396f36b6337ab4af964029ceb52d0ecb1609d54f6151d64df4a9930bc2411550cece5a9460a781704f055ff633585bd43bb6274ff594d932d7864c5c4ec03f32c8e5f4e0131db6a99aafbdbd249f7cb76290b12f6a2fa1d031b598a26638e8a678aae6c6cf53f49e4b53b119b55c9bead1e1b0eea652afd30b7783379336fc7aa98ca0540fe7713da4336d4a76c9b959a532633faee774a431f154bfbfbe4d0112411fad88c78266ddc2f46121c794395c4caa5f6bc4a100ecc91c54c86e29787f347f080dd96b3aecaed88a8a284f25270c9266e6b90caa8f746a4f756d2961e5f32e76a61a077c4de88668881fc785223fd5ea659cf9a55c39336acd7bd6debeabab42945b122fcee6b7f979923b00469b44ef2f99ae471f8df8354f13370a57844c73dd66fbd2361e917de7ab303cace8b373e1352288ad7e898d2baf607c2ecc6dfd945f13507568c6c84e4c28df0ec245a792afbe89f32154aacd0b9b503ada432839792e5d04893ac8098549387226b709a540bac2efc412ab839d62af6e1a13e1d89f648a5b1b6fb5af8b402b51931a9b415f05502efa99ec9e351336c2e07a1e6b7718633fd1cdbcf84e391818d1e256a3875ee702dc1a483b1b13b34cefbb7869a34db059f1e7a3fd3f89d136192ea5092e623ebfbe93ef60ae5c988a636dcc7bc749213c72ea53d16826a811cfbb5aa9664ac5436d13b2819f45e16ad22b4718af6863128a3cf863f35b54934bf48af0a2b07fdca3409e25931c41b2b1f5e86bfe62105cd6f07bab8d7554e707ab53b85e7f8fa4d0a1ae7bdf424d926bb9491d6a9ea0cdbac526d2fba605a09cec007912d49d13115bf390d7b2f88f02f3fc35f5e40cf35be873be4d66cd13fd26a98bb1351c59770413bf504bedd841541272f48e21e7d97b2f334d7925dc075e4811562d9e6881e080ff9691def8679def6389e8486ff79db517f63365356e9c0ea48c47d926188bba8255a9cda1e048c7572ba7a20a82548309af7f64228c1c717ac84b1dd95f806189fb50dcb7341f2307f2435b2a781f85784b98af30e58d93d61e12264eb069f45e45181f7104c2001e555bafba53cc2c937247b26c27a950e406562b837c9b50f280f6b030e47953b38abc8c63f4994a1ee6de9a07436fd6003a79a85674e35d7734bbd3d8585339bf439f68e3b4341e0162263c08b96cedc6a13d668eca851c005ac1c86a867eaf12d74f12adacc4fb12af82c74920222c276dbac1a331b19fc6941e9e67c6f2a99b4faaa67fc9f01584d8b24089dd77cc48594b528103515774fa185aa87951cc200cab812212d320aabead47139d26d1fdc0bdeaedb8936e07071c041a2bea344b66ab1f9b4dafb7d17dfb3830ec5f7f9b8c7ca24f9c65614d8c532f4463695a9d19f05ac963558c4123047a0041d2cac3c58559828d9abc2b10e860b76e2d009a1d0801c49737290474811154ebc3b6e3318ba3d6c45e50c7f3994b85678061ba596f235b87908481835641d88774f5eafad22b100b88ec6086ad570de11af023b23a910e9022e470306e2f54d3167ed129f5117e06923c1b28ef6b97f87c1350c6542e9debd08f67c2684fd34c3e61c96d28b79b0b9a1fd0f36228c916e209fdc3bf960b4a8599f5bfe9b69b5e67703be4617ce8e37509ca47cc608d8c7a883b0e085d3a5bda995831f982e44d30fd1ecff23170b8be0bc96acd75416135eef0a18ca6120a32d59b9d23636e48623cb9553e70ab21627109cd5aa1a42b59235ccb93830130b7eb436a87649bd6c8a414604978a73e529beb3e59bef75f668c42c9fd6c21b21e125fc72e657f1a73a19021b58872dc086fb8e3793bd00bc72acd50257ef6c660d7ebea22a3181c51e60ef18e887f8b702ea1499ea1ccc44397bc37aecc6d38b6a49947262cdfcb4ef947308001a32ef3e55646e89d2e9bac3e4cc00a973f41f68ebc4226dee26e5007682c5f4b6cdd4c61c25c13323392d2c67b17a61c1d8bbe6659f273c7934a3110c65c274acb49866e8304d5de2fda96771a13cab3398c59bc7f559f6c85b7637fde1756b9e32cd0bf4c36ddae1a2de8f96fc6661044d04895084f1c4433bba3f1f24b72908294cbf6f00a8474399f14d69e156766bfd79def08d37adef03b8a5c3a1f280d0eb2c12e7f72d7d3019303c1e7e1190a74cb67a6a5bf8feec45c0771cce118b4820431b1265a4155498463c32055a4962044ba03dcba4c52b8c867888846a73114a2859179c7bfca30f8dffc0e1fa84b74789ef8d01bcbee7e0f7e9a91b90228ebb6f06865c2d331bf8f8fac9bf48e18741fd158e42ccc5003b66dcce78773a4f4cb8a72a79a34a5be16a2c8c87dd2479a234565a4fff035309c435986772084c7f92bb1e31878736218fb94d1dc12eb4513b7e7babca1da650b3f886a2ffe23c51cd0e5a319c7268ce9326fb5078308314454690463e854b77afe89391254a20b85e01504fcaa144d55508e1f444be9b6fea8898e78c38e33cfaaadfc3688094f5bed7de8cb6291733e97e23485d25ed422ebc996140573b52ec17b734786f0fea42838c2c2aa985298f0d424a1e4fccda1a966db43358a433a76f80896379270618acd1cf1aa78255173146c24ec64548b50cd1194d377ae204ad77944e0942841b231564ebf1f2ff3d61913a6f9bc905e049a30f96076d57d0fde95fe5fcb80e39161d641aa5cfa56ec3e67d5619ddda54b7a5659fee7ac4b40ed19b07e1e327d3bbc809e9fb67ce20bcd37be5a1611100f4a6280b50e0066eb7d271b55bb17beb915a6d08299726e3a5deae8af41b7791e810263413f07a7f9c3b7b6f80d7de8cd5bf4046f4803593a0c1c9e9c34eaad116043677deaa8db7fcf492f1e2c9e8f8f36c29ba65608b4fcf6c8742d9be7b8d0ab7515cb0dec913b636ca7e62b88a02188443d7c8108d2d16e2cf51f76893ee05e71b7670cf6896b73b91dd585ff919f4659457ef533279ef12659326f7e3316fd9c8ba7b73b2156225abe0f92e1dd3cf2b513335bc3babbcb1b4f3a80899c91aca383e128339c11770971090e64604bb820e4e92b261a86824a73c9ceab6802ba04b37a31620dba53d3425e137e317f849ac40ae245e6aad51c84cc7e1d7ce5439f68b263bfefe710a421af5e8847c0959d854cf707f657fd5ad880e4d57c1e252281d5386df166277e2394c73b1a5288997229d46a50394911bbfc6deab988e0c3dc912d3d43f2b850a5b20f53454912ee9ea6965c3b0eb5cb1f53817bce73174fe0bb0a18015bf849f21aaf4a4bcc42366205f9ba066685af640fc7b460f3a3df7b35c50ccbce98a7faa9cd57cacbd3a6c1fef83f926b9fcdd35b30d9ba8bfcf6744f394967e052d65975fc1e311e55a5b5919f10b9d42a0bb36adff8badd429b5c1bf7579b81b68d04adaf3a00788e919f22add71c200f3f9623550971acafb9e9a9b47cc67839348a8fd33c5cad64caff955cbca6a132023034ef96b11d5a82005105581d98f70f221c1024cbb538a30f25b7bf3d1e787892741616c0d4c74708d7600b5a2ad21faeb4fe19becfa03a4c3ed98955fc01c5be4beb1d3db33c1029fc89829d9f497c8714b97f0d6562f099b9d4c46b0a650f1f0939c5bff5f84059a4c92b3e4205da38b04b9872c1327580ebd04d9d42c0c1b790fc7b723b45a735d3a4724094b9f012ed7743f6e9f307f08496d1c48f145baf189dbf7a7cafd32ea258bfc88d779113626ddde543ba4c48b4c890dc77876d309251bcf47ff813a84002731fc5b7ef58ce5246719da6d06c4f30aeb9055e83b49b792bc3e2599a76e3f2e2a17e67bc8d5e374c2707222410d6e269a328bb931079fc1bb5301fc4f339c286c07bff63559b8c30006eba360cdd685e65fa9fc251677b6c5607f3e7e76c12db61e029025964ab65b159f7cd94fcbfb31c1fbc2eec028b374c2cb2b7cd3646a797373f1beb00e946e8eb0aab9a93adf9ab014cd45bc7edeb55c6b601e503047aeedbafd5682a1f973ba9150cc8f6b83df147fe5338c1a7ca67c74c247c3c7636e3c631a003ec1d11471d453a4b315af89313c4fc4ddb5c57594e7edf191ec1577e7032dc7c0e91e9f3f4fdcddd2aee1f4417d3b2ba647644fdc51331473a11478d097fa3379e5ba7272e9877bce8cdf37248713fd5ef135263d5ed7ea713cfe12ecafb69cb75c731a8f969ba1ecb8313291577c4aede6cfb6d2b8a66c69bce194e4ac0780b04332dfb0f2b8b6abd18a262e53eb09b3d6808ea5afb90f77bfa9c78237a2c608e7531b7bf0bb89e29056b3e99d0ebae1eae7d85d77afdb3066d1f54e3d7c9c1aa1ed952ac090145587f70f1086007a46a14f46501d8df5058ee27ab8ca7c5cc0085b885dc3e598f86b4d0e5be08652ecf8d09acc3bfedc5219a462f37a596b6e99272ef03ebcff34fcab983f28e53d35866f6054bddf9b7345a6838a7eba10a861ddb51f053725ce9b21988b944312ca0aa9b84c447e230c6c93d2113d96e700eee5e2fbd6a0c7838d97e7803e3495791c1efce9c2e616be5d853bc03ef2f6d0fd1ebd9f9ee2b1dd4900df0f4663b08e9493cdc8dec4bde2f7dcbcc0285b930901e72a64fee10a592897706ad7db3922f1055c73c8b41425f00f609dc4b19f3d363088484e2dfd172ac3d0630e8b41cae209397984bf78d1ba4898f83e5b55c351b71f7a231c9b72fd071cc5329bd966bed6012719e8e3531498ad8281fa484741f824363d48389e54c63c4c8e65cde38491f49e50d7d3b63f36ae09b4abd2665de8cce90f53f7f3f13cb73bfc0304e4d42add9f44dc12ad58939c4d1c5b286810a0d5dadd7b80a40eb8044090d054691a45fdaaa89b606fe46a3a5ef27fddee89af9ca5df5a64a43c9ee0c8e06c49ef2da3aba2d1f74084b14f46f54c48ff7b558a54eae756bf7f9dd17badf5528d363d4f88e04b477dfcbac5e2feb3f6142bf3ea5c8fecbf954af7f084c786fd3d098a790619778a477045fcab82ef136507fd6ac781661c2b6b5dc4482864a3e95f621567f7c4b3bf33372fcac0e89f72cea91e2d60f15e63904aa0186ae95606d1491807980bb063a05a911b974c437b55f5ba091be7b4ead6ca6f13afcd2472388d3843b1e6d880feaf0043767b97d8cf9f73d5e3da4998706bff130fb5578d98b4a54546374122d9c76079c374f64183db9b69f0579d75da055076e45e8ae2d25f06c63529aa6f40c2495811f282c7c7e5b2ca63d2e0e27c7c50622d67f3935b88799d5c19baa890db187d3b0fb72eb417508b4b5c3a6163edbf63b38b58dabe2afd686cecdf41da0415827e6e08cc81158a5e1b50061f3f7fbd13384ab40d09faab74bfdc7d81730f78ee3122dd1b35752871e5799b5ff43db0e53b127d2dca08a1c2f0a3649d095f8b03c780a1ac4a97cb4cb7d702843a62a50ec2d48f9c577dc4aac633b460a8a6acdb2dd6c937a8e983b9ac1eef53ade6ece3b2b42d3b103e9d9abdf6c9dc1623f657489142e205cf820a52bd7f928bf4b1686668972565521d259c42cea1ef328ef33cd246bdf965493aea79ee7138fbf74fd55eba9bf9d00fb2760d71428fbf20c4beeb3d76c5b8aec9c915fd92ae06ccd51d3238ca7a55fbde1bed30bd48db71474ee9639e8a7fd4399abf46053c61a6a21057dfad64590a128006f4f15641c246f7dfed5da96846ff5ddafe7688fc2be35badfb4f4bb02a81a36d4b56827e52f098e934d6cd25d93dc6bb28f3f1a5d4cb943dc23ae1fc68b38bf3c65a81efb645a24df476a14fa1a126a276351d68e1994cc53db71a25341b9edbdf50260433a77c56d8500cfd66d64353ed7e48f431b08a8830a0a3d29f112721b071ea587f63a82c8339b393a2107610dfdbad5fd36575acc61a2cc4c89c40ea48bc0ced6976bf2d259153bc406537011b7752abf165689a45cc48a7239490b69e6c5eb6009e3789c78d995f3b16bcbd4e79ba971544c38a6cac60e964b5b81dd5cdd03f50edcbff0c75ef8598c2bcb2ec56f597a9562cb7e6dfc3737749b706369f4541ea8c942889c49fabb36f827c08e16722ce10563c071a81a792932b577c7abd9f31e32eb40b0c82825750d2cc47f06e42c9b97101e1c6b8ba110886a0b7ba7d1e6ac2c5d01e817f113d8c6de32e273bb81d1c385b841eee30cc0e6af1a46b26e14f9e62c861cb586a4a60ec0d20cd8def36dd50fc1dab4357e5bf84a81296265b21f45b940686bb3708d66b41cd150bc00d676ba91a48acb70d50b1827d037f322545a2bc37e99b0fd1e8069debceac1aace13e0f3abd766f082c57b54c7e4ec0158d1ec92689291569dd821b5ba770eb62fd4c44d8a2d9e4421c556ac582e21c04fb135587983e251fe355e0c18e902d01419a097e3d2854583a710e580038b37479ade55e8921fa9e23fe41b63a15388de702ba757314f008d58c27c7caf6835fcf94e328fa8b1575870b84b02e97c70cfd19904b282338c277ee21e2b2012cecc9ccff8efa7024f29e091de8c7520630e850dc14ceb7a4d7cd65b9a416ffc5779451d4be4dadf43c65b10b9b4231abef5955891a7b26ed5867d1ea7b82440cd9e6b200ac8086a8bebb298c093b7961cfd77e292f960c675167a5ce1d516dec98d05fe991912216fb7237592457d9cfc9d8dfdba4cf87b4d0ba82cdddf634c9e65c5c384c8246885f8b4e00801d5580c30f1c908403141df5b2d007faa6b5399e15afdaeb32cfa96b6589a197d2987bb2183f6b3a4d07803c1544b6137c3ae6966dd41dc32f4c98de48e9e9816dcba008b02b7fd3ad9e19b4c685c9b7d534bbdff4d786ec44e3a65add213107c0ed1c463481d3ff518e288ba5384e2f81ce59ec843ad13c5829a14e6894228c198b55cd71957a923fe941b3363ee56c57b631a37f6a636f2e5a521741c447bff5e26530fca96a970b5b572c29a959e5243684bde6086365938c1bbec243d8ee251543e0f50db5783eda63b8c867d457daec08e8210faeac1dbd0309d0cc8b6cc68d8b086e2a54d00589f9965477f949951b052a3efe951b8420d40a7ec2b949147def7cd78a6858e8bd9b11eb31249b2c878897b187103cd914e7b2c1627a6b2effe5448edd97d0b35304ce2666b2d7c81d2df8199491434e079a3a7fdf01500040caf9be9ef33572f7e7aaaf5e22e42bcebb5c4ae6b84a8e025b41286c96255dc7b76568d52bba3a3afaa8b4f895bc2b0c57980f3bd2898f8d760208d75e3809a2079d70cbdeb8ae54f941e76656ab442867dbbb2a4ee3662a54aab5d247be06f7eddf5af6ca27211ea8d7fbb063cc3b7ca2ab3534eca2fa5afcd56b3b805c36e0d8305cddb56bc7a0dc7c5a54ed26b8b2e88fd48b240e8dc3bbe2830746ce0697fea283b6e19678457df057d5e2f96d404cba597ea5fb27115a91bc3b6e10aa36e7a440ec04823cc702d3a0cf542f821db12aa9a8e4eefc2be04d97e19629dfc07b9a5e9d25666e65b0e36e0733e7819abd3686076eef8d8b996dbaf977c63320633d73d877e4619763ce0df89f791c44befac5269e42ff5866e5c199d1dd28f61411cb5bce5932811a37e874ca431053e019a45bae682ef4f011fa57415eb67c654e74cad7ad8d7995dbf2531c764ec01f9f00943a65e351645485fa1c9470bb883bfe4661c98f6203d2174549aa56e8719d6cd3216bd88b948e37ca9bd8b7ad76d19f052ed13ab8d772b98fc224438119ef836df039136411a001580285d1b954dd2813092e9344879038b0e48f60305f0011f61216bf5af9d52c511416634b9e1d01534359724d2b5ece94bc352a1f62067077b998257b9be1c3fb236af0d1f053231712171888fa7ed5cb9613541ac0c7ab955ca59af2b735602bb406472b9ba7ab98a2df4ee5f0c3c7c2d6daa26fa6eeae621edbea2ce838d0e9fd68ec082c4b58f5bdb5eabeb6d4d8141b989773496552e3216aedb9ab7cb87486f01984a2e1028c7b78d1be41741ff9ba70aeeeff261617dc07492ce6f3fe2a4fe3b21ed3c469547071e7a4bfcd566580dfe9cab770b3125f266cdebbfaa02c85cb68e3a2b850915b4a1e8a43febf1c9381b6b63a659e327908d5d0c0e6e28050ea236ccfa01ac72b739283adec0caacaccd58ffc59e077def696a21851ea2cbeeb07125772406b93dddf8955e2eeed7056973bdb23563102b2c57d513ca711c196e3d800fd3d695f160a7fc33836a3c9485b2bc15d0e5e5e47153ee5068eac0998e5c37a949dc1a6a156b13577ea45ee3ba07ca90e78ed45d032f3cd422a191daaaa5453462f9dd4681555ba0cd0ba0691d0064ae08af220359fd8f5a170d2ed89537035e7d1cb4cdfbec187b61ad141e6f71984506ff155b6eeafed076697624f2eb8fcee3169df30b9b4942cad6505e91b86792626aae0e4d9f9b4194ee47ccb14795e06fc7696751eb0db108862f992dfc4a8bc3c96c52c3f1d5456d778eca2e9f62fe120c92d3934e6d5f4723bad8a675a805603103ba1b8f2c068d61f13ea6e1df4b2d39d2a3cf01632ab5377f13831a609e559579d9396e30c1e0e98beb3c2287085e76c866cf012480dc1037b7caafdabd0679ea47eeebeb6d38c553faaf52e1cf627cd127633a84087ac16e15ed80f5f92bbeb8b3a7d1b2b493de31317bc31f5097b4b87508a43fbe28ba04d006f88b2d1b89ddfcdbc54c75d31b8c5a0267b62a98100625e396477ad2ffebd5d54f73b830544a86cd99dffe821359b7105aa63f897be00bfede668959b686904f2ce83985cb10f56e9ae23dc63ebc46ccc79bd74a713896feb30fe82ad0291ece22146bda950b5ab363b9604352582d37cd5a62a3d0cb95e4a4f848e115ecdad1b3904ea213afd0c1a08c48f14940372d218ac15f8ddc802e0920fcfc32195bead81efd2d0ea38dc49a820388b31a9e45730b62cc92be60fbcba39d1c55abe756ac0ab936f013503cc8974c5d106994566558272886746d806427b1911aa651470d86eccac42110668ea3aae9d3ec5c460b0281624b2284565c33a2e9a6b94ede61d3e779b8956cc40cba64b837cba6e60f1fd7ffdaefe3c25ae14777d20a8a73ad879fb8fb3c5d2029e099b71c8347e1e29143b4505bfa46e12678a955fc38de4774fed1118e9029e2133277165180c25a637b7d9abae7f6159bb80cd08ef00b51d0d0eb6d0eb31b7f97ca1399fa1cab99a7c171b37aa9654e8895bbdf35662f9e0949b5ba57b6747c03e2fd4aab0c3ffcf3ae848406f85c59d31c0dd71cbc69f10407ae634c73697e6bdab56e0698096f8ff2cf597f8715676e729157d396321e098d451ca1efd4abb19720c65cb8c08f6f81e7b5ccb36576793c9c57e1b1d33a2a7028fa02d8ea4fe95dd32e2aae39427ee2081fa704c72f24de85d6d85a6f9d795e9e77f84def278fa2883cf58795f395072f301877bbb7b62ce3c3f77544ff0060db66cf010642662379b0ea2077dc1c0e1ade31d08aa612d21dfd6090d6b21e5b03bcccc4825f7049033f74546427dc200a1fbb9e6ad4f9e16cd8fbcf99ad543035973fc506bb235503de50c7080bf61d4c9f0d81822fc6a5b216d41a139e27d5ceeadd4c5451918deccbb06a8d1f9e63ad13bd5937cd8408ee9ed76ca25f8d0005f8d0a7b5ea06715b69f57f5522e5a174250a2ac26d7d3451ea2e5abc9bb1d790cced4a91206861601656af42cd3d86da80504c308d885ca0bb4f6bd8a3b70be524dce0b6d3319a36f9d6c71dbe37a62cfa3ccdabb0e2a10621d18e7f9f1d4e4e155c43da9cfa9bccd6ace933e85118bd1ce2c884a02c56cb78f45332f38d55abf71552e330badd49d124b368423a66de249c72aed8335c339689674d4dba1426c7a11174c4b9a1d3dc6098d095457fec747a10a9a72d8fa9c25ad26affc389b6ddc6fb8f5e7a6add19bb4e0bd4f2178a54102aadab1737dcfe0dd01839f5fe0e29593411f6c9fc8616510b790dc3a443d8013a7ae44db80a133298e7af2f551ce2f2e8eef71a950c70f0ce5517fee9ca6f260389718a42ab8e547680ba4c4fbe1f8672cf9417eb19b3af2b3ef8815d6cac0f76343bdbfa50ffb74fc504563a98c0218217380ade214d76d0317779ab9e6848b39ff5a73468341ba905b7bf74dc9be59e2a39fd17c1090e1afbbd12835aa3538027a3ea8a9cfd50348f53305dc3ff05f178689360168e473098428191f884f8294031387c3fe82e6fb9c3f532de647a6462cd06991cb796dd793158cf01aba9718e230a423666010d81ae8c325f0e9ef5e0cbd3dbbf0f07d498b6601af9c55a73ca8ed56d53cc49cc7cd8675c545a1c22578a0fad7df04bd5fe184cef4e2266300e5ddf1aa557f51ddd56feeb8dbd8f08aab027511f278e69d4a3224824600fd9804bcf9f4829b24fcd10a6280c82ff83cb8db8ea6c119047b8fb6814158e38aebe5cbed0fbf259b6524896c09a950d7b21d5ade27d3e530d808a0afc53114e360aee93ea24e687586aab305bc55b92e1c2089e032317e171239ffdf13c24bd16d5e294139efba8b544d3d526247a2609042488cc62099f56d12db27df158227d8da111097fa2f1797d6a4fe68628387918e6fdfa05f3be4aafd81cfc200bdd0a78bbf9a2c36228d6c0dc0ced1753f8ab8ed2dafe9df44724d329f09476e514fee5121d25e9ddd3c40458b63fe75f28917f1e09eac3e95fe6f5f87378eaa1729adce8f07c27bbec02467f64254f15fed662db37b537c7ea032dcf675dd39c43bd849cf36194259d29d8d30e053ca79530cc0f5d9a5b480095da1fa84ed271c5937695e798accb99bfefcd4ce6b85ae9b8b264c44aeb0c6034aeb3b46ab3555ec26b63910da35b6b4fe5f52ae007f17e82ec966e7aba1c3cecac9942c96fdaa4e20a715d840434b461675423d9ce6a44b224a47ebca30023c9c8af32340b51c9cbdb01d093c77f51f8abbec06a28ac5376fe7ffeb532ca2abf7b8c21759b223a1b5dd0edbbad9d34ec5c705011d08b77c54c7122d77404c6f3a038f4a764fd313adba5b7a902b4daa68a985a9b4a9c44e9e7b6a7362df24b56c938b446fadcde5f113bcf9f1468828cdf6e77839b46f359a40c386c1f744f3f20b1146509d929c20bf287960c6ac84d3cc4c71d9e6a70f5c2fe5526c40d80bfbe2ec81038fe14ddf18ac25ddf3ff788e0d43a1a4308d4439ca7bfbb9ea0b3149974b557f8dad9bad938247d8d1f45ba30fa1e42737159bd736a29587520a994cc4b0254e6db150686cd1555a6ec087eae8af23f57dc7e23385496eec05b09a7b63e1f8574b370c69d618c64e9c60f27860701fe7a43f2010638f567323bf017292a364e9c9cf1ea54d3344ea0397206defa5e3cb0fce2ff16a722a659c9b91ba4e3ff7615ee04cce0e7b3b14dadcf5b7fb90618e87b3574f0b41ae4ed69ce22910914d100bb308b63cc1d2aeb6131d46e6bb5dc4c580844c0159cb84e66473d6c6e3019d7cee10ad45267b7cc268442a87fba1b7855a4bbf642674c0468090028c9d2d77b7ca97934318c279123b55014195806c5f7ce923a5cd5466ced43122e17647c4f2f35e3d0930f0b71eb3423d1712b0c48b736382201eb9b11836addbab973dc8a620b54b3b9ecb73b6746f71c3deed654ffc1d336bd859e51b1bb0721e5eefea506138983a81397a05de53fc767b48a1024e37f7c670dbfcc5f34e460ca08c389c6916be88085ee331257678e4069a8838f6c59d8f5c246bde970e10e0be8dc5728cb09c1b561765d970a69a822543054dc883c097640521fa7236180040db17b61ae35b917fd3c63e5ffe58d9e5abf0bbbf8da24e8dd125bc6c77c368ef56bc0260268d2ec3bd40d27e11867eb5efcb20122f30f0fc90f5b93de768eff9442c7c7ad2b04c01ad03b382fc7aefc003a9336d1b2c145537b8bca7b9e494da1f5e278d9bad7236c9d5558e08d3ccc14a14d090fbfc5bf0ec1230c8745c9ca832ea1fe166725d3aa505e8d9d22860c61aa6bbacd147c18346b1f94b4b59789c31125db3ca93c4489dbcaed539ca1f6db07661a4bb276476b3686b1028de8a2fb90a5dd5a00e9d2a3d72cf5de48ee5430a34747d8c990ced00a3e16e493041bb7a90044076f6dabfe3853e25d2c0f866621168ff66a318402561b3939af9159671f4247fe50e89d672ed6cacda3d21ce636207ef91e0e2ebc3eaeb00c4b59216c6d1befd57dfdc92529ebb7d0e195333ff9d54bc30c3a47f7ff37c1c5fd6838172445286241e7a3211f1dba5519692750caf9478cd50188d840224886ba910853a9f87213e8d0df2e10c5fae41cac3f64c9fdd5aa3114cbea37c11c452e10ebbf9391f574f422f0edd798b6753a05812893f35ee5b6134150a3f501e120997228f6fc6298c4379c0f0225c20cf1c74448b41572358c7a8977b83a5a2ff4ee497c44afa1d833b42ac57cac88c39709d603d74e543f28e8d6f4569b7666e33b2f292deb2285a49f2d93af6ae9109778f15eac0e15625d98c2b200c66c2a36fdd3cf63e9b34bc16ba4b38b033a676ae44ce80dac233ccbbae7ff999f4deabee29ac9dd44ce5b21174aa683499a945e13da13c38b8079bbc6b07dbfafc4ea616c7fd5f40ee4f133584d1f0773f63f9ac5fcb17d7c0465cb2b0d5a63002eb22adfdc53c82964c910da16bb8b7eef863c4b6c53dcd882526ba439a77f7040ca286e2032dd164e752f6ecdcf4ede3db471651b9f2f49441676f1343af352be07191acc8cc43b9c7c0c165f99590a8ac5aadedbc90c614f105f5cbe0290a96c1cae2d9b01135067549162f33b3a6cc6db8b0db8742bd9d41f6a7f03896b1297b75b81b85c0e2e9e1e6183cb33558d6069f3b7b9c41824e6835c85d354ade7b85b105392ab2bc79bd8f265a42110eae247dc8e3d206792b54d46a0c8c0e57f148c99a1c92adcad45e07eb49868d26f1a59c4263b67a0638d845ab423cb94bb4ea6004a8d300b2fc3a18e6577c37c799f2aaf951ca07db8968b5604961558b1ef7931501afec7a44aae018f5a5809883d3c5a12743c3b7484f0e505aad1dde443d5f11cf39fbb74ec5c02500e785f5f61c93eb7269dcc8dbc623282bb02290bc401ca120fb93b43bec4a65fc450cb9a7cd0d8550e86e6e3ffc57123d2d3d0d12e0a8bfec21165361b6447a1c5244935081b065126d9199b1617211cde95cb600042f4b3e1e5d3d10f536b8a73fc1df5bc136614bf08e8e653cb6212a44141c32012f0db4705b3ea91a4ebefe4b5a7b47de07facc074762aa87f770870598d350e933744dabcc910cc0ba0d59adeaa35608a8d42a2216b140710087ae5446a6f38628fe5d34f8bafb5df9e842bde89c59d44058715c39611ef7630b5213170bc381c7034ea55271f0245c66318425b33882d9a9a02c973e78e13d12ae91e7f6f920d9a0513a29c771ec1e6348c682ffeabb73d169795e2ae2cb632c1811de8ae36b976b82980657a8acc73dabbab8c052216fc1a5823fa374c6d144f953337df6aad8fb4a249370e76898677d6fc0abcbd37aa1248d4ec7ebf79dafed8de0f0ab0e2eecc1592411e8e2caecb3dbb4a17ea30cf6ef6739021e3988c242a48fab17e8ae524be46087260e3248a59195055806bff7d0e1809d06278dda57bba59a3a3928e75cea128ca8beb35129db12d24a2ead3018a4487d50603b70a2cfd38a53a6c73da74ded63a796e0d889238b55be25f556d8aaa3aab7e7944c620df0735b5e848e8e2283904960d712c39a6f7a1cb5dae4de52848155c287316286dae069714ea5390cffad0643b1889b99aa685f0c160618301e9f65f73caa0bd9eb8c0f51080d01826a6d70077edd4f30afd9a9f1ee7459eacec69b7b66de2ddbb612e1f557f60398aa720309ddcecd3fe24342b6b0275bf24aa5016be9f46fea4db611fa3a3ddd0c294bb431c1e55b912a0ad49c79f74745ee2e5d398538bd7dbc5c3648f54b2fc9220e1b0793250d21e9344f4956aaaedc4033efe491ae1d1dc8124e0aa8befdfb5acb394fa65a57f8c71495814d7da4d924452100dd47c476007e27d827aadeebfb043d755917ddd3af4fc242e0349b3f08964d8cb590996fd13f278a624d73bcbe99b77ec26e98a7cd3da851bd383013592c1b5d0ae3c9e25869f5f66993d4e77c62575943dbba451ace86f41e7aa32d863275f49bb7b793bb40ca7e3e87e260880f522237702d43033e103e0e11c6082fbdcc1f2cd94420995deacd5b52d469df14ab47a4961b2495129cdf4dd9570f6f426dd1ce08eb6d4e7f1b2611d3ffd8e579e6c6af83aafeb8325240ed6ffaff37c9f34a176f7306facfa217eb28a501e6b6602e804eadd7fb05402f5ab38297c1c02dc22d2f13d0b05760d963ddbff3cbfaaca09df8387f00a2f34804943f8533c4072d1d6b8304ae791fea927c66133898a65b78a27cf55260287d84a2db704e9e9d7d956d9b130071b0bc155bf61026f5791413dd05a230e35351372e0758f190791cba63aceeb8e4781805efcbd416135a15af624e24fcbab328e21b0cc5053a1595382e2579c9896dd4803b515a8186a4bee36e7bde58382d3caf54aa8700bc70bb2f807e5cd4d35f16f7386df00dba1a639fcbd6ad71dc7cf45b0db35b8b00f247bee35f37bf63921afb4b79511cc94385e9704de715c83bc369103782b4d0ac3f61c7071c2c58f08cdd971ea553111285ad6bbdf4d0eaf1f33dbdf010522d3aeceafa16e3debb848169384c4d0beb15b0908768bcb2ab6cef53c32eade2e3f8c21f085d9d550ba656a53f96442896c8d4004efb1389e1c3b2fe2aff412c33ab3449abaf23126b7e9d33b15511c836e2a8af2ae4ac43702f493fbcc0c62058cf3da7c417f4cb51e60ada70b2b796814f4c71e0277628f9cb61e2d8feec578575bfb0afd6b932d417a36c01b49b971947403aae6137063838f81ea74f696fc19e701fdc701f3a923c4316f9822c2c3ae1326848596a418db26d403899a067291d7c16a8aafba89b79bfa3bcb5a4f4fdee41523630c1c7bbe05e85a255f35b53ad3a7b0c39fcca1d4fbaa0013c3f9e4999232abe8d59145f0950e607e442e3aa87932e800073ff14c556cdeae9d700ed88aff9615f787a88baf2122c6f94f7012e398bb7929e929358be3d2555a51b61b7507f1124af84dcd49e6332f0776163e0628d62df76d13817a122ff55dc3ade1dac41b8a309940e21bc1c40b9404435536bf74d56b26b194f7ede5c52c83215badabeeef0fccefb60df609263a7679ade9f3b322ae0c0cf8b29e38068e22cb1e87f1021a7c4a530277859a6ec83b167bf2c4c9ec6d8a1804a35d2c223235f587ba137bdc6a13c4601bdb387d1a50218799ca3cf813aa6b6e1f290d62526ce0e59505059e3b8438f154ad82584c7ee284cbef4a6b1526f710263a20fca1dbc0014b92414ac542f712bdabd429747c2efc6e4e7c9cb09dc37479effb87c6092b6d55dfe04f4bb39fe0d8656aba3c45a3efe020b54eea72ae9352dee97e9092c2046635b266c6e2a7904d0c665688c10838f4989d0eca33eade321b6ff95c0375dae841729d56abdbb3cf9af43e53829eb0a859ede13cf607f9c7949e0d89e3c811d95c2da4235825d9a35d821c3009876824f0bd82a33f8ec1c5e2b43fe80feec2b5303d34e47fc5d07b667866db6a8f129d8420182d9e53afd012f0860eefe052a488324b0a31f85034b8167d17915c4e7ada9ad71f0c01bbd4fa30bcf97b1702ecaa5c58fd90f5f39b38897efced76ebcaa5baea771fe498ba012712a103f01f80161d560fe0933722e44930c3d6ccfa1d309d6d24aac1f03210ee965c7ff186eb3a54768b869d0a0f0b53e75efedb47e2d549b505c9d87220d9f6f8a0d8ace7f0b1a7b9b1eec5779e24880e59068153846854f0707fd381e1826b0ffc51b849ddc2e2f6d80e7d2fc3a71bea38d361bdc7e51268ebac941c9629102e64de509c146fa2b98c38dd7b8272c6453f03f3b073584db4ecb13331784e8e3b91e69c86a418b082df756c7d685663c1b9b93ab74f375caac0c34f089d68602df0280dc985d48d308399896e1ba5aef0804b0ab8ceaee1da75e72681cc21ac0717f7aae78db041626d131fc7e5bbad60998d85f01756af49d692a57f1722beee755ea2dcaff2d8a087ad8808c0ab7980591f4fc6e52d8a94b442ab1ff2091aab51bc467f0ceee714b329bca24f9f049dd7d00cb73982fd2d8632b7e2286e2bed7460e22c4839e88bed1825e28e26a50aeeac7739cf234d5d2d51b024b88452b1c97c2b1c5405d8c1fc25746101a4e1cf0290cdc5a1c470ea3eb555717899e2d0807b6abfb24741cde7dd8a3dbbf47e9fc89cd028909e5905ef2f05fd37c99330fff97ca5ee244eb8ea8e0e62b98176f6fddffc7f437eca7c91e544f103a7aebaa72091d8e1ee683f17634add19d049f80774d2bf86265e69d179f90dac0e11198f5c599515299e67637a4a3f86cee21519993756dd0bf5ee3574a8294ad25e2a859a7a5c4b0a939cf5654d8b630edb08f1f70af57af29c1ddb6ec7a2da16714e775606e8b736fe7a54e3ca84f7a5a38103e0cd08d04f2d1286ae7f8a07993758254f76144a6908b7e9f53adaacdd397acd6f9fe8bfdebd0b90aeaa15b2874629bf5f0ff99116fc9dbdd222f9ec39ec035cbd20cd16dda12cf108c19c5dbe2c38cdace1c710a16cf5b0f6914135d2973079c1f1598bef5705e5aa53958d943b09e602d6c0039655464b449d3c9fea5a35d95ee542a6225d9142e7ce99f71d9d3b2ef48592e58cec2ffb7cdb2c21c2a0da2eb9c5afb24bdd1d3782a6a1cd6e108722dc3b2fb6d5e15acce5f000d63f6b20665ca941bed60044f95c05b2185610be13b37ebbea8c9bc48617a99f42da19510bd45e33a4472a9a545b98fec745abab50abff684d1614ed8b180d11bb37e09039912c33209cfe01290501200b3a6679b6e5bbffdf2af807c912f83e5d89d62a7a62f1cc9652c85a5db67e8f4678c1105c6dd52bca5348cec3c17182533e556dd0bce7338adadbdb34a08f3dc7776230f65a5c0f2f275e68cb5cf52530cfde0999c4139343a8c2737db000005222c2453f7c82304eb4481b834486ec129076dfded6da68f66cf0963016cae1de9e6e6b47ab19cd746dd1dff82c8f2f76ec9c1d2b0a4032c81f4502ad7af1ce3fe16ac89f84bef4a37c4516f11bb367b3aa4ccdf8f1512962f674dba147f5cc5df5cc95f2a35390be28f6aa2592dfe324ece4f049e90a2af5f89b0fe75766f38bcfa1d8a17eae9bf22100435ddb715ed040ef7832ccbf6d81be06c6367d0b7e3f4087dcdaee96a70b9ec25118c6eb92a508a4329a04dfe8ce706b0c266564a53dcf2d216d49ff45694d7eaaaf7612ae5e9455fa2ab87e0fa996b8e38cc496a7fc1e4025696013acc464e03316b11993ccd821ce3455d1faa20045742b50ec5ff653e4506206dff272ad771292e4a87be53c4cf7dea726711bf5b5f7b0d8d680861a7f2d6d707b2894d0824d9788defdb32f00b137feeb8602aef083ae6fbc1bb0d658036427c93bbe08ba74e18f1ac16f81e92d034b26e7e7a2c16c40d58dee6653713b4d0ab2b7d6e2c54e93a8b21f57854f1b898ec2cb33ec24b644b2728c2f5c1f02c34908985ea18041f0418ddcd3438853945c4b94834300e59906a03de22847a29be689e6899396eac5dba47f1eb948bf4542e048edcc54e981ef63d3f27f9fa77ee52c60a693598f570dd7eff17d22619f55a68c75a8484f2e43de43d793bd3a954cc448a62a604b05968b0bac8b95dd14454a92e89a2e82b5efb32ebb72163bdfeb55aeb205e19aba587aa74c02da99b8431c4ef49d93e5c21340aa2075f81ba283ad3280aee674860f7943d547feccce59cdee17b58acd4bac5b68b4439bf7c7eeec4a171a994c9332e0cb8749befdded5d2b4c8d0957b1dc5be075bcbee71503d493aaee95a387fa53775cefea320fe08e14d780483cd1411df9d3e28f26e0f4f47830609d374975ca6ba5e48e10708123bf0f71f865236becfe851c09fef8afd1abfb591f1409401e0f17dfdf13768bc600fcb701bd1319ad9be4b6514e881683e9bf1c6b6d4e87f30f26dce1c4808db0a12542cbca251264e3f4bd8f4992daf872203a103c06075bfc47423a285ebebf94b4f83029cd8b064285f5c92206d7e0bfa81a6ceb88928ec5a8b6c50b88674bac07d33f3b91847d112e265250191f17a976c918e094f508d6daf65e51328919600ba6b184f27f83c359c1573e42e31b995d89d883a69a4b5387b5fe41da957e9d3c2f3f6c74035eea939f91eb2c8add9ad461967dcdbe76bbfc2069c6c3324736567c463321d5ff05d67ac4de39ab59d872442e4e68821c7f0335dfb0f56aa348c306ffa80f48256b377ccb7a216b6ce0f63676a5fec17615d6df698554181fee917886cccdd533cbde906f4cbfc6aebf8a1da45aaf9101e1eaee49c1de11d8d019afa6a19a0d05665cdd9a6d784e61a8674b229c42f6abc6d00da595c2223d0c79654ca5956a47b729ef5263f048366fa7d3574be327fce3fe1200cce93614954d5ae0ef70dcc117b6b9c4d85a6f435fef5b60be4a5f72057ffe546508cbaf123799301357ba21afacca89faaca1c8c44c4af9dc7bc28ae4bb8f3d8beab6e1abef593d52424351d46de1bd277a9d145546c9d18d7af1079b92555e799aec20001f1e63056034d19dcadd6b0fa2f1fdefc82f1b91b907eda002b55fb8d74e30bdb2db5eb43c395a4b7e0e921af8256a2b8c5a6b2d268fdf09f40b94d71bda19cf28d13d0abc1d9017620f91a9a79d5f210fa9b158e0908608c65dfffd171ccc108652dc916651488d019ea0976d71cfaeebeb85a4566909c184f69917f0d8680f24226cb591d9d3494f748c74a6b2aad8265cf0d1851947ee6d6dc203bf335a3912a07777ceaa0e71b1f9f66c74c293d31d50049f537be44a84228f1cd129a97af33e9f911c76dc420d4725d5127a0ce84ebe22e0d173e790e7a9a1d0b7a851246c4ae01b4fc617c09b795294c68f7f10b75ccb712ca4afc00d0ce905d76decaed6393aa14b23534523df1059c71457b48d3a2c36f26a1efaf9a615ec0572ec279068d5c1202144865a2178dc3164f1432ab3086b8de0c923076a0422404781b4bc83365e535301ebd2560b234b861d6c77f631c138a49eb46d92ef46b8fa7dffe28a6909b67f2fed74549a0ff77f98cda6547ba7fc35d2fdc94a8dfbffd466ae963c2f8d6a62e3d6527c04f81967c87e94e09f15fe8861c2304df52ae644d6769f1c1ac18af2e80cb6db3a6fc816fd60dc8a3f297814168c46ee4d6aadf411228e13c70a20b6e5186758c23ac7b639568ef22f83c3508c80da835223106499e66fe145c95bb12394be61e344e0d7212c46dac8e71f7c39f3ded5eeb39e67de1dc7e46e5f7f6f426c01b5f246a0218f4969eafbdb7286a46656f7f71f7c3c32ae6d9667593f68645efd73ffc15dd48fa5d93b9da228cef23554808e2b162b17159733ae9d18bc97e376b92d3041adf0d9b1a976e011a3c773f9c4b853c56e84b83c2f0487521b2403c94addb9875c182f67636c851ad4d88dbd71e6ecbcd036ff226a56da18e5f263eeefc7c000bf8d9d5e4903499c49cf7b64dc1db72880e4489fc0ecdbaab11f311be9adc4730044c13ecf753913bc916ed60c407465cf3e40f9b9ac79189fcdc9477e7895d701571e7f8a1d0c62ea53f5ab977218d9a51fc8a2ec621072dd8cef0b1e79db6247e9205adb497f80fc6351c8b172fa7d81959d15dac714dcb2b9535dc7425ac946c599108ca969b35dcbe8f5d40cd0eb04215434bd470adc8454e24f891bdb4d241f8a302dc54bd1a0794524e1fa37b901c6edbf9434455834215f228679c8140f5a36200ed30e38e37ee3a5823bb60461e1a588b2786c033e035df913b5ccc27073c72faf7281b4a665100dbbacecc44f1b6a79ea9f23089886a8726969d1bd50943b981797a767bf1721c90365b40ec65195faa7baeadbee454c4fcef829799720bf01bb4984577af38728a7374c00ee4c41fc1a36ac852e6bf71bf4b3958c357854060b38aa4a0e1806cc4b7e56c57704ab62fe958a3e747fdb6dd4cfaba2ed5c40ef7bdfbc4a9b5337a09945962b3cd8dab3e72c6c3e5fdfea4b7ed0e3dd4b032d06f5385ba8529f6e59c02762bf30be81249dc4c45a6cf556925a5b1f48c5b0f202d2170843d65f97602ee11315dacc2364bbc359fd2601cf1eebed4ba40a0fb6941971dc9ec7e6439ff50b4b260b623d3fdac411c8b375e441e5135f689992856c6b3813823d3e223b4d87578220995dd60ca5e0b2c507472d63416eb487e9fc1efde17face3621b3d9990476139960f2add98f745abe04fded5ee680ffa27b0f3eb99a940ba87c859c369dc0f1dc124d1e5ab93cd08e95541e0179d2698d91b36cc9eb4559f53e8d271cf2fc2bc6d1116389bfeaca514081a4e9b427d0cd7015e144902ab208eecfc4323437b1852d06aab13af59291fe999d55bd0b6814de63f287ee51768e7730892aef8ca01e3f28d1a0b888c4431718e10bea25b0d1f07a70abffa65a263ab0adcba8d87172791073dc734827a5f4afdba0de99d745c87b9225d804b6f76ab1e74a81849b48576ac2a66003be57e4f2cdecc400d2685f8ea1b89276ba9edbc1407780121f9e15352b615800a4008ad4e2744a72453f037138291ba105dcb0b09ce23c66d48312de11631c8f211d5fddd440f3b181ecd9850c137392f8b4e27c93ea370b510300eb6daf945f269927c46c59e2d1457cc93533a3c2a8ad99f3d262fdb8261f5a14ad8188144d2bc50c6529214c99ffbef962c116e450bee643f83654bce786b5bd815a96900e076ed074bbf4b5348923cfd41231592b44c9f7a12e1f0dbb72ef3e19af906dcd4cd0882f9cdbab68ebba9363480d1230a0fb2825c30a6075bb4373dcb94d9b2728487e1c20f6d7b3905001d85126a6e622a0b51307e17b214448807fcab87669b2cd4ad3fd6e7ea82bd3552d850a3c3e1bf73303fcc6704bbd3dcbac6c48ca8524f5be65e7163a2b7a88cf59c6e796b07b2284c7055db49f15f6860dbbb583500cea6bc1b4927984ec074acd7127f678317986dd5f6dff926988d05261a7f4a63ec2f419dd2af58f16b32bc797265c3f7e7983277a2ae2da876bf924f28ce01855f66d6a070ac6bd238459058e1c2402f8c3fd0f675587532f9a27c7a7bc056f6d6872f996963401caefa4e44a280a358c0aeea81ae26edc9d5bb7fb4daa3d82c23ff0b8f6aa090e10d6615464d89cbc8a9340ca8a2e04c5d0b0e0111fef53ffcaff6f2803902db582a2b9c58d7f37b2c049af022426bdd00437162f93096d33334523e7e660533a08ab47f86c657e5f4ff42e7c71936bdc95112d2d5dc7e2df56671c09e0cf4929e3b24ac512c544ed9f3deb23f242b9c4a6e26851c86bbe0af8694737895be53966003438ac41732778a1e0aa82a937f4e56e76070b3800b1373aa7b1d98fcfe74a5527a2501d297efce04711e6661c559374af330e814d87cf584d4df07e58aadd56700c1767fad8014be64b1651aa809c168aaba0d8d5d373db178b1caa505f1750e429573590a09666197d441fb700c8acf7a28ae27683e8466e98363c180c902ad8a28a4ab8d6f9b5b75ecf9904a5305f8c3f626de2124e66274879304f0c7925bfed84f8c024d827a32bf86eba282f1aa5a05e3fd546d4356337964cb7531ee5a763f57d586acca02405d38388dacf7510657ef34eecf9af73434f4005274646eefc8fd4d0027aa5c56bbd7adab92e277a4444f650611008e77ff37ac70697a238b31444f5cd4759ec3e05a33f6e86e399aec25cc52bd9c574f4fb23e78464195b27df13c19bdc46673a4a2b8b28398f8644b990e2df001ae6fed9929302a4e7326af3b6365728e4cc956c9982e1c516d433a82ad996aaa61d51b63cd0b2948b88b579dcae2c18f687544b857cc33e4a32442358bf9eed3873199c489fbea364441fcec82f583dfbd65567bbc6819010587a325481dbccddcc4b7c94996fe086c9fd25330287120dde26b5be862501acffd46ff3db3617fcff9cdfea40b8dbc19af16887cf34cf98164942ec4beba3af977997a38cffca3402aed697bf80dd8688230d432c39fea56ee715b5893b2cb738c691dd223df46140ceb23cf5576f7d285c6ecbeaa7349ffd155c59bcb57b7d26ef47e435c6ed9f49bb8c85c4ce13c3fea7561817a9aa2a9ad8af24c3376bf813bcd23ae4df45e443b3aa8d281c1ed557d99852ef5d47ea1b86b06c752639d6fd1c32b4858ad179ccddc84f10be75189de6a17e67c5b3ed85c1f209fb2e7da89289c6db30fb9821b6327b70b5173dc5e37ac99f53f55fd8831b94360ad8aa3dcdf3e21484a08444316adf5b3ce021d5a5cdb10b7c527fd090268fc92c176f2f72efc84a20bb085f6f602db7e8821902aadf05f26d1eef712a69cf5200cdfa71602543cf0f231a7a6aa605cb3333e8621ce557539dfd96bea70c2210764f7fd211d2aca0843ac6bfce79b1d69bece2b87994dab202a845ebf5b7350568b42a33cba371dcd8ab932938bf25b9e2cf344a5e2213f24b33a28b6f117f605b1391cd87aeed78554350694e771e91e0cff9ba9d0fb316388c47aeb2077cfa9926e62cfc6810f3d750db47f57fc9a04e7fc72cf28f663c9a6ad164df183fcadf78c664a839f28c00ec5e30c2ffe7f1159792422209cfb0600d99dcd6608d6262915eb5aa7f9dec2ec084586ce9e5e4b7f70139c6f03cb2f8059d9144dd070cd4461bd1484b8eff9bcf54dfa41f7d9f0e548693181c3395906c0ec368816f8ed3884c25a1a227bb0ef2b0fad36c2298acd638f2652d88aff42a858b76cbfe4d933f7a8794dc33a46d8149e9aeb25b036d84d960eed742880ae0933482f3de44ff50ac36ccdb2c3ea97468fd827479573e233c4e99ef28040d4a91c17b02c66d77e4d451a23c958774283e0d5a62bbee62ff1075c8b456870878a24604d78af150d24488b899b3d0ed707feea100405289d620e7dd116df8ea7d9c790e1115d2da1cfdfbf99baaa39957db3b82ed59613174e2f6523919edaede23fb2f0f1aef5ca168795704b9ee18a9f565eee4e7466bb24f493ad68983dfecb69743de9843c4277897ed775dc03f13cffc6f37531a3378b38c5fbefb49e8ee0b797a8fa9cd84f011bfdc1befa42047c279c72c11fcfca4fddeee60d3dddb87c0b6702ff5f04da7718a311c02cf6910909d3aaaf0d9663bf6c9c4d2eab4e059b2afac02301e3f643faed3d03f97fb1db21623a72358430cb07c95d577ee88e2a780b83bd3897135c81a3d77f23182a292b2076cc61af27668cd1bbfcdc1e4e1fd50e08216513a64ed2f36a6e25c4d0a0287334bbacc84c997f7ebc4733d05e4fbb7dfcffc1975c343b745d7769fe310e7eb6c9eb03877598f7bdef82e2fb7af6cab38bbbddb2edbea39c9c12ab82cfda2253c8d51eee7f552e604d374b2c0caeb715941b00fc223840587feb7079dba4bb9fe6d3be33c3bbfa06af34cd1187d95392cd35cc65d407f57c6caf730ad68c53a0ccce9dcebe29353cc40206f0cb681ca2558549cab7638102d000e5e48c36ad4925e5ab733d5e06c851c3fd5992463ae765d71cda28d4e581931ac44229191f7482964821d47807e4e89b2baafa64204fce2e4a39dbad3646f6b996eb624f4e5cb15bb1357218c5fa375310024e7e256a63ac6b8623d3b99ecee29a18f54a868d1a06a083f814f44623efec900f0a0685ecc553238ad8e6896cce61b6a72b8c8ea3857e10976843d9b771bb8578bbf911e8c530a4f50d3a52074b2b0e17cd0098423a27d82cf0a1b1ab5caa5618cec621a1dacc16ccb5e99def97a7c6989074951108419cf2d22d8b1483c45374bd44b0ebc4ea498b053bf3ebbf14ce5baf6024b9cfde2512024cfaaaef0b6756bc014190be83eaa92073bdc5279d5f76077f4df7b0bc3c608756381c7f72040a0b6de9d5a9f4db6c88624e02d0cb73f2ee0b860eb5ce4b204a9a8b29e1b306fe2ac73a42f662d5595d63569dc4cd05e4eae5a37b2807613fe02be67cd9d6e14127b67298578c0c59e8078da58dd89e8786432adbffce3a5a1d6f037ec6f62fb0453814e9fa50acc7813e3c759d73a822d7ed900228b695026fbf1e01666a2eb157ecb4283b6938c9e27b2947cee9312d161fb0d5b3f120c765c3ab52dfc63a13c7be52e37c8614e7100ebfba2a2c08d2a09eef9144aba2ba33d5c79ef8a2ae36e314e73c5a4f97910825c07eae223037f2fb3006d40685b9437b71d482225267ab121e6071bbddc0b13e25cf215ab5823f375a2fc4ea04a07ec0f050a69638696f380a5ed7270b3f8fdd6a8064bb8179850878c0f4ab8e9d4c820feb99b073ecbc9be08d4f1cbcb899a7dda62116b2351663ea9544a0fa9a6b5aac58bffcd83e4f07cb324465916487bc3f20027308b97c0d2d890832a7255cc8161164379998a164e0f4cf05e019bd27e2f2142e4d3aa783ddabfac995bbe59bead371af46f7497c19f750abf16b41784c06bfd56741ae29bfd93742659fa7d8475c88dc9e6fd88b03e8a8cb056223389c03142bdf6dbfed1c024c1c4d5c54fc65727df6773827602790cae8880cdb99794378046acf61c96738851cdb3dbb0ba8a329e20b81646b40b5a4d075a7bcf5c20bd5a5b79f890a1754157d5ec04907acd03131c69daed6a207d1b4c767bd5f56c50b25ec26e525c018c3369cbed407273426c693632b9fb916f1046b25169a562c0d1bdadd5d200207b593f3553cc72726cbc540a49ad5aee4c3d1ea501aedf292cf1afc8bc55edaca6162b452edaa26adedcdeaadcadb0811ffdb7cb7730e6d7b8534023bd79cb8ef078063560b684b18acd2b38e1f9e2c344c5c41f51207f0238df3af7b11b61c322734c0c11f671d47f871f6c298a60cd4fe5e8ab65d46548a02ad0ebc77b0262934ba2bf4de89ed8f9794c2ecbd414da7e54528d1ef56919835f4799fce721ceaed6d5134382ca10ef6d1c80133b97bebfc5c1f44004cc03adaa04788463e0a0bffbd1a0532e68f02961b1900e97c7482986e4c013b4e3355067d375cdf17f41ea0f00c2248e12ebbfa6ab08d7ccb84dd9d56542c9a392daafff7df41c2a8cf4cfb36a15f414f0c1fb8e1a7a04a8ae070682efd4aa6cbc7930ebcb95ae08cb5ec5715eb3e0607655b4b8cfa48533d4ae53eb531de19e3522239aededa1b9d30f5a051ef24f1f23596163329062506d780f2d67fdec7fa62276d2fe4126d6c3cf8090e549fbb789afd2fa79bd33e5b6af6380d4187c512471a44518294a9393368b3ba8ac3d157d1670e2c3ba1f7a3f0c252648bb8f52f72e75998338835a382806754b360828ad55f9566a1554c548cd58f566b0143abbcd4d781c73b82f8f472edbd90cd967e79f26c28ab0306b24dd85c5a0b319633ec91da1a1d2a4feb221560ef91adeaaff1335f71700d88d09095cfae011fca3f34adee0dce3927ff1bf94dd0c9553a4588db6fadc5e0abaa75e39fa630ac81deb3f93d98b9b935561321517e63cb90822ea880381cdc771dc8c2c72b67f7e3b2af6ae3b3771bc74cee4e6b5e3049c87dcb1f75cfd872b616b9605aa530764aaaf7bf6a3baffcdb2c94bbc3bbe402495e702219a6436281e1b457535ba0970e17612b863d231c617fe2d64ce055d0c8529f2622e17a432c546a7e4b21eb8bbc5e839f7bf0f5973d60d957a54206db1a1c8b322b596bbc36df1e9a219a72f0c0f01a516c8f25eb4ac456d099d0dd36033dd69436fb362ca673e0ec20bc321483bb024dae2f3e1804822436fbb3c63f17925907ad565507b5728efa7d781564785d3f17c236343ee0089fcc798ca4a77890a286dc90f9c853a755e25ef5b42a604257e4bda159e8b60a7d3753270cdba597c8846302c2c2263585c0c6f185cf77a5c7dfb6f689fc01aeb6818f6b5e4349f5844a186b78042a102bbeeab9dde43f01431b97bb97c9686bed3bb7eb838f483f258e5745a33cdb630cc7a29e4e6afab493449de34b3a3be55601e514650cb1aa9cfe366f27b5f6a0b57517beebe49dd8d3e57fd6bee9d5ca30302af5777b51a10deac74df94500bd531bcc378134a775690618eeff6293ec3bd115d3761207ad474f28fcf7387f28c02e2cf450ca56f73f2a481c2ee772f34c18deff4fc9093c39f0887e8174cec34e97c9140b7bc34031c7348e4d5f7f16ad22e6e0d4eac520fb225eb8460ea1485b06a136d52116815f6604c0e2b39b1f53151fd8e793ad4f1e966a0357e96a3de10586657cfbd84c840de1c49b9ca8e744e89d577ce880c9ec5b84f6bb390af52c3bbcba5623d097d95a078b64e131aa0022c86cd12f56595ece65b7a6a93832df939f7d515c76d18a2f360c0cf47588618314a7aeda06d66f813a5d84ee32ba0c28b053488b74b08eeb419b771bd0ab00ba6d572072f442c2739133bd908881ff5e56846c3ddfb224c77f8bf9498ab1a45a9e64d4d11938967dab404dfd514bd3fe904638b251b6a925617a5660760e1d20f308e1d599154cc16d12f6bfe01fe485a51ee54367313db25b5450e53aa56658171ab17288bf334837ac9bd374ed5b9dae19c3168edfbf9cbd03f43405ebd38bfd4017f71026e41e595d3c960f33beb845fd35b690d781b35f06194c79d5ee7509a6089f9597a2f7b5bd03f1dacb5f98cbda124d430e47397117a04e7326bbb411003b8a234ec32cef2395237f971667f902d250c159fe921a3edff6f8f5fcd3d4b7c245707866eec494632bba61f52a6ab932a7386658325ebf0536d6945d16929a5f2321ccef078f086d15b5ae6cdd2e9cbf1f733d89246ff614af8e50c9ca963ea3be9363bb90909fd945fc852b9bd73cce2fed3fe277c0033dec2d88e6624282fef8295327a9a72792050746e41d9b275ce58b16b782d6f0261b7c426995235b809af2a4bc03c6018a0b7fa0bd001dee4ce4596f7c7d8f0246984652d04cb5d80587e63339fe3282553cdd19f0510741da080f74dc5c30f91675142ab956ac6f7abb42df80f16a39e9a5d3d5073fe39df3f7f01a5e0af8882bcf9f981328eee5e9db4fbd12848c5bce8c71ea01804b8dc95bdd85f8f6270547e6fb12ee8301e1d97795d80d5056984557aa63a9c356c961e9bd3a34bbb0affbe31f6daf6cc58f9dcead009eeb7889f0f436453d32b335dae9c322056ddfd885007d48513cec81e5c6407220db495054ada802e9a8534d4e216b4961688cd79416197cd60da043e34a94fd9e6f3e79917956a0cf9d18aa130cf046be3253507e6d1d1dc2fb6b04dbddb12b7805304647f25a506369353c042bd46222b03f0129b818a29c1741ea0df543236206ff661c4f7c7076b809e2737ff6b91d02c58de6e2ac39d299b61a069c45f96a11069d3a1c639f07da8b06bbe8a7660249f29fc4198c2548b0d9ff4eac9080e4c017d5727eb8b13aac7a0be87dca8322895a15ba40705443265332c1fd4e438e1758369ae15e1c211161afd5f09f04b4b12c960d99856f2d379ae99a5283801ce06cdd02bd47b97fcd5811af01b8de87f915d2545b3db24978eebf3383db2682a7e872298836cdaca44e9e54f6059c1ca5d718ea5cbb2850b864be791e32e52b25581781caa780938f91a9dfc92a3e17a11f2d6a880f24dd9bf9ae1c9917f15c7803c05dc1401ed219c9f42da8879f126063c7906c987cce8e9c0def1f640ef7ffd9bf1f15ae5c9d960f09182fa398d96a2277ec2d45391a95e1dca8c63518fea704a69b8259e7258a5ccbe16c3b2fc3fcc24eb6aa632e406cd51e1afbd36d799c34af7c6a677cf280943972ce65f7d8781ce60ac1e5786906314c70633494fa699d6c98fc4b9dbc528cc5920eea7cd365471d069726e3ef242f1ad8255cd575f79feddf6f86b021b11c422bff2945635b209780d754e376b05bb1aa38590b39e7af634cb811c7c9baaaecc1d4775365858040ef68850e459e080773a948316ea4d4138f677a2d36352dbaf3ff0f0d89ce151b97ec240ceaa59f68caf4480a81eff41b4a98168e707b477b85666c220d01cfb6edb600c3577f4116ea95d427c378d8fcf269f786e0e0853738727ac55ee2ddfb0fd476fcf4af762b0c53c22660ed434d1c79be5484110092562b15e7607ef44265e61866059fd81dc04f0491e137aae098487e00fb935d1d7f079d45db9ac684b88b1964dee996ff62a52b446e0b88316847e77a674a33d21f9421503975ad2e2653266373d070fd9cc38b27077c9314e0d3cb57bff6b7bd1def9dc0a021598ff64565a9e788e2df205a2c97f47c50595f3291ca527631d13fcd3b79db9039b1c6796d26d32a602c74224eeb551ba05f14d0bf8df7d2b53cba1a4480ab178cc962bc859c61ea4bf0f181b2dc3b5d71e7d49880f96c893fa59b5374bac9422f151fb454c5b019c341d1303e0264a27a63ae8f6c96b33551803466f4850b6c31042bbea6fce15bfa1a4ed26c38c632922ef8cbcc1720c7df1324440d6dca422ff45d885fa6f7206edeb51c2b4ad080334c677efdf0ad321eec853827e68a995896a6f18ccf48e75499eb57e1051457f277c510b10726c7ce0f63f08ad92e9953cec679533f13a69cf2d07668768485b21a668449feb0bef1aa9dcbde3847b2bcab2929fff81dfb8b609fa2f44e80a7cd27c46a430847c6afc7930f2fe08167d94cb070c6f4cf3a8481349097688ff1cd4293cfc125334de539eb452ebae5d193cc415fa0a3f383e2785648aeeca2ebe5147e957eb055653524b60cfa2ddccb1d68f10ef306ef396a3fa1919e6237ceb86b5d6380b6f65a32f9238dd7722868a224fb41d9a1692300367426fa56abd94c09d50208f5b563cdce8eadb4e563e7b4072f8e7f9b9757059e6569db6fe83c3a8946733c4a7e96436d54266814f4b7f6fedeec0f06b3c9e18d04e89cb08645b7d523e0e6a061071625055b934bc430bd601d4dec734181d582ea7ed4924525d25847fb665dbb7b16db78d42949f83885a4cf3797e35479a3d43aca6cc716096d496a264885c1ba2e9dd175d691966b137eb0b7a1f1c8232319bed18fa09039bc0b05305abfd75e6ecb04e7937dd0e2769b7873433f99325a18afdaa481ddf7707dccf81daa84126b89e5e6d7e873765b3ab856bb029d67ab170b966835f1a9d9c02b5a29f640cf9ce585d1fe82ba436e651d5152892b1d61f1deb69f76f243236899cf3a1362b924bc8ddaab03e5a3429d03be9a2c7f7e7e9f13efbd55839e51be8d010e87e26bdd51c1f3fb46e0f4073330c6bf65ed1b809e9d2bcd8ea15b370df21a2f2568dd272ec04607b450460acec0a9c474ee17a045961b837f346d24fff15a0f699869913483b15793b99b32fa5c29f7b72012888f2590cb9a49cab71b7c36d40ced0b6abd8593caf13068f15db488c2c0972c09d52ea557af3f2c9c63b58f6ea003590d37e5bf181892fc5755f8631405b365eb81c7f88a3744d2cddd517852a0c67f00fb9c3b5cf226c38041f9ce6f1b2062de8cf816e7c8b0fa213783e16d6dd28117cc8bb7c91c13379f742b81408f8f4a0430dc80a26e914d56564f41f7eb09ace5b31ac6a564d2a45eba3dc6c38e7e479dac4d8a3d19d6fb5b21a13bcb949543df5a12b56a706d839bba33c63ae3b03bb74693ee8e421dfcbbee0cd75a6d765b6ae7670114e159d77972ffbe8aa1bce1ece379a73511820d8e1a9fd90dda5ce6ddba3980a029464055d722fa125dfb81b570697f922f86e8c61b17b515f6d30ee34918645faab202b8e5e0ab3c3af841dc0d8aeec8bfefad89d8e791809af779f4675f0da76b55156887944e50c7ccb64dbc636ba6c9e259a17cf70c8d4e4f33a4af6f68f71144eb6b25472e0c3f33dddda54e24cc9a90b015f309778b23015d71a18118f080e0b18c27dd751689bca6a0f35712a3aa53d399c9053f30b2f587a062746e8c89e2aadcc5ed0a00382c8efe2d289e0f1c9333effecc6188a4033c9f3c07254f0b947a479a3bcaec6a41dd8f4a261721a38607093be6081b872802ff9576c2cfe96cff3cccbbe4faf3555c698e0eff789a756332980616eeedf6ad88c24d8dea6f5efe7b1b8e6b01eea35150b2cc1a363793aabf15a9f74656cfe141c891bd3b894035aaa176ef067853418fb4e0ddda641446e031189625ccc7db829dff0be82f3cf58e3d39eac8fb1257a33a35d9d1d127b2e5f301443f4dc8039ff4aeb974ded7a86792e85ac0f04e689af6fe596be13bbebda0fbd28a61148115dc09bb7fc23fe64f6186bb0015c76bd3852b422c047c94d25b135dced9fae0cc9b483ee432c49d85037ece8f64f59c9d3fc6e3d79add2ef88d345bc8684b18aeab9589a93d6c706c2e520726cd81e18492468bcfb20bb544093ade2dc0dc2675da47074baadd3245cc2fb092df36e6f1b000586fa06a3714071ef12d950fb2e9f2ededcac564b47f1eaf51c15dcc4a810b6b144da52a614c381107f919a7cb2da384bdc6aa410c63c5c01f015c097221a85ba5586e2f9464249cc50393518105fb109dd645919b214cdfced2bfdb2d62fb91ab7f238616462b4f3332948e1d79fe8b7f0746ab912c5a5ffeaece6bfec8c3d63171eb6f821a64f396624a7cbbaaaddba22436b577f2dd77cd96f56708cb5e9b017ba24ddf19b682ca2987ae61aeb25e0346572af4bafd14814a0d098b4abd62438649ba73748dbbc20eb1a0159714feae585b2096550bad3ffd074deb4a8f69a37f8df59885abedaa7244c83d70b084610801193cb7940e5295d6aaaeb1ce8815841fdfa20218223c828d828afe2b473dc2372039292637ce5280e25bcb0f626749b2c8ab04d882f5e39f861e04db64f41af2af7a78d2ace0760404217a7abb379f8740f3ea52766ff540e65f84e5bf5922670a7da28448f8c6c40c0d3c87d5a526fb92822a801e9026d4eccb532f8e013e9286f93303b9e5ba4cdcc2c8647f514fcca8985671d665d3ab57e1ffa4a1b2c0cf293bd3544f7e4a0aba610719f6fd0e7df9a4a96fc1d7d690f9e39a6e62d6e743141d2fe36ce69ca8d13af35fcd9c71f6161717c6faff1f75a5cdbeef0ed7ce8086012ee3d9a424c1d2680b0b4a7fb427e25a6ecabf3005529d90e8ec95261ebde6f888b2aed90872f6be9a1ed22761c0aef048141cabf0e853af8ff9b16ed05c905c29b703e7084cb0a0a556535f528c89af2ccc944b28cbe244c63cf821e697163fade65d4d6eb305e90df8d66a1ed81e3d3d732bd1f613ed38a4a76b2a9659f25a957592d93fb23af93a65bda0921b159af39a611aeecc9c898e62b5762538cfabb1da0ff4382f488ba790980a71dbd98dc9e45be0c621b420fca39ed599992e8b65cc29e13c6f28074ff87b579005f14226e85d51a12879503aa7d01369868a9d4d3de8563eefe11078733e846c7033cbb04062489a2e7082f3c184521e9abcad6614a36434239452cd4186c9e878f299ab7adb14f0f55f97192a7a609ddd6152d5d4bc72c55e59a343f6f3d99fe83e154c8a1468af9ffd1647ef345bba841a03e3e318b849a6be57911285855da50e48846887ded05ad73026b997ba64eeccc0c54d755b96e38851034dc214f373af1c6e4e4eb636cafc7995e02a1e3d139ee9a473933cd887ca090aea01eae31095819eff0a7a5cacd424e3e8ff44e5810418a5b01236b7d5a46fe6d99631bb309822d8b206f081b3ba51e255130b9f9ded6c335d35f3d80d734442c0f2e67fef3e631c385672c3f8d38c798489fa42089f9bef912530e5df6c1be5fbc5ec6db46ab32d04370b95a191b0e2f7ab55b81e1357d0037c09aeceee2fa17ff7df114ad9a685be1c4f6d7994c01dffab379b688435582b500cc8ba1dc1daec650427abc84114d125746e387dfd9002788e3d5054112c921f4627f681a74d0287e62407b319b979c621bb7933d73aac7468819010c9c65baddcd00f48e4396ddc04f89878ad854caa4338b566fcaab9e5070ebf146567ba55fa3a26269a21055feff1f2fd8f4b584776bc21635d22431e12ab4526b4988d4c12874e2b5ce20e1f8ea42c5031598dd46af4b1bfc99ea58f11a87841cfc185a4f85812ccd6d0a2717ea955e53e0a6eec80e8551c2d7406ea1989ff78bfb197044c8f762257c4d2c5ace1c5983c7b6879ff77a729dce3163a26032792a64480eacf5b0ab7473b4cf6c503faad1dba8d4ad45113be039bc4a9f4df3ead821d3fe643b3ec9d177dae45aabff1f54c861c0556cd4c64bc610d67f1857c01f128c69e90f0c84dc8ac5a5090f154ff2fc2fbef016d01d53195184c30149ce4c29a3d999cac734f0265fc9c9a628837e98d5aafb01f4d1c44895af486b2ee32772c83dc6760eaf10e53107a16fc480d2e2dfb87d43554568becbfe8fc27caea8307faaf3edd573f6bf133844df1f2b0ce28cabe117ea8b493cbef454cf580a189ba198a602234657a4e146398a10e1f432616717c2ee16e12722ffdb5e7d4e2dca46e76db65812b324f73d9a4cc18594cabb4f707cdc37eb04f051571682f3242cbf3f0a5646cce63d4a5c8cebfae740d71b48bcd91074246fd6a1096819e5fd0d83e7477a4a753819bd6b98a5ee851231b324cd894394ae2f25a794debfd026b738e4ef262c5b59f19aeddb83fc1c859aee46b270fe08a610e081d47467d83a4fd841fb5b64be1451ecc3bd18536ddabf391be1c4bb1a59750ac95d4d6e38a6f0ca2f52ff3152308466c2371fb3b8b3c49079d43698f77260855316e5933c37ce25e7a766462d8f5e4be5fbc4441f821c84fe296bcc0f7b9790020a675fcb70ff5784e7464f978d105fa54e82c8b90be30aa34efd37afe724a91d742f86b79eb2bea207b811669731e505da11d5776d852548aef78a5655bbe26b59fa6161217886de1fdf87564798671b0eeefde3760766314a3118d8aea06edf58070b7c999b6458e4c03a37c9d1f7aaaa2275dc383818f5700df13fe818d60674933cc3a17185b5bed6d99991767f286a872a9424e13894ecf5b94e3586042667d328bf580385f47e80a6afa3f3654755a1563081c678876f59a3e89363605934c7bbf356f60a6825529e3aa5a822e1586cb32ac57a04a0e1cd998aa08cad851aabf7b1bc73fa76715e7e3b4f6da3a08e76c610a810c31da06b7081fed5731ae6b4bea80478084b557333342273a2d80dcd50f76add64bde099a2c6abf624f71cdddca07832527d35e4b80bb80f171cc49daf959bd068773139f149cfd07f34fe5be90c3d1afc901c914fa4d0a8ddbfd37f057945e80e333ac619208d4b62415bf7a42ea31b87b9e92ee16959db7bd1cd6fbbb5c3811a95197a96868c9abb76d8e110c1aa0dc168046af3e064fb7a6147de2109b60ab90c4e8ce93e4dabeebbe5502ba9a99a796fefc337ab9cbb2e956989d285f2923c8157a2c762e99294a064bf32bf6400f44a716a65fa856c6bd5ad8c96ac794ce09ef2a8ead79034e56b4ef43b9e6545ae3e638b1c75da758cad43636ad3ce759b16c03f78834a7e7d30e1e0566113d2717f46a490d88c00881f55bc3811cbd4274913b8fb4b840cd0cea7e0403613d44d332021c3c6a16bb6889b7dd4e53990e87e83e10bac490e4158a2a6dc810851172d98fa66378d636d6b347194a3957bdd498f7d5b254e006bf91e408a7ac4c5279e8e4b29302e7b548f11b11460a01b9fdc7fcf1c177d2ac498d88d1ceaab4526512794e488b91941074dd554f70dd289d2c6909ec55e6d6ffa4a7c6c7c684be5fb2fc843b79865d35c7298cb8abd7f9c0bb38f5e6de38f45772f3d4d792683ce5f46fb8db8dc8624e19cae1c73e41ccde42770ef49aead98bb0e61afcfe8b74a15cceb4514b608bdf990def7172748aa81724816f109d361768d05a53a75665f2c059edcc1a4c287416e6f1a110a05c6d422cba540ca602a4f3424580b87c35bb7da1371f104fa8f54f238ee4bf5cd2ac080cdee945238c586d6e31c8420d37216a924f60c71a9b21bf8aee562cb887a6119c1d80175d7b625c8ffb46a578b97360a515ba3c2367dfeb4982931ed689ec05b17107e00ce9abaecf1fc12017f96a0d79108a05b4c5eb30f289f29e105b9fb922dbc9674815392d64628a8555c62a33119fbf651b5261b2245eb1b9c79c8963297af9e3eb612b6da58e7cea3c726910fac61a2823857a40a7177d78884adb8c6c0ae425cad5f5d76563a806b4462b1e06e3d61a7c293d2f58b9c0933421435049acad70accc6f65996aca62213630c27eee5d9ad772e753aff151de5f460b80d07408bccbf9f16888d276509206636650751998d4c3406d2f5a6945be2826111ec0766ea10926b65b224fcc65a1d8b6be0dd6a15fa2f8a9d3aac0080fcf19ce8c839d26e516a6154a1774440d2805cafe4f9385b84ccbdc30aa5e9844910a0905761e5428d30b462db50389dfa040bc69b9465793aa6cd1e8148148cff99f19823ca8ca34f09571c222056fc30e52d43d8ba76199da6b9c423e3f706d2ddfd04b30fdeebe15821bdba1b450f556d4ed4549639805ff8cf8f09491c5503a2b9454afe2989173211fb520dde251ba3f5f917cd2e101a4a5f3aeca409764f39ad29c18a00ebecba5ad743cf5bc9dea44c409f5d54e255251c74bb49c87c72dd11969e275695ee565a882a67945e186caedd4ed9e52f896cebc4e00a1c691a5b45ab25eb3f8ec9c81e2f876f8c5bf20f05fa2743c1e7d73cfb5503192bf7f78aded9124fde913cf375cb6d2eb46ef7d4eb62d1c800878eb286868ed98d9a257fbf8eaf6c865d8fa3ee6ba368351f8a57f23a75e34c6398e6d447e77eaa2638c1264d4db25b68bcf223b5f1af0ac0d1eaa154a085841a81c9f6eac3e5d48defdcf5c347a2ac14ba1d57d42c0b95f9c9731a5d221710d9b036f2a4b047b63cca10b3e851ddf05da761d3ff00bf7b01354648a0313f97cb48e0d16223789d1f3c65da8d477974d8c12e169297dedf62c1b5059785ccff522310f48db9fa829461a802bba91fd6734aaa5d9608bc9f63b8cb8fbf85530f0bc72b4ae3cc48f3b8f0c1b84734f4c8d5cfaa5b877a17c6fc3dd99c06c6c1a325005ab3fb1aa55e30e6824d0218a3700861dfdf6fb30346e7828f6a241a02f61ddb07f69c3a3d08701ec6935bf5e711bb78f3cd0affd377dbb1059587c48ad4bd6d72a55befd02e0f0c127d6304c1232b5ecd211f7e12c1a72e64f9ecc76f996d744a83b586611c18832caab2c51189ca3e46e718cd15c12ea59089647ed1bcc0f45e967291bdc12b2966bbe4bdc13a0cf53e673f5296023760ab77caa29b18da48ee168985c101c08d62ddd63bace0a67927e6edeb674a6a44b96bd41b85e443027b9e12cbf129751ba1adffda417e38776c6d0fbef79c0d0051f197b2bedb3fcee4423c69a182a996397408870f171bd9e240549de35e2493284d9b896d8c592642458c3192fe4e142c61a7d1f9875a91ec7de50f1abb9ee5df2a016002b73137bcdd08a1a18c8ffb447b8e061123a850e1967c128c7d3819757f47ab040ca1319cd85f1b45d481f352404142aa64e4500df99de00204fec679af24bb1e9bcaa7056b97eb85808d5c840c187a78ed97cc542dcee1202cc609b3e80721411ef5250d2c3abff0f39f8c7414d62a4311374f5ca75045327efc20c5243fbef39baadc180eda533bb884e6ff5f23be4aaf581f928b2ed746557726d54514fdb20d7dda733ef2b1109df0a1faf159c7eabf82508f5aab91efcbc3e2b3850f11ab718bb99fdbbdbd387427054531868c74f87b530767e22b4941a2011e588c76080ce91983184d29bc0adb1055ac4a0c7e38f92210e436cb29f76eebfcced7775d5969827cd2eb97b2f0bc2acc9a8d7e9726dd4785fd9746e9e021a3a4e5b9481a6a668f792d7ae133349753223d36d10d9464ceb10791540979b82212f00942e13aa9a85854ecaa14ac9b7e9aaae1b509110f6390399bb5996bf814a627cc01772c21c8535b01ded71625140ae9360558750d4db4d84cf5b83d330c83876e059483cc44719e5145a55e1e402090d943317d83e71a6ac4f57a50a99a29b11b347d87d0cffc776aedb34eeb44f6f63c55a411ff47f75865d51e532c40f06b2242e79c7a263cc4094c89d6dfe761b1fed87a38285cc98d379772c82433098f8d330552736dbf6325f089438fa17f481fe77a16126b2dae95e4c1bdaed81bb23d92ff416cb32326609fff0fd95a158b33eab518c5b68c56e1ff969ab28909f611ae76ec96524d53dab13aa09f808cda0a5d4244f723563c2fa659b817e3a04d752e2df3b7f454325489ce21ff89b398c917a59e3a374787e7251798e18889487b06666bf007b4b56e6327fe26f710ac392f0914bf27113315f21a8d106c8033808180c693435f10b879e45ad2efb54daf0c0771bf9d784dc68b305669aa68728feff029565efbad14731afa0d3c2a7e6ba9c0654482399f04b6586c771357de2b64c99bc021bb8747f189fe71331821b57b31f35214dbbf4904cb8ea3fa693b5b3a6a7a9d06ad54f1f683774a6b03918feb218201a98c026fa3276d9dfacf431b3bb2ef9bbd02883f4ff7f66296572ea01248bac3ec576d07e43ef886296aa6e577d5e46ac03f5785ff5d07b72f4fc55b2cb5c7e93c7728777430362db9651b0bca57b19893d0cd4c251a43fce19380b73495764a092d1b3c4318b3353a762b0dee4669a042464d7de104743be197d99b86c368220beeecd730f796f1f62bdf782cc5d11872ea33ae13b7fce7daf994602f1571ce994158697d812eb36d282de0954f891b7e0dd1f152f5ca3e050bc6d8f0761784dc00fdae37dbbd0f982cb1c1735aa770dcc8b0ae56ec97cd9e7969590efc835f4ad4c32ac8f2815d7dbc5488f912ddbea9fb40b8f873f02bff7fb6645a9f5e9d60a66dcf5f587bb773b79a2c3610fb68deeb8c314d117d4f09bad8989efacbcaf2b480ceee35cc79d2f83a38d895c73c72419287222053bbfe347da93a149863abe16ca08d105b4cb3638d75dbf5d88cb8e3db8cb35e05626219d8fc4de3d0a5ef15b661cb8677e1860fa2508a9e5b2fba7f7f1ba0ecff71109babe7de07bbfcf8af05d112341ef99c2f3933cdd61df92e03283703c227112609a43da182c2aae1b2f0c2f3e3623b245e3883f307576c42c84e9fdbf3e0f87fb5d7ea879a570964d6383a7f788b01a6776d033289c87e5ae890ce9f458fb24d6bc563b030adfd964e403d329f1d50f5322b6758ea3cdf094960c4b9cbc2068a4a35e2cebd4c6d95930b8c2772bdd4907cc72550f98c06a039edaeec8af38c677ca64c6ca613b5767d9179ac6f25d56e9b190d60f93d2345ec1353b6b3082b468f7e1f742edfad86a89e0482418c68c14a2e924d0f8950cbf26a7e93ed0aefa1e3ce2db5a185d4a51f73d49033673c3e9a26c000785c72e1e5be9e27e1fedc5db34f17ef4f6c8ed93ac060dee20cf28add82f1be783522c2639a828ab054c2cc137bd43499adf8b8ced223e2a798d1b9080c16dc801a1a0f2bcc28db7d50df6010f101f3372869d00e91ea3cf4be2fad97b7e2dad15f3460da38691f0b8268069a5a68d5cdcaf5b82452b3e37f13842cb67edf7f20709491ebe5779b4ef0f18052d5ce9b283f5dea25a64988d4984ed8239888aaa6593f484a4695f3010555137079a5ece198b4b413f47676194d5556ed84643b3870ce8d5025488f1694e490bea8971bdaa937ae005a9887f735c517f9a6f3b84443377f49f35663b676649248e223939159bc7f9411b61afc214b27cc3410a22b276a88cf0adccd50dd87d92e031098cebb7445e4db0ba13bf9054addb6ad4f0fedd109a2cc42bb972783673bd8c8957af09ee0d699d4fb68b7bc4f61217887a9ba9195c91a1705e53b26b35c1cdbe505d962d661ec6a722f522f884e6f818e541dd8ec22e62495176c64fb1c3f83b52d1b612f2174647a2cb6fb8dc3bcbd8dba5ddd1d8fe172a46ac6ada9df3ac9a305f63631f3fe39075f15a87607e600d78557fc1f59970c0402c4bdbcec7afbdded3b172d78981c9b0587a77dc1f64781f1f6b4ea6c0c4da99c5738f693c15cb81b1d92068bffdce93b002bb3e01350385f8c0ba8cca2512cf40f4fe1278c9bc5e1315c6327dd8b7c47a6580d185cc1ef6dd7079ce3b47f46f1b693bc9fb71d39f055cf88a97c99e21101cb2500c3ba9be2f027fa0c2ea8d59d7b040db4b29027c4705d87f2c2c483798bd715031c060fb606339da22fa21c33af4e1bfb20ac0ff88f96304a09702fdc1a179a8598842e1d53bae2abbfef8df47eb234fac165712aee7c4356157ae13adbf7f087264feff1384fdef2916dc5f980ad829e391c678479eab9d05f143cfc70247e94e42eda533257d75d3de91bfb17001f7e172de7fa081a725070b9cd712a74c46e6c574ab1cf32de77a4efe2e1e15824a9e2207ea6bf00a405267df44821a973198590a43dc514147b5d64f31a5c20fec2b0f2f3763575b6c9ba8116852a40de719aaae945eed190922a3f9f8203a17ae16e7dd02abbe7f63cabdee1f42218e79783cbe867c2e06d7a06592686ca8bd65d2c25ed9ab28c14d8923fb2271ec896121eab2e6de1f927653f6255f281b8b328d209d1f4c93f4b3af2eb618637884bdc09681cac73e7014560aaf024045b916393a101281f736551efa2b650d1f686a5d59c5a9db2a1c2f9dd30fe304f2be03a5c47de45deab8439fcfe9613e9c127120a229b7927c4177ed66b99e89c478acbb1c08c065369c0a883e231ff95e85a740120c5e033f820f453449678098d7ea2f6aaae49a36341c74f4ef7b14dff4a9898f48af10c4e19dfe3129bf20f695fe2dfe62579c3db198b3b92e5c7bf5abcb4b0f9b8d998aa5fb9ca9d8962a03993fe7bdfca3b8d3b6a14d03ee8317588b1afa406e104ec7d2b5f0ee0379c1f6e8329199ed06ea2e04611d9f70071dc16b4a9f4110a91175beb02f22664e99bae76e630f5d21bce8620dcef174765f061b8a3c23d6ee722ee2adff86d1f5e005d43537f135c93510cecdabdbf41696076618627d163a1a21b3ba719e049b8077659b98bfc1073dc496da38bfde4b82ebbb9a87e7f52c3260b3356e96cecf3cacf2387e0b7e8bfc78abb6bdc973f02fa061e3c2fe5a139c239883ddd3778e47c0e88f90e102f73e9c7c9e5244fe03a80741e0c9795287a50e9cf6d304ecf46ed99bf0757b7e49103ff7ddc0019b2fa17b8cdade923e7f2c84c1f2e5db14f6b09e9aeb40b431c6836c797f429a9bb9a2685feb99c65f5984104634f492f15b97883e4c8af3985efe8fa18e22e75114626cbc2bc83a54ff08687d6d9487fa2263bb5ca9c9e3fa5c8f8f8a3d5e724c00482133e08d650807f893eca1dc6becdafe94d326d5a8cd4d4abde739095af2f5ab45e1819337f108a56f816294d2b09d24f16ca46f9fea5a1aef3a73bfa49f7b8798303d3298b4e7c39fe5ec08e345f5ed7b5fbcb6a3c57b46a1d23a2f98a23d8d709712ff74bc2b9ab39267af3cab2584bf8135d6d410ed171f0d0e7d49c5fe67cfd57aecdeb3e686410e14a6205e370d3785ca42b206e21b5741071e0afcfb55919b16371396be67a71e5213939ecff1c21f70e6029e3273c56f8de1c3dd6eb92999ecdbec7c91d51fee64e03e337f092f307f92487768c0c3c91ceced5bc98637ced7cfff349bfbb1d7defe03ccb46898dcff738a6abc835054fa4df992953ebb1572a974e00d70a7a8fac7b7072c596531ce3d7ad0ec4eee1c969bfce0355d80753a97c32311c3c1481ba593bba4db55c4c4c54a4b13bf150860e097dfb850283f538a1a479d14448ce8948f14d31f6411e1c14002e760889ccc75d4c61eaffa7aa4572059236a4c60e955c44213ceb07e22ee66c41f414de3a877025943f46ab9f9e2b6338fa40a7a5da28703dc2618bd6b8314d609f8afec97d30fb7c40d646889e231ace702fdad1152ecab731f88127930905a8bee44df3dfe1180e163fc26c3b9a4dd665e2b90a62249bed223e487ff2498d5ebd105353f090e9274e4bc5d854cffcb7a63d04ed56d3cffac8d90af226a8f952cf12358d5c8014818db99f6d133667aeb21fdc21f78f4a6784d03f3825af549b194b889f593970792fa0dbaf78beeb8a3cd90de332cb84f6827cd895d9505f21d7861f9913b54a537576dbc3476a9124061e847d3968bf030cb60cba6a87ab44fcb7f91c6d5a35ffbdacec47d5b30a5f2f8b8b2e9ef25124b403f474fa9ebbbb4fc55030ca2dc868f4a0187833fde983f42908993a9a9f2bc7d59fb0d0515686c6b5976292333b02e2cbdddcb6dd811bcc1e5699eab073ed5c19edd0feadcbfeaa1dddcba89b08a936881d3480ff4b494c4703d3cf1263a6034177ffe7bb214a95a8d669b7f5dfce6f745790497cad154b3b70b155aa7ebc933a680c47dda7e557209dd152985049295dd006dd8570fcccea2a0ea25bc278cce2ab8f6b9c5832b40a0a317fc6aaef85c1692942de215f1da5a4bdfdb7bdf7afa0f4535fca32b3d697e50f44b6faf3f190a02a2346f687d950ebdecf748c0d8d354f7e28e5ae1753b07007fba414749962c9ca00242a112574b774038bedfa5201ac07d9b729973b29a54632521ec280c3c54f07a0cde28ce977d2195e8b4b41d0e4420a58d16a5af5c4f1c825be0422496c74066c700c7e98cf5d8c49d92e3d651057382c244eb551d24be2f0047d7a36c04cd2bdbee56fe5c06414d34ce1d08e17a12bb7fcba90c1daf12a3fc9ca280a606284b5cbe049fe1de7b9bc9a3e4aed8772649a50dc414f513ded6dd0b4b591b24577f988c93c7194bc5cbb1900232f64203b1ce567ee178175b6e298269ec991267871e79e3874bcfc7bee1e0f6ffa63698587a257d1ac5a78eb4b2299bd76fadc7d83eac46965955160553c63336c40ec267b2f46cb5ab9a3ae417c6d5e4e7a2d4e0f77a1d071c0bed38727762dce3dd2a3f969959e1ab2d8c7719e5e94b50eeb8224dbb3e730adc0a205cbb1099547bd1c16c790ec4d935454ad2eef814cfa3d3aba953c83f232c55a79beb23a7998b84d15012309dbeeed1d4048f9e9849b8f6215bf4ab76a6e0bdb29dca9e205edbc988c1daf24281d080da58a2df77f528d76ed23d2d7f69189cc1eb93d894801ce1e0122f265fdba2391b0adb5968934c88638c6a9cd4e5346dcb7181bc84b50d8312a6f41f59b8d9bd6e91e434d63b3329c0e4c04311fcd35965abe87813e322d17d033b5f4b945cc88e867dec34395850dc99673c7566910a74a255735da6193f3417b160c9a4ca642135ae02951e5868471ab629247122ace34281d1578f5c49e8ca1b81403cbfeaae385ddbf251095ac9a92348ec79e73bc4a5c7a5835099b54ca018ce72543fa44225d806200420e85132e64182e73d1d862ff551d66c06445183c65038a75b2a321d7e43556586617426dba7415d74799b9e3bd92a9ee7ebdb829990218536e6e34f85a94d5f8b9758cdb4ebe5d30c063cac66a3407b4b1542c8d0af118bb90a0ae8fe44c7e1db230935b7a9401140a469e459993c1d68927dcce738f811b8c4654db333d3613209708a689fb8f06785e92009b285ae39dd07b39cd3b1d32e690c2126322f936de2d2bb6ac6cb4ea1cecade4885771e50fc4c3aecd910e89895f28cf32be7e24f757625bcc2488f42978fd8f7cd3e7ad0bc6940b1c604ce519b1340fd5cb1011742617c3a80ccc28ed1e1290b314397af5b31656b10cde84da560b68f6c5c3c6637793a97ecc5394adb4aef6d5bea4cf723e9eb3a0be9a35072a2efee90b94f6ed98611df4206d68e030afc5e7a149a2d621a5aa6100df0d010c5579bca63781c073e5b6915d21ee31ab9d3d2e39d52c8dbc8c0d1622fe3bfe621b8fe46328fa2266274281aa4ea1be90fcba8ca875cd35df308b1fb06394162b3de398b9173aa3351ecb96b7733168e6a3ad7bc44b807751269a38f2035fe8c0efd5394a8d792aa8f70b2e591fe4fe8244212f84673108b1d68c078f16046c239f6fde58add6423c251ec0d7f7c3c64580950a636802aea930c7c4935984092f43fa6fc7cdf7f7b4b2c650904428de979c232d58d5e91cc88a823e097e29b00fd631610f117a0f6a9b8ab3ccb4da2f4c6dc7ebf868e0b73ee973254f1677c785e10344d09862bd9e095a5b025b80ab8465014ba163a31cfdaaccdc2e5c777b21e6345e342389ae678b47fe79657379c59dfb4e32146da5289c31fdb7667df7bf3f55f23be48811602184585e1d493f66b90326f52b27a08e5b07193ba234e18b91d920c4261b8786505232d27e2f0943053136fab7e3093c3f769c36bc952997d3aef2036b5a09100a25cb60a80fd121368df66a32e143f361c53352b5dcfc662f2bcc5d4da180ac3e4730972f66f913e76db101d806513ce758a6a121cac60c0f84e435fd07cfd194c545ad2808590f937a5a6be0eb6aa7df9e6a17d1835eb2ee2f9f532ca5640c6c87ed9c91a6fc9d13d9b4a0c97f52f30e3f4555b62aa9e6deb82b1b745608f1fad0d1e202e016e0ca2a68781f8e71ac6457f930f51d776cdcaea7c45bc2863417009a663a1df101fc7891f2957c49edbb2e249682278690fe9145e7779da0c8c80dfa6b99d99aa8672f44873c3a10e90c15b890c7c751908508168bcab0c8063da7052417ab9fa0afddc315e52fcebfad1736061f9a30fa0a6d90de5159069253e7b72afc8e0871554b72d7aeb7fcee1c02350cb0281c8421db71c73245399c6dbdbad8cd2766f91553221c71fc52e9d3898b15c961101bae8cd3bcc1552e56f2d516887ff09a717058fb318dde83a05dac7c9ddf148b0a54f34d989134d6d2c4a29841f10909e03070adb4cb77a9cc0f816c06a338f58691004e806a96f615fc3c6e456b4202705e424f1ae3f39fccb0679ef1ab7a42cbf72af74021a0696a09c4752451a8447c71ae4d06fba841722339172f72f0c059bee4640edcfef60f22eaf6d2d3a7e75f1c3f8b5615a8409d3fbab6479dbbd0727fcc54708fe19da4a3520cca96581e464e64e43f3738889126672788fabc308205e97273a80d0840da134d74999df65e97ba360133b6a393bfa4c2cdb9c4ba636a28054bb32cd778d89fa3f31b891734857552a88f046f5392567124c4cb6e5b43d1716116920294fd9fd59c6ac76520bee150e63adc77f252b408dc22e01537c05403c9ecb805af3b09b376f25977a9da0f021181ed3df0b40532137adcb11cda17fa5554085e26fc992c647ff42d4967ca3b642fdd6257310a381953bc8de1c8ac3345cf94a3f72c43b92da7a3856f3e3c4494ca220fc944aefcd44346e63ad74b9f23b5f977f7f88618c0ef2f9d8c03a0aad93cdeb47f3c8439f8853ed0214ec04a4e8b6e2fe354fdc5e6ff27282fd5ca3377aed2244ced07cf5752e094595263afee62e702bb47f422772d7174ed08c49ac9038bab06a8ce9e03f745ddfd9845745ab8c3d8f5b1b7a7d4a466c1a87a4ad8bffd339c8294607a2264daa7b56e835f4d9cb6cec847073e2e9b8789fa82e927137ef1b68e606ea00b6b26f1c5f5fb688c55405433410bc21d6151aaec897ee4bdca1925e03c36e538cff8dde5b4ddcb52188f70bafb3405fb0403c9d3ab5938487ab9596f4078f7f2fdd1f25e5c90bf45042aeaceb2f8b24a85ce3d6f4030aeecb785fe6f71f20ce082d5967b61b10421aa7f591d9a0f31e3d579641fd42526241829e84d59f1979873d13d07b7c2fbae877ac98ef091b62d37525b93092b4b117e4de2c63fcde78e3b130c8e1fab5d774678364fbaddb93e579438741ed34347b52017d91994aab20b2908bf71c86531f1d6d9ca505009b06177f175ac79e465557f4df7e91cf53481b8aec702cc402c0cbe1ff00c4707de3f331e76f6d46808cd130f52addfe3296afd950b0fd162c6bc2fdf5399175b19b486493147dad1f7ad26723b9f7bb76e0af58d2ac428fb724acce7298d083fa2410986f6352ae8dd9305bb6774eb297c8dc1d49a41780404935f656e2d22cd24683c2723ed809901d8e279527d04c1a5fc3da5210dcb36c175475ef03b2023e52341129750b0eb2e83e8dab25c7eb2202640843633f57ef79d420f6e1c26c008e7dffe5307e724b0e0b1e964891a209dc44ec18a61632756dc121698cc855fa42de32acb4c62d8fa42ef85406cfdfe3bbec014ec771ea3b50b6ae43f2008998ccb1c3ed30cf47c9953b897de2d56bb58337e4b9fdab25190e08f8e0d340e8a58668be63715fab997eabac7350dd8398d5010fe185d157d027ec269801586db0b0fb3cbd11aceee89d21832e62f5b960733d39ffb410497c9d41d77686cd71db4efcd6923a1f4f86098f33444a6862fcaef93ffc37d9df032eee2e00f64667a626465354b738ff511af63e6f36017cbd7c0492af5d1a5965a59bd828a732b06b5934abbced782991d452a592b662f9d108c27743d0aa27d49815e14f5503adeaad200e275e5119f003b43d079c4ff24778afe32c9904ef6312beeb5684662cea4f88ad184bce2795968ffe5a970f01b2112c21e9edf3832eaa0e6a6ba016f56603faca9c88a3d9fe8797b9378f47f46f928a1600c5c61a0c68ed728e76c2b7da37c09988638eb62a0febdf42d3d68fd1910a0e02846e26f955734fe631d6a78bbd794f172fb35264a7c4635a71568f932b33c92968e1f74e845af92eb59732f5b41bf821513a36260761ce5cbd9eb6a69816725b044dcac1d40e90404c1d5d9297f4ef54758e9407aeddcf85647ba2bce59c01919c4a472b585dbac3482c95aa4aca9d3b95fe1a84be113e333939ccb816bd38e7b495c10b9f9237b87ffae259cbe65bce955d3c34a31db7b5a0b41575bd10515d2d69dccdfd50b1d1453f65751acd2c815a185552358dc67d4e58d81d55526da1746279574910dbfe168d8744574926200315ab21ec9e02193c7df5f710850fa2c3df2c0a313a26ce310e3a8c43722a4612bcee00d3de90e3c2e6ca5b43bd784a73ed1357860bdaa31c96286997699faa2b307dc13232707f822356a1a460c84acabd3cfd57787ceb2a3c16de510f5cd036040c7f21b0913cb586b9d2eaeeb82c4603c4545e35d19dd17ba358cbaa96cef9feaa62dc4f8df208e1b3dfc630689f84a014ab6b2bf54975634f060db4109f85f7dd6788b7a445cf80d9a153572949865df9e8b94c93b6f9a042cf3ee3fcaced0edbda1d8b1c199fee3b6cceb87657fb81e2732ba85d7ac7c8d752b3170a169f45723e37ef9bf8f172965d8931f41ec77e7ebdaad985e02a379fcbe88d28fcce4073f14716c08e4d78837ea9dc8091c7cefb5fbe76e50a64b4905442a0061886ecd8b989afd6fba943fcff124f07de97e2547ca03d8b4a1afbe55d33fa98fab31c7d123c152d8f8b896d531b1b8be8f69241f5fc38dfc3b56b4fa923d90a5ce90d92171ed6f3414174a3abbf1e4609b4543d1941777d8db2f67ea86eb78cd5f8a3c46af2c6176a972768f5d75d5712d8adfeb3c31f399d7c27c667f9a36303c6de7c54aa06c6b3e444b47e75cfba53b064c46fa7138914479895522307cfb63cb0a95860c6ff8ff557a615a4a4572b4edd931173469a977c87576fc644106945abec7a756f99d3a50a5612c1da18f13eeb0d3183bea01c5ed3009cc91375670733506c6652bcd841beb1fe7e509239aaa2174c8f3fb0afd55120665723a3086ae903b909f495f3444f6fd21c93abf6f52734e0183e1bf19f13ec1c689148e3edd8655d8694b3bf663e4287fd2ffe25fc0660d1d3c2f49dadf445bd20afd4c90ee4f6db0cb3d7159ab619a5c3e05b6dfa976b129169b40875e0cee118075435e266e65191d749645a3d0d3501608353e58a41dee70b36d5c9f4f9d74815b7e395c6ec4f3c23647d43c5259378b34bafaaf83d892d122aab98cf2159aaf4ecda3e0212d4737a2c4b54611701aa2668557757aa5a8394a52c8c95257987acde73fbdfc9eec055cfbc3dd7c8c993bfba278572d8c09525249811ab25074b63653a705572bc3bb12c72d8fe5aefe7c9eaf5441e6f24925e1daea881b72c429abd0de20cc468d676a1afc4cb5d0fbf5281397ce4b97b15a8a182cbc534b9c819c148b4dbf7c0af76c958208cb6b55e5161e90550cb892e19981dc8a5afc00d74b1d9779b603ea9b0690954556ed9c5273c9e775ab2f08de70d645cef0886fca475d42e74970042395a5022d7bacb9374367a2649fb3ad5e168bb5c30762c528d4842bc526f48f008cf2956f874018b31298d25fcd7bf97e553e9f5001568d4f75f442228bc028c81736850b23d1d78f62152f6b4cfa824244cb00f883282ec713f87cb318710ae1c683307e1029b612210f71435a3db0ae9853acf306a09f89ad14381fad71cfc228375a35042b8112034eecb3693459a728d2be9e6bae078f3defde7925261a4f8721ec54152103b7edffd37f9259ec7e3df0104ad2ad74c014c6893f43cda9cd0fc03f3aaef8076b0aa7647145f40349643e77bc55cdffd022532a14baf722b9cef1707dda62e68abeccecf14ea190fab256ff9d80e25e658df1232d3e1ca1cd2bfd6dfb5cde5619c267ec138235d317234f42a6c055cf5933507ee7104f5abe59d25167b505f851747c3f009cca5138651e28bde32cdbee96632b04671feecfbe8eabf8365003e5a704bc54263fa967f5b160b9147eebb02d9b4acbd88f5614dd3a59aaf3a79b89298b95bde31eacb3003033421082258b443d5f16e637cd91579a86c41228e5b2a15697f24b932233f366b833f310a5d0e1cb830173c7b7d2d3309d83ad2ad56efd574f503f8c986643c59eded481e3c423c8ff6791b523e97676f47b477e4be288459323e6746f9b1b5a26d713b6b7cb0f4b5372a2b5d653b98f0a06f433af3d3d50805993012ce9dcec764c1d4d767be9e2944bff0069398c307add33b980a88c353c067e96d01cb7178bb9253ea4355adb6568ae0ecf9dcc44341fd74afc60005a400813da33c42ca3a50353dd4fadfc71e5155c52f415bfb8632054ad49b7d53902a0a975d9f7d1b2e2d2b0f1c65b239e5f2bf3ccd300d5efdabffe9c65a735b7cf55719bd886dd463a44e0acf813b8985c23d7c92c7f3522d2c0bdcff35a73a04e2ed74ac53e33bb68994f80a2a9931f8436f82ebef94e5888a09e888139dcc50ded01517b10d711b2f8e9b4db424dcdd801319266e4ee5b8e7509625cae58b068e3644bfe705651b0a7648b4b1fd0e3ec1f93c6d9ebb6a57eb23af7c6349c464668141574fcaaa080f98e7888205055a0f0ccdbc58f201832df8336c7ef93b2b935638fb348df56072910e75fe4e39f1f8cac076240d3883ad5567ae7a4f4188683ceaa14915523d511240c9bf6498c971b252268d7ad1c9917c0887709010aa3f4a3f154e34bf804fe0fabe0be72284994dd936eda872de7f13c8a690f179137632f08c185c4a065b576770da243a56876d0129bc3612ebf81e9a3fa9e3a2f246d86f65a4c2f30f23f972bf95893bba1e888a02ba3b5c1679ebb0d0b6130bd796751d00b530fe3c110ad8420ef81be989f3d8780e4c417c3311caaf79c4bd6a82b39938f91768409f0bef8a920f972cd75536997e62463b86ef509b8d03ce145c3b9925b7f73d61e2af28d22255a75cb84da4340b6d7ab2560d6aba29ec9f0b0962e76458e0fb983a936cf73ef9dcba5653da27495ff40b03cd70ad99bc570ceb0909761745dd03a9328bb2cb95923e7c987904557b9c49809260cfe29cd7415a719e71d8a1210b9c5cc934066b875e193e91e10d73141ad922bf5b32b4c2e61a9a9e1962b9a5f14bfef3177e5ab9f5a46fb1003cbe3f5e4d4c8e0f646faa3212a3c89e23bea12230aadd10eff10626c5ce0e293b74d2fc869d8448704e6640276ea99e63c4c824579d15e9284bd851fec79ee7684d90896ca8ac72b31e913ac252becc02bab268529aca065b17000f379f362e6a7219ef7c3904bac66e2c3d6171af7c303dc83c97b776aeb320e1ca267d881f98e8e4b4fbe7b319e6c71daaff7bef2367583d1438b2de53d1ef3580f6d39787d98e84d55b574088f59439f7d947c5e4dfa634280760b018e5af06208e4f6d2e0e43b4ebe617ebe9f48d2e00d21aed67292e65c40e6da6e7c6fd985f9049f5814b1cbc1b457f207a1d07b06a3f1a700c6dfa65be5f9e916686cb49831fb6a1cf588ec05daf5e580ac59d302f075993413103bbfe1e768e98649d82a55dfc180e697e8d3b661939f37366e84eccb1d93d601e25004b4036aa65441a91c36b5e5daec271eebfdfd94a4d34864c14ae2f951c2c3c8e46a1d904e7906f26999cf78842116d679aad99a4609f0c9f6af931b19875cc32484f509f80708bc8242c33a7a415b2c7ccc79b44e5021d18f7f7af5fda09065611c45e2dbaf12b6ce13c03fbec241a6b390018a50671c45e313150443c6cc49aae39b0262a010b2b7a8e8668fb4dbd6ec290e8a920adaaab5f6133d7524066e9728ceb68edbc8ca26458784a006192a23c53cf94f2af0f824952d208a6f9e6001db50a1b67792c80aa58de8a09bd6927342a0c54ddbf74c3553f30347e6db376aaa1ec0ef76d43e6164e439b104bdd7fae58dc33e688aa0143d8e8f6d07c1eec71416b9a1a09edbff8ea34a8e00111538cb22fb448d87a9cb60738d2b699344a2f821765fe8db9d61bcdc2691d3948618f4798a59181f0f463b7393872ea63a2619812797b5137e0dc1be64f587f4119f7c3ea19a6cb39232b90dd560012274818590d6adfa1a0be9220ad08ecb81ff8d27d8325fd7548f9d5d1955c17967c0774a1b445b85a3524df76334e08bb37d7203ee436ee0b7710fdaafc9f22eda0d2331ec7b8dc2a3f0efe816ca2b7bba51019b1ea3c91543f60c9798362122e791b700c2039812f4b5c7686ce8c4d09212df7815d5451427ebfa24ada9b2aef21576dc855a9324cb7ad45945ce3aac69cadd4ad5e538925c6f061c612c21dddb6ac70f1dfc82bcabba519c4c412b92e2d4f65738194ca3ee9e9842281f619c3f7e87cb911c09ef166c32f04da9148863063d81cbd93081120767b444165b24b83e05b52048c37bf2a1a5a15c314f2a1289fac35da127b9a482e9ddbfbb452e77eabbb7853c8cfacb53b2a15374ab4f6aa5f20925a85838905375e70ea1ddc2c8070890505e06f5ce31c9a5d503f0b784c42adf6648f2f06df2034065e3a8cacf9a2b54fa3f95efcc003cab476ac33c303b0036a799d166eca3540d6dff8f4526c0688fbf9adaf9e0f70a0f9ac9e810f8a3cdae0e3de29436dae127de6162ea1b455e1f60d90fa9aa35201e252649643f5d94764761a48c2112ba39056d1bffd6d613c20a9dde15f1ef5574376ce6779a961d11491838a9616229cf5b04298374e7761f1344bc50ed90e935d8edb368537c1bee2722572acd35943a2caceba5feae849cbf1754929b1982aa8f01d6561d8718f7548ee170ecc3a3519b1ecc89b42a7b0de685b4d72aaecf4bd670ff0ae4a568a4090afa44e0e3f0d3e62a530cea83b9d1d4df7d62803cba5b67d15e3cdca881380d36634e6ff087c1252c5dca6efee3f7cf67d71a187a66c480c506f96eefed496aba9f537c635fdebf67a4d1d051b4b499d0af89824badf9264d6abb65dd13982be3f66dca01e63e192f5d0f8e38d2ada456cf14b4c18d34b32b9603040b08aa086cc665ee81b7b9495907da8526e5114500715a343c84047e9eada99363b8c11663bd8ea7e17eec1725a812b67d70e7e23d86dc14da790955f1985592ba95bff2c45fd2aa77f1fd9eeafb9c490fbe5682407d6ae0bce752e9dfbaeb6dea15aa40fa42c5f4a05dd916c5d4ce97536749e44dc4f2297b6e6832cae5fe460eb7661fe765413baccb98518b43ba4d3a5e3e7862fb25da5426bc55b76c586aa4c2a7bd59f38e9692348fef156ae70f5f388a1421b652746e4315dac7b5933d14408bff542b28b3026d51c772886ee3ad8f82dee74e635ed7e6392caa15bc745b9eedb6734a898e99bbaee80dc334ed2587418411057e425e6abe30c752cf3ebf654004f52277ad282c3fec60fab4b1e55fc0ba2a604eb3077d1cc8ae9d874c97d5e6809d98d1fabcfe5046a38a4b7d6d6ef5c07f626d0bad0e392d0d631c28f6942928d344bedf474923561e82315483ae69249e74b15e3a24d660f166a16cf69834261c3435d70a75c2a2a55ee3747e8cd5b781abb056d608ff8af0ee7c61d8cc401dc42059fa6269256b62c8176d5dd3731ca0b9dfbd125c614a104950faf18be680e279e1ad0e240b97f6a30fd82dea679d447be261fd14959917df3243fefbd52fe6df1a93e9151a3bb7ad3623fd425320ebac54f9446048202edd4314c6a18f58b59e7a14d26d149241a906e8bef934aedd54c8e6cd413be09e9673e7ee18fe44522a1987b491f659c02ac12a3199a959f99685adf2002d8a103dfd75f959b952152bd981ced1e24e472c13e2f9275e7912603e29c4a33ce590ac1c912eb2f605fbf85e0fdbaa9c8fab8f3c85ebf830aa2692ea7d535f6f9f4cd43f728cd299fbacd5396ce13f9556719e5cb9ff3aa2eb47699bc0f97adc89ed8a8580c89983bfb206e09812b190a7c5289bce8bf36d63cc3fc857dec1a7b9899acea0a3a54ef3f2233e6d987160cc7b7f426d1bb5c5d28222c064c6c3e0d03c8c25499dafbb620b3180c6747de1890d37c943efe714160657ffc56b495ead9a768c7125985ef9f4a879dc9d8fa972f079baaf9354ea04eb47e2fc1a19b3e18efa9cc0f0d19ca355c42404805c966ce7f83c9e76789e05a99a317f0cb10e71f6b08e93551394b4508ef8f8969fb2f4778ca32614ddc4c3ed731b649274b195aea9be2c53876ed36dcc00b56e2cc93f36fe115b6f33e805ab1cb6489fce68ef428a0678ebd69c659a1c95561cca87504f75a97bca475c97a6dcf98280a423e36182cc2f15c7b9d26f80d76c6749b80d59cf39275756a63c1a2ba4e2f7e9b73a0bbcf52c9cdfb43f79fbd60a609520e82893ab00d75167d16000d6c4134dbfac945e5f599d06e15079780731b7cbc42a44bc95ce2dee47eacece39d86180aaee459e26816abb52d0957edc71164d2790881435d0d40d31c3d174f9304b6977d6ba918354a02683539029c4927c25c184720449517cc85f45000354651a84aa6f6b082aaef87b285a4969d2e8cf8b98dd8835d279b4e5e3de01eb27fee704ff70781c930fe74a58a23108b7169397d741b98b5d223fca4f0f209a6538e0ec0455986e69541a2c61061c28d8888652f1ee7d972b891ec749aea0b5a688c76d68b840f6c8bbc47d90bf213488318f344f88d21aad06240aa03d1340ab9e79d824ec9e61e29fd224594e30a685f22f91e1e1a6c45f0d95f396e86cca7e6d5cbcac068b0ad4bf9095b9385fe661fa015b5ae721ddc5ccda3b7a375349a7fb27323d9ce6bb5e5e1b80f6e62f32b1f299663d89a3f3df645825d8c899bfe9045bf143a8a19eda14c061e6876f5f3b47fc7970b5f63159a4440490bc5d8fad258951810907287e89238c1fe93442b1a14fd25695209bf7b43cfabeb1969da791e3c257a75a6b103139fa55175cd34e2d7b7c2276b96bae27f771626ce3e198bdd0e6f48efaf8b492bd5d498ee732c904490696b386602b9418c69db12234d6954a56be73d21f87c1d2d94e5de2375651ac8937bc852318d2684275cbc589d3e2a00890e3fcba736019229b2c3d9c6150bbe5aac447479ec78a442bec0195b906c14ed9ee30ade4f674fd2cadbc2f861f32af3bff860101c4d861402c9881d7319e64e250792b47104d39b96a006ac19650c74b4b509ca5aedbe430e13d713d5fc66792ac4ff0a55c44f48d0068ef655b72b95f811b8dd83596c1f20999d5fae981ea69b5901de493ab25a02d226944018c6f0b3b9a162974ed3cda25e5d1eb160b56d0b65bc85430ba2093efbf16723084c750989093c360bf3bb225a5c7bde35cdeb7d0f95a505960d1fee4ca7ce743d843734fc542d0683822a825e6fe592d75b246c34ff0079e8ea4c1a39da1b9421373d6f349afb8fa7cb9368b33c9b66488ee7673f6a5102b1ac31542827d4b8ec92505c48b307536224575a707217fbbf5e5e9a1a7cb77519b51161824b7bc5f32d7b94d7df2c72c8343318aa55adf5d760c908c20a1abf74990087981aac8c52b47301ba104415335f82c6eabaf4c3caf0475d861c42f3b3643f45d9cf241866af31c0b329303a362524a6890266a90b86bf90d55bf69cc9e8a0a6cb18a8737ed9011cdd0e515543153395a229b05a7d66d04ffb442ccdbea504eb8042c77e23cc64b24a8b32930b4c7ddeff603e32512774b4c971c63f14007920bc21db35cc897ffb47b3ce4db0af3b1ecb0c49641c0ec0845dd6bdd6506150024287d2b0267d1c337fd83a1d010765767b72440d0bd4f881bc44cedd631a8e27d3ca552f35df13efbb13595a1061762d1974777d40774ac8f0349ea8126f0b14bc590f0b43a08be9f59b2b62242229b82f1dfa6d6e1320e280a581a9d4fa119b680cfb066c03640627a3e8d718331c5f62405327c8aaee3f9f4f1257fa57cca71607aae84b68b3a0705f073b9a8950892f708bd7abe3bfd9d8379ead5b3a63b64a53c94712332923b6f135dc72fc58d07cf5b13390d1fa09c86eebea1677742143ef5d767c27c164940fe3fd2f108b4ca68f9deadfd77d98ab3ecb17630fe012f40bb686c497cb150ad5957ad72a114a0ae9ee5992db76dff10407ac6d38ab06e03c31fa0a18ca9b0363077821b8c19b978aa9d8f70486ba39cc8df7583142fa81048cd581c843738e6f5f45abb0b80939acdd230692bc5ba16e3b343a18ec14a4ea038301f411e0331071e0a90ce3347115cfe83b844317e3009cf7fca91071789ed101cfba3f11ea97a705ca3394e19f7759b128d66ebd009c53d17db4906e73a1d6d4151d511c3c306d79b0b3c7f3b9b45761648f97ec3a609a3fa46b5402caddbfbca48bd1cad47088b5c46af327d3d146456bc92991ed402ab1828410f14522ad037210bf686b8e05bd3fed1f20636553168c2d047a569e4a3955f480ffcf6b18ad59fdde79bda4c18a3c928b23fcc5c0aff0cde90881efd10074a5806ce0ef21c7acdaf1adfcb7804d3cefb77ba78b465e07505672b41796bcf498a8755d3264ef7c1cfb99e92381040135f85e63277c5c9f2be723a82e4bf56d9845be3305d114401bacfee29b62d8f16c2af048fde23d249e5bef9a37d3d09d7ff40226c74095c27259003bb440791bdd5e828e4942134f2be233a5dad83229c7b398f4b981faede697b71ea95c274bcafee150c49230cf610da00a733ab654dd4c58769ee87be43922d610b9064b5fe55a082cf7d17ddea5383ad630d792f5b14b82211daef9ce915fdaa40cfcc2e4eabed9c770aae75b2506a8b72f99be2a8deba08265b2bcca6c1e544095efb595ecb1c522045acf4746ce3cda1e3e3879026198f23a20beb7f4449bc2ba87bf66a3acba4e8e3c1dff98a6d9d946e8454d44313da40878e3135abc5cf3bfe5f828f609dd83810673e53116e80e6f90df5b79f27880b36ef8acc3dd34098542ab8b6112a91cfc1b15e1eec59cea197a16dcb34e0064032b4abcb9f9bb66c8004145c6676db360d9a6478e02d6379ddc26453b997672bc7dc8116e2485a7c0b86c52aa1402d46db383161bab1d06a0ef7c1f9be6a58a78f6ead452ebd009ad90c29fe43219339ea733e4c83d3e1f4fcb652714941043957e934e4d242561beaacf7862cebdd229e2689d8755c1ec5ccef5091f56902a761f024fb680bb111578ee910a518ad7cf32b2d9631f0bd8df6b5ffd7eada12674dd8d507423c78cfda9f2e0e02afa7f455b3e3268bf0ca03737782a596dd8204f8ed6ea4a96737ce3a5029be6311e6328f0880044ea40203c84f942901b89f385ba9d07d43724304908f4be8e3d05fdc69a5ca01e22866665e3d0034a67292c4b96621030689f5a841774577b2ff4467708380c5c3ea7f52f8e58a3ae05c4c3b80cd6a39334b1aa0a3b46f9552ddf6a9863a1da1d3710f54e3fa0072165c9cf123fd67b0314f29836b5ccc439ddb2af4ae4462344249883f7443a5e13c4995069f152051e007d3dfa2798686156e908b81541519fa1943eb51fcda503084b4a92a231f4e374aaa75ba3d2a861dd4bebf23a4b672615a022773acc08141f1fde29dc354ae17ccc487afde8377adca4e0f919298ea6e5015fb482b58bdd12115a96049b0597fd228ee0faa22378b69927d05cb98f4b8d8d3dbdccaccbfb14192a12d828ca9f5b9d7fbe7eed51343bab72efd00da15e6d26d13a0cd1830fa96a546d96872bef76f6969e32b64b0c653f8662d94e08b6deac600e5ad0b2b39f5cae58068362a57b1989d33fb763c8bba5e38fcaffd8ea22389da8bece6a0186b53a9b0e0c2d4d196785a10b65696b0fd305d561640a960c5802de3ae3e89c450f58e795b827c5e798d32cf932e7a6c990c791490cd7405a2c8501b85421d932c9c2e91c205567a59f52ed2805380d55527cdf2a57cbf337a15db9ce943a963657aea0d99021850a85490621556ca4be004e81e02fe318b3335329693aea12407c2f91ed78b926e395c3d215d0a7bccd044a76197f81ecc0e6ed27624f02c84cbe29b18711ea7fdaa64e14aa915e5f383274798fe9c6274911f92000798b428f1f5a68cb5a6cca36246169db854e1f47f4340d71af4e5822ed8af74c68cfdded1b283dae54f3bf604a2b4b4883d7e4a052f366b2ea78fb10e92718562141098c45c4420c55266ef0bd38db81fdb52d02b1a7e1ec2d5992d1bc168cbc0625bb83bd980f56d27da1eb22e074ae4234379145cf0244b36c5528f1550dfc221ff1cf8cdd5cab009bb93fe6792b3e55a4f5f048d5facca8a6cb2238543aea669885705b8334a1c7c57fbaed1d6a31e1fc0e4309caf0a81b5c108d8122aa334c44297c885f9af710d58c507ced5c509b6e862372ee005431c9dec9151bb233a8fc4bbc263fb217268823eab760436e4b7c4929f74e82034373ba184e1d5154f143bc758b82a7910eb16c3c2df9ecf79e7d9b29545e1c47559806202626603fdb2a282cb780c35898548f5a521a95fb4f6b5ca5ede98d521a5a0f0580aa1415e99b157fd94f02c6f156a2a6967e29ac3b0476c3af2bdad94df2193313ca5d95e7f8d75e9dc82c11fb088b75d54acb16fe2220a0d3e18a648c9806398a36f6e29ec552acbf52a6516d3d3071c1fc14ae3a07f1f080878c1eb05d3c012e609a3831b99899dfe19d23dc3f14e2fea2b860efe2a445f02c4be7cda899fd278d35903665a33f151527e61f3770bf9fa237834b95355b67fab412b815e7536aac7492516a1f011fefa72900965fa601a23e2792a4f87e3bc080ad1b1a9f8e09110294d68e0c13527d207c154869bb8ed1a1dc221665cefc197565d406deefa957764e6c69e1ca7926cc9f882f500c7d40f9a2ea3290e5b3f89d566286d9ad5d21db9af32470a14cf2ff61837170ab59a9975e45dcb68ba24709cd36eea3855f9a9358d9a101e3ee5d4ea536ae7aa3354f9699eeb74f40657697d68135e71c7e269696db65760999639e226479993c7c6f121a61e100432d7848b176e89a323d1445c0fdefc2f448e8239bc0b301bcce6ce7232dc9a0ed899c54752ac3a0e0718867399f40f9c9520d7440897c67251c4285d09d7144aee35b96f32e215f88cb52c98d205fbc266170ef940b1c795c2204f7165c5625e526d0a3fe82cf8f4d72563510f03302d6d17868d6c7a900a0aa032dc7a52342aa9c7324807d05d28f8db0fc32ca0968de994a2c075ce5a1eedd72a6d774e3059500d7db001d02708c2fb7a14b05fcbb77de0e1de530d45735b4859853cfda1f9611cf838610b363c2b44a6dadaaf7082aef5ebc19a7da5d623a142093f5db12edafbc66e5613765f43a73617fd55d9a0949b9853d848ea188547f28a2f15ae7e875c0271c32f15889997e6ffe246f536250783157880f5bf3f277632763bc3f7d4dc8d2b6578fc75980045272e62648c75e8e0ebb8c26d2d13a22cb0ad544d40fc6cfac9f3c3f37a973037d83d6885b8df44e24aa95e4492e849090040f6bba427271e3471fc1f8fefbce21fb6aac9157268de136377c8226b36ea2db36ee54ae2f69ffade4d88931fa626a32b4fc40e8a63bb6a65deb9c7701af9e6046e5e3e4488c9d88c8a73677e653ee7e74b38e9f1db672dd02c78faddd3ac6bfca0071aea954532d1d8c5034d84a0d7bfef7d3fc36fb5762ddd8809db8b2b3b41a392ceb30ec4e104d8498263bc42c25083d930e2337eb958aa361164c1746a4c3d200ac4025add73c9610926fb1194a266d45b4ece70f1c5c4065ad759e793eb51a9219bf566630d19a951a2b0cd7972ce75f18a067593945efc367a4296022e1857fcf8623fa297de0392c7cc2633f65a8e881c949817b81bbace412bddf23ef7c391ca64fe0b87160ef26ce3ad0d504247c41a9383c913f6e7861483829b58fa54e759d857c58b9b07c153fc64ff5da9fbc3190e5f75bcc422258f75b9280a71cfa2a9e464af95a25ac4bbda9709288ea37ffe74e4dd12096a463ca9dd3ea7f3dee3aa86a891ef33579c429a8f4deb2792eb572b5e62ed76c76f1db09f16699d5ea13f972201880eb88d6e74741f64a7c808c158b4aeebeb306909bab25e8f8459cc334e780b00a0fc7be580c22762f129d4458ec58c31ae7343998ca6f4f75853d5f1dd78c856a92e5b36416e47b58a19c5a629f9f1fd519b8afd4b55c63ba2879d3635172a945b31eb560fbed618c9207ec6a6623e9877a1a20e3293095093aa3c1077700b0387e9436274fa45d91f57dab4372cce8c525fada7a3810147ae721bcd734b293d644a4d853a65622c385889c00248cd4d11392a5a050d864de9b35c66a8516439dd546ff2b6ddca56a11f0127383fcf0d5a853150521c765f342319ad8bb012f3c936872a6e67c3810abacc4786a8961431ee8f4f053e3cab4871bf992bc681b04be3e830126e11c4acb8dfebc551d4968466827016c40334aa8a944e0b602bf503b0294d459c9931bdddfc04942a06a0e2c5ae6975fd439da352e77cbdf637239844969dc4b8e4018a014f71015a3870e4cb785a143b88131f4d464f13e7ffc6259061070119806f5600eae479059897e8d06774f3126ef7b4bd13b8638e891f750d41c79e88719f4b68da8244cd4ab205830257da11b50a0f971fc59c4c1e9d26502a2ba234e2a94fc04b04539dce9514ed29e680147084b611c3a37fd775956ec998895c66e7df162fa4a0eb133dfab8e17fdfb6ab2763156f658837a780f90b402c2ed8d0b6593d415b726b53d2696de6089265d310a023b077ca05d3462aa2ac7a9dec50e129281c5c4f2b5dd1c3b17976172ec97b72194cae4ad9971bbf17af57e0f6f51d419f18ccc8722fe200b157ccadcc360b4f05af39aee45667bb679f1f43d28cd7024a61b7251695dd721eeb34b8358cff52370457ddd14e37131437c2b54c7e7ce079f61b721f3544bc45e3aaa2c7ab146b9ecb491c2828a8da3792e917f047ecbf0077d412a1d9ea3ea14a44d28ebad03ed3892588aeaa8cefabe3a60877bb06fecbe4946369d81d66d299886de222a56cd90b72df31e109cd76648eb039d946fb711743e54ed830798385ac35ca7a594ccc777102949d4aa30a9b492981879e290acd4e183f38373f962ff1e5dcd0d8c7d02cf12ee4bea7cc7cbf158a9e62816f0f7e004b0cc796df221dcf7f4bc2c4dd3ff11179c5eb8c7eb37dc91b1c1863de091aa9c05914f406b4352324ff0640f8d539ecc27f74004bfebbe0ec78348ef9287f2afefd61aa1c16dcfa05fe46c8ed6fa6659250c9d1ec66ccbf54b28e9ea8c80e887dd22d3605da4d31a6012e5da3be36b7a9403461047d06874bfb81634d8a676936fb81abf1ee85cb0816da865fd48ff8e43da421886f5f1754e855a78d4fac7568b6076dfe8d7bc55953f01677f7a3d04ccd81f5d2b35e3dc4a332fbfd16de19926f57cec3ca917acc0dd72e42786278d63b34c0ec526f1ad18aa061aac681bc36f8101844792b2573e8c3c085d35f4d04a483f68087525300f550561c03ef1056d0f281969308ea000520ef870a9993283315dd931289e1ffb2ef7736669668f539d5b3e8b097ee11ed250343bb4afb26fb2f6fa5c7f64ba1e30c6e248a15d4ded4091f5bd1b6bdf45bc3d477365333bf9c8db3e89019e1704c029c765d3089639d44a8759d1b230a5e1bc3bbdecf04a32494a7523cc7220d87fc5f2ec7b976aff3d65552053c2219a2d53d71b5f5971678e8b7e27787eb9b1a8d4ee6bcc965737bbbf7f6bf4ee3c2016c615aa4f204f0ec248a273f47fcd7134d91a86a8fb620951dd1982e3fff44932e753c03f52999e9ba4135b40bdd62e67ac3bcc73587e57dd209cec40b1ee6a4a849bd1f065a6522b6820321f4ebe2ee6020408edf1901a302e3d99836dcc53f2501e2c0a2571b9cf4e44d6961d1c74bc0010ebe27d9b9a29c31920e73cf4051aa80ac2287f9424a9d124238912215d665eb4ed3ed73dd45a99682603973cbfece26451432bf01a15179cecd661e5a57fa3a093382e56a9a3fb812ed576508acd19332f53701f3aa6ffc54df30b67f6f9fe8838ec10eda991d858a360dd8aba508076f45513d702d0ca43c17f5794b468e016af950156954f8d8a76a6fd11051c041a1759a174368db39a9fbb832d1d608b1861068c2b853be6092dfc368ce7216ad71fb79139fa733ceea94d16e5e59d746ac87085d74d6e0fea972048dc82c33b68df8546923c784831319c13bad33fc55bca818891d7cb0e2ea153715fe9caaf6a8d3437b1cbaa2bf94ee7d87c36fd66bb149cafd3f121309875745ecf8082f7fd228c756b9cb5e3026f2667f1895c6301fdf4439be96b75d016994d6441e46ea90a380d4bc547b981ef27ef7b576124a60fa0f16c77ed294f1f6936903348fe1f56afe5bd1c2948dca6408ed11c9eba4a3619bc7cd741910cc482ba02e106c899d836deeec15a91589c934da2c93fe3e4154cb898e2f13f0e6d5d5edddca783745b8e5c043cb85d99c4ba7d142329df4ccb127a75e2883ad68094cb3a32b395ba4cde49b0ad55ae5f87392bf89c01696ac7d7e0917c035ca20361f0450108890d8836413987b7bfefcf0de0026c5ba28a86c0372065be9e742aa37b7dd801d0cee297ceb5155392dcd3adfb45c9635ee95ab038151991eb1611e49f04e4dd7d372c2909f5e6850af7212f8186ac52fe06dc764683814942f0f43e46567b381409f1abf1f3d0d8ed3ed8a43adfc7001b61ba575ff4e9553870ba481b1f502c10e8e749de20efc5bd05bf21e2e6777f59fcabfeb90af067003b903b20861968ee1cafe504b3f80bff0a24ee4a0fc474d25a253c426446a0a7e8038a88b15b8fe8cb6254f2c9a0316620323d453ca6c9f79e748ade5b6408c812c3a0d7cfaee687a28c12b4507a398843cfc6d8e1d89936ea45f3c8793d628215250b92160e77e11fe52b56da5a11bac9e1aa34c3ed637bb72566f96944f10722506515e8cd0a460c4176008f0b8a9eb39011810ecb6ee0017d001c25f010296a41b73d6f32bdd9c21f99b23c38354cb090691c9ba9fdc888d028abbfb12515e0ae46494527694399cec04cb19455583df5de3c1583b8abf7d3af893ea052b83b1aee7fd836cba2be40ac5d149bf29567d7ba58b0681d5fe4548597e648a96f9e1c31a05a1f3f4a188f4614c9f5782607a992e45a3fa63604496e766161df2a88df68bebd1ffc6d9c18f16df4a4070e3cc59ac4d604c31f15fd02767a199fefebb6185d51605e883c72aa68f731fbeb52fea31f86b48a49b254fc2ea6ad3fd830a5953a663431e1cf13107ea98bb1d04d2aa40555d16e74d2c40ab243d8d78638851a8667a7d855c9f5105411a5dd703ee9ea4ece5abc5160851b0592ec9be8ca66ba7dcf7582d35be05ba358676b024ff9b92dc92571f5ce6c457d0355109bb47aa78be9465e8c6b92b13388209a4a20d266c6951aa5ad490340557636d9091f8a1c0de6c68bdbe11f9fb6145dc311b7a7ec8c1a617717f105c633cc3dfc05e62392e3b156103e2e756b0a6b4d9c55fc070862a572b526de0140fa68d082556970b040288ad98d306d462e4719abfa4a6cacfe0962a663369cec0cc8aacbbf99b1d32d9a648b69bfa232d711eb29ded4324cebd202c19da3d0bbb3ebef1916676c9ab1260e4830c692e545d2b3f0d89f6ff04c81c011f41bf9408d1c5713365fca8db134700ab58413fec9262a0cd729b988e10b6424a4691dcc2695d73ba1fa6b9f73d533cebc84ec20270de63625a039aa4e89a95c5c91d8d5494a2538e712459d7683dab28ca1d1467dd1802147d9ea3664eaabb4e5415f8612ad3bb504d16657cde2800e2f1c96869f082aaed890b90ff0c523880231b698f8700dd357f68febfebf571cbe9ef28b0777fa097bf6b130cb95eff8ad91341bf4e9580e20c397e40e13aa7aecd7cedf47dd468b6fd552b0496b64dc58381875241229ca2e21f528029127a6e48ae2f12d03ac0cb56a92dc5aa81c23a378b6a6fec1ac8c47a5c0cd89846121124bb2c6e375a71d1ae8f536cf4acbb65bb43a16ea305125b7a8b8ad96d1e66c70d0802b9a1d5725c06149ecc26e2a61d8557bc43d3b9a291f4b1d351fc1c0acf3bbf4a9bcb8fa9ad36688bab4cfa20a5ed7b6e9de4df8930e29a8f7809edffcc095a8a0505ec09701da8115c90938ea7a683afe10b37cf15a2f8707b52f7df32d1e962c2fff52f33e614d18b3f39e552d00f1ec7394ee42002abe63ed85e99613fca498bbcd033d00c8245528d18e8be05e5b740e48f76f13e89946819b8fa37d935ce08556d3769903431268cb19e7dd722d1c5d3bf1ccb9da5dc6c8e272b5de4f73fa407955dd75ca6a5bc4930fd9b9ceb6e0605743cb61e2c20602f9073fee03610d400e5891b2eb923948d78fcfa930162741500d8224bd9927cd4e2fe91bbaf18885e314d7f50c1fa8f52f8b200a79a071a8291017b17afb9a13ec74657ced58be8d05adab9e4df724b347cd9a35ec313d28c40633c82656bb1d036fa7d64429d9e5a3f2340de328a38a3bc1aca79eaa8610103fc71c39533f690a5f63773056f9d69d478923959164777856e6caa8e842563754cd931162478e02675be20f73ca46cf4cf44609be2b4b7874fe62378d497f860222f0c9d34fa8b83dfb2f8a426bcc39c842c9f90147b84001dda232049456330d3c0408eada89b48ca697240c2f654669b77d477ddb4dd7a8fbae05885b1056cfc4f8947e9e56606495f3d97ffbada5e3f7fe2af6c826e57ddb129659990fade2f0365d63ec9e5537474a975e70ea93ef44a1915b49c5e3b4a307c92afa5785e9bea6390af888259a1ea7b2ac3966e6a27f0f1c946e7e1abc083866a350feeeb6a27f57556103da378fc632a554fc1d4ec3485a32ad30ab965308c94274cb3e20bc9acba57f006e7647ae29298220bd28664a70fa27a9dd825774f007a8de1646c0dd295af44caba9aa448728e2c3d2847dc81d1adc0964e448f8da91ea7d15b3cc6981709dff800872b011ca1f5afa5020a4f0640ca073185328b6f5c710174a1d196db778f8bd351e0c00a7ac4a6a4631ed0350c7497e8e1e36cd3da9c89268a2a8cbf34f8c00ae012f449a5533538e0b0ca90d34d638f9ffd9ef9f3dab6cd86b448860ce505c5c9f6b7b76b52e3c73379112c7ee9c97c293ef6cc49487f8bd620452b23563d1d5a49f808dd8853de28c629fe1df5c50161347666142569c1f52f3b3c56d1d6954669315612c1e29092efcfba37b64e0e54250a2614def720109488d32846c7cf8e842689537d3de211b55641ba67f498a29a84566d1961b0b5fba3ed8705b51f81abc1a57389e6c39498a12f1217fe9ba6f075be1fd480577938bbe75b62cc74d8973ca312b7352d41ca19e4335e08172df7e595b08d3fb9ea2653a2c87cc1ff21775c1f484fdf6d199d9befb4e938fa701158b03577830d97b6046c45bac57c12ff24c5e9f640e125d0d1f0c71781e88e067688f977b367f049757311f369a361b4417868a40878bcdde693e42ebb9926dd97f59675676e3f1f2bc001882ffc2b6bff589d5cb3821ae2dfa4ab897dc6bac878122729410c317b14fbbff582e5d9bf87ec2b9e4b6e8450bb766f37799a13cb62c1f42944979ae17dfb1d62b0b0a6d0d3d6bceed85de13f0ee8dd7c4b54625c3b0a89b6af8167641ba9002a7af6cad8a281db5d41db522e698b5551650e1fbf22c6d4a555feba4a135ac1c83baf3d5f8f0bba3105165beae03c9c0070a2982249dec9cf34437e39bdc3dcf5aa00f0b01fb0369b6b7629e932f46e671f4a6fc6770f054e2c2fa77667e16f18b7187c983e4be6773abe40891def6aad39f5cf6095e7f9385f94b4b59ec3d1004d9af592faad895ce610f5964e527ac4a98eaea20cd95344b0cfccb7f9cae218f82005fcc8692278c5d9e27fb7692570e71eb5830a8226d5676d78b2f780a429e845c8095c1ed794aa421739f92055de90b171ae165170c9ef5575f350ec7485d2cc62a323ebe7cb10b3a8318a6fa54b8d49f7e9e1558070a964f314341729ad8384d383a6321c59ec953f950b92c1b064dbd61b672bb57af36a6b4f602fbde6c58859d1f113d52dc9a19dd1c5a445a624499a5018105d402461d3042fbd799d2b1a1b4e27ab35a0b76cfb46282e6b9fe4d7777242ee471dd43c7d0a3b28f3c7b0120ba2f33fc72e25ad30b0037f21eb2334c8aecf96bd49e36384931c88f6c88106431868607d23572e907c98569508205bb0cd5534e7e2d91de89295826948eaf8ae66e0ff553c2c72e3d86075719210e7373df02670421e9d300a5ce9a59323cd7240d333f9541f615c30edd7e168b0a83a860b0944aaf03e74710bdc55620a66cde9738635fb647ce590332664a55960251777f54627e8e0046bdfa03e0d34c398546b24e79ac1ae3d0eca7610fc89aa2838ca541898fd30dc369d572e650c1ed42f583874d389ca5ab066e7f0f7bd86e88f3440fcd29778585a72f1d8a0e94304018155eaebdf8910e3b0b098b869a7c675c8c4aa2eb23709dc3a00a34fcf6c8d9c748f6a5980461307bff0858b215186c4555a9575638b2a6c417ec0b29aef3a5652d3b5a6cf48ac9c344bd0061cb6de19f0813200187d7253af7649c313480f887743bb14096fdd88b30d0ca208163450cc9e279223f2746c5cf1c418bd437658195e850bbb0dc4c3a031ec56d8a75e34f3f39c8043ee38f2ddf7932e8f92862f2125cb7f2c53431d2866ce0ece3817b95b82a3ba3fd37c04c1bbfc70fc722289f4e959707a0c9eab9c4b644ea93b7f211b367a8418c9f016ecb122f94c568e1095b482b0d682b888f8afacad54fc6b25deeb9ce2dce93b77d06c67b175556100b64f20774f9931b220c05b0cdc32b32360e5cab6eb6f3563497f1e53b15d9709e5f4aaef437d3e4bf6cf3c65ae3e8bcc3a48ff4d2022a9dbb924ce312e03d03ed18eefb4c1a629eeed1af8fe968970d6f19c2b3433e3646da629e27f0a559a63597c4387618e1c964ad8b76f5389476808bcda0503358709333ea3e77a7aeaa9338ecdfda18d32df8fafd1d9604bfe197541a6620965d757d6df84c5b864c121191bbd677cdbeab2264e263519c6de10432c6672d83f6dcda6e7a1b60abbe700d06d8cbf51a1f6b44e35a98f7f34656cde5cda8bbfd5585b9b85aab5daab59763a637e20109ffe94bbceaf40931865c011abe5e959b1eb70978c2856cf70a9857d881f07250ce0bf40827c4d22d794ba824d5bb5deae1bd81f1c87ac59075b8f2610bfcbcaa5148bfa5ae1677c34d347e8d544ca31b27b1b6f792d9aba75cf3810aacbb70397ff34f016750fbab8df2f54841a25c6111e99add7d339f4abd7697eb31a060620daae29d9bb079a57f0203d5e0f1107cf56a62a434dcc328504399968b785840e0ffdd66a4b107f46c4fac426e17c9028dba545ad3975ea88b39fabcc234357abd114ed368c3819b6b4e425b5a106cc5b9e680a60cb95c5b2b29ecb624456766855bb4da3007ea82f051364c211c4395df3317f6f1c756dccb4fb7607af72992d60eef480727d171f8fbe000004f53a7ecf7c0021446e582b463a1bdbf18b87c26fa86b52472213290490a5042545bcffeb3b245f9aaa85ea36ed17fbe356821ff120b6af685e2f7d7d2da4cdc92614a19c44d5e35c692ef5272059a9c7c3520b92273bf395f3193d9d89cafd1a19d993892d57c0356066f8bfb9ad363c2a42412a482226be9ed210ed2b0075f8267c2a58f9b4e853afc72932cb1174454833ccca0a5d89bb42b1c788030562a737662789ae1dff11028a0c6574e042d2183ce4528594c16e9f68a95ac9399e7b59aad59fe1d2a9287becee6bc9c8c473ad6607d1b75df4b0c283c7090e50f855a87041da6571146804047072a28a6d31572d3eabb3f9489decf29e5cfa349d45641158471899468f117a9294ee00348825efb5c314540afdd9c047f84bd150a2e89ed1c6b18865c75843738513b06364c5678c713ce093f9f7ea2fa0cb4609e39e8a7a1d06f9417e97d42231bb7622a266e495327073b581b7b99e102d2a941f1c5968524e88d64e6dc8cb4242d3f7226bcb55dcba0cb233963b3b4d5e535ca88b218f420639cfeb0d2fb937f7a5253bb1fd51dd76f19a39e06ba325f7e234451f3d85a2badd183b9404bc36ec321fcb495102ac68d4949c957f4a902dbb84081c24f8f34d346af704106cc646b218aebe7db182a142136ac389ec0ee90eaf2ee08ab11add85779f02282e757a68e0926b96f8007109933afc9d090f60589c4a8d0cf23fd4894f6985e54603505945933d4686e785122cec916f0432f3664a9fe32e35a8bf31763e6aa603d1af67b23e08596c6c7c4aca40908a3e794d07a711782d12d12a2787da2ecdc9e8fc806fea003a5f3be358c6ac39b226121e9f427541e97ef45ade4b95b5ab9a693dc90a93af3cae69eae565bf3cb42521632ddc349b6833114be47fe21677a2686e6118c5a58935277366e57b1c878c05fce840ca986852b285804e018f4b40f28570c8ad28f5a01c90cb38104a5c440c94a195cdd1cc0bcd8de19673cc601c508cf526761914e0e2031ec6fa63d92e672f708d5be3cc5be446ed1aef1d56a0d59b73c645f129d0b3284f8c8e35003f3e7f10051fbc1171e67e0e40e7067b75ff24572ccc66bb36bf198ff1833f76e4baa6fb565c2205e03a9178d191650375382d49768276fcbb02dcdbb321eeb29fe33931aff0038e58b8b0d230bba7f2aada4b7a842a1f45fa8e8ba070e089a95178b986b2e670042032c7c617b4d47f63a2c66fa1a396738e45ca84f92f5764255c5c0cafb448b8573b8599b9359191e7db57e144051a371053104b1bb64b7398d39b4a554c8372f0f9ac34aef4a644dbd1199644340a7a95ecc7c0cad837cade099aa1b89ca524e643c208307d31a9da315b45d17cadabc3e24fde290a0a3cbedaa108898f5bb26f62288dfa4503891a3bbc8481e4404ab854ab4053d43303b8c22203b808d50b173e78960f9e0ab99032df21c74c52e33a8aa0dedc640e932f0fc0d103a93641152652710c767cfe2b8ad0b56ca863f94c5b4dff7fcb9fd5d151d0a63177b01202cab7aa3b057f1d5c5b6672465077bdcaec4dc2175ce24f90305dae39ba3b4a6fb1e5f6547cff15646c29048c52fed3049b15c406dc639845059e9d637928e772e0e0990178fb76c5bd81983ce820918df0b4562d990dba63e2b2debfa0f9e271f3bf284e4b72e9ff924f8b24aa46ec014642d878a63d72e2b9a17dc679dc95027e947e1f908de9e2b8bb54654f783b22b7df98a9cacd728af37792f0a06d722732567c02abeeeae05e21ee3a5c364822a5c729d1e4945fe7740dbdfb612f79f5169c88ae7fdba76e8fa17060b70f40185f52c171a9bf0c2d0cd5ad2a84dc7b6acc7c5136f195f01f999bcb1eaabd388feb5963175c7ea2e3595e04f13abcb7d7adf3ce0e49e16db353fe5256ab1f816ad7d806ba352e680f06b4643745ecca208e31394db7e2fc4102ad75ebbfae14cb2c98c32828ad5ca7516ca9415fdf886fa16fca9ff96e8c6eaa03d56137b7b57be35e690df3dba9ae7d88b5518792ead98d37b7e6a46a596847919f7a55256cf4ca689646663b9be31b83f550704e35cc2d37fe57ad4f4fcba0b1695d8d0f16bd347100475710871595eb8c2b31ebbf5b80c484edbb46c94324a42b32fc182446797600abfd68538d7edf8c365756cc3fff112a8a8050cde744c05465375574034972e2c5360e98c40ad1d982593dcf3e2a6a4f121cf65b9bd3694d4cae7961af9b0e1cbe8d1910ce01e872056a8e47ea68caf130ccc6df71c749e5793adfcac0291e0676ad4a5f0d442afcb0291d21e895c826f8c4969a7359a0d8c64edf7da0fcaa92f8b9cf6249810fd0d24299f9efcaf32d207c2537cdda2e6c1fedfde9ab60074ebadffb38e64e2a69521ba665da05b49a33849f3c763ed4dc785014bbe38d081ab9f6b80e20896deb7a7fa7204c9e091df0cea4df09bb7e92759b08577c0bad16a488f76410236ef0cd7d8bba4f2e18f9f2f81f2b147658f5f41bf25a0ad38b9f97bc655832a62b55e43c2da8a3f8ccfe32001967bcca0f8feed8df10905951e9a8780d3269c3e0358efe2c7bde08c8c9f45107304e3eba014474aab7e705c3720db15fc069dd586b06d7e23e12ac31aaf81997de7dc41645eba4eb23b8c3302dcd372ab9bfb4e53cd490fd242df8f1059ca7d33f8ba66342c39ad2173991f03a578bf06ffd8d2456e6335b43838d6574ea0f983c9731ad0b39ab5281416ed54cd15683177125f6cdaccf21244b8433428a8fb5ffb38b441773e5c0e50bfbe1c416908184d6d4ed782cc1e29e7c50897f5d6fe8949d2817c9a160900bc8f5ecb056a8f391320ad337d69ce329b647eb65a9147cc5836a5afe4cf102302f205f2cde973813fed41ae2e65cc668bcebfda23d94606191aa360b8e025359515cfcc09037e77d5279ffab452e1607b9d2bdc18cca4c3883f596f1901f8553863a609c7b9e96d12f40c940234b2fae24c1c5ac4166f46c52c10ae214d9f1522266b77f178b0c350e3334df34e4e7b6413538a4a797caba1fb229eaa17bbb3a8667a71ad439d067ae239d69d71b38fa19b424a08a683b97f376c42372f32dc392c439258b454a4bc762425211792043a697ede50bd799d320fc39bcc144c0c423f82c8387891a5a4598bfc2f4b2ee9c3514a833d39c520d088eeb41f4f57a7d450dc1347bada10cf139537e869c060d82bbaa52519d807c133c17b6f25ce1da0489e3264661f3eb2a4a6ceb1933899b62f4b9263aa5cf7c56883c5d3eb9ba054b15da5273301fee19cfc172a0c6ba01e3eb8bafc8d385920d41cfbb859bc690a8897969b46e286bec33cb7740537753875162afad077c642c8aecdd09eb19f772da3a65a27f24d87f94624ddd24a74aeef778ef06a1b9aaca5f9b34c325bd1b11a9f7d2b3005b0879d01469cbb88db66264ac9f0e3fafcf32b62fae00ae00ae31c1d98b5d11cebdab8a3c88332feb61ef8204d57eccc074496b58ebaba4c6faffc65a59122ae56c042a88aab4996f722f608f95468100a257ee769713be475e1eba5dd09f0a068c5c8ca6571034451944476576a84f8b0fef7977a04f991e1c53c1a52a8688a84ca3f3d40dfdd5cedd4b936e6a537894108f40c674438de6944d44f8a7e9782959bca2fd861f39b8451bd9514af65953eef2ee60095f53c11054111a630e1112c6bd2df06e8f8240ca0284bd9850746c687fbd8e475bbc1fe2ab161714113c9e82f94389e0ec26ee510b89f5f1c8812a5fa89808c63072d2b02dd0fc4f82559992aa4ba5cdb4b9f1fd559813f631a70e726178bed982cfcfdd6385244e43ed86b240652080bd158ef35f19c0070deecd6cea56bdf060ff4781e6097fe06e5382fc058c93161b69201d3bde2064725065dc029ec0187ab907dba2573067c751bc308869a39156e86b48257f253a478472c85265672362e1f7ec21c8d91f8e1328d223ed5bb18bea461e4e8a56e39c9c20a43f870d697fb4f46cffa90231b05d4c332058af839f93780c5e3354b9bae963038255956301a33cf11d855c64e14d3b6d937e884b56e3fab6916d8faa9183aa750004da447c35036413d18dea2475f9f5fe877b4bebe4317a057458c782e4614db74c1146f0b9b5f099ef026ef0f2d27d3c99b07ee15952d7bb473b57fc5cf317c34e1fb5b20e78471ffe836e7aba4ccda9b67cd397e82b402444d22610f07b71178ad9a4a76a01a932957dca1958698963c70de6cd6ebe96ac02a7de64b6d49a2b7eeee561583ddf2663b92379885882d50ffcd11d8d600459b9f5b4ad6c162cb2b2462b891c22a14a94f94a4e6f8bdd6d62d9c3d3b2581f972a211627dc9e679d277a9104d62e676fd94a38f8dc2b0229b871232b84a77715dffd83063ba20037b480166a016d3d626f859632a24b1e9c9b13052239d723e306d29bab5db0ab5dfa5effb6f3f997bd07d5fac17362748e1bca07e70ff1ad35c184c7af5eca253d6c3646d4f291d2b28d8d1ecf5d0c7f908d99487a99fad417c1be46b5788195d6adb09ce8655bf8b032d58b3234ce49aa37986deffcac70e2f3c9b0c8ef0852a7831d54cb646e2aba21c9e5b73b8ca6937b9581704e007fb754a2a933f207c1941933be0a7e7c1e3dd6f87d7c1cabe6df8dc39b5f165bd44168d1f5ad68dfd5f6950880a3bbbb87af23274529e60cebe0c5f9e0c381e95157715b04f35be3df6b22110751579412b69ab2f5bc32eb7694fa017a6bbf68c7559ce27b03c62a64c9c698f665a62eadf7d0bfe57d34c4850589c7ff14be58b19a9b4abe4df9919b22caae7181c39264ed1faee9c649fd2f92c62431f1488276d1148ef456bb9e843d2198a714626a13e9161dedaa004fb71d2b68150e7f8f8a191ce2aaac91f8d53a43bc2653562383b7cbcab2d9ccbceecb5aa4fa8f40a6130ea7052ce16cc0bfb46e5f3b3b7f69a828c37223666ba4b2a75aa4cccae171bd61745b0b739f866c7dbfee99d9594a41a8ae98a2bb1a14b1556350259d89ac82a7c2fc7f3f8531314ccc334147508edc8d8f2e7fc73cd06f7b6ebce861933266c336ab564eb446cf61da272e7dcaaaa2f0fecbd969dddd644a917254b282320168560d9b110f4e59bbbd3172cb997feae6b403bf1639035abf2c904c2ca04ae8887219f00a87fe4bb5c766665a2ccd85cd89969fa5486688172813d1e81918b3a8e140f5bbef6311f7394ef6c3988aa732022d719e190443b1a1d5ef20b5b28ae323248a314b154cfbea2467337311836750464ce58a23041459a3f88497e61055792cb4b6d51fd997bf4f8f463d70ef40be45fafcde5e704761cde064dd1c7e031a9c51d6d96ee08100809517f89e06563fe15e16efcdd556a950eb1c78cda2c38597554570c115f631b5b11c48efaaf696d9e52bed57b2d1dedb556e07c3417c631748edb47cbbb83b2dcc104ef0250db52c4b03de037d3a6a3e212e01465846788bf402ebff524cb352ac41fdc65ad4e35a407c15e0584c1f82c05b21ac94b0968be34af84d52a623e770a78cbef7499ec9e00d1accf0ca2705b37b89e0eeba7b723e6c1c371965eaf84420eaba42c67d9eb95d56f59d3ecd8550c15f7bf29128fe28eeffc03f9ae7befe64890c73e4ccba5da056355d9a046c625510e1f5e1b89d772c4302e55245c1c40681a74503dc8480374be1caa2a6bdbfa353d18bf0c81dc37e0211b5ea5924aca6cd214854641d9e1566f8a5c8046ee404407d7a9c29edcc9c7bb6c04ea8db51057b7989e37c1f0b621cb71b30f9d48fc69747975e7ff714ee6710e68e577c795f4933d3488f966e1330bb9cc55e87151bc1d63e06225167d22b2e31f75de11a791c7f10c885affea8a94d7e93da303735a060071b26e606c98c7e15d1cf29397660d82f267fbb5820ec4330e8010a7fac99b2cc734146de1f154168d6fcf5fba1060c0ae91b32538a303635839ca1203f24319b13da5a0a479c5ccfaa48e4cb574e22117e1e753eb1d682f35064d37ed3e3c84fae08e8246fda9a8045f9071cb6b65b19e6fb987e032551f861cd9b9d0c9fc711feb47ce18c48e770aa2b6eba07f8f2576f86ae1eff8a4cd4233e71e36bb5fe40106d68231c4280cc65e417e0e724bc9f1c92d3f760be59277289d8f052f74beb14735c19809da0509b0248c2e166b4aa0410fb81f87554935a4b7c1ddd12eaf657d45ed618d6f723cf64711323b50c450edeeb0cf235453a7a3edd2e54d92edc162f596758584297fb0da986f81639ad715e8fdc13d77153d6c127e9dd8887a19adf49c240481f56624edc3cd1afb7cceaf82ddabbc54ecc5822299d70f6550e9e0f0075d168f8b72bb2468ad183a6ac7872ce56091b9289aaaaa832a4121606868a5db7cdba98fafbeeabe588dd24ddc3525f64c742213b7239f8aa3e762351f69acae76e8199a3f4bccebf65f17d94a37e2eaa48cb8473ae374097579d6fb1e44eba332d7b7459580a0aa40f1ac72b1bfb6570e785279d51534e84b15fd9eff8b8c65f4d35135a0cb701895cc23aa78475afc188eccc0f822e7c2557707306c48037da048a4ac0437ef8235f97aec6aa531853fd2bb971e84c5f3a85eb6ec20cb32a54c2198cdf76cf262bfb9c95be05b82941cd1494336c0553aa7715979d00250c23043b61f24ed350e11f5b2edd1676fd6ed1941e52c191cdda697598c038ab3f2139e9d3208e0d488c6630f52e893763ff5168455eec1822a35ba5d240cf57eaf97af589d5fada9e48a1e178797bda06ffdadd2b355c4345138f373207e5939d8c37c27c73f1513c5f66fbdb82b255eb0c34f85be011e97748738e6e461a119f9d66b643323896e0e707c69b5cefbdd1f492463d17b2bfb84d4219b75822a696b9824d2a6f0dad0a6c49289cb48129f1912ed95e0b6f909a1e932baa1497ed2de2eb408d28b4b28f4c90bcb6e967763787114ef9822114f0d8aaf9d83eba9e14d340375138f2a73b6821c499d231e50cbcaaecca5ff41180d8ccfc8268b32fdc4bbe35eda3d3c8d42a0b1d825541f782a6549332417db64ca3f90f92212e10bb0ab5c308b027193a1a9e51a92565df63bebdf3ec10a53f19cc3ed1a079f13b1ea646e20df28bf4b12e271004201d83fb0967855f255ff606f2ab22d45035af4f6413586a086f8e5fd7082d82a17bbfd58f31fd702fb1922a636a37cf79573d61f61207490fac7a8844be567415ab944b7777a713fd45cadec0c2d18c75686e5462bf168242929c356383ea1059ea755e5c8e8429bd0f5400dbbcd62c19a3d29c1de3d79b2fb90e512a84ef1359e44d9de7c154d69c46b2d10b0013770a62fb25bc4dd114d6d6904a4a2e4f77ba53bd0d207ca1430b9ccb5a5a6c644555e2097f44864280c68ab1c8fbc2da82af0a4f238c99cdb40c31b54dba43a14dc4810fb0fb87121c0389e946eaf9c33543b6353bf51334b926692ac478cb2767de81a148869b1b62d2903e2fab9bf526ae7ce624c53371a7ba01c9099edcddec7fde663a91b85354883ef988b812de561b9775037c42a2d83fe8cc135e7c1ef051da12de854d13ac851f0839e0b4260193e64bb303c449a286d16beaa70ec15e67f3db9c3c8a076538e0e2a87cab91128a238c8fdaa704d95031a76df87d2ad803a564dcd53f5e6fb1372785a28c0e9b4afdf11d65fe8acaaf4ce7a0cb72b591263ee969360c327fcb1c6b43a6d201c33186e5ada76131fa5e6dbd5a790327c5a2297bfcfc235e5d560a45951d82924e9bc343b076c64221e2d71d948509919af02ec38c87cbed56fe89489fe9884a8f98463ccea90a238f0b46117249972b873b273519e477dbe02782b16dc27135650f314f21b96967d54fa7af275bb8d402a000e7d4bce3a078ea164a5a2582b45310983dfda5cd75550397927405956aa84c8c41250c6126bb841d0c1af84c3fffa441fa36371b25d48bd5d19b269f2f105f1e243b8d0bfc4341465bff4b63889d109f13b0571a31640cc1eb791b47b628ae66480b62362fe15405eda12e469a08197380acbef24097994e2ddc625e2f4dc46e6acc83ed04b00affbe19d5a97b6a30ebe1054e70b7e54cd0a463bdcb537cd8d5577384d8c82999f8b2010f4fb6e6c9457276c972844ab452d2179abed7c835b4819582f331ba1070194ac1632a889167e78cd37e6422e9ca9b050430f9d90683ee1b99f760ec10791843ba276c4319f39e42a182310f414fa3dc472238feac2e03620af5f4b6ca36786960307354e292604ff0ccb58c388646fb944d21bf8d4dec01609b35875488ce68a41c864e11fe3ef4ed747440498d0b1ddd7dff3dbd8b887bd3d0d71234ccbfbcd89284f7cb336849782be3cfe649d21b6e751b8be213460f755590dedfbbe00b5cf76640c537b5dbdd10e5c76577a116aac8e31993990264aa1533c7cee1a7d17842e8a23d97539c30d7eb6b76a99b694323fa0116d426131befde38888b86a4a28cece852c5cfc649db8a95ad23716b872b5d008afe9f05c4d585b4195418f80370fedf711d324714f4fd7bb0bfc95e774714c64c8168658e6cc317c7a5f281b1552e75be49ebd0617c61a6c5324a8b3e004292ee32938de495ee412c3f217ff8ce1c32679518a9a985ac225e9154d9934d16fd4f2b1e98e2b4b3fb0d96cfc6e6196b6d0c7beae7a52f1ce9c031b136d1c5bc901c2303bc1e910f4b0ec4964b48ba271a49d73dc00d07787526a54c0e40e8f5d60d3713bd8831d744becf17b899a58eeade80f778468de8243af79544f9a7f7e7ffa4f4d43319f657347a1aa5f255d9eeb042613450bf7fa825c6805007472cca3bbd5b3eae4bf1be9c24dba43a664c6c0b058be0c1b017d43d3d918784f2c50a15b078c6b517285f52106fec75183971e4c75cbf4f3302692860c6ba8692c76a89c9bc133f1d9e5c7644e5f44405219cc6c7c6410b049a1df0791f65f39d87f898929b7b6cbb4cb96f3b341f00e9d1927e1ca4f48336a4d481e95a087a8978f2347af779477795889fdfc1ee49fcbbda4cd97626374dce8341f2df619cff807ceb781b93c61c602d1779f1f608a77c7a2da548647854b93c8cdb3fb969fe188952b0685481f131fc1127594e5f000496b9eb84d040a7d30433bdbe94732dacb3c6c9d1ca5ab1da501dc823d6c96fdfe7ce74af71462eebb3a9bff0afbac416ed6600eec4bcfeb09a568fb36bb609440b37605eeffe61f71f4866446d8d951194ab9da172646f2eeebf79946baefe34624404681df9a36b0828c3117470f1d6b559b8a437393da5f2f9efaeb5a2794b794b75f792120b63f4f357a4aa96c9504ea58f53e720ea8aef9c4794b5347c20431b08f8528e0a5472c9951afbf65d05510637935fe7f3479e1c0db5488ae5ad59969e12b850104cd2cc658936d051ec45ea2477ec9f104b9cde47aa63efa8e086f80c8a978faec012788fbefde05872dbf553267d7589c6bc536e07b088d8e5a191e774adf355b742c07203497041b6a5a9aaee41e52efbe0cd66dabce14d3b676f7a6f02ba1a35b25b7d2fb72ed093e70a1f9de11d89e9b145a9ac6bbe44e2ab9a277b5faf68a11396ac88ba0fdf65b258dd9f9f8fead8bda275973c06508e5b25587bab9a045630c9ecd97dd912c6b851dbe0a7e8c8433e7b65e61b97723d2209e6a4b5409386c0c0ec6af885b37e5d72c7865a916645f972c89b0bf7f00cf709ee1b68b7e3e8842b679a804264d39786513c6e7b187a4f88ffb5ff93ee1e4c07e0b9d57ce83e5c414c54e644707f67592f7d3532d07217395d6f92322c1a026c3f9bd3fc11d5fff603a11e68d1a0ca45440f50ac3747b978caf14217d5e3466183602b00b0cd3a92a4cba8f74b368dab6dd970bb96ebd1235fd654c6222e2c6091838852ad4c5da9a31d8a293f84c938628388775ab1046302ec1ad1e8708c4435451c570f30b2cd2145371beaf1efb927979e6c7c9395a4c6a61b66eab216239e55348042f270c702f308830b6f155cd8c8aa230750927bb8a46f632f5456fec6a2574b32f1f18a90081f7e11e2f8bf1cd1bab7fb49119d82235021dbaa1e9cbfba14efb2c217de2b79d0a3987764bdc65f44244ef30734c8ea6ff2732424f158493043d3f3f25d2023d6a3b144919a1a05fae469aae1ed79ba0b6a7228b0585f07b41481c5d9b249bd91143bd48aec710bcb87ecc1bd9d4fa2d6b638d5f6bd3a8a6708fd2c3dc16c1968ccfc6c4702d3dab604fd90b509f119888c6211f891073c09ed2789fab8d70f66710e3e92701e887de390edb39b1c7ec19ff85494943c4f72fb1fe80dba1a9d3a21942a56c233023881ab290238c25492d6c1cb912abff79c075cf115819ae5dba4e51f332f80929aa2bbf0cfb807a3d3ee7ff2cdcd51f797d43f43fcfd9ee392666aab8cd84d368aa4329e572ed5ba81116f27da28cce6cd9990365d6264c345e249e0affb6f1c25cf9c40fa6ae498bc6f49ec396b7bb99e7ddc5df2a1f1ad460e0910e907e11c651690873fb838384963c7f26172ac8fc9b6b4765c3dcef5c795f09031cada4e3a6c450c8a5b8cbcada312ca7b58ea29fb160a3fb0e688035d4519026faf765551c8617e193be03e98688357c18b85c7ce49a04d28ee5142500b178953b78febb70963d05dead31c56bb4ddbc9a60405bdabe8dec1801f56662cf655513d49ae459d996c0fd928d2ea7f20863a155801c52f54170dbc56370167b38162301f720bf371a3325b8b18a6c44512b7ce1ece3e0d98ba4911356d3f377ac7612f37e3ba1ebd3a0d085950fc660ceaecdb2b1d7cb8d8071942494fee6c1e8124953053b2d7e596dd5d6e084ef98e3d66436e73f5c7f1e453f05cb43e95d1a7166ca9595559badad034b35fdbbc84b0f417ddcd3879bd7feb38a55f8e47bd9777f55907d542cba0af2dafe6fbe1b15214854ad4825e312c92fd5f85d52b161371722d4e3da2e3e33dbad69304763a7d93e8280f99bc1983c535c0426895168ae95e0841b5e2b9b7561063b7186e4a40dce1bbbc41b0cd708035591f58c338e52cf40a856e396a14471ea102fd03fa05a7c8d65e8de51d17fe09085ea9cf49abb96cefd5f2a24a39c6a73f09ee432ef58087552d09dec3c7b3d5e6025ffa1d70675b9b96fabf948ce9ddfd30d9ab6fa9bc44f7acc5f5af21ad2728a61310d1c44949e5914fe94bb8d3e2590dc6d083cbfddc3a2867c61acfe6996960b43798c586fd5b73dcc7f786f3df16e3fc6a2926f7652854aaf61a0edf83288dbede26c9b608de7295c2060f504a41e3a839ea164e281fe1c043a9aa01cc0397f02a5015746eb31799170385c0a175a3753c84eb58c58810c9b99bd31f3fe892dbc5c510aabd745860b1cddf71a4ae3c936d7a585a912596ed03a3fce345ad874676504da94966b3fd4c3d1fee9373a31f5365fb34f00be218f94cb6d01865a22e794e0045357104265ba25067bfab9d2ea8dbfb9607d0adca3d4ebe539e2ee85a9e30215b256c7335b822a247f946f7a734904fdf6bef6da4f071d7647c45f6de8ffbb8ec2a54ef0d32b36d457bc313f30f209d244b27e5629206938e1ebece70c43590ef7ebbeb71a6d1b23c95b0862222c5b3018fed71475def3673ab546be5caa9415202ff51bb075976d66620057420989810276f9ea106eb047fa674d9cd2a611f0ba5b0591342f1ee8dd326890164d613768188723771cbaad54ca3b4bff925d3309dcffa77e51564a34eeca7b17d2e2e3237c90aa9c9f6b4d60d516fa83e7ed130ffb3b3c8671bd52d4cafd9cb7c80d4b2537046fa1632efb2a6b9fe4120cc38692b848e9dd761a8ede6f2b3c7eb0eb5aa9d7e045a8d2baf7ccefe129e6e2050cc8e4ed6b17bb289113bea0c0f5f2ee9c185ff83b2f568b3151e01f56dc6999c9b7be5951d42b9e62cba5a9b27e63ea2e570c1826ccf46725df6efe920dd46c4c6c992ae72fd780be27c8428111dcafdde7c570a32a8f26eccd537fc66c26a5f8885552e2b276bf38bf2ec491da050a18509e82808a8c1c075b5cd2f7d9246822fee734b931414eadce7dfce99d2693a9d662bd771dbd43fa63cdbee15b030eea42c2af75681d15ed652dcd5ba2e5ac6cc345629ebe9ef2ef14eb3724a442a6a79378684502cd02f0f7cc687666c6b1237acb2a18037d48b530a4723f9d03468cfa2b22eb4d3dc46230bd39feb3a7ce4aec0615542d34252a7ce237e1bb1d37e528b3422924341baa459ba1570ac46c12ad9db7cd2655dd27afb5098b940d2eaf346d703d5147de54bebae9daca60e626c1f937f177ef927e2fc0206ae2fbf6ba85f8740cee9bcac54b046c0c823e2de2bb1845ecf819b84ed22f43f9b13f95e7778ed27bd4b1930e21b3b38f7eed0fe83c06f522dc78a2ceef4632ff42674e4721c11501841c0632a9b38491cac683f6ef210293acefee742fdbd683bb6678bdf29e0372a8d6002fca5f667b68be6e35a43b376daa930c593d21042908a4f0ebc90093ef4a388586f79722b4a429206eb8b0012a67a33b1a85f4516d65db859259f1f897e64de1edb33441dd865aecf3629d66734403c215ee0500f4647c1297fbc2807b02b5ded4fe2faeb4ca16b62bc46c5c62a6c729a1aef5eefd643c0ccec5bb4774293a5701ccd42c0a11aaed10401f7698c9cbfa84daa597b677033144e8fd338a3464213d38b6a8b7ebcc508d8fb0fc3f5717332544ec73e942348daec8db64a678ff37f1f611c0059e2100a4b01b5a1a517a4f2d4c797a22eaa5eeb31a95a71cbce9987f4793ff43082ddda86bd5c600f9ef8629ed6bb5e3e204f70fdc9942ff4572cb98b0c180c27493137d52b29f723dfe082421d29068c18a377363ab2ad6e41e7198cf643ae5a0b9f837172a2d1cf6eefb6dc9bf34cd12915670a59f476903cd03b6fb9128766ead00e86b3b0ce8de7415aa44a00d845c98c5dd916b2b785e83e0c82549558bb859e1053c51c1b36c6c46d50d8c39b34633a3ae7f21af45e6c23a7f844e35ea5ed491f7bb418a604568c25491e1893cf0c6a3b938532f051aba42257b83d97b6a250217195382d23b1ccf579003db690fd50dfc4c575bc802c147e41cb89f048245973770813d434986eb9fb5b58a4452896d13b7817833814ca4cefa72cbbed406eb228cf3ec0f4eca23a38daa7a70dd8f05d613d3c0a77529b76802359937d9d07637210527ddf79ec254a7806f7ae56ada2f81f8bf5a557627b758a0281044c7e6dc1c33e1462e1bd75b779fded0eabbb8e3e6eddf7baa0be1f8fcde515dd7bc1736de3b65ba8bb5369c905023d9fadeef1811be5aa0e2e3cfc96a3857a478536a336bc405a6002b5259867fc1f5a68d49e956c045d03601679fb0b7eb38bfc908346fecd611594457e016d2f5aaf7ec39e214f492452b04196fa210a04f3bbeb310146abbf4e52ed5743f517f62bc233a9a998a443e8ef6f2b852c3b28912b0cde0466d40a34b01d1daab95ca8b14d1926519abed5ce1acf0e162c96c9acd019d0da6ded54606d0d2869401eca3797447e5a4aa610ffd5c44f83d35a77525c58f4b1fc543341143054cd0757171c65c8a1b7afb3ce28775428fba801eece8ca4ac3c770935777a64bf3582632831b81f7cf97d097b5f20b498115fb2d73337a9c1abbcdaeed5b053f8c42f5f4bf1a5a9c5ff18b0f5b459292126fec4a212687e75d293cbc149db7fb2ba477e2452688397855c03823d79dcc7149122c318a27e32da83a7cc5df426c68f3e3f474ad4be457173486c7f9849f00196218a00cf4d4d1fc6890e8a30f3f382e00d997781ea17034591da0bf8d0e8b88862df24ac3d22f2aec5011463998161980effda867e13f83a590fa2bd56fd1f8a4a20d5f36e6506f0cd8082002eb1cb8dad9fd2102f8dfd6387860eefb6f20dd9fbff393fc106057fc4fc803284b0410cdcb76536d512083f35516daae6e6954abf0434b17059c1c3ba32fbf585f92a8b8da58f8bc464f5074d1ef13a5bab5bfd39c89ba7cb232bb614ae57dafe090507652746cd23233f8eed7ea8ef7d3c97a9ef63ff880f8273714bcedb39a44fc85a3d671ccb9a9ab76861cd5207d943b1ce318f1597b88d754b39658edf6bddf80d1ee9d7861392acf4673b95c337bf6b8f6c6895be51c25769ae4dbbb56d43101de43e09e9098077a26857320b1e2fe4af2f007bc566d88808435372ef2bc9663a4fe479fea8b7712c44d88c54d0882d49ae3f4ea8f10566c00954004d4e77e0e0fe42caff21e36a1b839d939712736d1620d2d418b9369ec347461c876da414baefb6064daca1d1dd5df8347d598240611c000f1ea14f8b57225c38d13e2436dcda50cccc77629ab98056cd5c26e36815154f3693c75eba2c38cd09a3116c3e854011a0e7c8c5851fd406e53e28b38c824393bfa69e6bfb1ddb233fc8e7b369df34a219834324db90c779e6d9f33bde81df340356f44bfd461ad0e9613e2824f551ccc4b5db627dc11b1a0e69231fd753e30ce124d72fe4d5e1a2c598b83565359aaae02e99cda1e4c41f7574bab9e4337444b1a84c74a60068008ea6ceaf7ed581f09554bc7d5c16dc989395ce1574d979504c5b8bbc9b4cd0a1c872e52d4f3adb64972f2d5f6635b78be9fd840c16dd7abd4619b3721cecbed070040a377896804d79cc35f53b60d14af4c7fa8b648ca9a1aadb98fdc38be91141e24143085e151574cf62e87ec22525aa8c026278d75b93f61fecf9ab754f181523d19f783d615a6434318b48ff7b5e9e485abf6115f5886fd6c458182ffe5054c98b240bed172af6644b03d6da96d6bc30fed30e76bb66bf55e7587b5ef40967565783fb1287a023f3afbb94742154c968a233f468f8d86ade0cb78fe32795ba7d5f209ee387a1007081b832f98eca95b099c05bdc9321d05dd31e83c384be35d5a77fc15aa895ac5820ef8f53cd5db18429f1479e3f9b25496f56061a18bfc823283ef1f362551b1df6087db293efe08796e6bd99d0e91ca1021b866bd99dfb8f10e06bad93a9dce55116a3549dfb0cf6cf28657d1b38f0fe0951ba98890732cd01ab627e0bab9cb2722a8572f2cc19f07e88645314fb1583fd5713905597c3e61bd2561f106f48e531e45029e194bd22db527b5708a41a0e21894cc32202a8e6ced7f58e6beb826510390cd97cc8b0553b4396c40602af9f4dcd4738e30e82da5ebd3b9f6ba66eb328b93b1d47ad5df6e00ccc6f1ba9dc433dceec8a93a8d9f3144297e71b69db2a3578a21edb2895d8c81b240b613b027c997a68ef786e90fd455d1516b6b096e35b291f0d62462c153e0f955b729cdff55a4204939d9bc75a725bb7664f3c29f16ac18704b82db8bd34404d59a5c1030de23713e4cede18574c40ef0af44dfeb6de3213e69d62651678ef00f75072fca18fddc38533e5e570b3c4854f8d73b9708e282871408796a9b3220677f5e8e2b9e9307f59cd5c7a755c12695d0ac11221cf1a2d3fd1d8ae799b7336d6360ce231fd698e37e4027545c0fc8cdea24ec5f683f0bf7e6dbb78ab6dfbb30a733f8d881f78506f3ab8df6503c853988da78726f3f1594caaba1c7612644086379cd6d94a0d28fda30361014b665212da9b489c866a03d5978c8f0d2af0cde151d6191c0f6d78b0d75c1c90f30343f9469293d9350c9ed775b139c8457950ff86151d0bff8ee5610d4dc4266e9b13805098d77fb1fd31987e142f330382979c67948c4382c47719e108f7006d1020647ea7b7dd9182552554eb92254e1db4f8c20cb69fb0e538c95838307e0c5d2923237a6de37369306660b28bf582d561242d3b929f7aaff54d47fee625974d39343656a2265ed0573811f4db58fabc0dc551126861626db042a798d762ae946f6c0a30ad3295287ef7c93ba1ed30ec952575ba3f08a50e4508b2509c312a007a537305c68bc95c594541f81fba0a1f1d6f8949dd026f45852bbf61e1419774bdd3c76b992f927e63daf60da4422ee9e5a8250b490b2645863b117bcf504ca1d39836144ef4ade07b1ac8494248f551630ddd82fb4f9ba65d28a71fee3ab9d8b0c52edeaa294f876ab112792d60a64bce0df2ee57f46f32fc5e1736b74ce1fba2ceea978249a65f02a147198b70281f47da0111ca9557d28ca3c86d48d63878a309c4cc4e7ca470edb45a722f2ff952cc84dc2606a64320e884624c3626f7fb986d13b6057c5c7648d131c628dd6d95b4b859d863af42cc84076cbd07b71bc3d19778c8101392b6ac6835a9016f666d1f4684bcf4fbc2c51385bdf4850ea33b51850d68eb3b09f2ed8164949c175e52b197ef4154ad309dbbb77a013eb0bd737e6e590187d8b1a51d72a77afe3138d8f850470afb8a0aff76518f0d95e8e3278a05b13d1b822e7b105f7f6e99eb462d5876d11b1e81fc0fb2b623d24c92f355c60154f211f1e1b70b50a64cfa07a927754d02ebaba7e70b648246ff623b09b27899db9026d73b55e3433e22d76e66b95e3c2aef06429d33d9d85ad160704e7ddd824b8ee126389265224f014151e0860e67d59b53363a711459d7a3b9008639e44110f486d130ee01c2d311977ce5ad405cab94fb704d614826c2069cb984b407ed9e042280ba5d573658daea8e91b014b87c035f02152c87d15c355f90f5fe91f43bb83e4cc23baf6bc57c9979e3b2a5477249ca6f90c25894918c629fa7172b62d827fc4a54b588dff1e786cab73c6f9661929917d75f8e95c25128bda7f3bd11f69872abf53aec0a36c7457854968666ac1a2ddb5f84bf073cf07f7a5e451bdc799a1da500b6350fead2e8fb28cff9156e7896734fac207aa92a0191e9f03cbaf758be3ef30f02236197ea1dbb99b3eb3547234e52e73ee8202a58d32e55e3a1f2c0064b5c4673b63ad4e59e9848e78b9ef4a840cf4ca9299b3c46852add9c4bf296b99bac1bfaa004f258c1c7f8dc2532c4ba268b0320e93b7d7cbe56654e25f3a2377bb9cf40e0bd39a9c7a8218ef8270b451dbf762ffeb8474d1f553eb5ff9820e11ec6ebd5120d35659acf285c4275dd140492f584747a2b3994c547b168ffddb0675468264cef206d4fcd397b5e6fe9f24f3e2014b825e12ee1b2df682cedefec2cc844e0e55104529f89cde2aef795c58c3ab92fb09c716f58cc31cb4ac3a73408bbfecc293abc42e83170e92601c8ccaca95edd180be4f06c2756a8f6824fea39247fadcea21f9421eb7a4fb2dbb73d423fccaefc11e9b7768a68cf8986e2b334a07b583c7e98b6491bcae2499d7ff124a835dd3124cce70bd35cc94a5c73e9a42c43582f299bb5607de5d95fb2be77bfb84c8215124c18154da04c4812eff4e02d806469ef49f4ab34202fe9aff69cb025bfacfe6b7aa13937bdbdb1f70d04d618345fb617a48251169670ea83372042ffa93a919e8c016134c70b5fbe99c57bb588aac76bfdbd6ced4c9492878f78a11f4901eb944d6352d43ca6424b79682dbbac0750274ebe7473d2fc288c34fee8a4103684f4ec70793edd5eae175e26c33dbfee29cda9a823b4e9f4454f87f007581ca22c9e50c224ad7232a5c6af4b56a1618aa290f11d5370de9c8c094d54cb279e568e77d56ef95cbae78df88aa296d112b6e746a27b4372d7ca248b2bfd7782a6890f7e8710a79a06d558b3e0c3365dcec0d08d67632aac1262b7677687ee260821c49c2b49cc8ef18b4b1e092909ecb9bb9a2b2b6a73c320c6d1756e539ac6d0321d8785e5686d2fa910525a87875556a6c054e0e89cccf9ef9b2c6e5061c85afd0377b4fa99265a45f2634b2e8f0a557447295bd63c4f6bd885a121388a3e1f5c87bfd7da4cc0502446c9c05a32aa6f7d40af0f96ebb65421cbababb7984fedbee1e6f36b6fb2c5cf68144297f25d4a189425ba091cd35911d3c415cfa9c76ceb7f92a873fd73ac21a3423316807784e85e67f7637762d89631e1d07c65fa264d13661d726a1dfeb7de8b3509109ba6c0e360785e09f42ef452b49238a252b5b2d4bab410b34b7fe90d5bb2e8630d5518136a62f9ef95fbbd85640d5b3390fa332141f4728436b2ec9dde4bbc4b357a8e5fcc64b5fed3cbbee96bbff90ddd5285cbe5b461462b5e229af2f235341103297342b503305ac425677773fb63cb988278222d65d9b0a210366c88c562c1da6a5262f5997baf74d5653119ce277e0c9ef4709c47f52d2175143ebe24d80407312959a7965660f8e113c46dacc619790514ea6f26795554530e3a457d13ec4448e2024f793b500df30a3d1dc85ed4dc6a22fd021666def851de28a70cfa876ff298b0fb45503fad53df169ad43077f7d17805e4e133c57efc1bc8d76d79aaf1c8fde04f84880e264255479d2885efa8e18b2da66efbf76a2667b5962caf90a192ca7b185716daf5410aa4e25d02962d5504046d579d4c1719c281ef75038a918a4a76b231c5844b63b2440a7b1109a08044471a394e8f62dfd9e4ce2077ac3e7a8819cc69b1f266143f37e89851d6b3fb32799605ef480fe500abfa6cf0d04367ed67fddd64ae3cba602d337e9b389444bf61059a3c0ae5cfcf5e4586063b5af399172d02776b63fbf6fc4c5636880143bf3a848418b22d3271824e02ab5eccb3508cbf3a467bd85b1cff7efadef842a1bf08597d3985fef27a1d724a81ef07b003703f65462ed8e0e75f7c2151d62799c3d1fc03e43fbda91deeadab3ab1fb10ba9f8eb1507420e9325d2d2bce52e3a52230401d939cb25640ed34a767bb8fd314fe440dd53d3c8df3596b0e6358d4eb7c42ec7897870221297aa22d5aaeb2b7dad8d3e40be3e716a809eb5d358cc9b9a64cb11cc1087ab583479bdec30f7656cc76b2a3c9a11a4813401fe38aef1dd4c25ef7d4a7c63ec4adac72314e1950cda43960d2f7da1840af92b81c3fe18471fbddabf55431f36321031a65df4b7b975f5e0391fb2436ad5d7df2d379f1cc79e62966ec110da2f1603198aa86198f4a2a7b69de22bf927fa140ab5a699e47cc8f1721f088be6684a3689c16ba789e044712db90731b2b1d9c31c35e6f20de447062518f95f3cffa112bb0483ef104b83334362b0c61dc3eeb6d1d6e9e6a363fddbf4fadb596dfae6afea8df726e5d82b325c6f198ccd683d546e138f7207e97d40ad66084d14bce2f406d37e8b8b276bc92882b17ebff287e70fb3102f36cb8a686f3b735d2975f56aa977c49f75700a8a1d7dec37c12d56df1508bb2bea1bf79e59dc55ddc27dde307bdf581d757965a74299ae59e83be44b33b08f55489f6c88d551ba53abdbf0af1e13abca055a1930079c6f3cd619590ae1660893380a3d6d0b4a2d1ca62609a6f60a0cb62f73ba1c1bb6a08fb276341d44957c2c234c300cc47ed5441db890c462dca39c158f27a9586a3009cbbcba7ded3bb6570db3595fb853036873e8b61b2501fc0474dbedcb70a0242b3a97e78810f92e49c26129eab77dc3cfccc101beb3e86fb73565373bfa80aee6de0125175eac2bad8a40d2a1cd93e74fd0ab25257dc692b45b314d83e148400464a87ffd17d1c5521464af2252770d66a0967a4d2e44decdb5a25e2ae308c06d2c887f6cef89483b79f1be8c12d3c19259bff3aa61569bcfb33792de681245a526ddd332ea6cc2a3df891128e4f0e911183f9d5b25b620a5d39039d91387126012ecccf271dfa948e00800de3932ba2b58fd8a2f6407a44d21866e77f589d59d5d3529b087d066362d42449fc9b6e65c95a6da93ecd7ca540484998500dcb939c621e7a4642c06c801f789b0648c8f3f1dfd8ccb5db4d6fb1ab52a6b75caac118570a4aae94814b8887da6acd1043b02fe29a372d81796469636f957c7f78a78a8bcacbf14021f16ca6843278a41f814ede3c535a38bfea75f4b56d8bd11ea8b5df32bffa670b8a97103dc7d14b12772768fcfe46a7a6785e8226401707de188c2117205d1147f9abcc895f3e7a668ba5b12dc44568a928065fca7924e5fe44f0d62d1faefff57bdf5aef39be3fdd59262d84444075d8577a6264760f7f0033cfb2685692982bf44fb4b4523a755540f571f3675c4b0e1f56d57ab487eb4129f4f922eff2a863a7ca8107ec22f54e99f14f2c4026ec845bbb01738a9922a31ed4e3ee9150b2aab8e0c1037320234fb2694ac3e8e50b1834edaa4acd5a23c790dc63beb18c87d4300ca098d3d43e550f60901feda809b63f7f9129233abc9926775518b15167885d687e5edc05e3c397262dc07e8cd044dedfdb3c45b9a71bbb400658c3429b9365d5c0a05c63cea8ca72485a58db0cbd458475df4e428cadd61f2ab76cf408090313616b99d1af5e75e8b0f32fa96f23cf6ea6693153c995521a5654eb02765a40a45dc21c27ef0294ab98c466d402f91bc3e67b9e0931a4c650657635ad789e9d9b3ac48fda153bb50bb607f793b6515358d5a59dcbbba5a5aa4e30003fb19ef95971e9ab4b7d856d5572d672701b0ca32bac9e1b8f1eb4dde42bd71454fbe50a50de153279495688579795953d0c80a29896e9cead128d168a6e6b64dba2d6c7fd70fad6ba243c909a71624eea5f8f36da0b691d7d61522100dd41ee0481e7ca75dcf2d6f14391e7e60bbc7154a1f263ada3c272b12714335a259a8c6c51cd60978f9e2a7340ee6fadb2f7a618f24f7f68bd906f4569ed8bba52872b5d06dff3e598378148ef00afab1dcbefff4e12f145b5c2d94add917dd5fd85c0c845ba43881ffea74d3fc00384346256669acc53d2fe25ecf7c3e256b6b258489aacabcd4b872e99849b40128be9069d237471e88953fc5470dbf2981196b1d0355b58e502f4632a26dc19c2c8be7eae58e9820007e86b890ea1dd7f108b256e219b2270e18c20b34ff103c6b8646f02596a8b33bb81a274310f5ad00b0cf3e71d1d946eee379f1b9b60983ac155f2e97fefc5124f2280bb7e33a0aaa33c8a9fce26391b51096934b5ceef578c2cc369516acedb628fe6feae85566eb2f32ae4d9a9566202c4f9fbfda6ffbba44a6660bf47b98863998a190d198027fc39778f703f059c2f66df72eb4aa6fbacb2a6da01319951d762c5a28104abc4235eda5b5d8a9ff0f951685b182d84a1b594d4f47f30cd25507e7d1ae249832efbe00a2bd6d8d483b6c91172be84b00857fae3b313e4ff9f2f9c46730a208482bad80a36e5dc1003d83701fe263931e209b33ff31acfbe3aad91a33941a301db08e1b34ca154dc6ad2cf2551fd4524a093c65ee387b591b9dd431e5af1cbcc6be120d415c726e99042b77df767764f7645b2461007d747cb11f07a915d9fcb0351b59dbf77e238cef8e595b9f2945cc2f4010dfd9bac3b87f58690071c3d2a77de975d624aeb33142acf955f26c7fce7ebf70250dcc274f27ca5bc89bebe672a2ad181c8cf1e631397547df679ee2ebc5c186d35867612775ab88ea6a915579bb0284b0dd5dabad4c9999a9aac235e6a2a0b4e4d1ff42728aac7bb4c22bcda7cb041b2fc7cb8f24786d4c26d080c4d962345b39a2d15067e0d38219b978fcd3d04387a0b5d8740cdd7081c2eb6d68daa3b89962931a17500fca880d098239cbf4171d2b37bc4d9a925eed0ce536ffcb3afc2be93916223ec08a6b0334f368d704e06273ffadd3cd4ce267e4d13a8531dc7cadd2adba14d290b77043d356a4ffe8e59c8c8775e046619cd9e82196e9fd64b2aaf93c60b62345f3738e95355dd68cd3a7501b9cb13f99927385f0853893963c55a8231d6927db36641608c3728e9a6b5da66289dad877030dc13c357b0fcf5df92c9b01edb38c6b740933b46b2c495259171fa6cde4b26e5f1906288eafe2734998f5681e208b418f2a91032998af6df6762c5ca444e6dfe5c246f512dd8f5be2bc73d94861f51ce5ccd7ad137ce6808b670539b7eb7e46b95b08654e7c4d4fde01965e702b70809ea56bff3653c543ccd904b51a29afc86be63acae252d27b1a9f780bc88b68e98fde478b3ccff52803176d47c7fad2fc0647578694f4c3dcf014aa6654888b1459860f6703c590f7870bf8b9444464eb34acc66f3894d196867989940b69fc81da12149ec20cb6375c6053a69186a972d2fe3c4396f626182f05d6bedd81113a15e7c8728591f32a0d4030cf28b05ae87ae2c9eb65d60bb0cb0004c175d46abedda0d430467277834150673b4ace1d7632101741805f662e832bbfa6002e17060ed25c787d5ce40863ee26b03b64f62394718bb2d4e9de022e622d47c07f54f5fa3739358b6b5cd4afb358ac17c2df603614e75793c62c93b1a747a1cf802905c0a293d7d1526478c4105f0baa5afd9646b34bed23ca0380c3836877694b10ed127e9c452f9c17ae1e10a215b3db9b9a9f2a6888044fa7f08563d4489b31c15a8cbb41a78cbba5f33795294802a18fe409a471c942a9df787c1fcfe1ced4145d8bef6283c735594d148dd01e1775c5f7641e51e2ae73bca194abb996ffd35198a94e92457bbae2b6ada7c08cb2823d75f476aa79ba452b0d82291e14713021e233b2ced36a156e64f45fe7e2c240c662e78778022fd3ac3ac74971f2fe168394e67b28c08348b6dfdf147873a513317e8561ef020682d37a063b295a7e35afc0b0320fbf5e528cd01ac22f49342392ebc47947125d6c73b921f6a07bd50972994b7cb444e45a5ce8c63ddb2798ccfeb27e8eedb2127e99051a82411a9993374c85127b557d5c7f83d7a2b3e7feced7e8533f1c842ce273133cb43c204bae3881f5e5f6009e1a4e6cd958db3c70d8eeeca8edb973c1f7da0adc45e05213976d1332469d281fb7c6a307765f10afba315605f307f9d6db14594d3ecf6f24a86126e88c3c6a8bc2d7bf756fdebd6dfa74264af0405d078783c27f27c50f617d01a925757123851b32930dbc6a83a96296a2163dd8bc620f364022f9b0e362efe1146dae91ccc0a94a355bd53185d3c5ed4ae7be3dfa965b0772cc40b00f24e968822bfea5bfa09fed0f2db927f4d4086258685a11d7151d2e5a407f301b2b72fa9c0df613090e9c278bcd284c2c9d3955fa8e1b5ba31550687fafecd59c5f7076b6b2a0d17a4d025ddb55c670b95d68e3e32283f8194a64bde962f483cce37acaf37bb29725a040388ccec5031c59e4f586784646863b8e86bb991bac27c405b04de0c83dc04f6a9ae5109fbcca5e92229ff5d47dd0eb680afc7a0a4434eb01c6737a144fcb3aba297fdb770e5a148b94317e642f94a4fc80998e74d93bef9491eb400f913de41ac506ce7f21e1a1db8991fd19c1035aa6a8778bf8b2b90a81f3501dcd7bff572a673315362bc95aa302503b6d8fe6af0632624f3a1340ac4aa71d2b829df2ac17ea3f0a311ec80b1894d4a799d8223644e79c0fd7907b3a3e0203c20cd8ff14d61cc7c17d3dabb31a891e6d80c55c2926065004098e9c7165b8b177745965e453b7f913e135685fe3319a4576b457f217d357cb5f5e70c6b11e149a285d2d57bf857d5e78995af514e86c080ec678b5c0b34008ab220756f6a7ea576bbe7532ed8164ee07ba16593b41d693dbeb0195329c7bb4fd5a3b627a3581e5cccc1b4f3920e451201addcd84b75ad235e5ac8fde431177dcb8c15a836b0a47ecc4c90d8369f316cd783d18abcca17192cb1ebdafed2a4a472c2acf143886172fee7d8fc105be076d87f9af5411a2cb5437d3400cec234eaf358aa36f47fb0f6567e16d08e7b3608b9921a7c4122fa52b2e29588c9af739c679cc35f53e920536dc65109301f632544c597f6fa79f70f8f879f67c19d1b43970f1d0738a2d3b380db6c6e98264324858da0febaa8481290f86bb090a01d620dccd54e5f390a065397d494250e530ab37806820b5c76de1acb0ac17e0dbc992a49b4f4576c399d8ac267d5631f1fe8884502b621f0c3be9075841421a3c362b2a36c131cee270d14d6b6ca879ce831bcf26b232711ce7c1cc4e1f831bd4c7a59d979ef0d9a3a202a57a9c7c81b244f55f241eb668ac0b2db54b55b2caf4891613917365b49d0cdbe8c8ad58d63d674a58363208dfa3cd24a9b1bc9ad57ac201c8709268b26d6c895cc3071a3568a7277beda78545912c236d91dd3a0ce509da2780fcbe2be7c0cb6d42aca480fee41777e07a0657c0ee32bf74368bcf089743afb3ca7d0dada15506c84e2db0685753c6f2a0ff8991cd650aefc1d8708b84dd57713960f4bb9bcf4baaa55a49b48af665530819abeb5692bc49f1928cb0d871ec41461e32fca1b8365ac0fa749bc76f6da8b1560d56be77067e132676b9851086d7478c054c3e35c5806f63f9a8f7a3a4ff98db01e4f528b55dd2abc1dbf1778f8bf9243b714991a801ca26563790b6e13667ffd03221cb686e61bc5029f45a2ae887a7e45757b494c8e43d843e08ea355372bdb6d8f413d05aee130f55b2be517df65c2226fb25bb9a2e4d162a51fdf916b08234a8b441fd74d1259e532930519f77834119871af4db01a499693e2731078c0d21d5cb4722243fece94e87a6f8dbcb3314c474d0ff10908fbf6a02d98df26ca1ec6bfe5e7dfc79ebe9e6dbe2bd07256e3d18e09c5ed68c49b016d8ccf61d56f81a9cb41618b93026b45b5cde319188fec12bc852b20c0b7aad7e3b1e05e8b2054c17b75df47048d9f02d4e9b9db6e254391592075443e20cc1e865f9821f6b23375e90fafab77145d2b8c4bb8389f7c31d4a17f2fdefddc018cf56a634ee271c76f0721ddf024b13c9cc190441f2006e1a239b2b45d10f381e372d22c39214d5f5c5c631955c8084091f9faa510bf6bbc6e1bd58bdd62c0247fdd9ed4efa8eda876a6c7ee4b4e21da2c989168ac1a2ca4026fd20d49ae3072c5e90bfbe97ce5ef9558980ecdb6fce92076e2389f7de7de4bcaa2c5af81bb5c71f8a7b7baff40f6ca35091f5f6115515777ea474bff6b881c18620a42c063757ef848e15a7ed83ffa7ba08899abe455736dbc2c32bbaa0fd665601593efe13123b9c8776f339bb6f286b60494db59e940b277e16510aef083f8094127b13a5f4434b58d666eaed81a6bb4f1eb85882f0f55fe4826a6c7756978c64c7edf6fd3fe89a5187179b46dec5dc3e3c354c97866a7735f1945a719f4e4afac2186dbc67ebba8c9edd51fbfa66a226992e4a6e72a1105bdcf4aa9f1a067b9d5f6cbdcf783b5d72c42455b4e4030870c0723c8802b44b7b278030ccc9a35ebf7bf904100e2ea1650fd3973cebc55712a7ca7a51900262935aaeadfd2a95725e3197708ee2766c01f3b7b9a3f69d4a11ec23f54e59e1bf2d4e693242c84a36341106e9c00c4b861704b2b178909755706a4d979872d2c2072fe32103ab6c4e2832a9e944027aec03a1830bdf530166a28614472af0d272ada36587c0f2287e330f30cf1884a61bbfa809e1d3eab26618f1c1d03680f5ed51e098070a449d8d7fbd1a25a347aa8d26e21f287f3102ceed4c52cf784f80c7a9444f63dbe74611b899a5268c0314c1cbab2402c87e5158692a361fed2bf73d91cc4323a4dbbaa84ef273eec2a9c578b6b3cad17f40f98b99eaa1eed6b5a9ef8708c0482314198cd8a1d22d0d0f3d48ab615ae138eb9bacfdc11ecdbd6cbb8b28c318077c4835a0c5f5866d43a277d4a1d675f0e33ff92fdf7e6a4c894c55210ff5bdb26d4e1041d39207d2f6fcc92c06eef075122302546bd7846fed874d4c6ef7e89289a2352ba96b24ef90424a1465f42ded6474f10c00bc91ba4357bba365f02369e60c46a607fc91e7710c60be2bb3a73a885b799badcb617994de43eb8d66f8f6abbbb062336b8ec0899565df572d8cbfbded584cffd89cc4650aa96464f8c87e85dd5105513c850aa7ba73a7fbc0e7c2860137ed37011a04b1c32b66e68923e22f45696ce937a5a4026598dc4fd866d69345bed24a668a0bb799e2d359f6dbf1f09eed1e5835b921d21a332ca5c4fc1ddf11f62d45fe08efe02dcbac8eadd611df73da9673f275ae2c0b130cf1cc15a4f46f173ac6901e7651e7cd34b788f48f286d9ff2bd46fa52f7e51efeb78532ea3460de35c3c40ef60f28dfab1a4ce95813672ee0713757805f2d4423e81f98b867ff314b41ab3756d45f69faca463b23b319aa0f7a1f299ddd9219e567b082ef1d8bb2d96225cdb3cd49e665c65baca966680aaec96a797b5bcb8d299638e30893aba015f898cc8fa5ab76e1749b92d2bf0ac11197ebd5aebc1815b599c2ec7a1da2121f975fb1cc29b6c0e0ceb57c3c0d6321485174306a9421d1c8cc1e7b108231c1f33cc289e5853df25e81f0cf20f0fc3c0800e485d2df7861583adc988013ad9ca9448bfb4ffd43fbca953700616ab0aaf0f98cce360726e1de8e115407cb5273b91489127e66cd5a747a9544b9a97ee092d38157b84d4ef0b47c1aea3a787816cfc14a566de85b9e6904178fd0f67f19c2340cf75dd3232dcfe1b9636140c92a95e7ff5e29d2638fd01ffb2ee3f3fba45dd48766d67065204561c2aef23e623e424190cbb428daed1d24c4b8938a78a4276a58cbe894040bd39fe345190cd1380668d0bf0a68a4a9d71257d3c2305fcc4be1872776eec0b79c6c2e52a8b744c70a0f192bd1900ca613fd92610583903fccab1d1ca5d99481bd5c0021a41d2854eef0cb47748209c1f5046a8ac6adfd0e9a608336b3b8e76bfd521cefb85ac792ceaba80be28e1c8091cd733278e9fe69c3f11e11bf372ffcd2507adcef1af2c6a089bc9e5bcceb9ef231906d1e3489d3bee8fe04368eb9e6fa9a5eb21df584d61288f1f0452e94dd4ce19cf822620eaf4dcceb70b53eeb4adbb81f36d915c877149537966a3a5d124b3fa9d7fcc792453b405747089ac3d1188823251a5295a9e770d2a10a77542124c0f3ee2a7b2f1a21fb620ef6b5e9c145594afd278f9defc43ed3280f69b770612a51a3efbfb6f1f2e404624221b96512ff4665eda81abc76ac57dda622b3930e921d9ede8d64afe664a86b579d14c94739b44804653d2cf961adb42e7e84ca5e4dc9efd66015675e503e9d1318f756a0f8f7d1cd041e2da6acc142c12bb5db2e86c04b4da6a5f4dce4ffdf74bd1548341b14795059394ac3cf9b37f2c09b836c83d4a0c6a04cf60f6c4c79728d9728ad7ac1e53e7cd06e8abae485e8aa7e43f479a4f03cefe204f38d9ca18c1a2d8f7143282e952233e44895c4ec537a9bbcb4e194057f8ec5decfc0d23ac7dcc5d3df6942098624ea9491b2c55ebcebc30766176089f6a992d1121c18fc450d67db92b6d9da6b2b5fdf7c7be84dacfe7899523c156b5039f63a2cb56e37618fcf2dafb9ad3583123e6eddb06de54c56058a9a53cb58862c3e1ea2f7a6e25891f5655e78e7ea1dcbe3e670034139a32a895e1cf8afc8e62dd2af066f2e6ca4305c1d8d4f03f2f355baa1861fef5c9901c6e1ccdb729817e2cf722d840146b09ed83397de6eb4f1de9542ba6fd8f0ac5855b5611b8649f88918a04445453f850151aa444e4857f9208499ca4b3a56409fc2a2fd7808c50bae5b1abb8b950a7e2a53e618e2eee29d203d431494504c8d7abe7cf346842f5cff9618da98eb150622a6da795aaa07bf2d96d0d61d3cb2b115e34bf242f5a9a3934454dcfc10c9f96fa840ebca33a30955e4ca40879985f9f066c82a36621813e3ee329f2c8695ed34c700408d6d030e6fe3fea87705943224a7c9bc9b369244ef04e0dd31a3104833c77a276c69dec225e463894c7b1f4a917079ca555f0814c56d1124482d118084f4998574f549877c27fcf8236f4fb09c4a6065c02467b4a2909a492fde3cc1532946fa9a1916b03a45c941e0d55afed3e3eacaa586eeac733b106d007ab204c47144770ae05891ab24ca20029f708ee0e7e88ea212f31b1ab5b6dd358b7044d15df3c18fd46f2b58b6a9a9f2578bbc6f1fc80b8a82d7184ba9b300f488c99805b2644fae52caa57b02a26defaba741ab34546ac50637ae31c8f8c7b90babfee35c81936bb151bc9922457d8088ab3f325e7b248e71cbb077a70a6ad114b549d705bc23e24914467d22f4975b89baf9488aab64df8f9c03481bd6f9b6b318d2630a57cb653f5e7465bb7d96921f00f103df6bec80557419a790c364c217d18f684a594557a1a94aeea6b9bc1c43f56303e8217d2dd8eabdb9a92e2cfd9d25ac414c538b989097ac9f62445b609db632802da11a5bfbe0f97bf8b3d2a0c6b1734549fd03b5b7509800cdb61a977069249b1f54bcf55c140421668c489e173990c7aac51071516f3636ebe44bad1873afdbbb896de102efff1a9d34aa0618619c04e83d0858658358e50e9c19266bdd4838f4cfb34db1f617ec35e5a21518e537a64fb7bde4e76f5ebbbb82564f694653e9181211d188b87972a4f73806b9413af31828e65df3dfcc3ae1a8374cdf8a9eb9cfc586b0a7c5967135d52862ce85584bd76424ce867376166d299ceb720b279e0ccda409f2ebcdff8fdfe8ad8b9df9868cad249ff444dc72eb6f79deab1cf6a9cde74720438ca94bde010d87ef721e965c5a6ddd6f02451c8318cd4b5b10c259a160d6a14b2ec499411a378e398572e7ff63760082b5bbefb8160821e0fdbb15ac7c48ab252bc783e2e36b7313add7fcb1509bce36d139f9d09b5503264f2fbf0cca3985b260c07e09f5fc8f58a2bee9606651eee73af27a1a0bafda1fdf863b201360769400a4a7e20ec377073035e9114652cefc48282643a582ca798fc7852147c72c100d0e21dd595ff780d5ff07393dac8d17f41bd641e9928de31e2e67d39051d1366c42444dd1bba53dc88ddc867b2403b14a42a26a1a9654938fa5034442c44470b506a8f37db5152575e6cd471df33c3f2a078ed0dc365119a9216e345e50947bef7b099e63222d71cee59a10bd0b6083d292d0c14139be691ae82ab007b2294d0c70da178671796bdfb766821dd0e5af5e5bcf9004d1567a970baa671643edc8f1cfc6edaf5c0bb8010f9e3099ec36ea564e614f86e31cb6504e6bfaf5eb3987d6ce43b30df06a705b4e77945c37a1f4ca64a536db8ca0aad683612b9343ce249fef4ec8e35b27adc77e3f0e941b8870b8a320c1bedf133985d633d026f991ce2f5f629e2b4b3986d99bd27569a74e980c64e37b99af50d337e17e69c015f2944f5dcf6cce3bc5d614f652812fa8e46cff8810710d9fae1b86743bf3e68682ce49f49cd610d88c6c4aa51e625f9dc200fdddf61d05092ab1fca31d452e82f17cb70e8b02e9c2bbcfbd2d2aab805ab33af24f7495287668a25240f642de36bd7fae30b7a68d6352fa8445d3b5fd835c88b1f5eb7c7ade7e20c828757856ce0ddeef2731d99f96e0c2c935bd06d42e1621772d814a8e70bd72ebb000c500b47aebe2ddee26e0f2c72aba56cfaed355bfb77d849321ef89a18cd807b95a316406bc19925cd30d606935038a0231437f7b1657ab92abc6e13990db57c3fd63e3ba28698cf4fd8ed4bab95860c127e2696a4ddcb970d92cbddfdaa9ebd78042d94f0a154505380191e569fd4612339ea0a89c47008b64c440bdabdd840f1ebfe93854fb5bc4fb8594881cb17e232cc58d5daed7ba1d41ff6fbd2c67468a5823c54a370568882e1de3bdbbe9d065d20f98163dd763ce29a2f637b8b765fbcf7ae323a1f73195cde64da83612eea5af036f1dcc932dac306c9f0179b5a9aba1e546622e5b412b83382ab2529a0052705820e0d19a5f2536e71f7056e0d264422d833d0a2d6fe392de2711b224a0cbf902b0a11b464b9f409125b3ff360549cef8da13643c0b47e8dd7ffc86af15a901104db5a93f0f4040592881384e4e027a1e2aeaab45b1a2445f1ba8ff816ef81241fd6f56660dda7a5d81e83258744779659a6bd1cb1cce0d13ffcffd00f5bed7a95cf944374fcd4a6d2436006f10d38df7eeb9690c7741d2024ddacb3fe35e06560d2ec9daf375aed9c501f404515e2b8e6b86fba4d7e70f61b405d549d1e6381cb8c1a7a0e95aed20575a9d434056a01c3a4907363a8c4beca8bc4f3bc066a3b4391330d6eff2d558deeaa83023142f3bb7c1b236811c52b3fade965727a8a6b914d1741026c5e3a10fd1c746667abb4bfdbf1aa5c6a2e3d24333bbcb4057307637efe445c3957d4501d08dbb0088a71101132a42a757cd82c48f6b7083b4710f5e4f966ad3bced295fe1481c446a724ed256c6a8793d3d23ac16e13f56e6a4ac560699b9d3c21ebc53792cb9601a36066a490d7905fff55058db100b7067706f942bf3fab3dfc4873a33989be6a3960a788044a5e7f6c73bd947023b6d9748c43f0df111d876a04764a175065a615c4fa86b7d4488ff681145feae82dd5a3d989016c413bcf2018b4b28db9d5740c0782462b4f6b781f974fa2e4524a2f6dc7352ed82115f0336d8b51d20729baf12abeaa6dcf227aca2d2b6e83074c17831e6d97bd873c76166a2f79b3784e8676a986aeb5b3d09e96b117dca3c583c23d13b80d95e1677f19221cf2ce8636a85b1ec72275b7d1edceca6c5997cf0bc3cb507a3d58a0b87a7a9e229d42135229f6613e729a6f1dedc27091b230a413e09aaa6ef4d16b13522e3f09390c8ad9c08294107d112c195a5b294f9eccdcd09107fe10358ea8bb2f6652d7666a506e9bc8d499195e65f1525328b8a6ce0e8313c3d12ebce0f8b3f36bf00d4b7ee0e5c902264a35ce3dbd5711ac6b63a3e1263723ba2882b6d9d6dff72ed0aac7baa3cea05fba006ec315eeff9ab5d9b756770cfbd76f92c3aaffdc391b5bf1620e7566c0bb235db417381bf0e46a0e721bd8960bb2684e77fdef055cd4aba49134f79790b34f7858a1e7a908ccfb2adf4aa53a60dc110bb78ad4839979a2b03aa4ca25ff9d4b6a8cd891e5cbd25d09bbdb2980bd7eaf4f8a2d75960a50b1ac33759ae929b7fd54bee09fdb2fe343ab42846dbb650cb52adf2a83c3837a6d488d48b24c713c8dc8f57c4637d4d28fe9f6b318f41faa09cf28ea42fd244346080085ff21bd4b1d8dbdfa6e0fc689724e73571ca2055d659a1b2dc856c21a58c6134f901df7d1a12fde71e1e763f93e554fd340db5fb52c28453a726965839b10ef40a6c10379f36b34433ff0e079d3fab7626bc6ab4c7c3fcb7d63a2f5b32c9a278291b995bd0d124e337df9978b3bc3f4fee9649fa5498745893c9618e7b8327457bf4293ed07a634890532e63de099ab4aca4e672f437a846de119de33c9b9dbbd54ebd3bc1f19ba8e01c70460d3e15de14361f2fcbd3da0e463766d5ded391c91f53075302236a30fbfd8e06923ca52258dcba18738ee9880c872ea3a0821fd3c7a75677c9167b575723e5d59564d3064ac83abfd020f2b154536ca13ade0e775f61cee124ab2744556cd5e1f0a52d2f2c55dab56a62d071d221b1ba7ac6552b5928e3c88baa5874ec4c47515cfad55eedf1b6f5b6bc58f966a4853094e414adcfc69c1671cece6c75d973701a24f5ff355a0ba78116126588b37768202a8605c7e3eba04dc68a58445bb71dcb53123e552c7db9187c7f88388889f26da7e73c5c1fd05c1521e485195cdc935b30f653cc54eb62799ffabd7a49faf9e9340483003e8401172b683d58bbe6d06a10e6bf0d7b1bb3e8223a5ed1b044a53bcb29fa328d3f61b023cfc0a665ac6fdb55ef9554601620f815f4257af83eed1e1c9be6e20177a4e0667e6cba3c5b9d1c0395e456275d7cc445f40968d01206425ce7d75b5bbcfe27a30122eba33f36857ca7529078f9b6e6daa3b144ef72c8408a66a2e97dc7eeb99acf9afeb812d671874d01859349d42f5c6a02e716e79d779d25ba13613d821ee23a3206c2ea9d015be10dff4cb18d65ded94c2d46cf14da190f6dcf53062df709e589ccbdf22410c071a51fbc8d2d0ad611625f2e6905191654bdf713092322ec1a3cd848de20147debf8693ea46a5cba5f5d1b73b101be1efe25350bf1fe2001ffaed1add1777415782e1d54583cf76c2855dc68995e6075fa5faff77a0584d61030e068a492fa66149685c3ae0c6cc2196a82e4f8461d69642051d90d83e8a5e3d0c1848d335813aa117a4c4be18997038a8b77cf3b90fa4db4c2c7de3373482c7919ad21fa2aaf701cc2a798dc52dd75ec678aa7eaba29c4f4d1f9a9e29d19bf50b93e6ac0124a1bbc7a22a8509e61d529d95e167022a82645127e44777c76d61bcaae2de505f662c42786499cac17cfd3853b232196cfba9d10f9d163a31c62fc8cf8e4c9e9d530cedf866923a4be33aea0d294dec1049d6fdd30106ebcf5288b58043b8a36b3bf66cef3011d140f0222fdd15fcf633b0b1753134f9fdfd99a61458f4a4d52a0a99e72a78294f1f1e5053cf618d9ba263399b5be1c663c7c6dc8ac18207b2db6d4bfd7f3edcee56bc845f048d3e4e0d8f452bb47165b1c733a7f0233233dcf866088e25ef913d633559d7f09302f7487197bd3d6100a8e6aaf13464a6b999fbcebbccff8322c024ec2f653b53f02858275b80d5597099b562c956aff9b182b9a266e52b0f82aeffe823a0848160aba3d915802e125a6a9d99a3202e5a95d7a9038dd7bebf43c9e2eb4cacacd8c9853dd508004e88815e3bd7ce0415c62472414d49d955760c5a7c8fd446e56b7cf3e40b485d07cfdde746d4e87308e7bdd062c50e5b8220e830626210723c4b95af545528ae04dce4567201470d000ebb8f29aa3b92974344899405e1fa532dd4a5bafde95d16fbcbeb1c1c9ef83dc808d9e7b732156840c399ca15f8af7bc88103144c102d456cd1c8ca4cfd6cc6dc811210456454d9bd446f692ac10ccc79c9f84916f276c33be035447a31cc562c4aa7fcc192f17a285dc491b46042cd565970f0c6faf60032a2a3056673ed6ca20415dcbdf8278787c3def663fe99ab449441a903792d90a0fcb24e324de792d7e116be12ed2a2133b682efcadbb24677c5ec915412352dc0b82561fc89a69662e87c5f09bc20c9bba064f69b1608576b9c221209167e3bfbad3817d2330ad4bd01710ea0ebda7a02963957bff8850ffbd19df2fa8ed34a62226fc29532620f89ce68eeae8063cd5a7cff7502ebad91aa699526c0fae153ffbb6e46486c53d552a48c3e61b9e8eabd0ca3fd551341e5bfef7da50311dc6d8b71d0bf4ed78be7733962072db856e352bfa47a78c08957af47948fdc28fa2ac62e5609d6223c718f3892b8bd33767c69919d785e4dc35539affc497aa08a9cc6d3cb129366169059ad252f3c9243d26022d4024be880e757a3e98e47bad53c67a82f4134ba587e5265ac28910e741329ddfdec59f07bb32f3d4af0cdb7347a972c81027e32f68f793b1b5b05c74bed9a5d73329f7905d836a17c1000e65ccb96756043521a11658fe5cd9135f1760fba31fc3bdcc462d220b892de979a3370d13cbb9964bfb8ccc4cc36fe40a904265947977d86d184ad6421f25df8b3fa0b88e8bc9562d4b783568812ceb7d11f10e22c81df3fb76443fb98bfe0c441c2984e98cce58a16ca0c0af961a850f1530dabe37a96194cb35f4cc43ff60edc902ead2c547cfe2a38d5d989c498173eb5c03fdb2308abca711a0377a4084ebb6a045208e711aff29881c9ffaeedcb2a1c82e4f3324f94d5c873ffe6ec02fd05f33937322168125d470226856b2eddff6cd0d27f1c6beb0f57164160f896bd6fa8a97627d0a3680e72216845bdcc322865f9df9653e213e69958a814e62d6abcdf7cd89c061a17508ca39b7a60caeed4cb8190e07d940bd1750baa4124b961c4945dd82fa9ba6ff40e3b23aa65ca095cd12db1bebf5acdfcab1e8f3095192839dde230f72a227c464a32c6bdd05aa0ab2e7af0fe944a7c3bd23ad2eda4a41ab1824bb35f0da2472c9dab8a9d64d51138ee9bfb67cfb6e365aae4247b6f9176632e538a5c739b8d97ab081dd31825b04071b45b523684c364c4a539c534f8ce0119ac3eafeb5350c0f5411e93328b5277621b84bc4a53dcf8fcd6815293bdf075364dc58f9f19d08789f013a3c0723dc2200f4287993160811f36900c34119581ba3be4657298408cbd0c6e16b3da89d6bde3cfc16b5d8a3c349d14763b6a9272be9fc35d3de5d42eebac9ca707f254be4c164c826bca8e96a9fce011f9318ac03decd6cf713689a52a6c24cb82f77055da3c5c0d62fdd969effd703fe0cfc395158b4b4a96508d03a836c5c85771928a6f30ccad1c9da5490f4cab7a30777d2df918a768812e794b2cb289ba4541135c47e638c0a641d41f17b42941aa1646dd87179bb4ef89f6d6f482de1d25557dbcb897f248306d53a95d17d393a244a7d856acabd3bb76d8679143ee41e07891771aa3b0fd496b30f12a30529f58f54edf4f9564d8b0ba1546e969e8ead8f0d909a5c6daf325005cf93399b20614c0d7a25541bfdd278bf0f848b3e1878ae03d67bad0d80b5cbc666b10898e1020e02d8db231012247872ac7da7b93057d16db0411885980a3f43e6b5c97cdef8faa77def9bea42b126571f56572ad84bd927c474f936155692000e097968a4e3ee9af20bf18a37faf9d0f208efdd8fde51fa4c409b843eef7c3190ae4bb69a86a32f8c236a21cb553690b34a6d4b6b6697948bf314187eeccaeec4966f471291f4cada5aba5338ac5c0eff139dbf998ee10a5456d5781c16d807e24c5ef7f3c7b6d2e1b62a426914b98556ecc92642ed06532da374f113e91bb383e5f9c190673e45104a7a17ef7d7d44b1591f47339608d89f80dd9a747e782d4ea93b2f12e34850dee04487e20302545ce5bc2bc4dece1066ea5b4047be38a08de6fae208f9bdd63acf613f9c6a84cebe2476d2067c028ac9bb628189abb6e411633718f796ed66f738ea32626b44307319c7da82f40eb4bfe4ad1f658482e541ebf5519afea560a0a1cdc2aabefa8855f4e1cf15b7ec81e9c77fadfb55c75476461203ae4f7244df17c7e19d278a33e166d1b8527b8f32ddd7356bc51b5d56208da08c90bc16747209eeabde684a4b5c4ceaaf3d1d18e167aa4f66eef2ee19c9f3415852226d3565c78e9d08da3980b980265c404455d9c6280ea7a720ef3e69b9846f70c81c454e85c9d1b3f612b4b9d7545a195042deeb9779b9f1f9504014b0f6481f91423dfc6c484f69e908e3474d87bf40191576b0db526a953bda1c0bd6cda862ef700695210c44ecaf0905ebc637015d0631180b71db9c09930fe573f965ac0e667cd50fc39d0fb50820385bbed067e5a19c29abb9af8c4db7795d8696553fdddc03c773e3014319ab058c694a8edf4f6e34970b5bfd0c307fae6dab01374604406f7feb029cc514f48d14b730ae0dbdc644013a2a6b101502f055c5c4db1aaab454418f89b481fd6411701ed61e5839112854c02e3f5a4be46b664fb07a97728dcf5c95ddb6848a65d68bffcdfb5be4df661de948e2d3d454d4e364fa77469295d611064313e93a36dc53ce897f8b3c97bdc57c621a6d80fef9f749429adb9bf79e88516a197b081f0809eb1c803604c3873f742c4e35834a2886960e63ab505d3ffe6cbc6cb1e7b962d4b50b1d1937df84b8cec0a5310649d7d94fa7879eeec25d6e928c7daf80fed02c05d76f96e264360b785776b7c5345168c4b08964734cf0274202feaee7281eccb499c3aef748593aa0c6792c71ab3a908eafd4d19945487bfb750d3491b921218c61cd865c9083b57dea558a90d55ebd45a7524339091bc4fa04079dac6069a658544c8ad00aa69aa2822440468cb72a3421a044903a402f2ed876d3bc1fd4d6051f7e9245cbbefb92de1443a43186bf2af2eaf519a11b1c35d2968bd59ab5b3f147cccf6cdc78c99e52581c8e2f20ea01e15ce306aa3fc198384b0b885631f626ac87341c141cb956af86a28f351a8631302cd81f539c518fca0f88854f964d0329135fc395ae0d96f1ac226fe80250a63ab52db41ce7cb6d74ac2c76fea9ce4740588f9681f667154c00cbbd69b311d01b0bc0215a0a2b12719a3c4bca435983df4744a4343af65467301ff718f6278feba03b452597ca1149294637c78abfde125e7c8f16b826973630d8f7227d635928b954b63c7e540efc7f1bb2facc1d18f650fc985a0fbe6a9ca62f20e1f6e52042e0423a2e75ea2a014229b9063d008360b7f2372458c13b76500857a6dd8154f5a588b2d3755d9b222503075d66dd00049560bb7948d724903c2475c302c3ffc51e97bea1ced15966db933e0245b0dcbe9b9197a064a10dad46e06f715de96ce4100828e7845810417d258567c0a79e9f08cc274812bdffe0a71f0b35f1d714e88e8d20d6241467e52856d2269d49ea9e9c738229104a1cfe9aa29d9ef8f10d90d5d9d40e5dedce6ff4d76aa00750d86b42eee1aa8fc5bffd9bfc0d657005902eac9ad2ff0d5185bbaf1555e1b76577e6d9f12eb62639ba02deb44bbebe47e84999f3d568ad6df42f94148618f50e0aa8b94432aa7ba8cbd85c1073c640c46878cc5f67783e6e7acca93dd8be456f9447ac02027c96213badbdae6f133a92f2faf34e7effdb7eb208830b30375a2385e20b2394a4a797f516c52581d4477acbcaa49402e3669a96e1b45b5092b6282aed77e8ec0365fd6421e0b68aa75d6104b13423f531efa0d630e494dd0f5215670d29d948af145f10662f3241489e1d2df9e0fd1592bdeee4b18a5a0abb556cc7e3ced988d9742b18e1b2f8ad9c959bd97713bbb5b1afe70100b751020ed6daac578212a1c67905f3034b2988282efa6649ef983691d662c6c7e2fe55b418ec566fc9617d61794443562a3cffd7b9f0d6dedf8f0ac3ba76fa5b837ea63dbad0d7d1f6345f9428ccc8434f330bae2c3fed36da7e4ea1a2b655528bc293d76d577d21ace93b616ab9b3692aa144598bdaebbb96df7dbdb12cb7d49ed80cb8bb6fa964015ed394a251e1757808739cb984ad1ff228fd9173b935f68ee7f83e54a5ef1a65080d863a11c72bf9af07d6ab6fe02047279b530d9eabbc26900df60e081f0cfceb664107793a43f4cb09d34e4499570330e34e67c2e2527d624f9cff31d7ff9d01c4a94caaa084c294e0d5516545dffc0df9056a051539f9f880d90d93be7f407afd4c8d4c15b3940fbcff1fd0d92200eaab6956c6c9f413c95a67847d281d05c2ecb8a1189099499d3bb585255f9f7484ef6a2878e3feb580096f3bf0dfeab10750b257a527ea12d3a379f4b3c2da77b2312666373dc4da9575cfa4ba4d9b816c51906ef259dce3803d306dcbe050b0c2944ee56271d7b1de499f0fea94feefe97632247bf191051e069387f4476887f3e167d4cbe8644a7a35ca1de576ff56bb6bb6581e8ce510793e185fd9ab74fe72a41ece92d92226da202180774d65280d63a3a261171c23525f717ef445fd27b2495eba0207e52d0ab833cf84d1addb349ecb591b19c9f5064468a80d559b555d8aeb76a3a509183ea28a63bbfd4abafb3e12c7e5dd9ffd2cf98f040ea36c3ae7f2a79e72553b4d4372cc4e25074281365081e8fadb7ee05347924d8f1632046666cd8645d4b9e051b0ccd2a2986be60b8b3dfd85aa9a7ee6cbf4d1be93ad1d26d7e55f412ca4c5b0cc0150c4ea640b2285915c1107f34151aab34a32c1f071e2f9c72aba62a82628267af0af1a2b178feaee88f4fdb2e2d6ca05f6fd0ffe842f95eb18ca7cc6aeecb0101ea620db1ed46f4bb54d2b704fa6d1e78c7b7998687ef4b7d6377e370dcb2428be0cfd5cdec3ee12dae7276086ddf397a93e39ac1bd9823fd0bec455aba4771f7fc7e829a451b7e576072b9c21acb7f801b7f4ba3e741fc1d4255223089cd3fd9b3e64a2a8a9b53b874fe3adf60c7cb288920a92e791bb5f42976a4a1c41acd489dffaf6b3500ccf5f0a9a3251c43b056ffd1350cf44b410a0469fd8448279a4430c542c454566338c47740d43b2c0caf95bec76753a4976c0c351bf83ee7273b2ca0a075e6fe613ca988355dfb46f450ec6b7da4b3b7eeb95aaf307aa9db873789923be2fbe55a797af4b9355dad0490fec3390c0a51a019bdfae6190e238f854783d007df7ada0e43a9d4b477426e3a9c9edd28dd17ad12c3cf0e4dae27bbd95f01b85cb78e020c77580daf8ebce2b23a85efcdfd555fdbdaf8f0ee995212a241439a4dfff2c7312e8d8fd6b9cc830d1ecd24492a5379696297fbd64ef5b19ce403e8ad64e1e7d9402be5962fc6294ec8831a24a97054306198c384cab2facbf5aaf9325c4d24a9953946182caa1ff93220c0974807ab137ce54ef574d83f9ae43fd0d323b09b32c5c09ebca6701f90a728f85d4ce3e0927ce2e02513e388741e5e342d0c88e454d91e9f07d70141b87bc64295f529cba13e6b2d7d8672d364a3ff518dcbbed5c5a4b368fc6485010f0ee05d06eb9440aed5c64d6b0b20b43cc375f9475817de66295c15adde77ad8f8cf3748887704a4c476aae905145ec943206b8b197f4f7d84b24d37e56aa76421b6e8b9b595123304efca9f589e453e94fed9aeb707070c2d46699f7162efcd35e9b31f128ae30d915d55b8be76babfd59c441b3a72ccb82e46af32f272db6d4e0f927e2ff23c733b40eaf71f915b2bb71a0611744c0fdd0183e7bae9a4134703cdca1f5a3ebb51c3c303afe348b7da366a7b7e74e27c497ac3a0409d806a3cf60862ec563a630e85fa0997d3929d140448363c9c974d16ecc64392874d1a32ebc04c60a4602c608c3e7e5a9054f1371cc367c2b8864e185c36d63b8cba1857ca95b436cae490f71c1b7ec6b6b873fbac30afc4553909f84ac87d688abf5dcf040f795bd85df08c41e9120c28ed114594fba291158823d6109e65463a6f00e831bdf59c6e78c281f0afb8328d5f6204f2038f32a24b1d7920dd855171d0e3ea14f899ad279b3ceece36734826558b53fbdcb75213b649634d56d59108c0c2ab5bdca34f73d396d4e3f0fd29d8e6dbc8792cfb9c9f128f2d81a786ee66d012181f040e389610c92df2887cdc100c01f85e37d809140d6e428197bc7a83f47d50994cda9b57475a901e60698a249bb4f60e546aaf63119372cc9065ba65dfe1e1cace0376ee25b9e851cbb2a5e94bf537569f30cad04e6847bddcc26a9eb7921f9c197897b3fb2b59d5f2f157924e016c54e29e9e18011cd31492379d5c073bbc20be0d02a3115e2e5d667ce05164bd6fd405ec1fdf3361367874fec4ec3840dd6f2f4b95687dc70635285335a19342acce4dd6fa9b75c90a5497dae81cff947ea89a255f4662023ea2cd716e517c87f6e4f0a2e642ae5f080c5e05ac1d6053ad47cc4a9bd4e099d5084b96966294bf3bcc95bc274a9ecb4d044ed7c7f6edcf6fb145c811a5babca18c586880d0a088c9f569dbcedc3983b44fc040cc42d073736d94daca674cf7da77e394643da7708094ad850ef8595a59250b5c841c8144a7cd5131ce270cae3c3d092488fadc3ac9cdeb54d1bba3e30b0e75a9bea9cfcbe0b1fd20edf74b7f8bb7d532f993419c69d6955e081db253433dbd36f02f16503c7b3c6bc7b94095c02a1716a75db72a4cad0da94c52eaec09700fb6f2a813761ebb949bb4de7f7670f615c249fa4b91869828842f23c6fd30227af8be382d0a139bb231c0c860b4884c20438d39239be633675ce1cd757577c07ccab93de43204eb27104b5ef34a452ff0165948ec6e8ce131221e5fb33066f37bee66b9d191bb7c188c3fe1e8b315b29591ece39f160b571411e9d3d49df33913c4690de18962f4fa498601a3798fc2e794c2fb73aaede0cde17cfb24d7ec6cb7c348eb5e4ab83f5e6a10448612ad5b6d960d4345b9a042659a7175c329780eda6628bf72d404a11701cd0158ac7223672d24a97b567085fbb736dd3df0d0d2acb6de59419c609a33920b2bda7c9f19f0e4a2afb3a04eb23d05a17c769f3472f6354678c0ffeaec477af91e30c48f3ef7854420ae86df6c882eca9ef45545d819f39f5adb03827669a20161dcb13769729e2236c2d5d25375f93823d26275f103c9bcf6ab9a179b9558fa54a12bc74048c5c5092de43db0492461a428ba24fcc2fa0033c1afbd1b29cc26e9eb5d935c75a820ff7a40f65708f27c12dded7dd90510af8b79dff811f61958d4655c52a43e75355d0a19a5d766c3dab1771333da707fc4d79db3efb424a6670f0d309d29e3648663a713bfa6d65d25deb780261922ba67d2a5ea316d739d4c7168521b415e4a42ad158151220f5824f143c68b2b395faaeb2c80e6a37fd70b35c0d78eb21558d4182f9b69cfcb34b87817c0d70273782c3c1a7f6173e89f3112303f07848c4036dcda6fab2a3d13686621285eb40aa4e1aa4edc732443b8cbd344dccbee594f22005aba1a164fae7e830ba9d1057774ee52e3f1d8cbc22f5655b6cd8299cdb398b5bf46a06a70f6534d7eef6eac16389df73d41babc6195db70cc4f37f4e6f111fea1bc315d956b87e17b08edefe58c804e5ee7c73dcbaa665c6c67e9216d0b075bda5165ca6ff63b54c17168f54587402f33f6775228ab445a3169734326fad4572821ec5372e5512377a24820d7cdd240f22970429c96dac9b5ef4a8c3861f44c78f5fd6f12dab2faa43bf1c4a221fb20cfcf174d448b2ccd44461c1a12d7a6a4e54eac67d42f2d7d48bd3596bbf7ee5f713a342c7cbf764b2cb9c6cd6b9eb904a60cebbb61b544e8a3473f8003b67b437fd564fc0264bf75bec2d8b4534eabfdea0484cf045b0692e9b34e282714664cc637915d642860d009e30b8b177303560e41b1506b9529f45a4dc7feccb1cdf3d547f39289bfc50bbbaace66d68d61d358a541fb40ffb56e713555c8c09831b87a30641f9716436227ceff99947a589af7e8c0602d8c31e5d173ffc41813347207c103b12c2ccfbdad64d4f1a80bc809dafc44dd9b49aa920bc001ef4eb0fea7cc79829aba4161d736222a287bc090e7fd56e2a06faefde166214d92fa6699ad62c4d978b305d0c143af435c8cebcd4015191f47f907cfb758d70e2ade96a92137f9ba745956338602263605b3ed3ca31fe05f384b275bb9c0c14ed4fee2e508f379906986af9c2c75a238d2384bc14c927f4841b081be2531cbec81a3f9cc069ce3570b5585051006dc0d70f7838244b3950faf4f45bbf8308f32ad701fe7a99899e8e9195b1d13645073e9d71539ce59abbec065510d218371cb069b6655d8c67c275477e9e313c1cb147c0e1f109ebe9bc5c0f78c569b9d40be229d1e4b099ddcdfe634c80f6716fc300a019d96569e12cacb7facff2fad640d38c4ce6b743588a466aa1e6574e6ef39c9e982e70b598b5f3ed3045c4d596a6735f20d2762193ce603d848aeb300b48bd22120ab035988952f4af832f0b4052630c573ff115aeafb5219532a4961e8fa737408b1daee441d7239df4d2583f8f4552987fb4736f16475eacafb9e17924e0e6167d7e9d7fd5c3d7b70bcc45d425176aa2cfc6dd7aad56621ccc1ce36f2fe8e7b5ef76cac8902fb8b05e11093fb8aabe0dea4272996f0f2033410314beb9d8412f899fd517356a8572e69b4fade3e40ef474460d6553df75f7dc2ae1a339280f69062cd51dffa44d79fd353b1729ea19b2d1180d0189b708eeeb0200b2425c8398b4ba4b5d44c4d52f5e0b82e34e92c33ff79af0021ea955385e1ff28a2bae007bf421790d17a96a9d67526f666713c39f4498d979420ee4d731d2d15643c206639e42b6d574d4c7015cde4547460597630cdffebe202d34b97f44c86ed60a3f6456952a36e0a593aab27eacd1ac38a60fe1192ab9ccf8a2ca267accc5bf4c2438c0ebcdafe2c84740efd59d88a3c34e8ec5809d811f5111d887fcb6fee0720b15b3ea36508c09c15d97cdf4e6e6c63a36b28932b157bacde0b207bbc3dc939637ca895bd89eec1c811bbbcdbd1b094b7f4b824d26b93a26e8ae7375c97d8489148b75a765e3f68a3b9a4d824d7db7efcfb004edc62cc9d9f5d43e942f7dc757026558b709810f920eccff0edb6d5b0dfc3c1e131cec84385cf4273fa17866b4294dd50aac005a27ede402eb478bbda54769b359567ec16368a52b20fc76816db1bc774706eff551cfc8240e214deb2c9c2652aed0ef0d9f11b2334df51b7b82f4aea2f63bc90bc29eaad34509fd6e571d185a1d5af766708dad07d76e0fd12380b4374c1c803db2d9cb2b06fc3ca388543b45f3c95eed36ceba7a9270f347568a15f52ce9ec60236b29a6ad33a27450ccaa18c999cd6ab8e36cab2e7f99316f2b04b4cc7d794b058109389b1ffd3c30c656b84155494d1cf1a28fbebf4883594d9a6483be2b558b2a552391932f99561c0a628ebe6d47ce338bf0d721cb1732b96e2f7665ab1b558d154d8c2990a7069848448338d0e65c4846c0a6d7bc6c18820e81941dc7e66615f285b0a89d69a9acebabedb5cab769cbf54d07bff1a34d8062ced3b9a2c011e319e75a82483ebedd3cbb36226ed6a6a054f69db646165ca3fcb55df3848e386eaac09fc7ea8bf7ca064ab44edaf785582f401032ee5c168376d6cf8e520edb33c908d9becd897d07490fdb582d29ea4789fb2673d2577abc982e7cd575ea388600d0d64a72a2f2a5355bf3bedbc2565a8864c3587e700b228b3f369f9415895372998044173f80441ed04b37a73afe9b7f09e5e385c00aa24b9a456825847714677eafb3b0696ffb4d8bb1ed9477d5be5bab55774b27bc5f8d5a066717ed7541e990b627aa2cd1d560f56d1da9a7df197e0293d383e9d32d5b05a25c638565aca549444ad80c8e8c2c7d17c0deb9092e4072eb7b02f891565aee1a5d77e0dd1c03ca6b272558822026f77bb8b939a17938bffebeb893ee301953e2ed03dfefc19ba0fc8a5981d009084a81cb848207c0c1d468b866da2bb89d52086e4ed622f6b53292d52c6abc57c09a935fd3f18c1615e5f88c43d8629831a7aba1da1bca1351c7566cf3927697cf81f1c556058e8e3ef312c8d1bb6108fde239b6cfb83e2e87a343c5567536eb2e4da9e66cd8bb71fe13c64b430ae497922945d1a4d0a247aeb00e7ba95272dae90ac91748e04ab9fa30a7a38fdfb3dfe2c1ca7951a755c7a59f7e0f5ccb700bb78afe5a35beab3cb6e938d75a996b65b3611cf018a3a4a5326d8f99c4ae7368effa9a8f056b59d700d153cba57e980fcb9fb1c9dacf084e5061ebd660c1fdfb4d4c3f97cd5b9a9ea07c714b6fae8b823d0c3d6c186db57f240b1fdaec14bfb64a7ac706793bdfc6fbdf69f22b924a6f2a0f1f974dc6cb3a8e388e91cbe8fd441a29ca7d11bddd0dcf84dcfb2dd525813803f0b7487f816354bf35571140b9014eacb4c95215bbd71d057e3b51ac2eca79d3ab605927fa0cd296f66aecf44561c79568a37878901ed3566c2769c1b88ddc84a5e9f9e87319fccbd203cd09ee91fa295808165d560fa69425dca61cc94209536b8af20f4fda9e736f1d4084e8005d726abfb052f382dff172265ad94cbaa90b63dcdca9ead133f3da171011a81848e71d371404b2b0e4abc40107db54ff086bdc04bb336495472ebe99cb614783d3b6c9db6b99e32ae5ee24e8ee414dac33fa7ebadecdd60f0ce089de222224152e902f04f0b65c7432c4a6c340775ecf29dbeba2ad197eabb0c56fd65c62dae458d591a8dca42fadf2340ee70caa803d8a37cb4aeb4d35d92bfab0c279f62da1f769bf717704eae88720ca5b4388c1d7212455d843595f63c5fd0f86ce84203af720c6c511f0af587fb0f7eb728bdbbc37ea564e4d59dbd01e923722542292b56e518d58e5c1e9e4fb4cfed9728d177e1a33f51465f2e43c7f214dbc2cf8d9bef1a1edbc536bf9881afdd7902213f7631a48c860eab9be07aa5c27b4a85e1f41c271e79bd38ab10c6e49172c10378aa12c643c2efececb8efad8d52975aba32189dfc76350818cc0679c52407c328692d092fabeb52fe711ff14560aeaf8db3bb58490d792fd8fa359bf44bc7f47981fa08463191fb52d56ff2fd840b42090556260536101aecaeb356a7b4f820d16fa785d2a7ced041a839041b17745df42561d488d3112f459d87904badef8914cc3ed9370cc11cefaa1da93e583d43b5fb7fec9ba3219b76880be5d794057f89162b48c225bb72c43cdf53f14b14fb6c8d8d3ace86bcea76ef15e621a471a025bf4d14613702b48c23e53304f0ca8994e7c2125e584f3ff7666ac92de4cc02b4d1b9680a2517f689cbbfb87bf53955aa8ac9090a7abd3f710f52d8f8d42c08f201a2fc55a0e9c70d521bc4c953655faa80c5d9a569d7def650f6a43609af3e5368dbb2f9771fe1687838b17047e38a8138c9b12c11c5cb766f7716bf68e4050145a341ec2c3b559d83265438acc5a0d2ffa36bbdd03070a0f8445635d7084bbd8905fde60493387374aa50454766273f18c57306868e55cdac4bc57a1e592103148756f242b8cd132a88857966050eabedcb4c7b5045ea33f31577390e74687cc5d317fe24bcdb88d026a7f4ba9b7fd008569869852f3647e39741e6cb0844ed07ffd695b0dd3d1a34e6d882d3ed1ecbfe03107235463d7eb6eb92748941dcb4904584adc5679c51d90e8ce12dab4eddf99289aa96ed684d31fba612e2f3416db56f0bc86b67695c4aaf4cb76c5637b71aff387f37877386e9a09ec834871f20c2bc5bcb5f8b8dbae4a4a3f555b0c38782b46f23afe40ce835c6d8c4f0831b20394533480a22191ccc016a5ea71a8184586cbdbb88f6de9f9b224c9822d7dc2e85abd9a2d0035477ee2ca51adb319f7b851c0261319e96b81ac8bb0266cb45f388e3ef1a9f44e1c9921332c9a2b9d3f02a311362e764635ac010adcbaee11eccdf893683332a887d92536674402b14a2bfc04d84acdb29e2437055e0eae8a07dc2dabcde27fb9d7e4e5a02b034b4d265db72728dbf764291cbb34ff807d5c3011b8b207d312c848fcdbb99096b71b34faeee8110f9d7b9c8ea1f9eda3de7c8a6dc4ec1c700d3111fdd748fd4fa1350c45f0c62304a7b0cb8a5cfd7e76f49b4f015abf1b6d3e26628b06250b79d0b48c3751bc305478540fcfac1c8396f51dd176e5715752747a50b232045b4777cf87cf5a8dbf7fbe77c00ba20fc819f48007304acbbdc2685e8f0f922f8b3b34c63cf39f52e9434e1aa6b19dafd9b477ce8d4147b7bec53f76ae90002f44c4f6e48a5fa9f89e226018cf80d4be8e80534fa5b7e9029deb636b672cc263134da3e7fcaf422d005430e48e14c6a5a28e99a0ee36b548da89e1d76503df1e92daec22c095c952aa0c6e790358c540c29f592fca477e966b0ad215f929f97ebda594828b527b932c543087e669b3b85d1b285218b117e07e30dd6e9804487c09fb449d0ae4938678c1b3dddf52ffe43121f82b615c81e2172c8897ee23118b488dacc75061fedf363d6f211788f3cb5e5d281e842da1edd7a9dcff579c2ff47753290013fa11e3f3bd099e258ec445105b66589c51b6dd41aedf2c116b44e9b4f6c0353ed84ef6c9e94bd424ebdc7cf165db47dcdadeb4d8ee269c61ca5f30979b1027f1888bc9e976e7b6258714fd8738ab492a1380aef1d187349abda98c4d73078b5c6a5808371cd7a7b4e43fa3733cf30a97c2c2a72003812a38b9e98db2f73951d4791fbcf8ef9039041dfd0a90073017a535d91a8ab85916173cfa0db142a48d91d83766997059d8bd83213b931a65bedd079123a895a46b5ed4e420f36e62dd1ec54280323eb401bf75b65237918cdc6f667d24e09fb9f66f05cd5df79269f52d2dcb8c11909ca4bbd9d380a48f498bb417e75dff01ff6cebef6c7d0daed81d4718c2714d53678192f083c7fbe2e8ba64184b6434aa4c4b953439c602965bcdad9b2c059e0db5218b9728ae040c94a03c9f9dba1be685142ed29ede00968f565d29899351a80b1fac49dd4ee161c82021952a6fcab9fd265ed062cecb9e6ea8e72ab6f3f540d2778acc3f8f6bc4d8a4c6c08d4ed2d2cac8683244c335f0a0b4bd62806b79c2473bf9b14503a22a34eeb3956881888e6ae704b2bab89f401a69ea5adf12326cadcac5bcf2607602f8951a39a2ecef66be3837c0b1e7146028bc8b811bd4ad41d2e30ec617f28f7bcc800d6c4b70e7f3dbedb58a80be8e52fb77a7b210e12a3e2d8b5ceaeaf4a22e73500ef7528516d5ad596cc2fe0d6a8f2abffd2dcdf06722b313d76935fed139d9aa2b66dd8f322d7b6ae24fe4db09bc8820da695d6d6ee766d2a977ed88ddb536184d824f22c3bc8edb4e6790efd8a7f183df9a7cfecd055a734e6132270052a7791143047ae448af5aa421243eddc25e12cdd2743b8fffb3ff7ef11ba5c738698283d42c6b18b5e6081d8a4a9c59dc4a38c821e4988e8ce90b317258ea35c5a53ce5139166920628f4ef62f04758a9a271f7fbb03e251d597e61c7e7c341c9c3b5457ee2aa9f785d13266d4cd032aef3929de22bc968e4983f29c78e7ada0c38cc7096626bbbe87547b3dd4a86dd88044184409f76d5c1b7d7ed1c844c8d150ceb05310e35c9cae7ad76043a6f6b459cdfee82d9c340f83faefc71a9a79b7e3595b49a58277c3fa641cb82f83dea1341b0a3d174329cd54ff4cbf47b42b524aa10a82d0a8407db66068efbe16e6a118feba64de1cedf7dc6a5ada44d5befde1e7e622df480b75990eb88e56bc45f7396997e03f55fe11f584133000b1abc5073bc555b4ec46ed6308580c79655237d089297f826148e94adcafa0f17982f4d7b7dcc2ea9ea8138d994e0fc985c0b3925b9da28ad3993c1180c96a74d5db9ccdb0f3de2616cc1f446bb5b3230364c9168a64c98f30f1108edc424893707e566ebcd1090cbb544d9ff378de0cda87f49e7dd6e41c6109ae235f28cdf1e7a4ff836622e49855ab04f40db9b843af6ccfedc947ed47fb666eb1c507896f86388b772552a4da63f38d1fb50031e1663c76c2f6b8a1c4b399203476e7f0c86bf315c695524e72b9833399fac4fef775ab0dad0c6e0ba8f638b786751862f9e382ef28f8dca2772dd128cbd81932e23bfe1692027c20c48d1315303fa9bacd50987575a5b09a14179b150a839d9e8ef28551a105b7a67cbc468392bf703cc16ea68b44e1c0198d380cf86ac5d2d41730eea27ae201d05f3e4fd04b9aad52d935da34431717acce071507cb94fa7476a4f0bfc07350473a1d763d3412e26be9e66e91670851406bcda9c25546ed3b08cc785a9051ffd17f6445d80bb45bfc2865b7fcaa315b3497d0e1213e804936fc93bc94397386a9780f5f95feed8b10eca0fa282b815ac62ddd4e2f6d1d47b0e1094a0c2d6f5a27abacb1a56c75ac4da70167c0f6f02479577f1257f2238399ff5e4a3c1800da5ced90bc18f6e650de067812b3e5e0bd0f263a19cd50081e0ee66e8b4935df40814bc52ba974ebc049df86b42c32bf50976ca531bc8a6a7915963bc65eb8443a874630368bd8b8507c10f081e311606c79cc0aa73e20e89f2c40b5a51f2a07b5ab9d239d626e4cd63c5affb12bdfb385221022771c73203be89c9f225d62a95c10ba628c693ebabbf5bb878417b4570d785e37c5e103a3e11dbe6e917e241545a3a9c7af1a3afcd9ca7077e0073e6afe54ec648f5a0d626bce8255ea5523ab408718c359bb7673c75d0090710723092bc23bb421f626578d765ee0b710a4d20c96c246e433aff7781ccc851ddc54969a5f51e53663133bb9dcee2db4a29371c73700b85099ac503850a38a1ab25d2e494bfff4b180d3fa24b5b1eb0839105ca77ac80648b65431a02946471b1f9ef277172a9121f9060fe2e5abeacb86766bab0d206f4b488087a82dbafb09b0dfdfde78c1a4efe9cb8e08d6ef7c883b6c895107d09b448f16622dc0da21cdb77eee31342d81a62e045b0e65bda2f053684cec6d40a7ed68fb19ad249d967038e058ebabac1b24c786d63b1f8145782c407b6302afb5a0d72d8ad11aea5a0200c67e87cf2223bd952205391a27b78d66a8f7535419cffdbe5ed1a88167abff3c6a1353085d62d47e1160cb450717efb5a8b9d362da5d98d277988ceb48c0b1d2393a2ff23c78dcec6d6bb2b28ac5f0d1a75b9d87fc9f0973ac88f7556fc63bdf14c0061f3d25ef75c961bd87e29358b01b830673470b1f3dfcabfdce12308d7c8228ab4e2238307fa1b91d333200d2f969b56812a821649687aad2d0faa11b2a484417a8add5cb039e96cf82e90be7548aa668e1beeaf9b9fbc3f308af0cd540564a3b094968cabb86a0360cea009e186a6760e115ad930cbaf4487aec80c960d3cdac15c6aed928ab560ff40e7200a898abfb76472cdc4e8b87db3e59a85792c143c09d35e591c4f54864b80bb5c8c5a2ebbe5852e6e40487b044040d1f4c2c6490b118b5c81bd7ec3b5f6c0720bf9518d9b1e78f978f128521406efc1b2db67941bd49ef11dd970038a5490c2f1f822a24284e6e84f533fa5ed58e7f5dae2135e8fe7d53ab70f185750a4897d5d92c9cc5b0d267397d3449a465634cc9532db88a6918c132bfd170c864a84975dc9d3c626ad7994d4e9fcd7f8a2757b151967f4263e579cf1631acc2004239028fec99544e9264fdc0ccd85a19498685fada8b15258a846c4bb3fb7b14b09c44c2b0868f9eff4fe87855baf07ae1b5b7a38825569485a64695711f9938bb5441760aad07af7dc3ea2acad97d9e2aac0d0e91a685a3f97f6086a53d5e00c68fca1448dc53358383c4dc67ebfd7f0aa6122196d511099509e2cca0eeb570545725124ad20cede7f332ae4231dbb054053c7c61db27d8681373be29505e73a84dc3c79c1461f5934353a7e05195cd4777a1fe0619e6c46df9388a378a2e437de0db5aa1b4cd9b969294f9020fcdc2e2855199d55afca4bcaa677c32d8a91b7c60bd34cca33770a7f22efa8057380b20978bcc50075f928006f60f68d794d6b414beb048464032bb73149285675c18f08e6fb2432e707b7ab376ce8f10179f8dc6a6beb5431201554d01e7f51c2e8cc90b857b440896a992f1039ffb569fb26e621ccae0480a164e4325efcdef153c596d6dd2c5a3791a900dd224a24a61fde191f28297a60fc1d3f718c55a4261aea56c23c0f7ea7114adc1a80188f230e9d991473085c630a534e877bc3dee75a1699276a6cf96e04021906698de859da2bfbea015a92d9f46aafb19ec932489e18c4a56098f8a0cc5fadcba970c4721f194019f1cbf28e6e9e3ca13ab7f57f1d064ef9705d4298c3b546355be72bbc5c108d3a1c8c0edbd0235900b94c26d097f70223d47c0e205b70050946d70de6b8be45570bf95ae98a9611a17353030357ddb3f95a24ded9e6be68ad38d489433ceb58cb83b0d362ee56366aa3e1316ad368750d8915a2bf29b67e177d1429ae4271b6bfdaf5a4d809041b92b4f60dfd4854606030191b1b67dee67d8a4cf857769db931493304c0f6ef5b6720bb341ec214114eb126563a31c7d2c071b17b6c6a5e4b7395ab6b8f58cef7f0b9ee853b4bf3d4eb03f9bc0e165bd8b9ec0a5707b48364017ccdb449ccc0efb69e6968aa73bcbe4968d693f7df65280dd37b89dceea14a6621903581ce5d917ed7d6b7c85be2306c4e6b917a0376899f713807ac64cf41af20f6bf22e540c0cc7874df62417b7dcf7c805c30e63eeaf71994cdd092582b6382a86f1008c56270b194a2da9192507816293391eb89a7d4866d0b5ec4cd8d2a7893f31655837bf2dc949233024cd2128a184664f94b2f90ee25aae5c244783c82cba451213efd025b95f963a6e5692b3b56096b13c16a37f9552bec1c1c07a2557dc450c48d4f27aa166eb9d861e36b830a8b3a367d6e0bf8177a07705904fda4f80c82fdd45c7bc920d26ec7fbf7bf08be142fe4f12223ddbc618b6a9a5f09395dc19080e5eebfddd8ee4a26005a90e0c6f2356e666c59c529d9e309f2ac8ea1dbadfdd810ecf8269ce132a14ccba4911cff4c5bb62e4f672b03708e541ac0583332ef5bbfed39968361861bc0eedd249341369b373a1cfd3069510c141401d71349368294d47aba0121011573e0e8387e303204fd4e7baea5eefac778d262a6a72943f826bac4a13e40de6846e7686fde2fa0b2598756244cfb9ac7fe7f5085ab591028309fdafc63d2da6f28bdb9933da16eaadad7b6fb5474aef806b7da3d3e8d8789f07cb8627019a3ad231ac7cd0f5d129ce37cc5593f7f88a6f797069d6e522a4359a5e8d10f22ee013ffd2ab1c195daa25e846ebec15c6e39c505c37d779245c942c5150fb99822f25556b99ed4e80954508a7451736f93d9a31c37b1a086aa4d7cb78cf533947f049adbba40ea4b95c76535cc1e64d2f10f6ceae061afd0988d61fb8549a4348902726a30ce9b0da8b83c59b09bbb6bd8afd1ae84be68c07fef1a8d176fd7b31d05caf03d1932c79ffe05d803bcd5153c585651cd47f353d71566c884a0c4bd8f39edb3d02c5af5503eb9ec11196b597202304b8d56b18909bfecd972021ca85f7ce4aeba42c67a11ab5a21d79474fd0b10b722a58f4ae293406790b2fb7b46aacde91c3dc1dec59b908f76d9e9f10c064bd121c8b8d3d3c2abfc12449294647cdeafe476d93ae07234dd3d585c3ec0d1a4f460669fcdd4bb9aa3331370dc9dea7be8b84ffafe46670db6067858e4b0f0a702a68cce2f352a9d1960a387374d1adceb85d1a0bf4a43de8003575735bf69aaf85e3ef9408d1d153ec1589dcb007713c9db1611bab2e9773b5010aacaecae536a822ae24c49d46dcfdbc7cd889e3b5f78b6c3f8a480cc7c7db0892b9a4e2d0c47e572e9d56d0de5dfa0c9c5df35d85fc095316c0e1274f1ca3aecd8a2291703cf46e36223d6c38f31d218484c625e5635d8d8caeaca2ec81b457d85c083db4a81f5dee78959736bdb1cf008676d83cf747cebd7c3f86366f5a3950e7b444e0f7232ac06a88a999ff9b4f662d1ec125c37ac6d03c80629ef721c7cee0e619556bb0e28ed718f5ef48fa7b4831d5f36d576b1e960735c152a08076a9b097585858e716e3fefa4bf6aeb797b8792dc3b75bb7ec78d24e4f1401a2a216afb4b64f1e5eeb580def1ed7ac46f8934a24d7419edb18ab1dd377105d6120f69ef625b5dae59e391945a4470209dbf27e0c5217a7ad80c127519d0edc39a9825005cdaa2410a418db6500541112aff6b424947c30d46e115f5372887c6243fb2a55a99a76b14990a5f77b6026189040064d06e7c110aac424687aaa7e6da3f1c9931932e0eb00d70d43fb7bb2baadd9e3a51c3a5791d0cd86d2e9c6a503c2d7e0140b4367c6f8ba67bfe99b961ed94fb2ce924e1b6790d3ab3d720efcf916bcdda9f0b414d4e2f573ed6632463f584bd0191583519a788802820092d644e341e655af879157bd3e7b6a4e62e5fa2b1885a858a1af3a231d290988f5975b79f0e8708e5572daced5b91a116158bd2bcd67708860c47dda63a6a021a8521c6d540636a9899665b2260d7ef0f5f13c8fd49ef15054fe430daf2fbe108c19f402711788d84cadbfec62fb94feb446cf4688fbcdb7f9fd6e546c42e3808ef079ce56280f57d6a884164eedccb4d2fe425c91d0b858f35ea5b83883e4fa368c271148bb2ac9e3cc993a0d24485a2255906cb3982c2a98429ecdfe6dc2d0d346ba23c4051a5f4cc9c9460339070f35a719099c0bf7f0c2c88e6b75b1c715d2602cbddebdda30e4c26025b2c486625363bd1eb3de84e1aa66f14357ad69839622c75d2cb70db0ce39d3aa94d2b6893499551aa0bb6c97594e4327dd27ca73bcdcf95f21ea52b99f95cee70cd79b183c966aaf77f5884d3ef0d13547152a66ba0b3611c0a03cafb8fc355be6d7fa29735c30e3fac7d9d403dd75a900e9e837337b7347dbb36995bd9c0452cf1f6ad570ae2d7cabb27e86803b5f3b6cc1feca6c81dafa036be5db147e8edaca944f22a8cfe4f6ff1986a205255d1d4a157801025aed1f5fecce6c3b8b2cfdea7e7feb742586e79295ee881d2a36de195158232a833fc025c996422da7322e214ea653c46ca59b20ba87e6ebd6a6f6f84b47c6c18872fb5a871c5f2b6a30103cd10b5f8518cd3118ca38fd4135811165a0718de618cbd270cee7d968e411df3abe26aca4fe453d0da25a1dfa791bd4b55ead8ca655c8c5c1ea1035dc334ae71610eb986dbc6a300cd3ee45ced0269377742fb9701325ad233ee0f0668fdbc68ca1789ea9952a2d57bcf59e4edf5fb9afd343149e7754fe4eb3bc70c0b299c2448f588e2ecd3af360e49424d279ed1699496f964e8fdfd075c82f7b5d50f4ca2869eb144a1b2dd816dbce817add4a26ec44c5660949e3eeaa8b269f0b9b4291000e30511163764524aa8b5bf8ddff6356dfc6be81523e5f966e5e4f7369fcf4682e13d399c2ed41a81eecff592dd63a7cef65e6927fd78f8005202570a76d53ac436aab5d061f87d70d489b28ce8dd0caa7f7f2850776d49f85f911a0483c2020029ea9470446036ba4f57647394d486fc4a22777e48bb566ccec39c6aba446b666a83d013a503d9fefd1b3f08aa0efadec672fae1d996921d3730582d7f27fed80a3e6cabf6bc648c639d0e6aea72b013584184fe5186359835a7b9e70478463e54c032d595794f76b424e7ea396c0ecb33adb3b4ae67413dc10e04159afa71578620d5104dde4346c6b7f6904a88f1842838f63e532b124a15ed5c406ec3682b603288062ecbe036c69f25994303989721b1cf5fbcebb7fab2820b60ee0db93864a5aab21079571dbf6127fc0d1881955c3432070e4a455a24b2edc0306ebfd7b1cf5a64c6049686fca46d1c2296a3c181881cc58ae06b8c0b2223410b5f9b11a57a6329230f26b3b9758dff0c1c999e019351adbe755f0163960b779ed27c78ff34d32a5b849df37196769f7b3b2eea47040487f563b9465031a90fda6b388017ca68c36c6cab1d59265b92e842cc5bc200735a39ef6d3d71aa6517fbfdfbf271b01e678e029046a138b430a04c8929e5841c8026c444fd79a6ed5eeaf17e6592f09d289546a6d276fe7a202f0fb67673c89a1503f037c8f62a0fac2fbe88740e820ca73be74a2ae7b7bfb105847c8aef665b7ffa235c74732cbdd7baa6a6c5289b0c68211a36bad196dcf86d05aa70e859e2d52663efadfbfb455deef3a52485581c6a34eb9b6d4b7bf57e67b0348e1145dbe622a1ddad8cffa633f38f047b75b9acda4347b82f597231cecc5d49b82f76ec321f74a794e64e608eb293b0d9cce033f8478f9e3d06aa73fa664d1172a129b1c919e61eb848d7e8fa94e5c7f37d5de0d6aac4833c6eb68652d16019d64197d84e8c62704b81d09e27a666bd22d990c9231997a7b2c2e19ceebf735cd61c3f3b51ee2d50bbb367ca9cdb534a66821429b594f7efbafa7c61633a8db1e1d4fd63ad92fbe34929affa740e7190cda5095bcc706d53c34fe6b8061d5a3dc03056ab5e635f6d980579636187c6cb4393af8cfd6d80492163eb9772568daeda699faaf6fee145fde087c9e445e962039a23e24349c02893ed0dbb32c9d06493e8e15b1db8d21c9a19317873c8b9521694f5c72ec5d9fac9a33b5d8c2e84eb3205da30aeca71306c78508cfad2f7f4ffa9df45dd14b023ea60e9827d7e5bacc704db207dbfaebe377f65a671e9377dc6581966b173a1513d03e135a0529c93807e87ae3672aebebcd2d184243e1c375d323fd6df88d7e147e3c48d1080f9bfb7008859149c0b25d1f88d5f07e6d9a193c760f3816cfbafd25c20e7b6d187647da37e4d6bde974c2af3c95a5a2c7ba5477a5e4c0a0c9e8477048727b1279a87cf7c80adac7fd13b24abc1fa8cda7f63be8b25aaafefe9dd17f53faa3029ffc6d2dc9367df806a3c4c13071a6594b30e160f87d48a41cf149b46e335ea2542f5b703ed9e5d0a8e8f1d8f61007f031642d1d7b375777e0c122a6330ea6191c2099f9778c36200e747517edb743dd1f4172e328fbb8c50ef324dbe836c96dffe4673959921e466a652a740fbf1ab8376e2502ded0a1c01b5b40d6c7fc9ee0815bc9af7a061bea88190ed45e94100b392638dcee2753896a9837475230c0e5bb8529c823b2af8d137001009f9c3f0aa6d39b16e54358dc602dd7e07bf0eb8b550ae2bd947f71185a7495d51bb24a0318867770673d44ea8eb19ad4a5c91be4d50125055ef05d8077a3b4a1183c014a8d4b93ad74eb21652260e6cf601789850fe90ad2e4b2b2545e6fe084073c730039689282b86b83096f5d6e1eb16be06ce4b9431d81ac9eb531d9f0b6b1eaeb677ab5c34027d5c6ddfd452aa418c3fd45f91333f7526ca8ee5e90383caea916a5a0347897809287a511dd840bc7a9e21a031fca445f7bed08db558aee51b76008141c8127b250b9c583c9c5b8a017a78651f7ab1e11089c55b30a6fa0f59a5b9de89b082ddd08fb95d98da1ab2bdb4dddefa5555e36bd6995095e48ac83ec3593e3616a8d46b483bba12b798272853558bcc85d711e48633e8d0b52ff625935a7146b52a4ed85ef35de711c6efb6493d1f5f6223a7648e023ef8b8003ed81ddb6e3ddb5ba98eaacb7ed9ff7e13a786dd57ab11b426f56030d63a0007349b2e0db69628174b4796d51f474abeda916776d2910d2b0b735fffaac8cba1577254a5b5969582eba64acf4b168410ac86c09018006806bb5b900b11518799801cf23572413e86f3e4ce1bef4455e7d5be19061549acd2883c8e274902d7e107d34258ce92fe27e077cb8d3f8c5fb81efeb9292ebcd224575586f786d8a7ce9c47e431c9876bfe547995e4d115da6e27551196c432e8770271038938be1529124e6bab2aa8098079b0b52205ebd33d405ac4f99b228c09a30989d92bdc0ff1d4be90c60af6a158796b492750b284e143a88fa5ac9d1819867b0bb594f3fde5a225ddf782061bea427191cce1d3f0dd8f19ac52663966f693c3c89b085ad7962a12a9924f3ec9d75f8a55d0e7ec9e6614480634764ddfe0abf334f21940a7a394e91576dfd135a43cbd978621a556e855d0f73536b4720b502debd0a75e3ef70d8e935817e0463f811939d0736e59700d00a0d090010fc165413f7a077435e903380f9813fb3ce19b4756f6c78449bfdf84ae404805da14512b28370a5699a8fcc698778e4db2b9f89600a07ce92fcf10481ed3c8972af3ad3efeb0dcffeebc7374c195bf20e76c2a84c692e3471c1069eeacd37ef61435eeb67afbfe7e5f3634e9ee2f8d9699dccf3116da4e0d9b2bc6c02b2051119556b5d00bd686258f7783be61d267f32bd43bcb8563f05be29bc7b49505c68afdc7d3a212c50a33eb2213c3bad20c037f8bcb0dde9085740e58e4dfa950de67f02c2fae5c94a75d52a57fc2dc2c8da8d0228403ef94c70078c083d02c2f2695218c9c90decd4d13b8458fcc9cd0348a7eb69586c68e44708983bce5de36aaf2618bee1fae25e9b546140b0c5b13b620a46ca645b63827a9e8c03bfb354c687a3265cb0a608184a05363df94160bf12015f6d9c76d5644025724aeaefc907773835abe2779036a79de5b152b6712c8efa28dd596f42cd7e2e1ea3914a2fc64ebff20aee0e96580a7f1d2289bc4bd6522725e2736cd8e4de91fe14c5207b8a22dbedab58bbdae65f2ca5881b89962c9e2ae038a8da1e63c4516dd7ade8c709f7b74ee94597d84e9bf8086abddae837bf6a4a127952cd75972d98a5a8732aad464f2eb620d9b92242345706f17e15fe81af934ae70a3021f05ebffa05ed390362365ac62cc8c0accb4f010564f48422d518303d08b14af2e594a2714b161f487c332137c38ce34e7bb46977684bc48e6f4e89eacfaca9bcb7b84b7948aa30aeeb17184f18d749a4cd2a91c4b9aadbf72b5e95bb77e61d53733ec6801f8dceb49ba1932fbb9361c6bec8fe01b0369cb79d4b70fb65b12727ff575c1d81e7f3483c483e1a3ebe6b5bc8be2b0467019483eb4cb73a6d0b2d30425c9753a5e3be536c7473fb67c41be029d45b48d7968e69d9197864ccca9cc89104d38079e74cec9e8f1284ab1d91df6c6bb545c3e025f65609e66e0da0b25a84f9f22ac8b8c53bad66238ef4703b109b0c183ff3573f9351a409bbe0269b33e6ab8743b93ebadf42bd29bbcc376b3ba449337be5857972e8643e579f8a2c416f81e9c7caa909cb8938e3afdfd767ab6fc1dd21bed55f90fcf6300a6fd837372485ab9426a7c0adeec914cd699b3bd6fafee165003e1f1bda8373b9f8b714117c7298b8409d2d924d5054d15556f13ddd56adce80ae06572b8fd844ae88de109fb8606f5d0694373e33c1daeff40952e4a8edd25b10e0f092d56a9ab8fecb016637a3618b46108cfeaf458c5be02cf58c1ea25b384e1b45e45c2e605630e847dace9cf0e39e93435402a038e60af74267599c167d163d902996985b35acd14d96d822ba331071668579285ee6971249371a399943ed4e7d46aea9f956c03bcd8750258ce24326f5a843af8736af45e157843bc6e72a6c0cc46c0dcfa963d4001a04732719a0cae8dbff3475181818e39be3581991cb8d1cc908c2c9188ee6af1ca420be4d597cc12956d4b31048385b3413cd7227c968bb4e1fe948c2f119764cda2083ae0ac6a3a77efca4d746f6aaaf7df5b5765543a4aa18c26d73e00324017685a04a7c6e9bd33f7ee21abeafad61d330f778ee94bc1a20c33123efcb668873cd039990deeb86886ff06645b1a746b6698e77dccecb889730e2b82d40795b3b6579ad983f14902e64836d78c07800010e96bc169340feb969e5429e6ba3620721abc3cd4a0e3bfebb088b416ac82cad15d8f84c3fcd2a952cea2ab888e2197b6bb4e93d87ceac33855ec71c5ef1c1173e47df9a299f35004fe50b1ea52143eb2ce3e5a9a2125903a48803d98bb1b43c70e5b1935824bfa86615f58e529dc75efd478858ba53830ba2b7a0e0e36702886fe89c65f6cc7d82440b44731dae7025f2e3de7444adf38d540673333e4684e4e434d3d5eee72c5782ccadd702f3c8acad823de6e64d0653e8509cd7614bd0c22103d7d3f449047646a6310667ad382a37b09355bae34bb95ad3c555dd458fd89a27cd3e6e333e42c5858523372399f60af8c950bd981a6c5df2fba7afa6e5ec365f981292fcb1bf1520dbce8fcbe4dc189b710a964ccb85bc7ec484e42918c7952016f45e57d9273a88f0371d66edc2e76265021d0e8b372e12ce91ac2fcce2020c26a8c39c61f5261c46d78c02692314813b0333dcf194d4af8ded9bf878ff071896c805380378d3450b420e34e5fc7173327ee0a8a37b9d196c1b6c1b95cd1c1e5abb84fa12ed51ba091ba99f8774c1d1093a71259da8e96839f328978c3a492073bd9a47384434b7b825bbf176742fa756ef3b686895b114ecb43dc4087337833a3433c2e2f49a22c4107c927c7677bfb71b1c1da3cc1fd7ad14155bad2181031db9cc2058fc2c2202c5d50d670e251e7910dcd857e5ffffea97312039f7be9f4600483bf2f4d214d6c5bd858f9e608bf74e58e7eb99e120dd46382620511b09f9da26a1d024a7c9e58002f875fd01b719d7ab33cda06c93bf0e06704ad4355e373fdc3bfc9076a2e22700d74afede7668bf588b9cfac135d334c153caa7e0b14edb0ce7cd764a7e04a5fd5c4dcfe43087ca02c471ad5c313fbd1f73118bede91fd7634e6de696eb86e4a555133431c7f288532f127654374e1bae556959d3ba91a156895a218ff76b59de6e1cb26ef4a10b15951935144f759c977f6383ae8e6c467000f3a078d82c6707bb12a45abdd83c1670688ed594fda8d9384d9eb3e553dae995a9ae329a4b166071f56e3ea42922b85b714a850efe11456638ad86a66cb267eee97b0d2a2af21f21fc34fe75b3622228de17c1350414dabd9752f4e9b403c3222b04235cf7f561a1c94e1bcc69fd3187a77b8fb6591b1a95efae32fae7bcbe20a3354f8458cd7c2f5098c2790321b04d110cdba78e593d978987c50e35a39b0476c5dd85e13ab96fd04b8f656b90e106e4596dc388ab13d7ca049e07a3adbdb211682b4f8961457eec770169918065e0a4a2585b99020ef5adae27f97de3ffd9312e0a58423b9931c778f3c96557c56c77cab5e08e936998f5d19650a59b91626bb9113baba3714a184968335cbac6856809c48ca14d72f2e4b73eea0240c22801ccd7a2328dc894dbc5ac3725951d48013c60ea69844012846c092afec49741da848a1f08f37868704000b31c734715c309dc7168da8f60fd9134527eb51a947863d69dad16f9d5d7a073246910cd784009ab58b1e19a5884ed5b18be084100330ac5b8b5388c0145f4df411e397524b364ad6b2a11bdfd25ee047d3975ddbe3a48a8b1958c332c1481baa65e26a0b86a99f003ca5c5bcd27ddad6e4cb484e6f05816ab22098ccba9ff9287baa9a115042ece70520643fef862c51bc4055b7e38c836309dba10ae92ad5d37f1b87e0ed1c8318f6e6bfbc2719f50f5e009b703b5fbad967918c0a6a83abb86961f3d40d36cb85371cf2378fb11c3ca35e6ecc39a3000a56289560c3fe8093f5add4d4f4472d17619cdac100ccc66806176254232207a3b2dcf82509a23d9e47fb102c4dfc1a5c12d4e633228ed909c6a81c38d5065fdf01b16fa6cd782cb418a09dd36d8c388c16595b06d7c798eeb4d3f58e863110f4da88ef5e9b81abdb1c4383d46b636aeee2101d642071f94477cd201157c79dc44d2496f64b14b7ef435d3c100ee2b9216b3ec7db7a3a8ff60390cfeb7f3ba3b4d21ded9f778c2067d77c919a2df2927adaf7d5ab4e233e591c7d65c6354f14bb9c3b7d3a02bebb1e084f6c9e1858aacfc975a0301c5d1353c432467a9e6b72fadf429b5024509230985cab24238a2490a9fda5a968a40e962366a2524171c3f76c497232a8abe1c51cd6cc6baffad3d36971776ad2ee483b0bba6b59b29c4b6991fa6e1395bc9c47c1e3de09fa84020c3bfd345fb46f482d6125e226ad10a6d236028613a75780d4b55ed5d18eb8cf74d24f0cd11de20e5042f4caf5b8f0bbc5df91752ccd550bc25f9ad2885068b660a70580c3d6391a8db1c8c31e5186111b3652e9b695126c5ec629687b216140ecf0f5a7e1f311446bdf79ee994aa952d0e289bd00fc9943cc35518d8d69479143fc9133583a6ecfe3ee4097655defd396af6285c6cc7843aae0a4ab8b3728f96768a93877af4b6a51181447377f20f56708567eec3b4bc3eb1d30727595e538a1fb085d24b3b7569dd098d5c068635fedd6528c422b8cac83e173797cecbe699fd10f0e953ed811b36b5d615355a7e303ba1e40cf03d0c0b53079bc6a168743f19ec5650692d84e8e5c24e24c4f08d23e298a4805536203048394fbb495dba31b9469669742cad67e8c66c283a77575f969b3158e738d879bc7a596cd9d50c00e12c34704da06f7fe5abc2e222d5107b9170ad8b8bde0213fcbbf1336cd68e429cb03ea37f72dbc08c954314a9c2bbf3a8f2ec0fee4355e16f952fdd073f537517d086250ee02a734141741e2086296429325e92fbdc7bf54da06038aaa4bc0adf0bb4f2b261ac5259f3ba63b35726b2393af9e3ec13a83e44d634b24671b3b7de1e3fb417973b634b5b4ca10c70e83201d77dab13f65f9dc488ac95bdb0e587e1acda31541557a4a22143899f819a10334388a09dda3ca08944502ce3d89f962dd7afb07b37e9edc7a274015f46334e04897eaa9d402fd687cb79afb075dbac585a1594b391d1f35d2047021e6a90e1939ab3c26f06e86824beff6954d2bbbfb7d535ce38d10beb5fbd9e44febb2010f978ee1e4f8ab28ad9374287ad1c15d5b57435b0bffda134dfaa8f8647d6e274167036e52fac20ad2cdf8fa565d08fd1fae9ed3518fa610fb532804d6780561ac6e5370aefa157c931673ef68742b60a9dc2e224324c9773e267844238d6a753652a26185095b6c5a0a3864b1003cd126b7f11e2787f1d11f20bfdda77d2d57cb3a86d29689d6ab3d9119d7e66631ae913e3eb6c9981986871d95f1379a1a350002ab3e2353e9bdf82c1bb2ee2c9a62d46f68455acf7ded1db9b23075841cceb9bee3ff4183bb3e1d882ea4e62fb5793c840d567af2b56365e865303284c724aa0750b1d9f8fecf68c2d2099badb1a455e951a23f7661b25844cb278f37bc5c32d32d2c29324ee24b280c535be3195806600b590b1fbd6bbd97bf0d85313664c12714e74f11a582a2ea78a021bbf81dd4c74a31fa829c29c47a7aa4f36cdebd63c6b6fd85bb4eabe0b04a8f934526aa996a6acb915e13fc1426b7c85ccd8c038e62bd85a99cc258252e25b7987e016345c351d9c143b9cf6b108bb994ec9b1e3db97664b6d33f7d02ed9e67b7c724186eff3de7ffaf8f73e465383a118cbcc3c217c531158b9e0a75c166687d853817d15d2fd08a286e51c729588c4e84ee8f5440db1499e23ed53becc46bb7fbc71ca35495147a8b053bb82a8d6c4b212e8a3669504f7b5517180d7235891833000a9c51258a578cedb68b98085f394a2adc4bb35c389aa1840ceaaec249993cc47f2fe8ad981678a7de75c60bffa0b761cb5431ba3a61f0ad67c186c27453cc860b410325310d2eff8a711e411a2be62534f171bcf2cbfd75937212a589bdd874eba1fa5f150c74e8f80b26da8024fb39d986ebd1c6100d775d1845587f07d3a5d1c6814897d2f4ce0c2c8c5e22081a731c3969bf607499c80cb721b6bc8baa584b9a940d82ca8e8749ae9567163a8cea6fca2ceecdef772aa24cc0b19c31a1589c5b17971499dedd63e0d035df2d5ff2326a6f93dcbf8c9ea74b7ffabd7bd0738f79f81a8cb5c6b3cea1feb36872bcf06080e21bf33ab0d5afe69eb9a59c39c6635b9289800089f667c8d8ce2af49dc45467ce1a1b662981ee0b8bf851869b926c534690c0de8083b8678b3bf91196920811ec952414d33487ab7db0d031d3494fd7b7e9b870e009ee203a1d2580b74f31816bf01f11c43b90bf98e2b0403308eda5012dde2e244034783e0922c26e600c33af8881bc5835c342b97be19ceb705dfdbc9baf7556f2ab3cb0f44fdf99cc53061c12bf2bf4686dc90e8ab05899be163527a18b46fd4aabc8579807794d8599f791671bff8ede294f3c6103fcbd812f287bcb8e9a9801c30388ffc852ee1c2e51eedfe1d3a2196a0a6be5a3c03baf007101c8224dd1e1e2397c1e4e1f1822d4d6c6ab33d9a954e8cfc25a9ff2896b2004f0ae6e1a2cc896ab036d86df637f9ab0b0b37426dda2c439bf94ca44b395e663a15d63d7fd7c950af10b59f6c6e93bafa46da1e60f9be6940acfbc3bc0adff6eb7cd8154c0818238c6371a20e194fbe3adcc39a7bc67f38fd52d4a7e7b501a5786426ec400857ec53294762b44c041bf52ad7d1b2ca430a1d7404f250eec625d6e60a08091eae88d2b89fa7300f82751742054a9d0302a82d15c2784aa11332da81df7f60f74d3ad452cacce5b89fe2855930dbfbb23af2af5501624de7d38a40c62e93bc7ba7fd5ca0a7261571c630c3f37976ec28e9ce6cf394d4bc8022789aae5681c58a9ec6029c37dcadda826b8a66671915efdcc8ac48cbecc1415ad9a7f2410edcfef0cbfea3d84f3c7bf1d61897131559ba6b781de349087075c80e001d77062bed47305efc064c9b44f9185980c6b904f52f368e368f861297aaee13a8ac8fa97b582013c5095a428645e27cc1268a42d706ab1fbc32fc3f3dd9a2aa58598b01be7eb08d890f4122f2ea81ecd41603725226835f8b972034e29c84dff14014932885df2bafadad097305f3d604c6a5640f0a14479744a9cf4176f94d9b789c3cc3ce161c348f97bbc5e67a5708eb5f4a957ba79588d6ba899798e9b2c29466a2c5a67a5342953b3d3bfd0a33503ca30ec4b2af393d71209a1e53a4d1ae100cfd167d287fc29513ceaba6b7c26fc61cddf3c295f058a9aeeab20a4f2191075f638a4fdf461378c1099a745824ec2fadcd0e2fefdcacc3f376b5d754ae47eb565900b23433f9339e3b638768ddd0c8e11664f74ca94fb7caeaa3b70a9d3836aa90d413683455d914e3546fedb449b0dceb45bb882c8971ac65feaa05566e21ba1231a669bcfe5bb9be65247957415486f189187f1ebce98a603bd0b79d29ec36077c67fc908bcf9511e1b4f9f2590f9d73dc9f0c934bd6aa1d2e7e12846265ceb7b610638660e407ad3e236d1c5a1af1a765aca0e249561b1841fff66fad8896089a3e4a7f2251888057b087244e9f53238184eaeb97e1e1fc16d9e4d3499d774e24db83c4b5e8813c5fbff912ee42f548cd69ceb2895ceb78fd9d575b3b66d36e63fd4816749f89eca4a6fcdf9fe7903046cd052765a0ec44f40ff3c202dc621e2f4bdf500a487a4d7f4ac93397922f135f092ae059ed166466dfe2a81d3747cc5ff1ce5538fccd7447167241ca1fd9062d3043073e75c17b445fe6285caf15acfada64e2e18ea34b7ffcbe54fad5cc4dc03341e5074a966bb7368ca8096f748bcc988bd1eb69acc3a5954e7263db15d223d1c047bd9a696d51f50d7768079d17ffa5c7b41678c3a66647073a4b29172c60a83aa379a28f2e55ade644e342cb85b4a69d3db4cd94f062d57b2e029f6caa848551fa0b638f7135f848c3ec85ffc1a6b2d9ab1ef5b4c2bbd8f6514f05f3c8760a2cbf6680f32b4c3b2af2f56121b3703efc5cc0fc171cdb6a355b56178e1b0b2dc6207c2d395ceace0cf7fa9f41dda41f88d7894f21d7b3e21b0b54370069c0d325c59f2d05151fa1565f9fd8c45f6394d88155b7de64b6d60f51d7642a658df14d5e0aa74b47c923cc0e8a77147f3311032c5f0b7eb88fce7bb60362747555b3f7365fc60e6610b68341135b4240e066372c1d8cf76c907595c9e0a807c23eeed990dfef7399573862af6f1496e015c54d72f80ec7019d93e42f54269b983148770bab0c57b0e633587055c4be439558d257c46b71231dcaed64c94b133b81ab790bd8b6eca3a72eddf6850977888742e0d1382a1042a8b62586c8bb98851227acd7f694333847a364e82cbed20c0eba23d56103fd64ac291a22a9a9f0f652807ea9f8f4645bef08d06ab7b64822fc0855ba943fc5e3d6a90845fdfe4dd17c076ca004fc1fdc67b8f51df72075501a13587cefbdfab04c0ff1ffb47d5d5d068de0ef14f0a4eba25bb771c654e4bd644d27f0f3b0199a682b673dbd1d70c48f0c8bd794e07555d0aa9e525b2db016bda085e071bcaa7d0782d7b55477b92a54b00a34caa1b504f48050e88be2254af4032f86fdb16062a9d08fec8ea695de2c772e610be3c18bc52bab4ca0c34fdc529a82ad5b600684f2ac0bbe2ae58bb2c93c662f30383d4a75a7b4362e09709ed26f154cc75ff3c49a4c309d3138c21649f7baf8099478a6e6080f7d302039df071af17028b61cbfcda9a834d9bfced43062bafbff997d1f5efcbf6d37a6746fdc3ce2e6863fc6e1e4ef10dd47e7c2ff6e0976b7f80a48e40958fc527da0d6a9026c7ec67ce1e472a82b92c826b28a53ee5d2bf392e03f9e00bb6844e70f2c6eec3d29414c9040775fb63591ab9061c4b6055576e5e2b7ed35c33a9795a69437a2134d6d4dff110b8a40c7caf5c36c271627cc0ded18ef90d6e46dc8fd57d9e5cda1468fb7785eb0cb92b2b50e0d2eeb304f61b158034384e9d36dea4bc9e4085b63e51587700e58e81f99b74aaa34dc776632b1a7640f3818ec1c1222bedb9e61224ed7bd138a7c660e9744a027d54bb1839c358716b259d1403b9f7846ecedb24889807a2f9eecf620932eeed5daf46a87782c44843814386719ead42e18a56e4e5683df243c0bc95abb4311a757f39f755ea3528793ac7373f3862bb7b72a0fbd0890c7f5b9cf2c1bbfd8702590f07356f1637927bcc23c0c4adefad0ee40616b17ed493edc5874ec809780ae67d6b96421d57556a09953a2e8fd107d69122ba4371a9d6b80e01dfb1f9809fd019008f814e6b637c8aabaced310c29a12a97251036b1793466720cad80c621daf16c82fecaf0a023c5c01655d1db7528a2531363acef0b458f275764b8435593511692422f806de3033c781531b504c9454e241c2650246724fed4f0c173ca78f58a068d73ab39a10d70bd1d482285c2d7d65c40c5f089ec1387183d6d6ceab2ce260603ad560bf9ec80c0715c6e152dd2d62c8c6d3ab081736a221dc3eb967e23ef3ace9c51890494784563f1d7ced11192afc091e768a2e727c7087f7c691331da65403cdd62b807ea95215619b9ea86ec7f6769877f1e3891871f9fed06424a3f68dce2bcbe4b2d0894045202bf4331e32eba87775d8db19a1e282dcced5d9a8329d4cbaf75e4c34510f65c0e1d970f30dc4d61269e38c450197cec60fcba2728c897220cea415ca23c1e9b54c142e31ce653310b3a7088f512c0cf6ebdac88bcc15e4159c9e2a625b546232171c8d34e1caf79592c10dbf173b23ce19f513059505254d8d10217d78f3d7ccd1f8ca06e35e897f25fdf46a2cda6cafee64071e613eec94008241fa71d050e54869b7a7ff0980aa58798aa2d6b34764a6003f61748569bf3ee49a475c86d87cc60635bab92b6a8d4ffafa0626bec55ffd1262a333b177a6e4808e63c1b8e7497916c20988a6a5775c7331ab198c4ec537c0e4b51c6a87564356015fd85f9c91abba77d41d0c278f1ec4f54102dd5ded3bc1efcd21cb3d6da448ee9c20f31f6f5f6473fc27ed991e3a22f1286e79772a85fda360edc5bceb920c1d694682fe9a06f259cc7218c394f3c9964a5f0378bd198102b4b0e0084e1198cd62bc388ea9adb849cc6f975c87c700420b20e148b4d7fd2565c7bb6b298cfdc33e95b328b208bd90d4ca0ca9fe41e9b31f210e01264821ae5b2df85f07d331fcdcc9433b35fb0292cac4bc3342a03add69d2b3e680c5c57bdc58459a07a280a3c75fc4dd10690245e892a5fdcf3096eddf2dcb492791ace9429161cc2f8a4346452d8fbc1e329cb4d9e5591cea3d53944f516c20e43815d1fa9726200d5e3aed7c117a2530104c7021b53510fd5bf7e88050035378e540213345cf66f34e0d11975b56c2539a8c4a46d049192652e5cfce79a8e5431afe06d4b8b33f0492fcb40f066d842e0757da546652845bd9670383ca5aa98e688145ee70218b0da19612c7af3c2fdb81a205be3f29cdabc8eb70f93aed6322107aa41c8baf3c149f63d5afa2fd7dee496d91a254514e58feb23194bd0d4e1f0a4415914e74b251829dad8398b2672f09e9810d5c7a9cb219e13106534e6932646ed696938bad4a86d9476ad1cba6a286e08da196a3ae8c8b79432739c37adf4c07880bc8e5130c51437adc05b717401e8d85c3aed8bcca93cfc29a7d536e46eff8ced535a49748f53dc3b8af3ace1ecb8055e44c18243e488aea737c1ab77155dd47a7684fc7aaa31be7ea4f955f6db122fdf5303241278fe052e36a6ae67933d4afafdcce67223ce6172c53359b03437056adbb6a49779cc3d78e21b6576263d4cbe1ecac4c963d2037e257b63a2cd8e9fa0bc235591131b2175f292750bb4a4290c3538f0009b22c2fdc8dbcfa216378fd921f21ed9640c3a052e28612cb81d9e8b9bbb7e33868e86c84553b2bc5f04ba85ab3875742713961ce12c1bfaa41ef3f672f5fa500715b31e389ae135f002dad61aacbc250a5eb17bcbc2f8ba308f31839078b935b58990f70579640e76fc7f01671771edc12d20f9e13c214f42a6ae193eacdfaa31a9a19577068d6e7f475bdfcad350cdaee15cc5837b9df09f1c713356ad0874477ba48bfad1e8e79936ca174d62bbdd57d43a9b3434b3a0d9e9ac5209f34d14c34f2521e1c3416c150b6f505dd41dbbf2f62056613d9c2914409fe1658778fb4ef21a94c9672869049d36ece841e2608b736caea5726eb6be23cd67ec2ed75c2a8c68e322e0f5fea4675ae1406894cacf352fdd68db5b908b70ed5d3a46d59bf337332a02a5d94c121206e490d42239eb83328c57bd7165e4bc551ae8fb491d8a46121b744c6bb783d12835b8806eab3152b9aa0de7d05f76045321a67690f0cfebca7d036948b0db334ccd866e664c10005c055c757c8ddcc2e716d02695323af3c2f9cf00556401019d29707760d91cb1411b744127bf06880d9d34c5ac44ef4017f74b58c4070e68ac5e2c85fd163cc17cab9a8644a95549f913f492a956067b91ebbe8efb6174a3e25e9558d6b5f3c28e40c08da2ec58a27da0890cc79de8956eae606419826dda4871a5a7eda7d6315a5b50b30b2672255993f1856b69b8a768440851e3001b7f074f8bc78719de6fb27802951b5c7530022f515ce960153db7d688f916e01eb71ecd1ecdde1f5792f894218ca7c55154328405aa4f01381b0b7bf3f9008621354c5db51ac37008bf0ee9f13131d3520fe249df8eef55f6f25a9cbbe32771a6529fef275ef43da11075b6b75606aec2752b1db8b59cc5d8021469bd8142b93059b68436673b91b2b3f16168b1fbd54cfe10dd4c6004675ae31ad800bafa0ef824cbf46f51999ea7f1537f2c5faaf3a7e22ed0971c3ba1c9d4ba66e3654f0ab82285d618910a289ea53917bba489760ec1b1632084a85ce2c11fe32028419d6f2f7eea27c5dbc06be6aeb378f0d893057213a4ba202d89d2c50fbcda71f048ebba7471fe8c591f84ac122beade4809bb70e57a42b644d747fb54f473d7f33661555249c7bfa35ecb870eb46b370f38c89958d163fc7b0fd06ca2b447173604dce6d2b6d1593ad653396dedcfc8e0d6f04f95fba1bd0bfe6d10482dab6ec82194745219fd83c55d1f5374dc7f07cdf851ccc78fdb10f7577d0cd73b8a142e7347cc2b2414f77d470551f5c781ba977cff1727d4842973384bfa695661339323e6bdde4f4cdd1ac418a3c38814ada9d665298789eb8d2fd9d11953b1aec0873a0242a49a08bf7009bc18e67ad32ce55c0c10f5f60cf6bc5ffb60c68d84871acd663550711ef01bf355ad614f1fad2c727e712bcfed9f9c8b15ff90ab2b1dd70e22c72396ee5044d28d3e00b75757702b26e15ad6982c8463f89b192cacf3f302976b5f59b13590b66560a6964afb894f10cd60f5e305478ad09b5b251f00a90f00efdebe70d7ea8e43af75bef4d87b3b4afbe5a8a2f7ec994ac1bac985afdcde1d715563e2d38859923efd998a36f2bc1023848d08be477557200cb99e6174782f14d4f8a7e4ff753f98118d48ec2d0447c5f9ac45e78bdce794b157d734c42919f9147db6fc90f49789dde15f84299f3dec754dd406f4cf4052398709d283b94dc291ef91a149e9b02e287e9f2286c3ef3100e8d9d6b8a7e465adfd1b3883676ac9caa4bfe928a0edb2c29675b0c09427bc574d439e1e35571333fcce5310769d5d7f7a593efc738e74ded847f6d8f3c2ffaabc81e836da8db025334573b0cf5f171da05f69e70e69b2465371e1dfbfc7696fe702e51c9cd32a1e898097e99284cf5ece354f270df0d9e5e15b7c0977adff11b1fee3f6155b55a2c4a58fdc73d8b3f480f5b235901435467293b3af115ef5945c1bb96f8a183b5394f239d3af6dd301d582a7ab26ec52f752165f268efc4502d1fcdb24b0978a38d519620cccbfbf2f1f6c9d5e85070a28610caf57f88e51771529356a043edc326fb34c24ee3fcc06ef84f4505fde2de1e210ef08042653152ee874469e7afe13413d9600144814531e9e169ceeeb509a48ab141e6b878d9de25fc20ba3c2bab8f9529451f7fe35ddeb416b8838b4a1b9ac366dd4ddfe31408053bd5f1457d8d23b34ca047fe9e9e502945e3048de3d85692589179fd843427da96da80c6bd3a9e79ba572b4b079a374319a35b3637f274d03ca0898fc7f77eae33f969b85a1f21a31c8b827f7b40adf832a6724ce1c1e816014b9e73cf3a1cb0ac3318dd7d8e867c0385186a9064b37db4931f6525c53fe2f03c16b5aaa85df6482345d2bd45be47b2a256673dec99aa3f16a3231810ddab83750279dd9751d69b9bc3eae35bda963fe562e4f23cbfe950c41d7531a91fddc2949983d6cac5333ce9faf0442179dffd1de66cb6e4821bbb475b580621b4e9bdd02d993ade20f916ffa4ea08e29284cc2e4863c79bf67cee47eb8a70ceb38ea49b581b3d57103bd43a2525e29ca72f0c57d3dd4f79cd0e60c496f8b2e792e6910530d1164469ffaf19637daf76a1f230244f6e394b822901ba59cc343041c06fb1b09f67271076b020d900750193d15a88a4618af28c2a40492f82fb6b2677c12a53ced36b7afc88ef2dd03163ba76c3a3fcca79977fe26ee1c508b02a871bd2eddd89e044c76b988e387dddacf16b5728352406216ad1089d7d65dc7c6f2a68879d8e122a72b10d8ee92645940544715bc2c753821701a8275c1467fdedf6f8b3baf685f3584f5323dc24bf6bc66462fc1225fa928aded0efb888e1e071644e55f426d2be5bd52fee190322731e6c92becfaf990ac5888be884045b98ecf0f182097bcdc68ce3cb960eb244df0cc7f36d66c3fc57b2ca12d4de276e6e76da88ba324790b3a3903e868caa099a932d18c174f207d4dfb33d24e918b953007b213bfe8f70ed7dfa606de9c20e5083b141477382cd508bd3df78b054d3d09b6ada4d4d83236a6beb42abe98ee0acca3ca83ddffcb82e846db6a863d7118e785caffcabf758d8857c744774b1d9363358a7b8bb3a26cae54e3e72045f22be9bfdd350d8383c091b0dcd5e2d59c26b8a2a148b80b6a13d5aba87a5bbc5a316f22e406167bbaa203e54f4af56b872dffff788a5b158f4bbb6d90ad60c2c2c46744399f30e10f02a96f4fa874e81f72b05022a534e37ce601ad7926bfb19e3acabd4962955ab1eda33ff7067753d8c6db8d369b87f019104556de8f8f85ac1503570a92ccd5c8867d165092772ab3b532de0f10f9c8f476f64437b6ab990552c77c351fa6905d67ef60ee3fc7312ca98668efebe285add3570b3992c34079572b839ba08d51a18e7c9a1af94bb43d845e340d2d0dcc0289e037e3f5ffb6837647d744c9a07078678bf557f6555e3ea841bebc4f254459bd39312935daf3cf719e0d90ce1ae30af2f90c4cbe4882c56149a6f38176313cc358466e24549e2121beb49a4842f411c27f6112b2d55193b800b1231089ae2c45d7695257f39b42eeb566030cf4c8b5e783c7ebb47c8604d2e71e6540224e21c425e9f38654c5f807bae4d3a4f1f276a547e6a2f20f61b6eaea6776df1f3ae0fd25cf970ed288a015d9ae00aa7cd9926eb79eed8a5530c68a9b71d31bfc8e2a09b9a2bc102d29fd9700afa68134cfb38d7f2dd0123e912781964e51b2a0ee0b0401f6d922ffaaedc724fea68c7d83965800a936c5c76fc0ff526a615340d4e2cf92cc48c2b17190d89bfcc158368a3a5e7bcb5511ac077df7f8d2cbb0bc2bb9ff8caa209405247a0d9fa2c8fdde2e349e37e89223caf7c9fb55fa119a314e9d11324eea54c6ae1153ff58b581acc2735e3513872ad9e86cdc9db1d17ec06023aa856c663a054e78bf5479669e565f6e7b3ed173c8ba9d4c767a64c4691dbb8c637291222fc66fe37b277d745a5927c1377f378cd72dae2cd3c349f0ce24262618e80d763c298b8ad34c9fb42535f923c339faa7eff6344ed35631710baa35a0f3220983c86c5950e1c549079797bfdc51d1b80d5629d0554628423068f8844d492735f7fb5152b16f56c6f9debad3d248d1565aaf9fea69deebc719a3e5949e72854a4f886ecf67d514e687a92c4521af0fa0f22ac54857e4009c506ba53d3b6d765de261494a30536f14f912dc3ffd4a492e7f31a5eb83cbd4785f540f19b7913613845e4525ab139eae21c381bff40156f7a854494fa5f6212197d9a8d56f62696f7ab6f6f3d57978ab8c48c8ee03be4583f0a10b87349061c3b67250d946325d502c5d31623562db7c525c4141e13f0a536f6e4e701ad5f3644c9c3706d1b9b279cad1fa2069ddb511f2220567fb2d82161b474c0c447dfa516c170b20ecc1c83107c3fb5d2043b3980e905d0dc28679c46fb7a95c6d0c912010d7e6b545b7adeb785c587d4b0b0e380b1b7548c23000283dbd5ebe56db81a9f26da7cad07de3fa1776596f69e66aeeda81b6e675d76552e9f905537f592fe2047e5d94b15faa1e6acd48998c57a7ceaed019864618e4a1153b937157fd6de62fcc1fdf5e1ec235172369598db2bd294b5cf2e614fdf5c9fc33347b8fcbb6931e43ed773e4be22e4a8f3dafd75be3a6e58e2770ee26fe3b8f789b3ddd160f5d199ae9be975a4bf9225ab77e141af420b4e139619b97f6530d0158b1594c63e5da78a882220f216594d235ce4e5ef1963526b8f10453f8bd91bac98990b3453d38892413e195aa0ddcbfaaab0eb46bee350b3c52398b8b7999afe6a93a159bc33efb6b1f980deca9fce27c93bbe7ff58dfb94adf89db324088eafb9f01759588df8d72e881d58fa5d4ba5b5929bda2d20a553c24239fac7bfb83040f0efdd31f4c7fd245d582e1b869284f8ebd9d478cc7ad0b8f57b8868e19c9c092d1a460f2c8c4247b803642d9c80bbc623316a718119a5cc33f070d5f101a113157dd4004ddb4aab4a94f561e1f6dcdb10f6cf4b6f22346470b061fedb4400a095ea6fdedb81e33016859bbf9e5bd5492e3180c6260cd17e3626aee9b0c84e3ad6fc8ecfa6ac9f43630e8d7767f6f89220b5467ac4e51f24a0302d3d3521785b5426b39e58a3bec7b4fccf36ed221f187f826daab24e1fd82dd5ad915bb146c0fe29c53ba1beaf0794f3d4865787c00ee5526c2247e182a88bcbe9fc44ce585bd708f6051deee731fb4985a5ccfdcbeb5240169b639ab7643393d65a3c52741a09499977b442dda9d5134482f200ad2744bf97043ed1c2b34039fe4775c9d285259eafc6ded7bfe6e400673d1988b64d4758cb4c6ecb8621ada9b61fe53a11e258bb19336fbb0f8a9193dff0bbaa399b409e2833ff4baa87a326644da42ceb38bbbd71bab918004cdf76bf2871cb712adf7e04efd87a9c8a368ad9bb4f436b9ceb46d94f1f76de81e5270b4c85a0cdd2428e0cb539701b581b2f5893292387c20e0ede5e2282572ccc080ba60cb54ebbbabed019418139464ae318dbb12ce95b0aceb71b7112aae9fedbe6429878285b854d55d0d420c49a5f0bcd4e515cbca3804335a03c94fa67a0303e34a69b17e9a3c62ce231f5007725c3b46a98f12a591cc04e16ae3fd2a700f922c862822c02e4eb4ae5efab904fb8ba575adc3a9b812c309862bbc146d7aaf8f9eb2c466c3d6134475b3bcaf0629ee42653bad3f76b04ad573c8e86872fad238e0cc296a7ef7c92fbdc5da488ba4a97132093a1f63ac5cdce7d32c931c5ce3d1e925ebc1da0ef2d6da699e1b67fda096a58b6fb4f360d91ca1c2a4c7cb4316aff2a1fd2fd59215e3eb3685b8e3f26dd5b2e1d25938f27dfb59db02f9f646ec3e67cfc23bd3b8d715825b256e9600f373ad2b5454903b103eb5c65a8f30bb0a56bb79bbbc95643afa0b7a99ab1d5103705a4061bda30bc6e30f9fa34f88e220c208b2177d36e89439c67849167c1e20fe989c744f869b63eb58b4eeb32aadc0564352e3dbad69225466eb16cbfcca01d8769c3d28f5ba3908a58be3fab82d3deac2bdd3563048782790c89c49b1c0225ad168ddb2be49d08defd21939300ddd114bd5300732d4203b451ea1bc073dcf90613b2f5c54e453da853306d9d89a1c41b18e33d2b5f9538601ed02490ea07537ca5aae15e73f1aceb97fcde1371d695bc02bae478807920f6be6bd5690a2c489cf6d50626924d6bb4ff84b4ed686fa1820a3800fa528a91a157af1d66a1613780e66ea5f3c92b7e44f4a13b4b9df65558a6fcd419d274b93b7080244a51c835e27ada7bd652e68ccb9a38dd82186f8e20abefef21030dae17adf1b7c61e4a5f798a77d4129ba375bdb731f10f4701e6351222e935d213284b85fd468fae4385df95b274663427074f4d5d7d91889211b74c42a4094d50fff273163417d781dc3fe35c6af07fd12d3f8d4b973a465e410f4ea233fe4c483d1e587b97f87f091a508d481fa46145a8981515ace3f3c33ef42749bc67f60614379ffbbb6e7d3789e5b84a82836c086793b3197f6e11dc0977f99d875d311098abf5a9b46784b7050047c4cf433453f6a6d0e343acfa94d8d3fa686f17c4311e50f988b09f9a2577b7f6268bc64ec7044c4e49b1745a2f4d96af533b550191e23184b9ba2d53ed5330add605c5d3d23482ef0ee2f680379a786c30b8a3b8884d0567e76b5629c30ffaee0c3a2c98025facfd32e804992960e68e766c8984dffdf147b1fe750bfe0158e0745582b1f15cd9a0887cac5139923886e372d245866a02a12ad8ff29a8a9ba265f142b86675a58a5d71f5f581a3e0bb437ed04c9e03e5425cfb5f538763de1ac531fd2646dfa6a9a9a4d27c19bb73e57e49d7844cca169b5aad0216fa00e0f05c158868443150f57e932260229856295df829a5f7a9020fa469e32d8772e4f3f3da07810a7a7c4c4c08568c71143b5f93cf40206cb7d99cf65dc2d17c6c2ac68663e1fb084a9221f601c82cf536b6f7af5e9ad732fcf61e28be1e6d42c4684d2e58751747025d751954eb318f0c00dbcd5eff62c9841d460de8c50ce71c412a2a9eedabca5b91e222f06b9d13349298bf62b510bf05143283d4e6404b5df28085c1fcfb8cd7e848ade932552e99e5f974aa0b1605e8528cf996d9abe49085691e50ce7942ecc998991a2f4c3bdd38153b4e9901511c847567f91974aa5399cb9b9c116f45a8b6afae310fa8cb1f59f3940b7cdae55be894a2832968c8f54990219419236df02e96fd163ad845f9d5aa3915ab425bab5a166325c74c6d20b6a6c659440dff510ecc2c0508d3d59d99b5978a0b203269cf7eee25b49798a44d322b42bef9f1aa51aa05dff05bcd1638b1da856e383368e77a26d4cccc376a39888440b8104ef436a7c783775fb131d21c9b2814ae6544db45ccfc2fcf6869f323ab2d19a386e4b07d7163e841fbbecb69157c87cd60fee73c501cd39d0d57b38471c2c5e5d52abc6b80207f3b249e42d4466a018fe4a63096619ba86f37087c6ccb1ba9ead5ba5e7fa9723494947f4ff898e354ff60ca2c85d5e6c0b1d1fc55287a5866f04b9aca272f64ab57da250a7482d6a386146a94bdcc4255cdedffe2c921e9f98840eb8dd9027ff19448e37a0be43536ccf2a2ddb049dc6110f88942f20f144d3b56c9e4da169faabd68af4466e3afa2efbfe1e51db1df0bc34acbc440e0be2cfc61d7f5ccec69fefe2105655292edb926629fbc54cfed0fc233b35e53446ee2b9c2b9b2abfc80b9836775271a06da4d85a0a0c141dcde84e63411e8f5f7b40232cbccfbcf5cdf7cd7ea17a24c6b924b807f58f8090f47a577dac38b155a666b02e1d7fca440089c400b6184b22a543cbc4f5fcfceb65b2a7804b1d54ad3588831c89598312ad178b643181fa96b71aee6e87e33a9878b172ec2ea132f996f20e23a2269615aacc087810a2cc1805d5625b68db49c990e5b10ee8ffd9d986287ad67c9d2fe767f1798176469f96c774d96156267f116b5e70e1e0464c0d493e837afa752bbdaf82243ddf962caf8bcd285552609a9f7271c0785437bd5f0eb445502fb8f20bcd541e93fbe445036587e67371a7f3b3e9c761b39f39f9926468ba48848f2d749ef2d33598351dad58f5e3e3124c107b460b8d118ba5c036840a9dc32e0838a6a4ede472d55c3d3840782b03152c1a8f8ccba2b44d23b93f078b26e5c760307c1f9e5af196d648dae0a4e06eca7ad2171bcfc47be049797fa0a056033ca338644fade47219b070e8e3458bc5c5417495f7b7727f9b574f0ba92a8be09fb956266a616b21d84e522ce755d2a8f3c2f26215af68838b29eda7c9d16c9b2436874c44499b46751ca8bc09d951101b5eb9539bff91e870942660ab3d32fee514777dcefa6ea7d4a7b79927941edd626565cbd06f23afdcd054a5f35d5566719e26e7ecfa2de945e6710cc6a17e1847d70fe4436b8a275ca72ee572b0a7df1086f7f72f2727d5b434efe2addf6bb734b78f42769270c0e2bc07678278130f29b3ac16a4f7db20e70cd656ea826b59a6e7d3652f8b5aed1b67e5f541c69bd9f2198aaab08b109ca6323dad941afa19004f74246bdf01eb06b1c20526bbd6fbd98e44e98f326116cb89ffb8b6fc0f134cdc41c7ce4eec88cdfa97318a7eb927ebcd9b7123e55ca8ff4673525c537167a01852703213d83d10b43cf374ae09fa7cfeee7739b5949c2e737b1ab2c207cb84ee11c65bfd2513181bb70a6537d1482fd0555e37f6b0b75b1ce97af059baf08ceef10d44e9cff27050e42163fb1f4a98f5fb77351516364724c493e4c7c067926b325d5b6a8a85c457ccc4d2514b836c505e176128b6e4a265fdb94bfdbbd3407e3498c1b9e72f8969865326fedd084850daab7e88f296749fa92e176003ff1c2b1139d39436a55ae198bd521015013122ae0f488125ab7bfe99435e2bc1e0bb2de408ac0f7fc19ffc749dff2d23be89c9e1089c4ef5449d470d2fe129b90e368618ade4c1706d52fa4192c4b2edce7f9209611b45e5af2e42abec21464c76444d643f3c71a0712cfbf3e2beeb3dce1b1ea089605a1c9faa6de31b38aea3941115b2e2f93c837a0e9ada6bc11dedd95f499ff5004f191050fc243bd5c80860b25cf9168a824caeeb62f6564dd5ed67faaa067b05a20eb16b38d1775cc1ce1156b84c50aa4cc481047aa001bd43d406fa2316804f795f7e1c571270c124e7e073d39cb7c542cd92d7f6adcccdfffa138137341cb2c5c8cce0cba2bf7c14c85d6dda2c26755ce5cce6f66f4422e53f714aec16ee3df9d465a322c8ca6e20a3ec82960e6b0f7c1f42f99a617bee7455076ff37e5220fe47891918a860263d605e3453c630e45e0d0ce4dbfd566d08247f504fc6b58e5c4c5d205030aef86b25d41b193406ddcbad0747eaf192a12cf23cd7c97712e892fa5b2bfa904514808bd69543952d448dcde461f59e7d112f7221a3513142d6e0fd6c5eb3e79c9d29b2744603778c0c7c406723be0dd86330747741c6fb3a5334529b5db2ff066c01dcbaa7a52deeb74735c525634370b50c720a0a6057b00740c15373a90ba2684bf25c3e15d7e89d464ab9b8bd2401c0de88b0fc82395bf1e549f2cfd4d388251398193b9705a18e2634bf32c4e55525426ec5594fae1345c5f1be048da54bd4bb9339487defdc47d1369f2d7dda59031d67d084331ff1375d07dffa0e3d61002ec35ad8c36e4232a9ef6e57a0d2e029d961a728272dd860ee36c986818b34d5498db9029348c2337212aaa3651224c7bd2cb54b894b4fa35c5154ddb69bf7a7cf030b47d80abcbdb2c4c2d331fe5ea57f1c98e6b0cace1cffe7c2be8b6489b64343947c3dd073d420935b5bd773dd7df6d88f7473b3efa1682f1d40922d065f752357eae4b369d502725b07f3c28c31868e15fbc362f7b7b4989ee1e6ab8cbaa381a6cae60be71e6f10c2254ab95d9295f36e38155f1568bba5af9d522a5505399629c3df0d889dda569a97d41094224a05d781b4129205109847e9736fb1d780e15f3f2707220bdf82a18246ded4053e8320a18af3944d702d74c8f003bd25b925f8284a493478c6dbfd00941eb471d53cd21d3a4c21e0d0a838f4ef86b15ce7bc116535efd23e70d9b3812f38ff599d37d59eaba10d3672169a4ce296a705dd9cdfb1d6dbf413893e347818b981deb69e360591141b35856dd264645d399962c4ebbc78f0706fa1589c80cfb3b5b1f45fc21296d62af02d415cb3ea86f1ba51c7326ba39c1d5c12cb9cfa13446e7b220494e7610c507cb0ce679ea6210321ac37c56d47ef3695ff643b46060711c84c30e8f508ada50dc770ab9c3745c395ad86f7a71cbc226907d2390a63fdbedd9fbbcb0341b626a99516db0f6fce7883a9c99cca89a263fc5f528c3a4839a93eaba73e66fb58ec3f0ef09ae57547de5e7de6a7fa01679ac0386d65375684bb6138f33ceac160f7be1fd70e5ab111989fac0289a8e4308950e666488934de9ed7e05945e35829ad22af8d832885d2576b9a08b246b95952ae5596413e090a72e916ddf35549a3eb54c8a92e4f670a0751371ceb32fc03c08a8edfd4567abd004000cb7bd40e6c70478d6fc4dcb848a91b1ba3e85ddda3e30315a6c12554fc6b48ed05afc4a55502077a7bc201e03203b15be4d2fa5be84c326b6e631d6351147fbb3803b6ef987956562a036e1f5944caf97c591bac2c3b643ac305b64d0bc9ac88da68feb831ab69872621953306a1d11ea2b672691719bc404cf6c8c952bd39922f5389e8fe3612bd7b32bc60bb9e96d1c39b33a06b1ca6645a57d1d08fe6e075279c29f9f308522a3a6cb3108a0a1e4d4670e8671cbb47e79ce7d021abd8ee007f8b683799f4285622c8f6397cc4079fc7cad4acee9e58cddebf86a9f336c1233a5b9579781aa823f36495baa66dc0033367e87afb089ea027f3f31724665b1ea66bc1d40f9ac285f642d6cf259966a89288180e1040fca0d97cef279fd2e60302c80ea576d5ec72e23b1ec6029cc09171901f6f0873218ed833ad73e6d2e6bdb0a30681fbe49d4257069b81abaeb8410bd0390f652b9424258f7b6fa4015f18b46ab364a9cf8cf26d37a612f25fd41c4a71529e38232fd7ebe9727dafb4776e720493ce936803440dc42985aa157a9568e16035be986eff36850b82a30557b5278300c7a74f77d2d7595dad3217dd5b900f677c222f3912668e4bde236444e6c93428012687fa7036c320a894be9d438c5acb3da06978ae04138afe116f2fa4329f5c0609a01d5c3ca85fa975e61d4847132f58ce6d99b80075ebcd5cef17cc017cb10b68410f4b97f562aa2855e4f8c9cae9cf9555c4aa2fa531eaf5f92735ea8ff15e0f2245750782226355ce6b186ef4360cf829d64c3da16be04b293f5c2dc9287625f31b404a6e917712c0c3720a285fb16332d14cbf553d9defd0f35f9f08a30a66ed96b05e9f00077549d3e923fe1e919094afcc568bdc91e48af5ba1cbbac182068d91dded0294a2bdb66079554fb0c013c41be9acae7273b6bb2668a371b8ad265fd4ec7c4da8693854960f6561c9cee63424a1afadcce8e1e31b37301926504654a25941a5586134042c20115a0694bb62d7ff75b4fdf7409a37137cf49265b1710b1f1f78d7597c82700b6e5c9c3dd5beae10f0d27f52f319a614328edb3f9a46c0c5253a1beaf81f09e93b8bf303557669d0d937b5fbe1f44edbe9316ad7a7ff5b80fb60a4f54dea5ef12b4496c7f101fade8008f494504eeaa59a7a891195936cabb55c41347a7fd77f82e1288858f711d25717265528ad0b3e8fc55464f755826d29d6576b3da15002fa9f09476893afe64488220a5825bcd6961130d8728d5daff0240173773c70ecf18b9f5c9d21d632745a93e783e6cbc3ca96a900a42f9820f7a43c2d39badf16bf305badca74c511e782d3a36e17fc668bb7545bb43480bb6c5827f7ad80f84e63300fb89a4992c797864c8cd9f5198d3541b506ca3d7ae161d77a441f53cbc470207056c13fe09e2c5df3e5b15153a00053fac6c2e1b5888135b6b6e98bdce6d37d9e9d97afdfa868f6aa5c2b59fe014ee23da49906a50215b395eb1b359ffbcc55adf4d8f06b2f86581e95cb839e75dcbc15dd1b242a687e48bc298e21474899d5c5b99a300a29cf89de5b87106d1d844fb37ba4452244dd46bdd3013c7724f3a3262c383e6850acceea1659246a3b8a28402236f7312f3f074561a0505fd731e0a4a02880335ecb99f584f1e4810c9cb1fb9ab6983291948150c1f7141e61d300a48811465091dcbb94df49e0d749f965948987a0e7f5124ef9ba827ee3a49cf23c63de01b3d042d2f510892cae3d005ba7ee341fcc6c37aeedd9da6ea8d0a06a218419d53de2d16d21207176fc032ba8fca38837d4a4353bb737ada11d388ef6d03a6c427bfaf2692d95717014f988dec2a5eb0d4cbc9b3fb411fcdb46268265446fd868419ffd9ab963813932f6ad85d52ff2fb7ef74f2d54e81d9fa79d6f105a63cb3f2fdf5a8726da67c61c3a09cb3e9b5ec1f91e129047cacd4ccedbf3aca3382262eafb065a9ef2cf1fd7a76e72ac31380f1cdc20d6284507e71acaf4d0c63a10d47fd5e8b9545d30769bebf2bae825daffbcf5afa9077175ed0eb85a1fd2ecb71e18e5721e16295751180b2f394876b8dd8e3fe0816a3c1ae361eb165ef226daee78967d518e9dd6088a502da12c9740be21c5775f2ef7c97901a1fac06a075de3b35a8970dafc999d48982d8cdc9dc3d5d79bcd9a40563ef8ba1cf652b8cdc502d46a2e3443b866bb76975b814a11288eae353a144049b70e6c3aafbdca74f42f540837c98e1434937f08eaed2f2616e73709eb76985b7625701abd7b0657877b16e6047a6f83f20929d7da3ab58d0dcd0593c47dde598f4444d27cdcaca93478151296e2b4e966c24fc0617826d881a21b9bf2366f84cd0ad1917af68b7caad19284fad7278c47ae4ccab3e4e4db8e0e62423864c9afd051676f5b0b803abffc32c654f120985cb0191f47f025a1cd86ca12f1348f085e03af2e41f7a81771a5d00fb413ff4791da02387cfe8c351638c662f766c0acb556da5c38186352f442c0ee573f64adc29e64082fdf606fac8c62c964b1446b2debdea57e68b15903673642c207ea9ad3783b8a2ae3dccfa503c842558a7f62e71e65a6873f2cb3d9c4e6e8b946c3eed54e65a8a2a4015b1490eebf6ec15879b007a7a25efecdedd3830a176266a6bb0dc26f15fe9d5dbf4ec4436756b1e12a5a475afabc0cd4b6b7e5bd19851e50df049335d20318a3cf0c30490f247e879eadb3d99f141edddcbf31285370bbd3ca1a4a6489283affe3a025c59565a680c7e5413063c4d139cfb39f350823a15ea3bda15371ad06e868821c7f982bf767971cc6f92357586cc34f5a8844a982c1894294ea5e923b8a3136644aeb6fcdf110578596654c69ef314c94f97010728aec8df573be97fb2465eb11403b0b085afb900ab969f701818bef56cd91b8b95823ab6936b2a4695eef441b6fb1bbc9beaf32e309188f0720eef426a13b9700ba9847ce57af99e745177b6a55c4720ac39122bb1a0e7e78676cafd1088d1f1ad7f306aec545189013ba600f246278820109ded20b0d23cba7bc22e4894cd429c9078d671e26352828bf0e0b7476fe4017ce9084a32c150e52d66286c920b127c43429bb5734de6fa2c42378800a45b29ebaafb46cb1c68e33039beabf948d97b4e4de64733aec03cd3db9fb5f7d0e7f0d90120c8aebe2382ceca5bd60dbca58ad41c01f3c903cdb4ea6677fa4ed848d7fb3f424b4c827510e1f134b30fe647697ec9662c834d06fc3c750bfc5b02f3d6bd45bc89d29b80cadaa9be56354929091d5058148bff22553cc2966c7a8606a0537be00dd74d8f1ee632b5893b8d1a6fd921775648e7f51633d7f611ffda47b4a7cf073354339ead3c3b5bbaddc31966f7a6dae507194f71a3489c83fb7c70541e223d711b0b7d661f471757c29842f484dcf23482100638366cf45487ad3e774a74c8f39f99104d930aab1f387e50632d2d1087e583f0e7a2ef9a7bb8237086be3cf27828596c52c09b76231697ca7b371fb02535db4ce961b254c545ef54742c75588a7080752817bdf56c289faf65b050ca5700685985d8ec86dcc5abe74f10ba53fdb8f9439912aaf7168edb9fa5ec666d28bbc487be901bd4bfb2823b80c83ca43f8a85d73dc47e2575c12024fdec9cd0ee3c1be4525a34b390643af9313df3ada0f899284499d9281b74806c627547daacba95aada8204b72092bfc26760c749da57f3bf4ac92b00892e1abc61f79b947f9dae41e2fdc9081825fa54817226e32f2d05e033b126fcba36118be2484d6b0274a5e2d7d07f7d75cf5d17db643badb9e80fbf7ddfeedb4e4d9bd64e840267652e1ed43726ff710a0f622c7daf9b457064c54c20dde42336533e6ab9bf86db05d610a9706ca5d3eea424e1e2a01a8c28dc285065066fce7c8f3d2ef92dac960122b4f822bc5174da6435b6f54835d8e147d64706fae1304068481f141f9a6d4eef9fe8f00046db6ed600cae8ce0fa7235797dbcc1d11847c14f713b201e465b0c444e484fb51247ee30be216ba19540f1e6af871c46110b7d1054aae9441440af9a115e7443177afece51cf50503db3ebb4dfb8a4100b0b4299d5831b7e6aa53dd9fefb68430928f9fadf3537ecca83fdcb77f13d63eb47a8c07f04b6b4c4a29bbc7e6db63e3165acb76eb127fa24e8978a5c19da48d326f4916da1ae9402f9c2a040023d02ec512ac3c900e817b3541f2db5ef934f81ba7cf75afed08e0480d4d27023cd596f079ca28c9fd48e0d4c1f10ee3a2c1b66d4e812137f2841c29b9706b62df18975deb4b51bd67cb9a6c10ebf2bec8cb0750f73c8b8c1c032e419a249b5a33ffeec8759e9d835ba6d74aab5373c38d648920e22a8f64896b1c26117c2855f2270cccc0412c5846d90e0f6d89c8f56c944222a08ada96d35aec31a9b4ec8d026baee497b5fecbf2445363d0a4c4e5c6a546a26f6a2484899f0377c232dc444b3e9686aa6e30d8cbeac2141f924197a8f1d4f26999c9b90f9440e34fa75552d4d222435bd508ed610819c671e268b51a39d2829369a12b71273b7cb610a6e9524283aaf20d6d0e74b12ca227b1c42d9948c9b34e01ff46a90bacf0d9f882bb09cff7457ea7231228d4baf945e74c9e019ca3db99512bbbacfbdda532a1a271ed14763ed774465b34e88984b7c2e851f619735ffeb0fcf6622766db90c8e8bb3ec663cdc9232b754bb830b91d7fc0b5149f44ae59474602b4e1110ae47f6aa1c366506281c4c94e11bb24d3daae787352b68af82f1ae33a00718941cd45add0359450f4afd4587a4b20bec571efaff4127bcbe294588d98e313914baceb0a7787bd195ae7b5ed43de7dd72d20cd3cb4935f87dd3635a06f1f4811099a774374f80191ad9708d155e3ebcf2330908bf2ccdf0cf56b466c4174525ff74a828d14b75fdba687b68dd03738f1908770ec9a388abeecc6ee41cf9f145843cf6f16ba797e84d2bfb16a717dd350db5b93e708e582e2b65b2b93e4ca1ae859383176164b435b004a95f1e28add60e20d11bf076123af0d9151c6907b99fd2cef1aef026e95603b53ca0315047a856edd863400294d584090d6452dec22f6f0608a08c2aaff919eae3346f5ad3cf9ef14ba274ee9401c20b615a26ce43553300b4b3e15dcc64cccab6a28e1a5cf82a7145d3465fae42da4072d31fa82cef944eb27d97ef72571d977c687f6800eccd4e27f7132fbbf2af71dfc393a02ae67a889d60e519b068689afb8c6e7e76403c18ce260aa6c837a07c9627b06ae6486cb34774e51b671f6c5b88cae63950d0ab9c310103a33c5162c1ff1b4cb482ca7fc5089c64fe60812faaab0f9c9fe2660279d85888e4cb84707ee62619abf28238aa710a1949772dff060ae52cc982cb70ce26d8442944f1d466255b7dd819cabcf68aaa01581f851adffb65d3a04199bfa1c1b3cbdc90d507068c55e51bf01e6c2e69174b0a27a0b20ed8efacfcff349aa732e4fc6401377cdb8284e080a96a61ae556a6e5c6454da8b7834ebc2bc69e85b552cf549c6ea07adaec055039edacd4c3eea0fbf7d6cb622b96f831f986a804ff4cb57c251a108e8ebbc19947181cfd99481ff277e4b412c4eb90096da33788797e616e8bc435f81a8727983b987f8aba765a8ae26681af1254a816a39046b1e0c01583a07f910e48bcdc6d609e0fb91adb23c38da70678f1037a47b3c4937e76d2688b4527e9af2e8a35ff9b85ba403ebedec707abda9f89d6c4824520d2f522cc0d7de5e5d55a2bc3a70e5fa41a6a03a25a07c56d58026b95376b623f52ae3434757aa7c8e4d2f98dec68f1ea74f290625cddba76a87b70aa6cdc3a0f10748560749bebcf03fe4d4c0874504dfc86a8ccabd406179e994a31db943f2e3cdd282b5b6030c54e3ea14ebe0285073030b7f685778a75cd5af702887a8811da17e1ad49c6125fceba4213fd8165273db75d4dac7de67acddc3f449704f4bd3977044136844b6d39ae154603fe719e789db56f01eaaf283989368008bcad07478fc28bfe6d110771361fd0262719ab08921c41b963eb35077de1d508465bede75f8d0767c02abb143f79ea813e2117d4c910bfbe97ecd8ea8b0436170d80cec933f15b33800c363a72a78a51e429e6d9577982b1cfb55019dcd599fde7c319fb573de4ac125ede2cb1b8fb72e26e8a7a36bec1693dddabcb688d531e269d11a19857137cd6d4b63ee2df9ccef7a8b44a65db7979bfc05ffee00e6e815415987d126707cd9966ac9419b35147a32209dda987a2e576b5720b959f5ed99fcb31f89c9fc881c398eeb37399609fbad788883da9804175d7885c6601eadc206eb664e26ce8bca374b27dbee60e7e7575e1cdd73035cc7878243d77eac1f2dbe33649b8f12ac5ee9089b8931746d17fa147f944ea034a3372baf7e007e9d4e386e3ff393e08fbacdb367d14ae4201934fdedaea0a64b10d7ae377409dd6662a1bd2ffcb07f3037b064154f8d20461d2a98856fe949f7a1034c1ee1e8e7b102601684d69bdbb1a8c15dd97c3afc3f823b1329a5801b8000f61d99742a303566ad937436650c1903589f0950673601720bdbb472e37bbbde302e13dd7c9f3786dc8352688044c462b176810a2a89893439b08cc499f343f6b32c2fdfbd6804b9cfbbc3e1656cf347eb4fa4dfd2f7ce0c6dbe39aeb844dc422fc8d77d24364391fb6ac120c0d6532a7d146fa8f3f22179cfa2d7587c4d9398d593a61d360544e21074dcb4d521558a47e6d135fdfdd1da05d2d8b01d64b0d02a727517b08b78b3582c2cd4a27cb18fb946095ddb92fc38e4fb5d86ddb2f0092c10c2721c2239765111b5e9a1688f922c6f148df20400290dde55e14eed1f24d9b35c5ca9dd22c37a6ce16e0d20df00dbecdaf066fe1e08e703bfe416c6368a59df088939a365d82cd30ad37da78d6a76bede34b46ba056865a760a8e89d509b24fb84c9232cee15a0621f2655cd0b3976830e20210a4f7668bdc1bb272bcd126cfbf8c982c020ac7891c2f8ca6c8c895213c1c6c9139465215ec7987a7090bd73d22188a722eb8a742cd9347e8d6e247a22b9e323793a21431880d72ca3b39ff3d1a2d4c971662bd545ace0e9939849779f7c67287e1b7308752c8570668984bec9dc3a41ca99b3f914daab9c605b921bf64c5dc6ea7d6e09864558e207ec0631b62d760e9bc03e6d41af5f4f05c220150d8b9e78a932111b797aad71bd4303b46016ff7fbe3587b908bd89a4ba85c3dd1992d8f3d2b5ce82cb874fe6b1d715b50c476dce03218a012c8360f580b3e98695a6df2633057aae5708c8a51a7d0bdd2e9bd326e376570b7bea6bd3dcafa4da89356db9ddd555c9c6cc1d0929ff0e18c7d0f220164888153852e7ebbc6e6c60124294ecc5061aee9cc58ef936a23fd27e8d7a36c1f4a7ba758947623943276582b633ce65a0dd172819458a75e5717c1ea4b12271180ee02ea5ae6fd12bf8a81a6e42b5a1adfada49e3a6d7afb4e6bc3e3b6ed27250b4b2cb5436665f9ae10492f51193fcd9206637ea47122f9a61b549a6c4a86ae6c25caaa98cca1f9887a9035c9da5d0a44129b7bad3bce79671fdbbde69d298887cdd09a8b74acd33ba15c83e09daf19a1841ae973c99f6a33ee2caa182740f863d2a87e156d830feff55620d0574f958f0c41de766727e032c47433ce242f4bbdb3d64098b044d2daaa7fda4c7af9a070ba659883155650bbc3f9c75292e27b82d5e2816fbd20042bee23ce17a68a82e5d591dca34f8551e3b7a29e53983e86fb790ca1ec7529370eef8c885453e76e94522c8a1a963f7ccd55eff73260de35cf067d40be5e2839165b9963d8cea3c9c75bd3ce494a1fa439fde13b66d661ea8a64d84f707476189dde5d296684caf9dfc260e0001ec1d9d76128f443ec11b4a0025b462d4bc4a57b8b3808abb350702891510b8e0d39a95a16cce0c7542f103610026b85e1310d92cd30391f22f4b029ff787a176ffaae809a3180ba81ad37f78d0684100c0fae1f6009f2c50b6c450953f6f639d218ae21ea8baaeaa97a2760f47e619dc260c4cc759344b0266e1040a0037093c9ae2546376468d99166ccc7d681bb39724eac3451927a86127ce5a76ec1fef4cd92d83875837c5b15c3d83153e7dca83474d17dad02872401e222084bf45d98d858a7c80ab607785d7ae99c4d22268e7145307c35ec15604a4dbf9d55a834684a39be095a087ae660e4236060bfb712fbcfe495f04074abc477cd7a03e1cc3ae6e160f23419f359573794b7ce2a698a2621cfcfa1711a53b00b0a4dd4ded8bb37692e821e90d83a90defcfa00f46b0023b8abb3ebda4a4ac58cb9f2eb24d496f1054b24854a7438cd79efd16eb2dba60be1f65d471a11b853d233d20423be386d0c88ca9f84fd61ec15877718b4d522ce7227ee8cfb35c8ac470f140d839f146458a21413e070ea6062d6ed4f287a724e3632b259f51d7ae629abdcdf96be013cf6cca3ab821f7fa583f31de78c97aef81b23262df1cc5d9bdf1a34a742948b601785a928b50bec5d613b5631f614bfb4d49a5c765053a5e19bbaf65fc46abf1392e1b8cc0930f3b0bc155cc2dc982cc2f58545d51f0f409e17c70e0a7e15e89af37c66d6689fb42a9e6b902a1aa42d42830b4fee4973ddf71228bad127da8b115b548eba93deb94df54fe965d8d4a88e4fdbeaef818c0e0e428cf42fff6d15181b0aff27035a75753195e630c611642d5b55f17d080d0bfcdacef3ec92e4d8d132804953ca4f52b191255fd286f700c11e0bda95e5ab75772b2d3fd98cdcac03f49c9814a15cf58f60c0eeb5b8e52f7fcf7fc95a6e5ec11d80693d6161fab370199243d05739f49605947a8ca40c649603ea1f8558185714d378fc1bcc8bae7164552864292fd00f7752b4446c20135fb724cea6ddacdb61f2736cb9f2d8c5c48aac8d82d2917bc5cd3668ae6d35e90da06ec84ee9df33ce996a8b67dde0695532edc9323f59be208ce727809dd0706ba0b8347715cce299130c79f352607a900da715811123a0fa08d1bbeec7cfde13dd70a8f05e7827ac17364b66e74c126f73e7f7018edcac6d5568de415090d4157e86b513c352016ebe2ebde2c6acdb508d5c7b629e060e90a734bcf661309a574577ec83295de727b414507e411c6d1469eedef4152ad82875fdda8f18d41726ef43e8a663425b30eb409cf6bb34f1ee1d859ab1bfd89adc45e97a88f48802413f5204b187eeaa8493fc783ea6a99258d00da470821fe65f411ee2f3b2e2b1ed48737b19a8ac5cec4a2c03c322903e69bed270e48029619ee6c6c3573f8cbafadfd4660d1fd86906b8f2025f35a6bdb5f5182e15b58f1c0bb74454e2b81b9d3e3f0c872de0ae49609f165db25c7ac3fec54fefa6981c0c15f986acab3d5efc7808219c2cc4f7897b38d19b1480ad646df1dc1e938288ee1cab5aae781700dd6598c4d67ac5e72348c8b1afeccaa88d05475c3362cfe03d796bd6ada4db17d6643ebaaa121de5eff8f2a14c0a0b97d6aa2cdee2cc50c64c5bb255b8ab9a0d25105a5cf4307b0c2891f9f5496d5c442ffb2a0eea2d05e0f649d318e9d63f1a684de71f9eccb8224ab190f3963b8eff225ec272dba6259bb04a9bcbb5bad215b003e1b36bca113faa21644e40d49a53dca563863b515bfebb24169f42f546909a040b1398e9571ad1a97445e2c6a1ab0fb122d0965b889b33086dd92100a1a0e6063c7ba123677d9f01c8c496d0fd392a58023f80b68b544dce5ffd64003ab8024ece59fd75b14433985d5eb4e9540661c58619877a6db7d821fc8c1cf3a3e27d6d9c20cdcbedb4b231d38cd73d008adb02a8f0b09003ffa91ec1e463f833b12dee83a416d5fa89b172fa202acb63adf01664ad3c5ae4584d39284235f37f773f81241bcc9c99bb3fa5bb64d89d324a35f58ec6c719340810e2263602094adacb94b00a17027e16a5e49b81d73e7eae32d19ff31cc8d90d95e0ed2d7ad74bba09c20688153944fb3af9bb78883876472ef87ae6b898b6cdf2d22bbad573630a30694cbebe99613205b252bb68c7a30a9a8a4f0b8566fc3a40a4768632efb53678d124ebb3a318f05ae36e03b21da711c5ccef7d9a35de6f3d35fea5618e65af0d4968251bf2ae305e964d6ecc6ebbd5a9fdf7d2cbb1de9b48274b544c894effee5a08329c18d8a6ea1ea8c734f63aa57000ee0c707b5d63ce7ae7e3ebbcbfc5fcd660b879844d2fe5b99bc8cb8f947028522f69c21c0b4e9faf3f7ea1271211fd5109ffc050aa3b52ab95f738bc586cc57d3460ccd10bcf1aa43863e7750ba8b12112357f950f03c2ba9b02822c943a7793bcafb0d13051fe95cce4411aefba1c75f155a16c3f09d04c8cf1ce108ac769a9002c671ecb35674d690906a141966df6c63a92b0cb25c6bedc13d53ca8fc1c193610aaf1b97ab7f855bd6d415a7139eff0703b79216c6f49ef325682fc5fa08eeec56fbce970ae6abad212cd253e649564cf36eaaa8b9f66d45cdb64cc0c18555c63f55d7ce6ca5a32a465076164269ba2f7e4a7b8804db19779ecc942fb3b85caf3dfd1d5935f63b54c56c99b3021f179c78219d4593d0fb56b58130eac84342d721dddad54546daab0e5552bc5ba8d6d2e82e7e10c1bc40f5468f1866de8e3079176c350f868e3a64429a44615ae6b36ed6180f7d7db5d5e87b20feb939433d42f06c7951b440f194ab14c321949c03124e3157fb79bf20d9a4b7a6c3d0c187c002396b298d3f7a75424aabefd69342f5eed540dac0b5ea5b0e9f3f26b2ff9c824916d4f790ef04fb6c164412ad47a134551928706f675171d1fb10951ec7d2e2d2a85995f87f71c8fff34581d343008516658f5bb36faef094003d37c26997c782a4ed930be1a1ce3b961833d03a117fca4fd41a46ce8b9884765261e9c865130db2eb4e808e21f6ce6d36bf9add752da49f1fb8703d0ba43da32287ebd9b1f812f6fc5057846b3fac00814560d9f5e47522c4d9c561326084b418afaa5603f1a43114891f73a731a004cbc42fd41b52456258f17e8826baf0c62164fee3cb9dd102c39fe80eeee8afee134d76c6fea3cb57ff7dfeb3cba0ce9d3a5fe2b7cc98d7134350f548b92e283979165bb538f7f03ba56f1acc63ac6372fcf34b339523c01d11d972ac3171d8f3f9aabd373cbc5dc7b71549ae4e806fea86ae5a20a20480f8bc10910f8a2edfb6978e0c2ddd53fb683d770281f5d6131d02b6425387a92ca345e30134d9d0ce567ef935f515e105a15f7fa0b3791f3e8195a9c8a4addf4ff53445bf92c5f668728a908fd683777928b8fc156fb6339b9077c79113135eacb562bf88d0ff489f4c5a2fb9964889c0c9dfaa5eeea8281ec641093a27a7244fdeeb76d2948155b5b131ed0f4791cac9d3d1f42b12e402c38c2171fe75df7059635a6c1cf3aeeab7b6e9c1c25ac060b4b65906553040452fe48c16ba876800d97eeca7edc3f0f60a15d194814c0049b7493e7c3ef0bd4eccd055690a366005cf4a89c9a4c4f008c345b4d0eac92b468f83bf83ec19f54b391cf51787b51db15bccc122f20122a70db148a80ee17647600b9ec0d48e69d331b4e30ca92d8b497181552e12c183c38211f20079c940a47f9a916cfee3f8d6120d6d8ca4b741f0a62013ce443e6da1992d6d02ca615b70f1698fa3efbfb199f19d5baa291ce30bf9ee49f3d227efd829a2fb9b4bcf18aca327225688cc0148335d3925872e21e9624baa53d9e0f72d40cdf2916e85872530aafd235f7a103db940fe146980a7fd21313599a51aac67ed3e70a281154064de6300f4d6397b46921316b2a9e5e16ea5cd9672122164e6bd41c32dda5717b6bac2d72048126b2a59702a9707d530b35f455f8e70d7daeccc331c88a05ee375967c0356dbced9b006ead4ebfaaf20717ef6e36df4098e14c61875e3efef39d0fa53987992d1942932ec76ab7f5cdd7f15dbbb27d1706eeb9d63fa08ad0235bfd38b2cd34015d8a17eb7925b911de643a093c5d30ec08e115cd93bc750b80d4aa959df43374d2a53b5aaeb723e779f04c9c6ec2b2f1deaf005a39024ace68bd147f81d2fdc00e0219f2559e2f11a3e7fd84dd2bb2ffd073fe3b3219598bc4ec3adf4094904745afa77387d98af9e531d5be5f4b388ba5e1db2d34ee6ed2ca77c31e4796dc098c6a616617939b9765b5eb09f6b75a951b357d968bbddee00d9229742791b43b86131868d3b0b559d7f4273a194a33ff63fe8db12b483f223c02b011e85c511b24ea325f52b9e6d9405a6b1c183ccc3a9b250a4e707d980226ef70c196088a35b4c7764fc7aeb3680baf8059b41c2dec072afe28e79b85413fb8be4d31efc7aad8a63f54ac9e8d0a1d8f8116c352447a9d9289a9a9cfb208d9c3c985e99b9230c1ea3734d86499d6d9cba005ec0385fac148000bb96b3c385e31214da4247f75f8228873a9e351ee1392a27a91e6fec903d1a280d43fcc2444877640c36d2986aa16afbc743f29e30c0b5f31f2deb567a9f90e15ccf629f55eee5a229c0dc3f83a372d75ce5d8885614afce37f565ebacee8355c246466aac870f080ccc0ebdaa0bd6600f4ffcb730d4a47136b453301d96d4783b590956c52c62ed894431928ef6368e610a4482398b3175e649bed047de47ec778828ad90fec483b240dbb3e00f9c18cac7ced7c7dfe10bd78965177a3effe389ae554d79a1d7200d14b4797e274e303fa503ea5f2e22cf7c7d4ee44194b71f46bf672186241e48ce7ba4cc5cac965a6014f55e11efd916c2547ca8ab0c4eb092c7b8c54319108d269db7225bf6018f411f160b60142b7f7c80663bc620a5ca8f2895348516f7b33c79eeb1202833e9a4cfb837512652bae868af2535362d5278a7b2d9ae1693e1689f30190eec48273802db822b1a98df09676f07554fb9ffcdd6468c9f99b92afaad01929d694640fab646ec7f9e50b2d523a18fd08b2856a6bfc7677e9609b0209bf640c546c9f9289deec5994542377f450dc9db53cc0c506a0c42ed95107589a792e5ec0cab117e0deb1441c9d67d13442f1caa32bcdecf7e455dbc7f98d159f9db8f9be4d2865c64fe38fbe21d1d6fa4b7862af692c4a4fa153e5b1771bbbfb14e8237a78eb57e02eca7990007690a5f628f9c7db9b2665fc098a0ab3735bfd268a0501d203852da57695cfff6265dc793027c5fb638a64d5f5f759a8ab068b5250fdbbe064b8ee5807dba8493cf5d2733bf6a3ba87b99af25d19dd76988647866037dc978349f8840d7e4247798614fa9b5a589c549aab8891517d50bca44fbfd65541bd6afdf6023545e47f3bc9afc4efc234c198b821da918913c8d2dda4d433f12e6694ad379fac4472e7dca6e947afcfe2f02e7a41737de9b74ab53548e4d6e74046e5fad787399461a00ac02eace911a1b168799c06a7e01680af9647eab862a4b55304cc450ed96a765e81feaa07033e13be6d46b9bdf6837024adeb0a501138bafdc33c9aeb829b13d00bd39ff98846ece29cb56e11e4dd4c1bbf2792413523d301a636f4347f305f9951a7875cfd3641c487dcb70feb1bfdaf7003e916bceeb2ac0dc589cf5c7b6c9d5497ceb259164c05a2e86bddac2699db2695a28558712da521c756bb313f1b4e8d037c97adf42ca98d21e376d84a0b402773024f16b54f5062bac8a5df965e471f735c5c221aef060050af2fc9aca2a8a90304a68ac9570d5a78d1422555ad2f7eebc43a9a23cee0e26fc43d8d6b2571fdf3f3f9652b53335220c1d844fb1ff3e3a92f613dab4955a6661e207ec64dc91110bb6a27f72945a848f33d07d411158a9dc39bfed41425a1b99a7e426ad15d5ba46968e5093c93ccfdb8384fa78fd8b025fbb8d07ed2d9bb0fdf5b98e1ddf54499f05280d69035cd81681ae950d73ca50b4e6f6e65ff58cb1b778294b0f8169aa112e75f5bbffd6ca04d1030b4620c0c47ff8ac562f8344ca8dc13774f96147777a54a47d7b21b5e9e3e006eed372a000351329697999ad3dd1640746ef9d78cfb3480f8901cd8f3b90e7d3a70f8b7eb08fba1c842b986b759e5179c9837b38893556d766e5e8d5d2ebdd8b772e09ceae38440604b8ff446311cf365e760529b71dabb3dd6b3d4a47cc97821ae826a9bb80952fdb1e941d8efacb6c16d01b1e1976aa67b2ceb685879a22666700299994d9cbb423447dad9aed92e59e2f4b9e477db81561a348af153c7e112f612ac724479378b1e51ef6dbf5a8ba3921e84ec5593b5dd1b93f8c48b2ff87560ef8257cd175f374177099e8cf2b8937498b8dcfa4e4e27b50852927bad19ff3f2559443c7164c550d83520c5f7772b6a43735f194b9a7c2719823d78118157c2bb70d62a0d81e37f6cb7e961964b3bab4c569d98652e83c72ab78fa7f54a811b70d8e7c91da1336555a8dbf301ac04576cec5694063366cfc068c925d310f3123a717499d07707bcbef2a97c2d4ee575037cfca20f8292cd2bd0351082161c695c1997e65538446459008be641eae0c6c147a8f7957bd6b4e88346e922c687bcbcdedc3af4ae02b17f86bc5a6138206fd6f679947cedae2381e02e59011fa41a29d6afee23b9a0b975045c7e84bb951090175545249d938df373da7e450fd5732989c159303499c76d138277d8e2e346fc364f6f6a5367e2a6ece85b1f866fdd5faa30022f3350e4e677e922353e9b899fd55f3bceecf8640568a8fbc83ef08ccaf4c3f023240893b335dd464e4a29944129730ca1cec7f108a6b516f342c23edfd5696040a4c00b4b244b69cf7c08969ddd8a7f1c9c4c11248b8d9d543b860915538095f91765746490ab4ba013b83d4dd9d7c000dfc153ef877ad10631503ddccf56b36bb542c8c8051aadbc099ab77e3f853c8fe676d167baa7930f9531a729197fa9e89845009a6ce02aaf455c98c023f7d51cdd8624f4d87bb50356843b2118b513073ccdda8fe0b1b2c8eedceed41b2bdff91bc7c19d575c884bd0bf8e294758563d7a129100fd170e289c9f22fe48c90999d5beac5f95f53069e4a1e43f2a9aafbd81884b071af902ce3042d5b57d7235526f31b186519fbcb81e18734aa6161a74ef06cc16942dfec4a6e872021c66ee8a58af7e156d0e8bece62d5f134fb7740fc080514f09aa5c9c01ffb1375dc66550fdee283c072317f965681368c693dc6a7aa3d61c22ea149b7339346bd1d11f7979693439e2dbf96dc85be2eb9d8902d5617a24af57e2c4a307d8fa1244849d49400202f22d349719deb5fe96e667f433ea2957c4bd7c4b1350aaa43fd229cd344b972db10ac4036433fad1336e8ecf66b9de0688d26cefb9b45c5513a6ae1cc4e3c196a73734dab294848946e997166287cbe0f7ec64d6959be17c837669d92124da962acadc8b02bee8fd7a66ae9e9603e14adc8454bdc2b32f592d0b56797e0d9ed4a46fc8bfccc263412d679d6f7cb738b17f3a12672b324730e6361b7c700c31a2f42cd9d20b1805b2a092a95e59a4148a55bfdd856eef1d0155d640d12be1c51681c6b5d86b9450d9ec62415d01cbb47c6e53e8c1d0a73b53de9a5ce07a721d1be1b5920b43b2fddcea43c22ca82c5bd466ae0a6a30e45bd4c0088c64a1df7d9520fd1b5259ba8a55b5bc480bcd304267b958961fd6fc6de65843b541ee23540a9897fae4ad61ab1ca0b64c926b6d4eb9b250e06c0b58578cf433b34999013e0cabe5c1d67ddbbe52073e22ec9496fce9e68698ba3a6d2e93b6a13f8c81ed4deb7f51aeb3d11ad95fb78f1849b12cb56502143d237053c20119aac54a59886c93fce87046896061f1b4747c1e4964d2f4f0424b936cea643818f6c525413047474c3b53b57f56eadab528d8dd55989705075b1c0ec1d54b9c8c72edc86c64cfa388220890847609289e646415fc84dea5b94a350c08febffef68435526f0c871b3dacdfe94e5b85168f9a12c9f5b673fed6ffff962e56121da390cb0a124d1750a806d7ac78c6f7e11ecf36d6bfd650a68cecd772a56abe844b4cd18a8e67627ac7ea7edee596ba3fef22cea7ffa74e7e8f9012ee2d7e163304177388515c015b1cc4e9be5ecb2b8f44f04cad02f809508546cd268a5734dbd68ad8e842676357b6fe49895ea98a9ca4f9625f601d139127192677111ff12a9a3daa91de456f9d288b61454fadf35ee08d9719f399cdea0cfb244c3ee70cdfaed542da0885f5d2328fe3b7d4885b2638d48ec809f72960a6c5eef8514c6f0ae1140495cd9c483dec5723f396f83facec3ab9c64643a8294bb96094d23329783253c7337cebbecb03bce83fca611b9dcd7c37451042276031458b02128fa574842c763eb24e5c200b7fa1fbd8b5f414c56ab0d982a21ddb9320bc5ce46d438f5239d812cf54d148e273cc7b1af48c5c6227dce413812cc44f68a23a02a35230b8c2f9751e798d9f001d1192c6a731d90840613f5cdb98f069744319a13f7c9502b820d9faef16144c83ce933a8ea957063dc695d3842db091fcf8c5466291af40b830c6f0eb2254dd5dc7c7db6b8689a40a404f7dc591c321a6b51718f59d1a6e9023a1edd5e543562a126b8d276fccddbc45e115a5a3cc473d6670ee661ba596930e4c1043a85e03116b352d12d57cb718e9c8a73a5c4bff89391ac0486271a3149b3568ecefc18c90c607b5dc13a3b387ac7c3e8fd49164594e76c5e50920eb0b754fade3d5a3dcb27d7fea364888a4e676aa1ed0beaaaa651ba941dea37be5abcd7c3eced4399654c13d7d071336063872282a71562a8c1a5f66dbb98ae618d3ced661a8eecda49456de1955d9a48d7f3f4f60a4e03ebed478f3ade67f3c826be18c626d443265404d2dd611c3efacf3687eeebfcbbe667a5b0bd7ef1cc9822d16b7469a20a1049719754b75c3ac5208ad1d1560a23b4177072d7337023f9d0d4463b1cc91feba71614c6d324fe8c39d811054dae781ba42230d082a4dc9f63e07af00f73d55fd512f90719c6cc119980417030661fa091e0814b77a745ac08aee6c9217d754f1d77c3b3def627fb3d9ee2d1dd961c3de5bd87c17488a8abac64eaee1c6c4cd87056b4e0e2588e31d96be3ff0c1a0d0ac77acf1e7957a5ae8dc7ec30614837adca74d5b3970d2e3622818d16c44e2531a8048fe134725a5e534fb8eede2ec63f2250892e08b40bc56eb0cbbf3df0a16a674215ab1ba47e547d4d6fd491dbcc3236abb0526110e196bc4956cd337264543477426fe9d1c5128626a975a8a84f9707507ba3a26ca74ebf3f93690de2e153792ce4d2ac78dc45bbf7ef19a20b509751ef9233100820381fcc44f90e2656039376f3e88a984dbe4d2e7ad18e864efc16e1442a4c066bd3e726aac78b37d8f498252cdd8a204adac07e52b894ac2c6d9c986ddd03388dfc944d86e93513324871f872b1d59f51f0ede6cb079cd5f1ad098439d5d2c4951409a665eda75c6270ce353f9af51ab7eb649782e454f134bc360664553fd210a20df9e08d936d9b9034308abf02a90957f0a8bbf70f0c0ad165332bd8903614124d3ff13299849ad23608ef229659ac0931a7bf13b86af0cf52c56288b0842fd1117da9010ccf9d57f7d66d5a0080af05fcb18af0324b7ea55ca0be4f131b62c667dd0f1c2d1e3026765d9250a496c4961ff609b5741c4811fe0bcfc99d070bcf39ab4630ff85d75834fb9c02d628610011bad99d0b5dcbc04e5a9daa82f74d5b4d09d11f43f6fc8ebbf9a302726475c3a391c5dfe6e4848729a1077165c2ca6dda9be19abbd3534e486181cdfe87b102ead8835365231e83d41504a42cf00763d7d3643adbbb8bbaa58310fd877bab1f03363fc5ffc1aacb4320dd651096c6f129f338a2cde45d1aff06751dfa9384c08aac300b9c03f9617b25946864a8c7ba589dba6de5f8924522ae581fbfd7277862ccb9b0ae05d03d0d866567763ed3516b11f4600d797b52fcd500d33717072f9e83b54f99db27afcf6e0780a90e17ccad003e05354462382e8a1f10594da3e5b0c32a37e9321585a2596620f169b4fa45f8991c9070e7ac82ff4c8790510b24ba2f2b362503dd4bc16d287588160b70478182457ef6ef34a414b0bc8e75dc1737b0547234ddeeab93a346a2d6c1c17875029a7ce4b6ec27ef34a1c779fe16975c693f6b4e34bba95a3acfeeb9738d2c7902ddbbc99f43996cae68a7fc7e544e4f3ceb9556b799cb3257b5a5c6c7f77b88a0dcdec0e838b6e2b7992034880d1e65fbad43aea2cbf35f7dca2b8a2e09dcfee05ed8ad62fcd85c0759439ecfc97796ea03f5c86c8ac1dc9b0123acb7a3c2717521fea5a28de76ad8a1abc9939040cfb334152c5645e3e0f1046b0375b06ff5a709b4809c2d3e5ffad29e71a0c3f909c612fa3dc2130d8001a5ba23c8440cefa2ca5ab772ac981ae16ddba68ba8b319f17c8c8d5aef88af1b340fee130360836051a6fcedecee87a92ac8583f35b9177280c9b5f4a9897e04a9ea77e34c5793c89eea0ad9cc9df383b3272bc39445981995bdae70ff62773beb6d017ec18329cf03b363c0e2ad326cdb6dc6267c05c7934ef01d104f6902855568f1bee6a38c8e59ec7cc0d4389af9d912ed9d55a3926a75e602875521620bb87280e32777fff316e163170a5e8c094c2a06b322c54ca06a80f33e983867e025d9d2dbf82b8fa7a966ccc00e42cc7641046450c7925431277b598a30c1a0b003fc69b6a82ad317ef31d339def7b128e81b75c2022698db7ce4444a753b27bd6539a3b4613fb7844a851e77be73a76d8fe9a23938ad9ec646a70a0e833e1899bb97887f8ef5bda27ceb0267cea1165675ce4b5c8612c2dd1636fb9d33c06d72e7d80a9cb22a5fab3ae9ab88e95e960a486cef02d5727f0f4ea32c7c3441d4dcdbeae3488281f41f952188f39c5d9f94d51bc5ea6a5fd123fa15c263d5058c65bb32ed82edd5d35417ff6e8fba93f856c51e05595f992cf4dab4420b5d19050b3a2d96669d71458d9d7a3ee9d06378dfb8cc0ed7cc94ff157d917bcb56103eb206de2276cdc8cf2f1c678691600f2e853ddf42bf7bcb31e75e3834b645f1c3c9042b3b46b2cdf5c7a0e8b5e455dcf3ccf5b47ceaae6fe7b12d3a282d0072ab483c000cdd7aaa7abbc4763642e69ef0dbd59f08e59fabc1791aaa5cf20501f667a1427d41ce768c0c9160084ef0d54277a89312fafda666b57c83166956d3196d0dccddab7c21d5fd349457c0a798318ab69f12a41dc9a63feab6937c7aceca1114b60298ba8a6ed3df004dcc59e49f292585ae56537cf8d863083810fb7d3ec7c24e41671e722f432d94861aea8d0a401e41d899fc449b2cac30ec0d7ad29a87eac9ae4926165e073853a9bfa2a19abc36ccc0cb12dcd40d85d06af8e2486f60541603a8416b083b42132e015c5e69f6e06e1b3d08687e61f6f5a7148fda6de2ab19c7508b5be3c0f826e8f653bf8ec4a625180346f93f095c9b42277c00432ff662f3e0fa56a7aad9b02be1016481e66f385c10fd7f75da08bcc81bb0b3258083173fec05c83288745a3eb4968f652f610763f13e955e23cf85d8888d44bc18a950bb91b612a157d62bdafaffe955fc81b0a30d1bb3d5c00e20b91e2bea3787f49b31e59faedb8fa96e4e48c09423026a4cf4fc9fe0f252a09946c6fa0058ae3e6a0e1c020db9d3cf745a591b4a5b67a4ca152e99dce802a0a3689f619b2bef58560a7154cdb419d2024182b7d9e04b0a607c0fcd5eeb2f90e8f59b77f08a20d55a13cc55ba6f85d45f17742d3292391957f6c1e10534969c62349702b9d0716301382262816905b5be25dc0d8fa555d381000ee2379009498d99f9127e3f1dc94542a6e054465c34775e066744e66bd2d71b96ee39ae4039031aa7f955cf0becd45645d0e28c265d4672dd524ae4841d56cc3263a40cb395c7f2c84d915382378a1b44ea654534d55b884a51c9154ba4e728467a571328dddb2a82092ad76e2041c2e2a0b7db82651fe806a5d9ed310c7d90f6bc3a1defcd1f9f571716af7e33e72306c82c44d0094092814b48a8a56637c4ff069c612e597bc263fda48a42833a5f93896c77667462096323a3ed07ff1d9be51bbfaf02e20ed117d0ac544183a8812421c4914135220b567d9ad34418046b4bb2077af0c7f2ccb863e9c68963bc25bd5137295eac9a3ee47887e742cb20e5683d9264819bea0e7563d07abc4054846d7c26d89c84a1d75023250eee39d507f31b47de3cdb1cb5980ce7f727f2597d818ae65cc6a35987f5ba1a7888d88e3b5f8d7ee98309aafdd662063ede5460df6d50262a7e3d15b81fbf71564f68e358e47454568f4aa40c217090c6374ee82317b99cd0d0cc3699e88a24d661cac10d6d319957381b7278a94530a51c577c465484007fe2156b950037c9163730d7bd7e3dca27dc943e7aa9a6a1988d7291c975f60fd018a162d3800e122aa984859a1e14985ed5756dab1f96ae92990cc876519f68240d793d2bc96e9ce5ff4efdc06e9cb09bb8bc784cabb6f0d00a8d180852d16696e3913dd40c4ad76d3d8d5e84be7df778dffcf5473f1e5f342040d724cc5276daea72bdfc0fd55ce1d10aa33740cfeac20c8a46fc7f558947163749513d8bd8cc783624ad65150d6e55a05779420312b1804e248b898581a75e78630d63647845b548092ae11435a64b7e1471aa459559c00711e83a04f4837d5c2febc7f1176d665e5e95cd8fc67b5e51d2d456be6d88260407478e26bedbd0132e40f9e92b2b70e2cd7db5f66ad3bd5209ee1e5b045fd647865999e480592fc0f40129883777a4239143e058002463de65c20094dd79c4edee1192448a5567e224cd0ea65fcb170d5f966f2c24d213af5b46934a434fcfc49146cd5c377a6a5867cbbb889b5ba5f7c173e0dcf7e9f484ac3ae216065c0d3f6fc3ddd0aa08aae4181837468f2d8ef9465b7f40e935eab63dc91bc5b16152e03dc2491a7f479b9f1354a7f5bb068338c15cea8b8f8e7196cc5059996cf60be5e3d6b43625f20115d30a7d7d32c0b2010202b3148e48ee9630e0b86322ba00fb270493cb5804ddffe7a5973aaaba30a914d4496d1220f22a0c78ebc588efa0007f356e6628fdd090d666afedb50fe4c5abd93be1441a3211e4c741d8f59ab96c6517043e821ae85d32e24432c23f224e036a85bc3171b80df283035b6530b2161cfd39561fb8cea3290db5a317a9ff53a13d4a32989f05e4ac6db5f82be679d0a4a506025974975d492e7321d9d99b97d578d216068c15aa03cc7a694fa6f38bc8c26d6129dd9517feb2f6a6f4f6a21120ea15b7494704b24d06f5048fb33d3456d25ee385cab7de22d48c8da5e98d605042314920bd62064c8840536c870db742b4e932aa2ff77d9adceed3ce05eff0da368e0b8d190b1ae3bf8dbd1b340944abc34394ba541291e9af60145abbc6728b6442235f666b3845f35d0d2b7153d77e80463e262bc829687893fa672e3d4c743b0147d5f164db9693db335641b3ea7feb39f804e8faf4086b0d7ca57e19334296a8f2b0d18cd6be3fa287f6d3192a0b516c59357764ff6e4173e7842f71cbb9747eb3ab3092e2ad593bf5aa08a660ea92a3b0e95f16c13a9adc7e7787eb293e82a09e7b192854dd6ec92ad2396f1ccc7cf0fc9ce40b2dba00776643fac2c014eeeedc2e6292d5418036c20f14356e22ffd9e45026f9393262bdcb8df0463dfb62db755262d1e01248078cf9c57763754a5d51765d7c2eac19485f0099dc68090600f1c45695e75e249f983ea7dbb95ad22060fb1e5ca11562d4b3f8899681b046f2ff823cc941bd0afe5f2bdd5fefe8d5b8aa2f03f0feba0d9bedfedb016d0fe9faf908b6e0dda47916f14a4c4699ff9348d7d89a960cea2e9eaa59970e3d9524bdefda24de96b646ccafab4037a54ecdeacfb7bfd5526d4c19ff038a00b2e4cccf6152de6b55d8b906fd34de60148de7f756362d37b69f190b6a6a58af503ba79e6d9788d67791b64cb698f80b33651191733f81d970c1feb95b125d618482c4ee56c0e367f1f725dc2fb0049f0f92e348611e874e82f86c6336d4c141283d04d974a02bb208a15201a329f320498a1cf5a25fc9afeb2466b9598a7b71b35705f478d6cbffa0a302cc9e6b50ab1b094995602063b069c83c81cdf013183975fb9c898f6878f95beae958ab2d98fc2831bd7c9359cf2b58984c1090f5a19097d4221aacbdbb02feac9dc2068503be503e396f465e5dd88fea64d4d2f3459b48f8b2d9ca750a3daee94b282c5bea5b8ce199b6ee0c7a642cff43512d9bb24cb7147075da521de5cf1455dfe296d2839b42ece0c777a474d8c1b07571eb5b0455409e4b7527615593f3bae39254934f365a1d6bffc0c7d96c798635982fd61134dcbd465644aec446c9cd63c3629e3d1b91cc9698691d90fdb4da10ac6680b5aeb1186854d34e57a99a4fbc13164a5f0c2258bf3b9db4dd39c3e8581d24cb9bdf599d808b5857ce1bbb90d8a7d3135767839c178e8f862885e933d7bb8b4855691e5c87ad433ec6be204764ae5148bcee2a3bd2690883ff8a8927533d0ae6eca1524fa08cc9630d41d7c20ded603044b8e48ccca35e1f5e3b80462848bcf5a4635b0d289a0e8454b974644df3979ade1018f77ce32dd0ad5e929978feb08bddb4188713a83aeca48940d9bd83f07b91a71f9c044cf39f1c46439904d64d9ce4ecd107ea5249456caf44a3b0f6bbedeb3341f3637f49868b3e94ab8600bc38b559b11b2a40cc0004666fc88845fa94f27fbc365ed297c5e960eb5bb72a75a5f81741cb008ed88263bacf5a856020c4b64425a892a0081acf43db788a610eae473d9f3e194fd143e7315364a333187545da90f951b306634a5f0ae6cdc10243a99b13740977f21f0b899fd4e060abf744148a6c52dcdc13fc187a197d36dd8d2af84ec6ed94498530f08ce9757310a9f51f0a7fe936abf18a7626b0af5004f7ba33cf5935560abf994cc82cb67a2e25317f1516e8477c83edfce92aed1624c00e7288737e256e1a1ad9091df7a376269c2920bc74f04d93321b06169d2b995909a2054a3ca988c847b589f15650d1b1bb6ebc2be71d705700680e0b24042d6d1defd332a34bff161075e47a19432f20ccfbcf5d44ce678b2d8a899243afb7df0adf75db1af9483f570d8644616ddb6db6d6cbf7f68979f67487a4a1e1b2055b496eea21d0ff38cd2b92fbb7fc30776f9837a45941f8f96a02ce8fe0b64917d61e13f3831d68e5cdd1ba3cb3f657e2dbe2f37e3a58002ea3a59e36c46895d4e4ff7d7af31fae50981ae207752824a0352625c829c8cfeb89a368f869e13638dcf559f0ca1e26a64a84b8bee8326a54240df5c9904a5215a4169c7f732a0b094ed7caf5155ad8039e4c2759d9d034eee75d1afa78e2910fe429825fedd733191bf741560ea54c66cf2562bc6faa362cb35c2e47a706f6581e6661ef157b493cc2832bcc526e9f07250f6155dca2e910d4fb5b1e1bba1fbd5b8eca5e576c22360c51ba52723f085518f547710326a02af28edef6d4530fa4437f4807c88a431f171db8a26c0361ef7dadec1bb4adf6dc47ce9b58a3f5a927bd4c2d7da422e2b8fdada9e3c08ec7346f6535007bcadc8ffd1bdad5e9ac514fff4092fe5002cf15262192a378ea6eaeea431588838b958bf019bb14c154259789f79204b658ffbbaa42669808aaeae7055c3766bdfd32cc7ce3ed51f3642c32cd212a2880f1242d332fd95fb635e605e2d24d5c722a5571bf4a356ee8029eae9629e915c560248fa229c363b1c77f42092282f51fda8d269e5076a6ff09b30996690c2ff8204bbf396ce6a8864f488d9f9511a0e40e82dbd1398e69df0d69eb6c87a8f4e66db18f0b1b42898a146d77e3dbb6b699adb37b5d915ae0bc5799905d5aee27791b04f478d9336d93bca4d242c3413cb46bc6af3cfe4568f011cb8f84e1bec4b19dda8d63f6254fc76de4cc0846125e80767008667b5d0d5d783c69841153b356060d06229ec81b01cf1e03fc1f1b2343f4cf3fed3c5b93d90d71d71b51f1702b844cdb402785b8a32287284822dc753600f764d8d24d18aa4122f5161adacee56c83db0b852885194aabad0e879371289d2fe3f186c2b2c09e459b30522607ee554d4fbea587f2a7b0a5946e20be37278dc2fad876b148d3e557e1bc0ddb0d4e27877961dd2ed269af8cb7bab3e825fbb2292d2cb45a6c471530bfd9323df6192c39d69e7be3c0e6151c9c5ff7197ad739c3b879155d51ac2814a7860c3b10e2cce870e5be1e2e2012f6020daf9f36eb2399315ed2c347ec1c1d44d450810bbefef00071c1e9cdc11f64397b2450124a48242d795baee46fc65be2edd5599cbd999592fb135aea8a8d3641ca39d469d3bb286d1f0c4659e6a31c7501a8a1914547b6599ff7b30d0e60247967aea035010eb9090faf61c3379a3fb20492da5dcbb9d475b986f9cca3151e16afc09c6731ee5345b3972087c24343dbd74a2eb144dd887658227d9eba0d1e52102a42629b9101e2507df4d82cfbf9c8552839bff046e3678ff2a853763d6e77f2747b384e92cc217a21e4441e0b1b5dc817d7318c3dfa176e0a763f97d7704defb39334d093d8838eae310eced5f510f162bc5cf1f686d8bf071b8f6cf762aaf035260a01265a6c831bd021d89650590ad2c062d275b55a6fb2101f266aa720d56b1fcc2db9f7bc267d791b665eda51c62c0fec2f2b2c34054b33bd9aa70249a88e9c2d66856c985846895a8b8c8edcce265475be103c8113964ab9405e3699b7263a182a7e48bae89a069f38509aa7119cfc29f1a23cbf8d17b3bc4fc7576c887c029d81c0bb6be9db01f883cc755187d160a1431d88e2256b79120a92bcf2792bce7d45a50210406b3a4c39190e0dec5822d901a62175875ce6a19b0d16b43d630259452aacce169e4cce24a4cbe0be4dd91fd76dff7cf22b4b255079d01c387d6d1312660cbd2e58840e034de8baf4bdada2eb9dfb8d372b54beffcb7bc2e7dc2c22bfd9b7130ff6cd4e162bf3f2c358f7f99e6e905f8a1eaac1da37011f79bfd6e5ecd50e5a2d777e2d95542434d129e7d54dd17dbcf134748288be75ccdd8f11179f608d60dc99a8e594c50a0911aa024f1e198dd7e0f00a40c7c1decbcce7dd351e78d002c8e732a76a33efdb07961afb679bfe2d9d57d4ad959b5cf19d8ec1ae2b927abaaa87b4254dd4de0394681a266b2361958dc0c4ac97a647d4f876706768c10c343259f461754442bb4cd68d92053cb7fe7fbed14fc3c719d74835d3299df2ddf45c665714b04c4098b3e096eae50ab61622a7a7b319cb366bdfb0d6744db9163cd368ce68c514cdb85f22aac87915b63efba510eb41804d0aca1763d103d2bcdb1cd3a868ef05399a055b5aa7632c4e2f7fd5dbd6b0f39fc5ddb366116d32bc355cab82ceb081084ac6da94988bb92477031722cf83ac2d4a1df3b3714178b5d6dd2e09315230ec9e9707a262a77d711824497bd33da83527924a67201a5c3240d656dbaadbc4519c784f65c01f8464d0033d36f09653d152ec15e643c52892463510de774b8c667830ff53f34a35dcb409a2387dba23a956cde1262aaed3031e95f3d2e3b1e75374eb3d64d223585f64a2936f55ff1d17293fc5f1df34d8c3b61f70221d82514a4120c7e771ae89b9860a88b76653676f4f0746ddb331ce1e5dfc773d0aaf067783d35432ad5072d3406385ee3bda5c3007aeaa8fff6a497b7947cd84755865da3ee30f5cbc397536b00b5f634fcc39a16abd200844f67b8851a2c534b1d96cd6a41e97a9ed5a20bf55e1741aaff76ea60c1be45163f1859b54216f61d11eb4565c9dace07c19bc4e302de18f9b1180cc5df9ec62577fdeebdd2eaad2960107adffc7ce3d22f5130fd7df01966a34bf8556b473c38e415795c81a69db4e6b7e8ba5b8c84dea832651e5d80fd5e0155fadd1f4bb61c1aa51f135d309c53c7f7163eec18ed405c768d7d60ec50e83004a275431ea1b0cd6dbe584c5935046d71ccfb57ff35c0dbff31fa6201bf11e9c429318827b2840b7b83d55208c021c94004506bdb1e7afbb43d76a840c1b3e35429f1743a63432740e0e0b91cd20a1dc83f83ec97715a05bf774a8a6d00f2d81fae2c63db2e78be24b0cb3032b300f9718c181f5903c490d990adafd5f7192cadaea699f2b93dd0ba4c158ff57a61149013caf4d3c8a6cab3193898262cd36927f1f1b738f881611a5c79dad0e67b1b1c5922802e56b34cac52b8c593bf79e36350b51b459a4d97ed8edae61336d4e859cd94c422599b762bb95db705585a451f941977cd2a6338a844c6fb3c1d47a4c87523c5fdae0e9e4c04a560a8a418b7d8951bef51fc4793efb99ff252863b124ec7d54ee429167b9fdaf6ebd3b64e73817f2acb7b82055d499ede3768c27834157418d91bda20cdf4f37036fbc49c8f45c376a689a0ed8295262a77602c8d5f00ddf59e03b275e639b79376e456b57a46d48580b66846018246e5b8ebdbbdcad4b907fa7b524bdd3f22a59b09dd4a7f6b1e7c93cb5ed2e723daeeffb5f29272950d731c95da580d700dc0a42deb6b14be43c54099764443acb3d3fe52494e877a1c135d4195bfc534e9157c7988cd8ccc954371e81c001c78f5b963c0f2da2bd30a7abf06e04adeb25785b60da59c0c036608f43aec220c179b38e031a01214624735eda37490fe02aa8abf7eb4448665053180491092487cef868bf235275a9e34fd1726e0cd7cf74239d06fae003ce52efcc8e48787e44fc93d944c201b04351aed1d866ce4d628402af74db0520a859165a1b033eff11727e3b7db88c260730676b7c661c8d80d7f7bbf91211fb57358a66fa5e24abfc26c343a6e590a56979d4b52ea1d20f503cd7e12ca9fe0eed0c44ee1f261cd685b2943fa01cebbcfedc0b62f287458c5cfa10e5970f672423a6ca1a6a14b77b3904b0708b4db0910c5b62b89bdcaf15b6e744baed0dec5ba7bf7472dd1ad4ed0bede88b761ddd79cf3de5e8fd8ca49faeb16f600348e0380a8d5daaf9c6ba4e2016fa22bfc72359a930b6200624097a284305899bb7a6893ce8418d18dd117d1629d81b9ab99a786c0b638d0734190f4941bc84fe0742bfa0e26ecf92f5b84ceb044ab1dab4a2b83840c33035cabff9d93f7470d50230548c44219ea841c75348cae33518e27c2309bfb28055d694ca6d26a55f2b19288fa0e42bc7864b2550d34cb0aeda34afe50bccedbc0c850eb819a61d594ae45ed8f0737f6ee27785392904edf15beff682995610caff0f9393a5aa6a476be6b4a051332fa74a6d97bdc0f1d3fee169d46b620b6959d4e2007e5a373081f7a9c48cec8af8d7e9ceeb19c7142a289b8a84f347052ed185b8445329dff23cd37892a210512720f3028a0f404e33ecd871c3ef893bc17015a01f01b85ecb10a558d64bf49f566ae982c10c59e7683b24f5efe8bbf50410243d27cc616c1f8916735138e1445b3d501e61d2b473c8311074d96f9b76452f8a9d0c54fdb57be466534b268e2971a71c8a281c1e683bfcd5463a98d9041ffd5f8fa1969f596e3c8c007c2653823d374b4304683fa153a0c6f20ade51bb0e61fee1438501f1062598d7a3ff3bc451c679d77ac2fbda0b8130e46b50eda995ecf7cdcdaff25abb2ab461855660ac5545fc3e88443758a062e105b1f5f225ad8309f8224f49bb1fb85c45de131c54c44dab040b48c41d83aaf08294e6a55c6aeabe6c33c3790567f1923dc5ff90beb00d19ead59acea0ce9c55e47c6fae76af84f214a3a35b96ce7d6f2cafa4ef4a8e16005b99cbd8383e44677048cfc2f52798c1e0bab472100f7fdee6fc2a58a9546439f197e7a8aa49e5412431060f591da08f389811799491815164f8b0e65c40cbf3205238b7c3f4d93139728b5a3292180bc9b63a330d533e24f306009f74879f51f4e330c34e886602ec42f8b9d41d2d7855acd00c9eeb9b3ee5981c9f09a9c569634beb7470fba7455376c9d54fb0503acd6e4f8662e6a52299f230666712ffb225d84835bd81d2b3a7994c926d3847866cc7ef91f4b479c0f7c7eadb1046c1ff450413856c26de7b918f5ea83340b4c7a6e05232df1431f2fc4a428940d6e8b08ecf32134cb102881e6a39bb9bcfbbe9f92b50ddbbe18df075e4c80174e0c3bd547517657f4337542c446820bb0f65450629b6e0f5931ed004e30d06356b2db586265b850818c53fad2ef8481b3db5b3bb03970ee9c06adbd155e01da1b95e728f5c945209988938c8e9f7480f2d043191044e0812e47ccc95ee7d323125861a7aeac8c3d6c9f4402f232b424013f45805bf8ff65e1257b59e2024e918c8809a53a51cf3f358ef50fb2516fe1cf75611fa1b1c78ae3a87cd58c0497897ad9dd22c59ec8383b9275fbd6a05c34ac2a44740b872ff91f6277b286624a95d7377d614092cd9d713746a2aa912037d8ca958c9a128fb6910ea0d0d2ad5c4c01598ce6b728145866f22f36b0d2e4e388422ab09cce0107f4d177e1564fc3092ba26062c195a03e91f29f448c2f49351020aa6567f71f0f7b9643ef7b758b5c2610349c3ae2361e547f546794b4df911bd19ff115f4ece9b1afd8a79910d14ecfbcce92d2049e938c08a25189553546c69c7dac363c5923de6b0e4db887f1b268978c9e1a814dfd661971a5187e886ffefef7571fe1970076d8f3561037883f36ca66e65f0258768ae0b3e64006ff194e59b45f4d7c28084551867026baea5522bab38f0d2400ebb6c888c6717f1b4b04d133acc3b5dd76f765ad284b1289e1699f2a6deb5dd668f7d0efeb233a31655abdbb1d8de846dc7db9d09673b61fc305c664c4b096df31518e88acc9210fdf92d5cd80690f2dbef888719f86f29d0a08c45ecf3c58cd6a667f7052664b26e49cadd5cf0edd6213f15676d3bfa6844c28ad94a508a506e3c7122022ec426b8180549d4bd666764977cbe0ffe02e8c65358f7c3795c218fe8db023992449a61a87709b14070ed87e3297f6e3d3f8314e2594568eb8fbadc91cd0a1726319034dfa7f72710f4e0fe0ef632e4fa088e0359e62c62dbf86d40d2b06eae988e1ef8a65867732fbb5902eaefe2acc477a5d5b579c95d547acf37a321c8b7894ae8490afc79b8338bb4961d60ab94d4b5b560897a49adf19ff7abd240874a90240884b7c20882e8e2bd247c5486c323d5679b7c62bd403d032aaa74ee89360de8347d0c73a43b05d43b65b0236890cca2a7b08397e9b751d564bdc739c94c333ad10c4af18cf1ad519aae8c8cddb91e1f6b588118e8cd7bc8a093345aa16338dd1a029a06d973b39b6b7a4b860498028ec27fe79e080383a977e096cbb830dbc2b5594a959d119c8e7c2baf259784e0cd0730a648266231a35ff8bc928dd6b27e51c8f024ef1a2cd91a7ea89f78ed711d8b63fbc9fd4b2c66e079e83b4c78fa746c379382f8bc9834c5f958aec833c1909f58990a7e3c9e6bf17b281094a543854d5b43b8cb372766f2879800c50bc0d7b25e66716033a38b1502ba5eaa9a346611bca1dac73fc003f84067dea26c91423b491d48c96d21952bb2952f5edac301caf656642d42987dbae34da37d8d625dfd68d9d9c33ba69e3a93569e27ab54d3d3a3e2d793f1445861505c1a8a0b6ec4444f1b46fe4ae1c7d612547f5e8806985db95f2393f0d06b63509cbe1add2bb38556bfbb65b69c08c8d74e6fca89809ef5c645d9ebf219f23c1d1bec5977e2a1be7a86bc923df4ecb989d86f015a81ad8b3703c5e39914b98e9f807d5022a8354f9449dea99ba6de50687b21cdb155084e2a666ae29ba13eb5d8aea280dec329600aa1a0aaf6e4268ae208973731878f09f3fb2aa51bb80c7cbc79d4f3f4996cfc4fa1f2a3a38d406b79abf7a015ba13c44f5dbb8f7925bd88ed495540a5d919771c9ef922732014967abd56e4255983b5d9e3c9130dadebab18d02dec33bad1c37d90e7655d67465b417f513d7aa644b5ba3b368582f799230366dfda14c2f3ee0f5b09afcc5d3b9b088582eb24c854c35a82744f9c83772902fb5d7e9ff12219cfb21752a2742b40c9937724a1612303e05cafd682f0665c6af1cabb5b7d301dda7a3b801910ea240c1dc2ebc2373633e86edb65b75011d675118fc02ca02426a8344d068801377105d1134468ea0c7308f1035c121fa7a666ef571266f1572f8a6184953bb3845ee2fd558f0e6b7e8cb52aeb8b8aac1ec63a7b027eea93fef32985809635e45564f5c59255d3a86f85568a8941e09ee9f9cbd19366500ff8fe75c90a4af4ada7ad662be180804654c59df6292e8844b5024f97abad1ddffd81cf16798663f525329a96bba425fd5cb090e329e3e785fd8e3bc27425631eae2d651ab3d2aeefa57b43196abfc80325edcbca2dfff4541b36b655162f068435468611ad2a912bc1a0bed9e5ece5fde46e164133683b365d6312ff34d1e30745db8a5efdf6e96333e58eba23a65a013888d55f30033f0ee4c99e0939f919f187f0161d30abda7786fd844b368854ce744ce39ed19d61cfeb54051d62b5bea3cd68abf7575fa0e3f422617a9c3ff58fed5ca0cc8d880aff6f7e4a2696551655424df39a395b2dc6c85e6e1837bd9179f37ba6894264d92f61d23b11a871031c8b25f3011bb60bd4473f9ddbbefd02600f57653f1b056510f1bac34a3ef241d223783b77b917345b8a051c5a97557cd02f0990deeb6f30ba3c510c0af984290e507bbac779b5c0e193236496df20324eb07cf1bd638d607669fe21627273c3235d22ea85308396e2746726fd739183820bed8716c53433c1ad01ba8fdb3b2029164845ab1cbedd9233b697969f3c444cfd9ef1806a6a77859cdacad5595c41db9e2bf7fc15c6d4fb7aff73f14d6025190b7017be78c0f560c43ae20b71b329db167e481a8923a1486252bf98a473d363575d544f4c8ce63431f5812cfff3ef6940092a96a9a63f1a7222d60581b54ff586ce27589c4ec2816683803b3951a78b9b16a4ce481a079ffe3e2ee9995ddfcb83516b6c79f8091680eda70b51d798a52c3b72e75a12433ec8348d24e33be9687e3b7043fea419eaf8907ead7c6ea23484c72d304d744114ac53ae0df148fe27b72a8bda6c180285387967eb2beb8cf6626e8410d9635e5bc69a01da1652dfe7257ed029db846c68b22e1c7881bddedcfc6b22c45b004acb9c904941599130dfeac65f9ab6a1659ee826d0bab37806d54994c55b372691c77a2dd17a1b04b381d1affa7cc7d76e004818c430628cb8b2fb4aa365a6a381c307eab1ec09d6b2e682f8a9c26ccb5fc9291b6f88a6aa70683345893e05f4a8d37297a8f61fbcf3758cd7049e9c21795f828835cda2c989d349afe93f373a55fb5d3147d74410b36871d8794478a1008b81689c6ae88fbc8776d204baf4992f00833b1418f089e0d92a351ac39badb2b491e1ad03f0ca98340c215564c72a33aff38f78ecba792938fa23403d8c6e6351fb9fdcaba079517407e339974e3ddbd1a99eae34027a54ea44d78cf6938b14b084220db5ad2345973dcab15723b71c03a911b57a8afdb3ab113d5d8f08c5858c512beaa03578ecea13b8fe29e64559844f8c667bb5d3c6a94aad567eea861782903cb341591a6b914fdafceee106cbad4e90cd8352a128853394c33a7bb854349567bf77b0982027bb01299e5934f972e04632a75af3d671f740fb78e0962a724011fea29655a04dc54bcacb8cdf7d42f17ceca247e1ec7e31c76f6d0f6dc1c340b41502267ed019aae44056287654040916ac9f5e86b9c861caa72912ce7284957ef343683505f5eb00d38fbb82dc5b450c2991c16ca19eaa3c88739b993e8137aaa52d71ca2a077e8ecda16a5652fb123fea02445607e4f80919a870ce3d9ee8aab73a571ffaa2a1180f20843624bf795214eb9637d1e5efef092872ffadfd242a368ea480e2f4d44560b81414a084ae9cb824d7a657f9e38c5e60850fe4a9ae830886ef7385abcd209f94a3da32eaf5c0138e89fab254147756037586ce744b3f65209a3e58ef0633471ecac6feb75167d792ade03b7cd28a6aa8dcea8ca80b57a01bad9d17c97a449626f2f813dce3fccfc42e9815ccbfd90e5c1bdce160620a33415098e762fb843fc14ccd3b009443b7b76d2202038f42e8557c778c96b7ab310f68b5206f19acca7c9158e25a73599d1c8cbd10fd13e6d9b0624776132320a64e851595dba72588add7cb605337050e9a2366ea1175b80757268df16e7f02e8f420be3f54feaec39937af520683c4c97feaa356defa3d29998d86c3b6e329c1f914114993e8f3cadafc8f82d9488919a1f0b0d8eff58a02fb348b6bb9256dfb48b564e539631535bfa4a52664aa2781ab6c6e0fb203add57587f16b3a7bb0236b9484e2d289e549aa8e9e86f1bf2f2d4d77c0322f8575204006457c0aa71a9f21396be7f54aa2eb34ed332ebc8fc9754eb4b471fa4417e62fd75d772f3de11a6c8dcc6a9a5c820ddf38d5887602ebb92cbb0e95f3da6733fc602ba48ac8df863f4973675a4e229f5041b503aa5676a236db72e50bb50bc1970c0b4857363a68f461934e2860d1715372343da7ebd4e46a91ee2cda634ed55ed263e2710e13d179411c8536cc7ef053150e1a1cdfbdb152c9d7068f66fe35bc12530c947f7a2ce7f21400d92658513f8a32f7e4952f798b3ed5604e512f126416b82d5c8c415b41967923e706838d3318f4e6b9884f195c2d94899d924309867ce5907c351210a7cf7d98de2ed9e7dd7b5ce1b6c2cb41128da8c990859769a4b3c5fda2dcde29e3a53e7fa8c4ebd0235944994519a6991199a63810ad815477633ecdf4befea2788e5e1bedf0a6ebf4701abdabeea2d64a51211b1b8f3611017abe1d13b4358a1c043aa3093c8c17a6a14770bbc636acbd7dd4f41db13bc132678345e492944b3654ac028b4a7d9e8a2faa163a399f1e8b199d9f9f4c39407c12efd4203f049f559c31ca0859ac9945cbfb36a288d42475a6b1d554bc88c89ff56e520fc8a6192807dd6efaa1809eea455fb34428856562705e2ecfc7df2705e242b6dee47f3781b5f6e97da2ad6714673ac072cf34cdae20a0782a0c607d4ec10c827809b6e3061b8ddfb0084651644dca962505eb17f3af5fcb4425762aacd44312d670ed6ec0b5d04f30891731bda3e869b6b22e1ed317b6133374079c11c6e54ff22a40ad578ea2acfeb38f65a1f91330e0f68486d10310ea4a667d36ed30b9fee6fe80af61646d8e369a800396d0572db5d124bc37f9850abd7dc1d8130178ee6ba537c3e1f93775030c52b9e1683c165779ff2ec464dfcf21abdf3877bd24d6b32c0bad499e471af243db7bf62063471db0305a4e147cbb7f8beb0e06e2a530a507a645d004ef0c6d91892d77a72cc64d642c1259d30e2c56b52f91c93c7b5cc00d58b1135b09ed414d31b88ecadf14d7db08d26aee4de79be64a78e1e68eb0d43dac7f4ea1d71fa1648cbd9ff90c189dc3e14ff6af757467d739a8cce4515b288d168efd35a0b7b734912eaf8efe9eab130a3b5237cb0cab32bc399774c733f0c6fd53cb9edbbf9e82d7d48fc9c1ad1020bbf714e5235458ff5aae6ed9f4ffc51efb7dc0043833ef26cc71f4ff05dcc0e4a7860d0ecc9a4b140712a8e52a0b938bd89855619e277b6a06191b6a8a03f577ee5274159a477e1f9620bf08aad8ac9f058adaec3960ef2720cc47a7c1882cd79bbc43a39ac637bb5dc8375b416a81b46011671118cbf217f3186a919ff4ae19b6bc7ddd66decca441fc0d8019ddd52b332bc455b7fa79e2a03bfe4c3885095c78949f1d3b026baf9bc6359f6b3ee602bf101950ff5eea9372ba54d5afc97001278cd8e7eb4db8373c9af619a0756fc8fa4f855b570ed0d06e803f4a5b0166ee0df58bda63891e2ad60f52350a505310f469b90dd1618425c0a35dc66b0b9429b244bc9bada0e8367b0e0688747dc40d9d7ca56511b09d4cd74547cc98795da1d9309e0fc6c3603107a58ea5345bbce65b05369d2a3d5672b22c39270989cf6af1a4d6d446cc7c4489976898d26972570b479b450a15b69fb2787de42fae731437d5c36e96a4dd2c0d529c26284e8e2cbf9ad18653b3d52540cc53037337ab991c914c30b7a7582846a1f8dfd5d49194f2c50bfcc181728219252d51f686dd706827a3f06d9978d47dea032d56198c2a57d7c106f1334ea12db85a819fdd7a33939e719364ae979cf979ff14d9af0b9fa47c1b948c0d80131a2bd4ddaff2eb119a49dabbb8b310d14a6f3e7eb63fc8f2c41129d2ae1cda3010b3304f858f28627d17e70f02f48d6e70449f8f063eb3e3ceb55cf5d333c2813f5fe76f25b9b4917dc4fc1d945452aaf5997d3051c82d864f9286cde616488ed091840838bda416193ce6f149e04273919347e3f11991a1be1f2a845f7029040216e68bee16ce1c3eaab11fe2987dd09d5b6df7461d2cbac81e0d170751ebae8beb3f17fca8d49f23bd997e980ee57ddabf37a770e126286f91f3c443cdc854c07d2918d519cabb456f0d32e631d15f19cbd68f99babb1be09f5b00755aa4d1bcc5cc9824461748b768f5e80e555777fd0be79da3a9259e7f0819b888e40d21c00193bea706b790b7912539fabca9a85ee1e17bab4c3ca2d8cb6a1254c8a8babf82502810d09c814f2a4b896e13276187d04759e5a7beae1dc509d7d8fb3eae21c2eb46715fadfa20a36445d2821ed35d7849479921445e512446aede02413ccd6f267819085df0b7a31d547087b7e6ee7ffca0c844cdc0e9ab788e905ce795bb7a4f9554f76af1bf790f8693b4aca52548bdca90ab2efedb85b8338a2ba3390b4ca24de7638756c004535c02e1c6976b2b44e0feb17794168d1c48dabb795669965cea5712e84b7a1c12c0b449e7b9b0f5c2c86c2fd12682fe626521b94eb87081448494a2a076b5b7403cf15517dab8c3b209201655513b953796daa1e90e5237a297d6b5e4206d4f6dc4517581fedd114db82bf14fd98963aebe78396ab12c2023aaab29b1d331446f6c5ab209d9c387c1c1bab99501858f1ede43ecde5da8767ed042652d40a4eb9eb2c276cc2b48c67381b268132ab785e6debb84e2d17a092b8f566a89d54ddd00c3bdbf622345c798bb40e2c102cb7f89e8ac5364cee9938bf410de02a444542b6ba943970581e03db7c56f68dfbdf7de75c4bd964a5d5bfb418a1536a876a7d3178f8e6adc6ddcd08ef76945f06238b73a8ef023dce58fdd7ccfeb509d03e7f64751175ce2e151372328d262c87d96643e109e30994361c86977534de915075c7ca06985cdddc5232571ee929923a53f83079327e75eaed29581e811c40617936d06463fcca40ff70f699380b9b8d77a999bd687026fe1bb0d73251dd1579fb34c86155173bf3eefb2adfff43c46566ddc7cf1d6beeedb9dd7dce5ef513d1cdaebe9b33816c39ac5e23dc9d1b1530fae265181fb98ec41f100234e066d3f87a74000d306bce92775eeb5e17fb02f683855f001eed2fd3135855ad9c6ba74a16a7b576ea7b90d0674c0ab5349c4099362eba9b5da7c4402c8b45d19d097775a253b48e0659f7458a63549be73e4d9e35ae79b077d127c35254c76112a3b7f548b92730812110ab543350ebb8efa3d5688aa81ffc6b859c6a8f948cb1c6cd553b81239d86325c5e9a28348f5001efd521107abb38fe019b92ea5ac59ddee9f36a06fca49f82ccb1dc98e64498ddf8c5e8f7c7d7e25804f42ff5e6d0dd4076d772f4baf52db95fba60c72d6b5506b2fc9ab926ebe26d314a772cb1138e49085b3fc3af78de7e3ca55c8ebbb3004ed7027a0c3a7cb6e4ecac94041d5e2222bbb9598193b2144f917f6036367c2bc834cfded0b7cba673e810045ecf24a4fe17d5135ca0a8e93b549a8e2313a5b3894380f23d1bfb635602a7d33c50cdc7c7c829e072f3c10b096a9e7cb8ccf37e69c6b82c4113856471a249318d9caf209edd49e6ebc674a72de9f1de0d50a6f382b10c7af008b4bf2b36d85b3c79a1ac3c9260860fa6a7c186224456830299d930dd76a14d91a59680f7304e158b9746e545920383b706c6455f386e6ce95715d550e376252ef4c8e04d87f9e3ae061d34235c07e317ea4dac43e050a3edd3083d3ce9c6992dae017a27e4ef9ddf7b5a82fba6da726f0401d6f90d729afdff98ad1ed62789e3752d66e402ba3992d5505836cdfea2fb7de7e07efe72838cc25867d9dca118fe7a8bc62208302186fae4b799f82bc463ac0fef7b78e27f9e2abf50b4c78a2c294568ff1e22836687deda1d4d6ce8dea5b50535e6ca605e74f5bcc3f711e0fb881eb6ffb1571b580d4b12566c4762a74fceedc35c11867666f949bdc18b0877dfaeaa7220879a844b78ccf10a07824753795ed638118aedafb5b3f559abdeb1b7286648edd24c16cbc3f9eaf769642931d6c17b59289f446c75d512d179b8855fa0e9d912c21238d719131a634df2f40414d39b34efb5020925171f4af7dbd96654115559a96e8bba2ccb07dafbd1fdba11ff26bd2e5b2538095e5abaaadd75d9f6aab0cab32484f6635b0884bf6b3547ddb655cd719e332fa7aed928c50a5a3eabef3dc7e89071a1feb0a48945fa24a74d6781b1650babd42ca885d3f4cfc4137e3dfaefbcfa8774b53f621a911adab0e96d71851a29af186834801e649143602393ca52c68d275986884f6f8d03f95f20b5f3a71a782629ad26293f35a0410e836c8467f1f9232694f04294e9dc81d3b8b9eba9e4289156115c6ac12d09f84db577f07d2f64aca98604cba2c7a08c00a4d763e92c4faa07faf2ec42ad2c5473ae85e0413f63d600a891bc0cb2f5499c739c323051c34a508d95c4a42602dc9224f3d74914567605744f8691cdb02f87e39ea9b5dc70912dd20013af65d6c3fd7d9ccbcf93ff4e4801bc3826a40a0b7b37ff4bde9d04abfa8f993af8cd3bd0a0f0abadc0611fc0e5f5b7f6efad004de4eadd9fb74d8f3d2878e031756305a2d0d026eeb18dc3b97bb765ded5f256df54eb3b3cbcd3bfabfc67f03993aa428cdf895d88c0afd6dc8d68b8b5fdc173cd57471ac2dd9c6d446ea24c9260da6ee333d202fa5501673f3753034a29550f6e9a8706751df4ed90d872dfcc3d7afd9d2792c6760ddfe96c8a23b018518381643e321fc5abf60bbdd0230950c4dfb3575c89b43bf5d9af5203c3408473044d0fc9a2cd39161fec0bca8d07d658e05cb6e98a64ba87f467a14d9ab603ee634176acf5d72d5856b14cdab0b5912758c07cd93d97815233b6f82abc2d5fb738273cb604391f521a54840f85f2da1660f7ac1116db95f61cc03bece9c37ea42589b7ebafc1c8438612094b9311862934785b13a70a240f099a8746034cf53d64b2ee68e61e691d7a95f8a8534413797d386d59d2d5ed191137ae7c6d95500a4e962b52d8c783bdf88ef8c4ee6004b1054d704389647bd323dcbc7917cb2a28be884821fe70308cc2d0a0ba281e5d1b8f269819254cb97472d032f8ea011db63ca94d46fb620bf340a2bcff4108fae80b7e1ff26edb9af46b68d8dd420e859bc9eae1e7ba5632e5a5077c4f00ba77a15dcb9c2ce3fe061ff3e7b0d0258deab919dba0d923bf53942d1b6d875a2bb96ddfb73286316aa3849e2e96a8d7e057fbcdf60443b5a0a5c4db5f38b6c0d31d36e619275f977e1897805e82ad719ae12e6a4b99cb7cf3d525171192761fa34cc0fad4da51e939fe001f70d911c14dfb95e007ff3ece1ea5db9cb9f90f5ac9e066f4b289387d36da159ebb265407fb3942c15f5c50cf9c33b6ac4629c76629976c75c06dae456b4495d5e7edfaf9c7426c476a8f40028139f529047121551c18e6e8b66baf52f35a00b71acab79f8942c59d92a238eecb7123d16cf7d06d45d511f79a40939433b7ecda70c7140cdacc45657cbf4d306c9882a9a665404f775f320cd8d91f880ae48fb52bb41afbd3d6e19616f601b9f6dea4adc3f87ebf8a6a3e1b18dccb0dab12e4806a835f2a152eb15d5ecf95af9c6db5671c205413728b2434147854dde4860577a5dc4efe9fc2b65835feb1964f277e62c7b52f67d952100b54554064ed6c64b37871b04bf7f1528b50b25cd57acab5096a2e09a709f7fd8295f4b84f97f21d6d844cbc176cd0e84bd763dc241d06c4f036421d3e9c330cbe93b714e58ba2364c6580fab04dd3078b8f2e66398bc2fb4a44ce9697047327ae14116c4d32c913ecb57069bc10089a9274573f041b65ea223585d1eff4f83ff31d2137b3432300362b845b7b2bf756d50735b36cbfd246ea199437f4a6d0f340fb6ff5ca1845a5c8babed882951a6ee5a269b76bd6b77092de9ad9b990b49d2a0e9ca3cd17649faa1d5a065962de1d13623db4e9e745482255c1ed62b960cc6da76bf1264161fb43dd78d70e259220fe44ac6f68b629bf8298cbf7781a0a7815b0caa4636c0509c843d662a37901a5ae0edb8d29c514a7357f3ea22aca75737b44363ed14b6c06c338ea9989956d49cbcc61367d15ca3330c9f05c18cb4671839cb3127efe4693b892763820bf1e9bd0371a9d31da3c1340698cd2eabac8ac4b78056345f0f5e62cd92f4bfe9043ff91c3d5e259f56781c31262d00698acbf8b925f5a7bd5db5bb77dd9f4aa8f9c218da654baafceab90168434b831c561f846264cacfe7691e590f4bbf9b5b8d3de9896063b3967314dd369f4a260b9a1955b9280faedf5281fc488db447d56f8e5d4a45a2d1d3c0b6a3d19d116b9da776d3d918423dbb971aaec08bb6e4e9585fbcc3307c4caa87a8c6da5b284be683a5b7f77cd0c1f9f78787814944ea10446b5c16465969f31290836a218e4c2a02f9ea1105cb4df180809b92adf188de6c4edf88fbe3ead61c25cdc47d227eff3124ad855fb65084c03d6b3dcc5d011ce16b5b0915a191360fd140831c17385e293d72bf5b465b0e7240cd516057ba90adfc16b805de2b1ebc5c6b55f4d614d5ee0d55dfbae1be7b76850dc5f8dd35d72ee1734defaaad41bbd06e70fc28f54e6993ae0a973709b8a3c46c2e5dd3fe33f92893a6f3cdd9d59852cf0529855f5edf9c4f745bd1720fd2e7e0985e738a6440760708d3aea297d659301ed496b620b780d2b826ee1f6f86fe035476f15d3e69a70967dffb69b156c0c45327ca10965e4633d6e41b609e16f84e8785eab9440d02773a23d9cdddf47b34234b65472cc3d09efcba2422c639e7d60e311fa79d14a735b91c51481c0c40ec4f561a16fd97abe2c20576ecaf82b8d7f88d5de56e2659336f09de7c0cd5141f43e87ea952172dc5621ddfad9990f47f9c800e406ef5d6e474b52b7f30f9e6bacd1bca12b437df20c400801e29d6139d6022e338c6b55e60ed5137182355d24842a41adf39eddff3aff5953e510cb5b2c6cdc781f33387e79f96d7c10d139de0acbfc53c477307f60fb155a3a71870f4dd4bf7690bf95c98c6c478a8334a9a11187c25287826b29b1b077b6eb1da0fffb453f752a44c9da5aa77697df5b6e4e35b626819858b53615c0f0ed847181627d2e3b62ba290076fd836969490052421b37cb45a9dfc2f30879404e3d4955ccb6364f3519f6f39b260cdd65d916fdc909d47617f4ab7ba28de13b07bf70a7c83efb28fb79581bd599fcbe3f34588ca1dbef4dd5f638aac3c5b2d02232eee7174290b6d21750ee761928da322a33dc9074432cdeccf3c1d39f5db6c49167bd1b66d7befef82689f4043a6b0df30715da8ac0d99af1fe5d9cf5c78f62fbf9b2f6cb6d0113dfb558d91b824215ed2b6b2a840f9cad1e972a188cbd461b95062b8c4287075cd03e8d21c0ee0190e0b04726c939b76aeb3d34df1e8c5b6a6f64b70f8fbbffa58a0e77cd3e47fc6a6da0740202e5ce13c748d99cea17fbadf0623be95965555a00ed09f6dbb45e66605749cdd496be27dcac4c32a57b126a2e43873a794ebabec112e398d089e4096ef24eb8559c0d6776f91c3ca1d06f8e64ca2432d69978169fbaf7650d38e1e01d0984b8194481363444a9896b3e0741ef25dcee37d43f4c0d84d8b1eae6d434ce1c47b920da43eedb86bec49de804c410365f1f889ac7d905c064ac7dd92330b7171f2064ed2acfc7581302733f15b701210592e47d09287aafa5894103a778763d7c8876316ab1a84c7b9c8afcda73338a4e3e913207eeca270d1ec24fcd1f9264c9455876ff68aeea0d84d8fda473d4c81f32151a1bfe073c73528873919b5a802fadc78f88683fff952899f4609125bd4a14dc88237c1c4d866d60a68b913b50406f489fce0d9abb7b69a97aa53a6bc70de6ead7234fe2097475903ab705dd9481138ff2b2e57adf0abcfe69ff46bb7302859fe8540dba44919b73dcba771106fcb1484e6fd5e3acd286f8cedef76fe9cc12840b1f8a66bca1e7f0233cb895860f14523c0671190258ce218f327bd251f9d7ee7962871fda394965ef28a5ab906b7c6431717de32fece51f8235c0bc92433216bea6d604036d0e30f0b7c8ca5a7be68ac18ddbc0bfa35c477c0d02db91e5f538f4b883d6775b1733f319eae2ce8054b9947390f271c1b74977112660307a25b6b8aba0dec8b78b3fac53098edfa8186a4d97b4ca14558c24db5d1ab784925d0fd833137329c960746f8bf79394ec1ac4e28319f64937e6b104684da714f40ff1cc1b00b9e8b2a33810b853a767309d1e2fe7a2b7f429e3c2bc256f92b390c204e51251a2401bad5ccbd0db73843d71e9df933c6cbcc3322386c7327a51ebad1b404117acf6cb80252402f5085a18f6d8bed01dcd96d7b43f29e9fe8c440007c4b231420823a893547517bc23aa91c2667b796e30e722223b1a7044d0b7cb3f423e5ebfb385848d79958daf94742c23c32976bcf7d94910f0d202d2ac7b82eba5cce5aa0b304913af39ae461f9de5e3103d956b302477f313ede5fe93ce575d9e474512d2b650f05d71fcf889b710ef4876e5ed42ab8b9f6103134390b45aa4f732dae4b0d7423bf491d807c3c344592aaab05e43fc46a1c22f9c747e74cb13b69f106dd055473726d8cac656c23d253ebb49e4f44d6263e9a6e31b3b92354cb9cfa5e3ad001d1cbbe3de348bcebd990ec951be5e721de71f00e4b4bc357b55a94fe47961d8692010bd0a8461559ea028ce6f1fe8cefa9f42ce6de440f82d13063237f8106de2fa1135d93ba57f69d51854826a1696add996376afd0f9e6b85d17db3a9afd64288813509562cfb750a07fdf86bd791ea4b4033d995189e7b483cbfe3ed4ccdb125664bad82bfe32c241c2d1a427de66c3441b49f1a19f470703157d47ebd23960634a96a122dec66ea4feebf624572c9c3f69de6046148978e94752be43e8a97a014da96dc0e8c709b68db8b6b4425c779016a20aeb51bbc77507c115b4fe4554a8633438f15c3330adec7d7283059d991709d551c579266eb6789084c22a3a1871fdd843746313e3c09928cc3188bf7dcdcacb82a1e1d88388c0df7308cd89bd78129543f1067dae54082fa747049ab542624bbd3c4e2f849d93de27400694fc2a6e91fe393fc4873c81ad0cbd31c35429a65c5a4ca4ce83df83fdc2e5e0643320f233a3e43a26fbbb7e0d0e17148dda3607dc580a9b0b1c49cc41729d0b98770cd8406fbae2e74294c0ed95e80711aa74419a5808ac4c3ba2af7e8de5c5d638499dcc1179c43806ad49832cf6ac00d8aea56db5ae30240748cc1e0c615cb51b3238ef80345198eda3534203631ab5ffe9fec3a74837ffd44ce0d1577223e42ebde6361216c245bcbb387b31255dc811d8f1082b4a55045ecaa953f5679478e1545d19fc79cd6814a5efccc799c6c1a2e728ad567007d2f651ed418d7fc9758fffc6e3732cff79cc61bd7fb526bcdee8c2a355efe0312d2215ff4343d50eea87d706486a9b57f24ac9bdf16639386364732fe98c2337d3f7407c513b9214589aa1429ac75780d851c05f8b0b709f46491cee9be4d19327b2396810971dc6fae7bc52d9cdb3af4969a0c7efccf1ed6a748ada48e9b133492dd16a899ad35f4986fa540beaf679ca64c78bb0b7b0656e9fbe9e60002ddcc5634c6c99be031cc41249a2403a065e65c3b3f213d9fb67ddbec1210f6e41327e4bf36d6640aee4047b0c8eef138532f618e0a8a7435e5dca53c21a69bdaa5abbeb789d0777a870925b9d12b8ca65c7f93f12bd9cb887190e588b4a5e4261765e9643ee23b55d50d1f43a1741dbc9d045d777c0aa527c61dfa9d3f30975e8f721c5e93a003ee95a6524be4abd029fdd14f27520865e47095e77c8aa39fe5739da2f8eb6726797515a783ea31313ad757b328ea1a08aa80dbff56656b9e0195a66e1e9a7b8754c7a83ffba7c8b75e6effda5e58e2d81abb17affb8ef18223d9dfcab1c67a9d4266c66f3a75934c9b3f5ae2d45f9c16c5681fe6dd67a70c9201d3dd62203e6d7bc30ac1cb50ab37d6c95f7ce2f5d2921f50181598bc12f7133312daef05dc524452195fccc5a7679601b1d217422acdce71b29da0d3a8733585cabb6a0871349028a3b051865ad25977f565c0607a5eb53674a53e5ef86d827d9addc01b0df0e6ad617340ba0bcf6563485624bf5dd7a42409846f7e1022e8df595703812958b42866c3fca8d12e4dba238aac96394fd9c0215448e009162abbe3cb6468c627020bfe5dc16f22189ae4e8e3577f70f8d9f6f51898c4e570a5ebf993fb3d7839dae1b7f46a3399ce6e16cacc3bc85a91852f87b1120e6f6417c6c52ca31f58954573a63b2f7c8b54e9aaf1f1e3e12abea3a9a4edf092842b66face7928975d401e977af818797d1e784be95b639d2b3289cee3bef8859d233bd57336702eedba6449b78aa78f5d10e825874fdd22579da60ad2a1c9e8a8e3eaaf3301874c27dbd5f25919586c2851c0e3f6a0cf64fd41b1f4eea95a08862876c7953ebe657cce6eef98e0dcae240cabb7fa635c9ff32eed471b9b3d6127b54692c1313e15383a22b677484185741f62bbeb3736a10420202b216e2b24fd15b51a528d3391c7268b3611b400523591e5a3ecb94724830ce846f26429d4179876b8a69f8140b7b2bab90c1f42450aa9e9e57e4a74ca585fc5ab3d24eb2a60575f2939130bcef2bbc4377edf9957dadbb277d5ba200ed87aaa011be35cb4dc3f4f89a3ef219ff5523102e82b9c6e7bcd65c760f036324c8c96554b76dcf4435b38fea8362a7debf5eddffcbc2da05279a264c38038bbc3353eda6f910e66a33268a71e2bc559fd6efe71b43cc9c235997ab78cc590a0cfc9f88d9f426a390f189bc1733939c8059226c0c864b8b36cadcdf093ef53d2930cf7211c80b1ff9c9618cf056a45e70144492c359dbfcde2be9d9bc6209aaadae10400b351639bcfbd35c8dc807afdb09ce961f6bb35cc6299dc17698cafb5a015209457681c08499d991e0dec00ddea832eb2cf6a9438dcc9258a9241d8b994df08ed316e4b4e18f78d652abc24234dff3f70cdf40f5f393cc2ef74a3d13d7fb9db1cfbf46b22cde879dbf8a876af8d4a2c1c37147721553408771c5d05efc8259b310599567a32905deb5be514f86a2ea5ca254e6a7c8d2b10ed4ead7b9be0d431acaf652f9aa3ca3a1d068aedc68abd114ccefeed7e56bb151f4edda87e3d4ea994f27424d82a32096ce4427c37990e9ad40e7335a7f2dcc67da5a4f8d2663496714011ab5613bfc51a4991009730e875898109e8654d973ebf8786270e7dfa15980423f4e4a57a9023981389d1b094722e41b731588927a30e6a1632fbd0a0b543df12473ac6b97247a104fe586f52b3267b6f530112906a9a8c7331387d58f1c91dd36fc808f15f1a60f35076eb68c77e59b45ca1f6e4147dac59337ca8d3da7017e45c7b37885b9043095d6030c060bb7efe0d9301743281f6a577760f9999ecb55e03120820d5b545bfa6896fb6758ad3d3db5e0587724811543e5b838d4860e3aba6051fbd89fc1443af2fae5ae754c20f125fa9b6dc3540de2fd9f14311c74779322fcd068e73a4c06774d1589e9763ae12b218b7e6e28bd09ceb273c0effd3dd1063f5d52306d1b81dcb66f0cff3ddef1b5c65454d8572445cc079efcbd995b0a75ddde80fb90f08a203a497b66c0c1ccc7e0fac5a806c18a6c8f545644f3509aacb10de47a8c2dff7dc28128f0eb9b74095cd5aef913aa56309b00c2fae0e0dae0013cbf255002c877129062932e4a0846eb6665d24dd25b0d3eb5d0bc1237bdf7902d15b4d72579f709f9451abbfe84d10a8cfe3caf1bdfa6ed9cdd742253c318446fa82384c22ff77f1b4dbe62e6f43de033849c914694d31f7af4601dd34e74aab74fd2ffe65f49f24d180f9944950616c4b9173fad77cf359386a3d2c6abf7d379e42215fbecbb33f997697315a1fda883292073e79787848267e39310dd83aa624422d42607dd96d01e658da0f9c28c3824bbf8f3e556c2093af8963e8780ddce1946099fae9c42a028c3f3a4127e06ef785871a43bf320400ee0b065f53f1e80f66be50d099f1d036d5aa8c4ccc029176d3745bd0057ed9aed46a7e82533554b56e45591a3b90d177c10c84b70071ba1d7fc174d1a0d00b163f457d59b62ffe2f1c8626abbc6666d7747b60d3391e63bff4ae0b4c043360ba941c33bdde310977b0e59d5703d05e13039d7718e90ee2c3f2c513329d0d702bfe1ee7a6f67b2880f87df84c823fbb91f7cde61f49ff6de08caf54cf14e231db2079ad07e7c8347d27d114c58ea3d243e6489ec551a400695ccccd3898a3b8aa48b95e514cd21459bb9678d117b068132b30caad442090f0827da55ddc14efce374d8b02197796b594df00830aaf0438013c65185e3a407064e093074668912e13e60d2eb579d5f295be6961ffb9390b698465c8b251c35ae8db67dc2fc3b4c9872e5580d0233ad48b4bb102c7cc0c9c38bcb98a5c189d08a66dcb60a8df3fd6d8c216669f67028ba9b4182d93f0e507f69ec9668e4e0bad8c7c7a288c0892fea063843b2354428379a99ea0c9ebb18a555989b6a10cbcc90b7231d15f91195895a29894d5cfbb65d36a5697849ebd92c306f07f003c4bfa45b72c57def74ebcb47b14fcf44d72ea2dbf77e48b0b07f40ce7737e980568502d7599ce163cccbb81881a0a3e95e58ced9bee69d3a4b0867fe94734d6d8db07f712e2963678a1ef3e8afe947f511c13f9f272abe7d742e97b4056d473aa774cab1aa738fe1f57e7134b31c4aa269803e7b9180e388108328e9d6d751fed4aef2581085c6f23f7e450e1709efd44f11d166ee6f8f7318c6172807e90d57350c09c82ab72724fb8716657e6aaa9c7ec0f0e332c345560373130fe0c9f5d7e793fd6fc627536c558dd5909208ec03298fa6bd380ae1a049416dd1c2f2c146ff8cc24b227411f1c9c81455a84b709515f2c60c48955e4f4b5586fc692b8e104c43a9a0e98e815db7f98bb33640fea2640b67e3ad630ce89cf5a83b456d2d9f788aeef16ad38fbbc48af8d370c3add93cba8f6074e05f86d0f57d49c36e976787d6c39a0686d23a1caccd57c1f0955b0514fbd55211348b29904d8099fdcd9c97fc2f16b14fc2fa8f360279d473e5df3f2839775f3a6c1a4eaaa6fd56ee87e4e073fd512a998e65e7b120591d0caa7ab677b1b1b131523ada9371bad102a63aceaffccd7d81b12f2d3aadb5ef653ba217188279f39cfdac20b687ea28a7fd1e1a78f9a6060e9dd09ce5aeefc73583e411bf4bde6f1f3029b2f38e4dde063ff910b060cc3a41aebb2a31d90fca896d5af5a65f3254511f1a7a926843c78cf9d6f38510daf3403a1a9d28e29591bab337257afc59ec76376477a0a15bf55393fb04d8940be5d3e25f0ba8e26e25b2b804084ee94be2b765a91f7d45028036288d3712d3b53e7bacd7c99ec8051a5d59b224d66fef6812154d774c73cf4affceef7d10e7ea85001dcdb6371c07627f253f8329b0ad7d157ecc29ad7cc91539fe446b6840f162c4ac9c0b660938d569bfccbe45d0c85170981ce912a7919d7bbaf0a4ef0b418a734bc23bac7db0c6ba03aead283520fc6c6a0b1c1b31f08112946b129196c2ed68d872a635cc2bbc72e4495c3013cfc8fa0e11c187d891cf34c5c7ddafd4da9db34f0193d31c3456415d1292132f4cf0d561deef196ea1c209ae2208e1566e6cb4d7d17cf4727017d90618ee104c2b053dccda9b9ae7cf973f87df0705841b14157c12e96ffc35bf9c43f10395007492aea2a0caea5b0c8cccc29d5043efc1c86a7135e2a5d4ee5f016a99ff56ee3136b4d4fcddb0c80ac8cb6370e635005ef054f56141c9c14d984c8707cb8f3033338918e02c0e1a92f3c93f8ba910bbb5f4b2eab7b19afc77c8f86927244381f17c43dc56adba6d12070c3ad3ac9b1804dfff7b86877260f617f1bb64a3f5d5784abf80804aa0441f9abaee5d9a99ba59eae8c11b2d8e17f1f1ed50537b6b98ab6ed42da6d71bc8b6475f3a0cd345d6176497634ad21ec92fec1010a38beda7bc29f32124437ecfc0d0de86f256fadb1e6093c46aab87416c1b984be8403c08af192b1e2609e5bceaff4e1a5194e9f43278fcdbd93a511cf2c4c0e1e207b3b61309408d57afffd9aedf75a13a408efa2bfc464ea72e5de2bf2dfb0118628be569f560b033cce4fe2da8d822c2df87c135477edd118ef33eaf6d44c1844d7bff827cc4fa1744cf58f82ecdf3d98538c6ed83596720771a5f6e70bbed37c5ee0ec7428e8b3ed30fc858074f7fb3826a7f449394ee2febfb657568765d256ec57178cab8431229fa855eab413c0dfd1c56a2be646ab4c323532b27d5d89798958f164e025f20ebb2ffd7876f3d6e54813407d7a75e0579429185adbb9728ff8af42aa50ca406ec332c267595a9f41f41431d104c41d90ce782faeb01d6d977eb478ab8edcbcd6cbecc4e93df69e8d9267039bcbc736bc906d03adfa3bed11e6a6934986e47290119795d71ee34609f717d03db92faaf7620b5ff8bed7860804ea86a81c9dfc5da61be786dfc0e3cdccbabb00886950cb3f4b0e8ce320250dbd6e6bcc0a31aa34eb7bd17b33df851e26dde8195929d36aded7b23a3618163213d751cacda2284261d7c2ab603a109c09ea0c934d90e4a65966962350341321d9f0f90c8935d917367bdf60aaf6ba2af1f328baca7e89751a8198e7c346fa07c019cbd6e4cfbc68d242befd90e84a28afcb627ccf075be882e78083c1dc073074aeee87d25c60a5d82a7e4707e28b4fbdc5c0df784ddadf0142a86d3737b0875a0e12ec2ea355eca3e24823abee2e69ca9ea39f3baadae895e417a0ec10eaab0df129d71e504b6b39136435774b7634ba701dce1178a367937a8f60939684617ca0ade93c8c8813f669683fab589118413cbd7c317a9cdec3f2b61010ffb09615315893311c08f6dacb5ff8f8633b6937faeb135a2c1aab217e5f17dd2a8b377f8a7414b87010875fa5f9bdb1ad06ef3bd4215550f2dda19276dfa56f07375ea34cd20750ac54fdee45da976376b6d6f2ae5dfed4f0460615d8a8205f1bcefe6f3ba1afe63f2cb0964faaab55bd691e5b9da72b267d155c6b8e5d1c75f86070541b8511ce2a61134ac253f7ee285585f0193f8196d623899f41557da1ef6cc9b077b708a9df699087bb2e117e23da1b19fa41b49a2714806736359bd4475d36722eed7754b2a73c127ba9edaed8e41796b8db6131472b290cb9114f4c63861edde2fdb8bf922c3334c6b982853e9616c13efc65ed6fbb404fec15282de1a5da0169fbd8b66b83983a87a2d6a89c939adc4e3fa6778d581429d336d53a6e46c0e1ca9a0dd2418fdbdf417af87b8b6b673e1b09d4f2b210c92f5a39a1ebd794818cb8eef747b87b1fa350db442691d5a5c3a82d9d3661e75650dc99f82314c5824dbac30eb55cbbbccbfcf01d51ed092663bc30b5317f881b984e6e7f67398a322f5498038a9480b2776d83b4d97a793b38c1cc466af3076ad2aa89c61d54c6beb5d62f4454d26c2f11a9035a6b1a8930027d1f2445948bf0847e21a3ebbf5eb822e0865af0147139cbb4ca44edbd8698dc4c284ef04b46f845f15d677806d1d3dd32a88f46a0aa4433058c5eb3a0ce25bc47b6cf4caaa830d9d33d7a3d47f7d6b8af36c7cf70e5e6c0c1d67b926d1131439dd593d9eabd9e56849ba7055add1832403eef0e5cd28bdedfdce1294ff4206f4974db0f1ca9bf7fb7581364dd2f67cd913f2153805f86032b6f8eec3263d2afbecd5c4f0e7417035c06d07bd5c8ea9034f49410fddb19e7e91c89ac29764eb02163af1d0a90be524eb2c911952c6ccbaa4440972c4a1c8a3291140177b7dc42375e695d8e2bb01c17b54055c9a09aa3a0471983e90b1eadd2d9ebe5ae3a7f7ffe7d55731c1a8358297d715458e16afcaf07a51d1e84862cebcc9c70a7f0df8696dc2698e19f939270333526447f1b2021145aa115fb3b74f3eea0ffbbf0c4ac3804ad9e4ebbb0a7743ea598004c3e720d4ce406b729b5d74841420f5db2f0b60dc801af4a464896621381ea73d8173529938ac291173d71925f6ce8b83311f240225c5c53e533970355714ea0b67eca989a38cddc0e01dec6d02500b6ac0329950cd484cf6a0965d2e416d528da9bdb772a4bd438325641c026d9cd2f47d6d65751be8373889845f8c3d89a9c8a8875f9e306d67b649dd5eb94109df2aa5a30a01c84dac8d203665e338507c86765d305778557222e80cd89e4a6b0c899bf464c31f1bcfda586edaf5e742f9687fe6d8751ff76b86b8cbc1fb7f1bcae56a4f3b79e83dfdcc63ca39da01dbdee5032174b670968efb30bd0b3a234c5697aee695667250b217e53aea56263477060683b9a650c5c89949cb2ba48e2d52037e182a6ead1a44943c70805baf8cdc971df1486b982b8bde9eb90722aba70a6292a292a1ee3470432ae63bcc5a47e91251c3c520a97d9592d2f605445c7d1bd364d469830c76fa5f94db7ca559e65bd575e0c87bcf2a6dc616d29e691af5ef0eea8745ed1758b6f46444375c53cada66af02da61ba959f8b1ef54d4840197fd13bf7de6b393dfbda0950ae73ffc6af97600acdb536326b07a54057bb65923a294c63bff53391da745fccb685b703e9daaaac15f4ef59a6914cdf4e1de62fa030583df6988fdbe1bfbfef656704af248131b73d96dd76e2eebff074128b592658f66f614e3fef6716a7a953284ea6b42a4288dfa28f4bc714e48d8d5f553cfcfb89bff0da841d929e3cff632ba059bee8a6811963cb455fda673c07e7aa78cea75402b09eec1df8b0a0df919b283282834f6a83acad8050bdd2d50d34cf893a46f561b32055e6e0f25f4ae566b9dafec05ebe3f6c59729f8fa066d65ca1122e2610d0b2a71388022758702b2f655b7e943912f3a99fcbe8eb492cd5f4834afa762bdff8d6d8d6d711f7a18bcca738bd4c210cefa89fc40d4d193061d72d96c9eb77ab0bf178fc5f9103e38a952a345df0697ef94600d28c680b63f9fbb3134594bb9a868d1401b5b72335da6625ca078c4a38a5eaf56588cdfc9cfa98367f1d7fab8444df8ad25995a9ff72f07d6842fe19c13e8c9d17a0027f819b21db4f27a398cce9824010862416fa54c25d9f63b7772685e4bfbb3e03c7599e2021a42475b294d192d61f28c6719808d0560f5e672f2c7e31e65a615b6f23b93fc402d75a73e455c9aca74e7fc3764f43d8b389647b5d245b795bc0c37c23d7bad9daffef18b6ca1628216031554a14cc4944938050a6ec6400a07fb13894805685df41387e8f0158ba87c610846c3035f418dcdc36572deac88894dd4baa1c36136fc6b5b134c9252589324f2e9f5a7bf2d396664e96786251db58a04291a7a5ccbb84c9750dfc7263c4665781f6333ca67457814c6c544993a1896f1cd17fb29f75a32e97f0feb4eb3a5f6bc297b5581ba627f3d96df809d7a27a6c2fa2656a956068ddbf1c61a177795814469f7a99ba3e6f77ae0558cf161709fc3d3ae2b48eb98b83eba599b29a1c184d24175143a92702e018c6c5c692a64ad5c173b6183cf335dbe1cdb931636671ca80340eb22afd0064f310cdbf6e340ad1879245d51a1e32f00e1ec9bf06b7eccc0022d7e26b727a6dab6780eef5279260d16fbc9670638ad310c458c1b60c1e68bf69bef4f53febdc803772d01243d8444bd604a8c6cff761d328fd9b67224a6e6231d2a11c729d4bebd5c829f6731807ae09115cb8b34c4ccd719c9821e0ee328226150767d2112025f326545d36951f34bba9a07aa960321b0f6f90e0f73c4ac15a0856e762c3da9867efb8a55f07d1bdc8360ca1bdd655e30e17ba75097100125c8496077cd7e53337db8f3f5c3d616d14c3db231bc14960e5ddbec59a3531a4702c071e589582d73760816d117ae76462beb36d74d8120baf5dc414b0bfdeb9aa9b8df6f52517994a830cd07f24204424266e987fe7bd018e6d80413f8d942bc5a26ec73c324ca87c127f34900e8426d47faea541d300e50011527f1124eae54a899c8dd1496337051d6ae19ba640cef37413cbb727babf5360e6b5dc563831b9413260cef8e6c0a1274a1afca3a3f7f37e0a9139bfdb61feb22d9d6f0481e139d87557cbd7317a7779b2be68d584e625649e0d5965e65a32e5f43cee3175e600e214b0a982299390260d00d36e60622680a2cec7d2c88a93df9e2772a667c9c8d27cb3932c0508cccdcdc884e1e79a13b7b8572f4ac15c1b69dad0366998962d98f2b03b7d1ccbcf55216a332cb29750581645aaeada3984d7dd512defc861d1708eb92500f234429dae4e53cb571183a9d62e94a96a38dc73a7030b8d3c415680c2d590745a3b72ab2b83f1c0cb148aa7008150f475dcfc90d707389c87f650c452bbaad25dbd90cd51a24bd3e64bba25c39d7ad37ed0a946a1c55e0230effe0fa44661975382db1b1e7403f1970bbfc5ac8c23cffb7882f96f71e0456a4b7b5d5b12ec01e96509f21ba3fbaf93458e6b5f3a0d08ebafa160337ac17bc5c05ce1e60a5908959d13f2f3472c223bf8ada64547e4b9189e9d4de74ab5bfc990c74594fac512a9c56c78a908e3f96d7d9efdfc38e8e0be3e7bd5f11ef3b3887ff59974e3c963b79917824a1397f553b0949508b214ccb020c38be4bb38bf8e92885df8b532303b3e9fd76b04c5f1d77336ccc685b5b68422935e50ada7b3caf9824fc3c6fe09751e4a667ba2e4b9a20a55ab462d3fac57709fd5e822152d338149ddf5e47fc681fbe3c79070717626ec2bbe7d0b69f199afd118ec9ccf80b9446c30178849dc7d9bdd10be71d885e98dfef00cd6754f89abaac2f195a4e5b1943ed16fbcb1c5ae19027933b061c56d9d4dcfd78bca9417469b3267bebcf0d659bb46ef0c844e9cd6dce42b612c462378f5085768a9fffc8682912d073c3cf082c9594af5981edeb639cbdc460c92f453c7630468515c97a4bf19a0a53998c902f1d7fb0574ce29cd629b7aba4057573b0c8249a46b7f0ed78aaa4fe39ebd4787a507672b4fd5919b8ffbcdc628d88c593a6a864d46a5f4ea404af6b3096876048b446bda9949d808f7c34bc0bff8d0893a4abd682dd57dc835ac42ccf759910bbbb1a65852b103a628b044fe168c08348344b38001f51b184e44ae9547f5f56e682024e15bab3b1a0c75e388e89fa05a19c7baee6c28b29f1414910f9ed20477f3e729e70ccf39ed485097f5a37670b756762ed99429c01a8ea9a61117bb84c84c97f590ec2a2c276549d9fc0f70652f76ab1cd5b369241a5dd540dcdae418df61053368432a3c7d79740c9d79ad21b5bf1b6c1efe1a5f330dbe732c0d39529d2599d560d46d6f4d4dff5cf2ade3baa91801ee1f539ef949dfe58e79a9818aa0d37dce71a27997634445bec152bfe221a3d82637edea31f4b6dd1810c8a2b4d172e1b608d513561bfdd88b56d27f1fae0433452a8dc376e74fbbf6456c136d89eddd97b696a8bc00e5a58e79f9492ccc779fc49cb008b9c32762912425134a5c0d6af16ffd845869a7972444d73d25ceb2d4617080c8c2ba442053f82b124909c0ffa2d814ab421bfb13499d5e3bb0863b1d2dd625d09f3d6bdbaa8492515063433d9accb68681dcb334003dae866b7eb88fd92a2c8c68356804d593f641d788a07746c91ab9b52aa3863015f601acb0545a97703277d7e949686e51d25f5acf81e14f8163670e12c0aa8a4ee7e094b342a4fb5c078dffabcafcf420a75b3bd8ebf9233d7977f55ccb3f94e26a507dd8621da220ea805a7eb9dcd631a31c56d357edbd3e7e9597e505830c06ab05256e8ed3c026165a84dd5bc84fe212d9f211404f71660f4b4ae74eacbaaf22a43a9b7fda494e0447a85f982db6512435123eaa26a16ace520e5b1a99b7f76939198c4acb59a6817f2bd6a480fe63e299771933e8f22b55bc4e4dd309685d88ffbde4282f54dab2a5bb2f47ecb49ecc0cb391a25fda157d34d4547252b31fcea11ba5fa1a122aaae1f2d3fc42fd874991294f66d69a624382ce71bb4aa1b2e16dea227744786e7fdd89fef31e1b8190361f521ac3f6191ee03d79b8e0f9a76d97ee0e6a34dd22c4bb7896d16183d05b06b4846f655adb5a84b8e8129ac34f0c46da127dec25b21fc00827071355891b3c5d376fb69daf122ec2f5bd916ab21f439197a44fb219855341d6cca3e3eb0f776302c70db8baeccac63050d73e8af015917fd4b1cae11a37b762ccdd18ebf89cc889038674e8007fdf56b4643b268a9897dd420cdef584d9dd5d897cfaef6c1744172cac5e712b72b732142a31bbe1da34733b5e4283b2f0ff07c222860b5c84f41a23d1f7f45838ccdbd6ca99b63c3b60ceefcacf9d7539e9d6187d546936332d808e93eb33e665bc2f011e0c1bec0fb5ef5507246713198b48294e031903122eba8b8bebe12d80d8d25e19af0b3c80d20054c8f8957cbaea66fa66fc202bb4832242b23b2f2c9a913f338edd666bb4af4314259fc0ce2a1176a7f9d9ddcb5786a109a64e2ded5141802eee9eedf2343c8692a11855cec5f683a379f5ea5d420992b1a76b96ad007ebc0729de7c8bd3d1cd636999f17b9722c459ff8d9287f3e2a9894c7d73bc3e435cdb74a2a8adf4c050ad82a3241658891fd8aabf4b1b1e5fcfda3fc20fd914dcffd60adbd253ddd740835d1ca9eb9b3c9762ff3d4bc13590fe034afb7669030f4a7c09b3974c25998a209403aeb5358dacf53853bbeee56f563da95b9c3aa86517ff9ba86c4a9f13d67004646a500df4a431937272e739dae5ee62c4e5c9a2a4b346941769adc99151d60f73c938330194c2176670a5614f29451ae59749e8da27f896fb0649f3dd76c19e1fe03c3b1a951bad881c4b8bca3c7bddb93557c823cf91da7f96633d457d2583e40f95b9351a2d9324df13afc451d66628e9568433c2f9bc60622144cb473e0dac202aab405105ff3afe078e62b915c3b82947d97fadc109998c5b92b2385b1cfc3ebce6f2b90e75a745b1409c0878ef8aa8d5491c9cae396ba4bd4ca28bc4f91da6e643ce899ae72d74fcf79bae60d912d638ac58c837da06e1b50753da5ad25e149025ec8e137551e2eb4ca742286769f3c2b79e14e2209121e367228e4cf3cc1d94a2a952c13fa71c1881b185b5a850d9f6f5298e91e004bc98ed17f507d040bd49f7164873baaa53b66953cb78c9dc06581ce7aeb919712396d0560fe93a02f1bca9c808f3c164b5a7bb8dee5e524af13199f69a98d7313a1578f6d9f24ead674ff1100b4cd6ca037520e4684541d6bd7c84c8bd238caabd439e46d9b888d24b7d7c38a711f449e003b7481eac5bc5627ae527816fd22c4379605f7f9f88f01c6353531f6acc9727cbf5f02be42c76fd8653d481d32b1c3544160e07183effc242d9cb45ff51f204ab0cc966460613e28d54caed2bbd86b253ed510e8d4a84b29606d8bda2bdee677e0aedff704321c5dd3b5c7bb9c7e519e070bf526d12bcb72e37e4b8b5e0fab9174452d2842b771c09dae598c0dfade8d7a6c970e3e04a83c4feb6834daf339c5bacc876e27c55ab1f7cceaeccb1fcc7a29cfe15e94da4abafe8d7f940d80fe25991ba0647a8c14c328620a800a1e43bbff6bf01a2f0cebbc2ba33acfac52520d2503a9ce88d5fc7b73d6e5303345cd7961446a6d9e0f2ea2838c4a6fcbd4198ffc087261af7c0e3c895b80e9bc599115ffff94aec611b237e6cd3dcded33eb470299d99520671a96ba8e5c70ba9f3f9531b74da3b0b7cb423aa864330915d57acc4d27ec2a80bb7eefee0cf1e469078a33265045cba586d8ad5f3c6fb960f539b64b67bc0f8b9d7134ba16d5dfef6b12b81a39a1854bff5ca7bdc61e50c92d6e8cb947eadb145ced64379947fb0b400ff07a06194b888578feada8d7f3a15f3e95057794ae2e402d85db5c539827ed9c1183572905773094dca1812e7715aeae5dca6720b84a60bd1047bd5f7b9b8bc598bc8c305a44ec48af69a087fd179a3f3a69d8a060df3ea1721a1a64a3064e376d22646fcdb2b7fb737ab813524763fdb67936806f1d4fdb8c6fd2f6ad31e3ca094d4b667d90c223cfebf8b1dcc6e7f1a8bb892aa784395312781763c8d83a1682509c805280b524c98c678fc0bcaa5b4eb25f9da9671788cb604e2d5125ef2ee3d2a90b3ed0fe746c9f9bca2c190f6545dc58f8fe6479f557dfd75af0029e4e0fab976215908f5eb5c6c54e738a9f19bdeb4f3dfb043d217a475a063bd9366a6fcf5397aeef0d47c77fd6c80b743aa22e9ba514027b2f1406aa44860be1a2792a3df4c21795c8a1e2ebe75ada9184564d338d493a69b462823d9ee928ef2de197b2001ba9364437bb289c491fb7cc88b25ada512967cb89b16703207de6c8a1ede7eddbe06285e13d4bfb168d886b9350dea266e5ecc6da201c324e96157c008ff17440941b23503570b1366dd7d1b9d721a7b15bde46af9a2849cf2b6fd98c48df8ad7d8878f707659fa7e4f3e02a3e6b034cad55287d5142850c4187e693b679e418b6481b4a687cb19df780a002be040d74664b53ffd4f0f144321d8d3bd777af4f94189bb3c5d9f71046ad38c9816b16c82784303666261fa28dbfe2838022a7dba6d5f6094aac64064b700359cfb264607302eabb59fed683289a3912ec3f152d6ac9629be44a25e006d8a565f2aa58b800d81ed50ebca08786fa5888732dad1e3f7944c1b48a05f311f8f6a1813ef4a3b3ff679348197407bca4437c80a765aa508c5b1b977a14124f2c89fa7bcce63ebc5067dce8b3b005c55c705aebd41998a075253c83b425a2be1156380835776a9407212621a20c74420b6b561b9d13a71dd0bb50ba4308b9dc4554d39fd0c70670e06745f6eb0d0cc3574e9dae7498b807e9275d31b3f073cd1e09bc4168a77c8cdc539dcb5aa21969db0f438e8ef6098ea2b70822e57d2a6071d43c104cabb2fbb8c4cbc18a4c66e1334e298d61f1b2c67686668c27ebbc5ca9060f5173ab37c91cea11f31012b37b8ac1b4a034786142a13409539da967b277dd907269a4ce9c2b32cdcaf72a779e38c0bf07d23f152793d478bc366f3aebcf30a14e29f2d30abe3a47cf57b3f88106acdd778948c8a95bd62e5110853aa753bf4218de6589309e41ee6a894cd0360c5cd31494e53e72ebfcbd244e6e60995cf079d48b49e084d7bcee54235e8a5f8717bc83cd3d5684842dbaeafabbf47f20930cd70d88f20899910b4204faa3a0387d750564a1129a954bf85cf04e8ffb4d558ba9a23718c7e1664ccf59eacb9e755bc9501ce5d39a835fffddf35bd5ec6e3b83c1b765dbca42d4ce484724e62579cb5244813efe217ebb166b43645ed13a54c55c3f77042f30066fc9cba868fd99c38d7ac84b8c123150f1a082293f4133ed1e08239f296ce0c3eab14a564db31184e3b917ac04d7d798be6f86dbf06ec1fed4eccf71634413a77078b347b6df3636a80137924478fd392c8c4fcd459fd7189594314b4c1d6d7e9dfe04144f2957fe288b951636f84e1a09fea2e0d8f81eb69395974cdac0e5fe9ab95bfef6d0fd7db41c4caa325ae67fd63f17cb24889ac13b4fc3b791aad7e8a56c17e6f6f8f88a45ed35bdbbbb80dc5224411b2cdfebd1c78ac928a71df04e339f51c4b827b7065261fe101cdc029ad8d419ace0652ea39b9513781cf2dfc7b982e236f0678ceead8b3fb0806cca8a4fc4d2aacab0266067df23692daa508a28959034c6ab30b4771165a86324d72512e83b4e43d2fe310597fe70bf0c13eacf1fd29ecdd4a1882b9370d4cbeafea0872bf3f027f7dc36fe1eecfd6f43ab4e62dce33178248a067fa8afa79591e48868ed2cd1cac3c9ed7a3a3b8ab8c9f9fe468299945e11577e0976f7d116641e1cc864475c865747dec6064c6d927d77cbb6d600453c47e64b6d4d7267e6c3fb494a1295d5bf0753ae3202bb140d6764c5c36a986fe67714897a6a9f3d2acd7f0d32ae2a9ee8b87d1b33660c1335ca7907efbbec064f1d00fbebd0772b14073589ade5a41cb103a126df33d03d9fe4a3a3f70974a8eb5217b6d9e5e463391f0a49d2ee8894f718be5e353f522f02e480c44e0c554ece645ab2476e2c0f918621ba100bdabe14d585e2a2b436e5de06641f2b307e6d3d70c61bc039f869b30f0cecb1c089d3a0b265b9219bc6a1f3d375d76b40aaa136558715bf744902b37cc61ad0acccdd52257fd6a6bf319c70e6df49849e54128cf118e78a6caa788577596ecd0462b7998d5d02307cb1728ff8eebf4c06a69a206442b313bfbfb16172e64eda8f49c7701bc8aea72725323c9606ce8dc742419ee60b3cc9821e3d71b2532c2bddce3de3220a8dd99ee8d5bde384ed43465eae4fc747bd433c57a895254ac2fdd4420666050eee016209dd0086c0728ea387be3865076c5af188692708699ed3a36823a30b27ad08d22ed8ec78610a7e643adb16bd69716ddc42ad858a51bfe222cfd99e74a6a182776e4ee6555ceab0e08a422bab0b4634bbf3ca8864e39db4791b9d76f3f689c692ffb3b34c31082c8b41e452b6e37326045542effca278d425c5a43dddaf750f75ece3e7d6a06e695b74adb2162a7217506770d3b29a1122ea952b642bf6cd5e5093305c57ad3fdd1564d5e574e68dbbeff65ab0cf1b791f695d18d9cd2c6dddfdaa3662b1d08b2b9466b098a1e1ace6165c7cb16fed5ff5eccea85cab0d31522ab72e389811042b830c607c89fac8a7851cc3efc55fe03f630b67f90fe28a845071c31cd18d802353fdbadb619eac330257fd2cbac1fc66096e90895159c024ceaf40838a8c5e05e618670b7e932fefe13bc38790b733b4a88227f3b94884c5afa4364dd5b33a769832b36d7ccb73d1c76ab3052c5b1089fb542c0a1464a329071c35387ba1f87c08011a356c8ae622a2e2101b70d2ae53345cba6b851fde49f699b668e1271fa981c4f8f89cb86a3e2ca15b00a2a4c0d757be75db84d74f30057a98b65e159ed0727c39b89aa23429a01d367c5abf7b832907ad52fe3e77398a877a438c6f10971569aad583d2e356f8b0187934a06ccbbf33be9f4c1af96e8072c12a7a4e816b9cea63e0f0d3186cd9ec9b178703b110fc3ea3265634e6c334deff28e7a27f841e0be0f70256bb6ce97532d1e0b680d9217be0b1683414b6c9a7495abdd8e49024f6a57fa2d1967bfbeab60ef467b3bba81315341dd3b1cbd32076cc295e0c60ac7c123a40e35c12a15a0f55ee95d0956403f543e8f55d546e5f19845297ce2dbe6d500e9df2d4f6c61a49e2c44943c4ddf90255c1810f2fce60f651c89d5a621f57a0fe3699bbd7eaef05b1b807435ba40cb96e4d24eebaef9ca301d4201b93b490a33850c892e102650a4efd4d015564694faa6bfece8bb4b27a0c45e9310202d49103487f28a0793974487b76cd9dfeccef6e73b40d5237e7486942039f4db833bebcc944dd2325dd56d1302a2ab4fe408fb86174f0124181d4e4d89ce865d325a0c8093b355faf6692055c6ff6928e07d970a6e0cdff81f6fde35273d430d50f221d71037a0bd6bbd7b97484e473fe4cd12db43a0823ee11e58713e3cc4921a675650548ae5106551df9d24df995b86556dd2c0892b7778d97b124382af6a96ff23dd08e8f23d9d8aceb098b04c5bd50098eb9a0e8e8baf7e1207bac0ccbb701aa6f3c3b2b2e6c80ddf2147f3f29dc4b6593c1454ba87009ee2dd15982c7c1a10f7f8a0b3ae3d910d9e4d6ee112d97de0785b19ba5e6669012ffd1bf1c04719a4f673230c205d18545a9eacb572c5ec5e21060722ce32d105e41fc1274430f9c139d0b795a3f5bc911ad8345ebe7137f979ba76d1833d42ba34c1b855fee1e19efdc1814fe4c49547b56e75f6b3988a55f64a3ce4674b9b65d530d12e448e6a6e0ac1248ab2ff206647fbc56d13d854a2ae22806e9ea2d45f9b26744d9e64d73d7c512b49303da4c52f1e0cc2c0937f5f519415ffd0060114d3c58e08c307a9ea6964b2fb2eb0888bbb94d0c6ffe4c7227456a25030e7e2bacab10298f46a62fbdf41984dfb4a201d07a17728f9f6cdb906978f5f4d8addd06f19256df89b2180a987437dd4497ee2ffb64a20469d4008e463541a62565db1f2e2fa2ce6451e570bc72889f80375d63304766b909d899a23e18b59fe40b696c4e279d47ef31b87ddfb6e7c1a286fda272c85eeaa1efa4f70cfc83c97cf77fd580d1f7eb4f5f642de97aacf2d4c5a7d86a0696a5f182478557adb294623c678e4ebcd40ea36c58f095097e144de35288b90e502f0ec6c560b1092438d55cddb1119f9aff597ae527b92de9f896b56580436a56bb36358bf50cd4ba6ce179b2d15d36d89f562e87e9dd9e69dbc4408854d8b262c349975997207f96f24af9c52cfa7bfe127fd7a14b365c06ebfd8e2d8cbc79082c896eba124e64fe70af66684d73b635752bfbf0b9075e81436f1809421b54870bdd7aa5a94987580667e8594203f3e81d05b63246604ee8440c6d064a66cb57d5480436f4634a4b7975cf46e8a3008587fe4aafb0ef2623afc34262df21b37068154d6e5439c0bf758ed6f288256d74a9f1480849e77abcf073babcafa32133861e4f2aa3d68814670720a3d5456e40ed3c5b078f651e7bd9601f7980407693d18f5021c51c13956eea20c2956fa38938d82347427c3b9102e136d92cc6353f7c71382387e6c716bc1a54b3423e0fc60bbc6a662ed0f8fa8565637cfbb46f99813bcb5635b657d24ca860a86400e8d1b98c3af2a8e193647c9b4423c47a7adb9caafbad9c5756db16a80d0647ab272096c28f536ec1cef33ab063a3976ec481ecf8682f49cadb100ab95c1b58e9a11b2e741f8b3f77421fac2b0177b063e2c6eecb01fe4be439655b6f8f2cef8c55935d05e96deab0f4d47299c90d196307fd05ceb49e1d465108ba48f2f824b843799a673169deb9b75d85f104a060b1aca5a1c1da9453448d45682b20f8bd3dd6c7354359fa535772b9a31dbf25ef1399b8585d216b181d9108ec0546d27ca726ae1ce259de4836fbf6ccb1f1a852160da9ac0a9e1e3a468fda7c87f351954193ae8723039e50043158844eb1800e636ec5235944186d25c3877772c45c98cf36cafc462657e3577bbd470ed68ce5a6839009a3e70154f999f4df041c72f2adb94a0257fa3c124a3fe771d5182404546792f80bf0b547db7eb6e90f6570aafbc33390009158f54e010c8f185a4704beb3b4ac032e7ef30c4ab72caf973651e90984898bf0091683d5ab2b870b2df2af05c4251bcfb3eb59b413c52a00ae39111ddfc950c7a97175aecf5ec4bed5e6543742b1edabeb3a298913be7176f713cb877e1140dd601dc492a40f56538d7bc5b0af1d60b39001c7e46debcb5a3735fb3ed144a69ed8536c10d87ce367e50126cfba1214bb6a1807c807e00034e95298456f37f7fbce5527c4bf9cf5e23f7855c62016512411e7e26cb545901ac65688ce784bb3bed4242906db45f7a60b70536f9a33a25f736d32cb147fbe7b74b5033b54a15584af0125bb5cec95804453a7b0407c896fffb04dab1602dd71b7d8615521c1b9d135b9a79ec017de6c5accbf9b989ae7ed3e1892af8a253f5ab6e6a55ee6c07c009b1e3fe27013945a84bdeb313b452f03afae9869a18457e9eab79c20a502a057ef292c2cdd5d0b76dbbd00fe80ec70448513f9027701bc4f6e407cd72b291866092da03a058c4a3851c2505e8739a2c8ff5a57de1d6c03b20f970a210165766e0603f3b70096f2356876b404f6167a4d0cb53fef0c5de23cf84a256e71f465a4f052c1ea4ab2d04cb0c40916e434a2900a39482ae69b28e5215a8b1fc32535737efce556ef4d61c2096d1b290d3d152871ad9331773db57f5c26db8d76337129d6e9bb12e3ca553b05d83d21774106586ae5b36c3d80b7a953723ecf701ff1a1498049abca9c76641e6125af01e952a73b61ddc0a8cc6829d6cf0e1f8b23448bb9d1b554402b4c29960f91e5e8317cf0d199f55b5dd0f71041990560e590a28bcb7e6a270f8ff56e92e64c9f14ef8182475a998aa71618f068b979b64784c86e24cb501c8e65b71a2a525c763e14f8719aa303264a39883a6f54c10bdc467a9b4f8b2b8d2c33997636191077f00830faffaa2860e6b2d9dc5e8e062360e98086f612eb4636a76a36dc8445c51006f5cc3278ea9fa45228a1a06495e9bbd30c378785a682fed6d90a0d68fa928e3d203edeb03c517fecc93241941a0fb125374f66039d33177d276f6b6322f3fc7a817474d1a7bc1e2f2bf20b9958ed910c8926268e21a8ba3c0d7b629ed1e4909d583e731f39c54fcdecfcc226dee25da7c8873828eb86ae976f435226e0b8968578473430249b7adea7c9e5fb889735da9fd3b1f8ed91c65baf3cd7810d279229184a8671832b5ba4cef38b5b812dfc5265bec380b9c3df1c7c1e9d70d6f92cc7af53d6bb948b4d207cb657d67895ba2ebf9e8dc1918729e47ac5c04e795c2e842ba0d525675701af04eaccc508ca4e7d2c933cec71a5b091b03bf20fb6ba828a5aebf09fbaee4000cb8077dbd3ea1adbbd877457197025cbfefe4016d84f471c6bb2f561c7ebf33395acc144c2ae27ddb61ec8e5db5ba8c238ee32f4673b04d962e572fd17ba08cdd9f06602f513104dff15c05d59d93f173aeffa2886354780969a1b6ed4c27fa61675da89c3730140527110656f8bc6d25a8a1da5c792f43c14600ccc30bf1d32a2ddb3705d1c420a3d96df8d3bf05474cae7b3d160c2931b02cd170cf6ad5fcc733e1067dec2fc833877d3f4001bfb08ecc801689e5d9d9e5fcd2a14b58129780b1d034f4731f87c46322b077067846c9331e052ce018568fec32fada3682eaf1748e2e072fcdf80678972178da43f41076f0f08480a0643f258b0428f1ab3d9904e5c98556081e22252696cc24d879769b97e20b79f683e59bff8649c0fe3127a1c90ce5b534b65f8ac49595b845e19b82e25a125af559df2a75ea5fa5b9c23b1a48705235b20c2d1adef2e708c9719ecbc0c50eac2c86f3c5be9816af8c02b3c01029421f1c5350a7f1ff5ccef5dc7cd3249b256fe001f6bd819316376caf9ffe924606a388bc3dc50751dd8bead067a2c1c0008622035cb40b840e2d309cf6f6bf8b65be41f9a0bc057c3fcd9fd3cb5b4fb1ea7fda0da125c679b2de24d90011abcfb80edb0fd3a93b5fa02aeb9aacd492ae7fd640c820708e439dd1590af894708b3947bc43b9a0f4a5ed50ad4038c6c02fadc3bc0852edbd96422aa39c767647a57188f70488ca535ef62f1bb26acf9bf03054bc1e0fd871bf1bf199f00c843fad04068ad154817a404350f6755b358eca6929bf3dfad380efc2e7ce0518f331d790ea86ff5798c75f47cf3c9145f8681716646b7b1d9da343cd993d4f47ae81f890d6a963dcc6a9c7e347edf5412c72492211a04af45c6821a11f606a3d0471a28654b44383aba61a5df2e1284d40714eaec540ac45263977bf9e2c07ef93f5a90e81edc946a2bbc814b078f8ea1a4e1f8852072189cb8726a6142c1f6789b481433a697bfb4d45f4f94d378bb6f642bf537f03096264fa87d7aa9605e098be4162eee1874574929072c8c8c656e2e1e000e7f362a6285d09d3b8476613332bcda28842f470f1e5782d1af3f4008b54131bfe3ad763e7dead2700ac0d6b4f7660e03349173db6a8122cc96671ad297f332f12584171483a28a17dc4983a5b5d1a3dbed303f61db688b93e1f365e7e3ec92b2cf4cf9cbbeae1ef5f340777879277fdf0cceb29d5cc25f88d475119f0f10888e41771ea0a54c2de8b6567de13df7c1c7aa89c7af029d477c91cd73f2d2fcf85e6c3f2653ff00b367863b9de053e896a5c60bb67dd8a95bc718012ebfe044c2723bac1b11f71cc7bb273c691182c75403991980013f5e3b88b91042be260fed487a5183ca065d78e4353b77cdb7655dd85cce7ddab139c712ad554d82792675d52fd5a064308b3fbb0b23d70200822ac1bf3fe4ea103eca2fe39790b048b8e195fa53c8b33a95a774f018b7558b6598a1dd000f2dba6aae01053d7c84434d66c99812ceb67ba86d76508604df9a9f05e1d2d2cd400e1bd42e4228e4af50b21b44e1e579d692dd93fe521e196e17d495c495ff7980e9f9d467cbc46876da9830698d034f2e80a1eccb3a944b161631041b4f30cffc4feda03bcbaa807535b865e98addb0128e004294ebab1483f4279735dae329ab4b9329cf27cd4a67b65c57cd31a3c2f9ce236acab190ef89ded259afaff0875d77a672fdbfdf9326ccd503a32e45d5d5ac6afc046b8ce0842b94650a0915b6bfe3c588ed73a20eae1acbde0ee94be111d9fb1ec1ecfd7ad7d3e2ea88c124ab7f59449ac7d771f750bb0ab40920a931cec227e7755fc87069e60d443c97e8c50614a23eee76d9ee2b341b330b63878ca052fe78dc4e07586a6bf4a6f6d963543d161fb0dff1ad8b511c5a8976eedf870e5c76c6e25ea4303fef5a236321e8fa11316b42b54a6d6bdf315f76a1dfcfc54d62035ba2096db5a62615481dfab6464f74436d5a6526f3ed86f7e25dcfb8700f5139d38470da8ec04bcbbeb41726a84022d8946fdc726cb5697929bab084f19c6afcb067d886f37206256571389ac82d213556cd1815908982e5aec8e76ee9463c7f511b29512c3d4aab9d8049c2289608ef3e28dbea79111e400198d5279190c891bb76e6bb1b55e8e23bbb5f4ec0c72a1c3523ba37a0e30b61c87fcce130fe6af8bd0a3fb18b6e1a6f408b12c9de1de9861c77494c42fc74eb6ac64317f2c4e87ff3052dbbd52936deeb7e8290c2286d419fbca611372aca54155a95429bb4e6337d2d7675bb8d6006f47109960b6bf57039d51077c2ca27b931c7d32afda382b762c57c77312988b356e521bee0de6ca906dec1064b8f6513657ca87b28e8ab29b0be388e60af629a31a454ce7df35e1ef915e7fc75e7efb8e0bc850a504e4589997aaea95ef66fd39734bb14729c21d0dc5c40a889a3ea2ba58a138c8b37d927e824f1042cdd0c89924020a8120eb27a4b79a0e46103e1514b00e5afe5e0524006b703e484876a86e93d6db1a999848df72c6cf8e14810bc30ff680c2715a977d0fb1cc09edf3a8bc056018278b3e9ba512ba38f9e07f2aee15aa7ca309103b352784adf5950db0a3e2ed1b3ca36d9e5120f0c96e9b2f74a80fd471023c7c22d2c8a5a92b97b56b3eead22ea096a9dd5f6b4affd0498639c07876e4575d817df5cbab59ac7c2ee2c6b076dbfa8def4b87e14deb5fc2bcca39e990becd56c917708285e89c5c08f48ca206d678f11a95679e903ad25564ba4730ac2cd7a5ab34d1d629952ce1eeb2984cde34976b89300b9fbcca43baf801f8a4355c8be6e930e092881a4efdda418cf760a7bcf85b5f7aa06eb7dfbd57599ae4e9d27c0768e27527a184f791f631b3269678d3c25bf27dccc00304323cb75bc2c346fe76f6155fe7f6ce3f0bd636e248c1be26b2b76fa1045cca8c4ea5f710c1650bb05c94934f45ba26178793a0b8051e98fc9efe96521049ce4e607803d4306412fbd5ba0fc098e97f0e1f046da2363ea218162f336e83ac5c42c5478969ab85653b91c1eccae7e19e8b068c5aec612c09fdd577a92f317cb3cbe84c89049ebf17381aa6eab3d369d1d0165c5fb865ee1cf1d75a92b9b40951a1079030540b8d4ba810ac7ead79ab94e7c004fd6c28e9be26a10230ff5187e3f4088786e7f6cc04907fa0107754934d327d27f5578f1abea25ec20adc73c784f789c87e09195ecc13fb94cf7035ede193b6548f6804a198518a5f7e3ff267920a7bc764a6a633f02bf49f7ca8d6b76082065a9b1cb1537b90110343719f0ea79a73ad3cc456b2c20565c84630dc8480e5ce54404b27026378262f948b91011fa60afa304ca4abd04117313580de947b45a7cc7e725df483da66d3196c3e366b223859f092773c5b0ce288e4c17d062e891cf40a60cab43a7e7705c95c90261aa4aeee7956d222ce0d029b0511a30361b08668c8fd38bd1faa9a9445b3e29895931e04d0353b24f23cf3812a6feefb52e85b3240785e938b179cab5adec077b1bb58855f23f603fd484253afa16e15c1a4fdd35a41182f51aa44416aff161f37aa540a9ee4120582026bd35a7f2b84b0c04939e29b0612f483a5e5f6575756d5d92d74444e2dd30e57c16bb7ccef2c0852b9e34fdc1dc762b368f4e3841443238013e5148f6da05ee9db2a472f3d5c0fb29caca398a1eb505f3b9121559531e57d85d9da7400490f822b9a353ca668f1cac895401d7b5e61e17d50b569d34ebca81a6031e61036ac64137b6f89a6387817d45395c7eafac64641357d71f66c0c6222e3151b735bfd2f65b547370d92847c9ffadd92ead5b172a9248bb31aa9329a9a9443b6564b3591a12be8aa3902b2ea9992f1888234d93cdea4576bf5f88500b47b0c5717325b1bfc9f6fb0bc7168d8c6bfaae3a912a48d38bead729fa320b41ba52fd4f03f645d092b57ca709b1fb0f5c9e383cbc1fe6357d026c2ace3846fa30f55f6d5b57057befb08643e92b0bf5d5a9e668dc63f6771f69b1ad7b002171f49d3136a2c5167682ff170d6aba42a2c834287c788a04ff6e51899d7978074395edde2e189694393d052b0887d26d9514253558d49324e8f2708917d2c940d89672a93a1cc415b2f67d72b198ec6f52786bca33603e100c618fb70e7b7248831c3dc3acd0cb95c383ca0374322c8fc059b5ece9509fbfc16c8183c5c2bd6a9377cf09d63617f14d8f87e028957cc10f80d5bee58aa3943c35f2c8b669b10e792b767c5eb2e1ca7aa5065eb39db7a7c89a6b9b0193fbbb04ed10e3efee7dd29f9cd2eb68485f641820780cc07e0da251c40801fdbe1f19e8579e81b202409f8178f631d3c6b1999e2a38e7e01ed4312a1f654eca1e4f017f13726b0e27747f0c62ee74b703eb73566eb5087b72fc3e88e81ef32dbb91aa874fb4faf9251b5623ce699c5c591c5a3616e9178a400c6a8aa3e8c7dc27e2f4adb1057c1bbbac5e6f0c80fdb110be2d4ee6410cadb72f0d3f96c445b4dfe39f9fb770ad72f27873aae8748a15c2449a19e4095a3564556d175863cd4a9a552040d0020f2bdfb988872cd228ab2aa7f6bc146ea2479cf41e7696d250dcaf705c4580952a6fd9ecee6ead30dddff21bd016eefa74887f4393f48c71d428f1662a0462bb165cd22ec7d8d50d46804ec3e9635948d373c1ab11c0564342539b5016f993dcefaaa8c137d6c385d561376e55cffa965e6fd1e58a3e4bf22b2d6748846157e77a316f80630432a88b9bbd824ad56db2105d8354ed02d5232f9a0418f0fbdd8f2fa8e4488f75a141d117d6864ead9f740f4f99f2446c8e416f518f3c7187720917d76bb6da50ef7eac084af80d0b2cd7f748479f209dbf0c80977281be5a20c6eed300f0caa14721b53e6da7460b81c5a5a7aaf8ea5b3c1aa0f4c8406f61bccef0402975e4fd21df0ab0e32c76865e75fff150abfe8e49703e1d37364274d42a9bb46926c63d7486ad20d3b1392f46ba5927aed4eaa749acd29e9b7c47dda330a5c031a77b7479b027e09ddb597607f0bbcbaa8b7dd94d227d0f22519ba4ae90b2012a77d10c9ff0a1c691109514e653541b0e935b7cad03d62e97080cfc400e1f7951d1b8e8be10c8339a19a2daa6c4ac9548b51767bf894bd5b2435311cbca677e62b29ade2ce8b7dbf2f32dbe55d069973fab406be9c283a649cd731d8ab18e9874afbd4bbf4d8a4450f1070d5aaf0f037b91ee3bc66c149f128a31957a4f21b1fedac0928e7cbe657a58fa76b92d393b54ad552fa1a7611d0a4824a04e295bb8a6c369c0576f96894a0d560482a4fd6045342d599ac475b9631e233c0ea1b41f0cc3885d88cae9b9b7a7e59e2d1c46a25264fba4452f6d6b8ce0c0cb4ae4d5ed73783ef7b1c16a8ded41a9d92a7e64033e7edc84ea06328a77b154e263ba1d9bf49a2f5701c87d150d8c4186cf8442247e1765d28290839c786e1aca25ef6b5e5b0646d027030b93ae69f7cca2ee508d7517e5561d73a1faed36b472181b44d97080be160acd4cf76c53cfb73915d0fd3235e3a468db9934082924806a25f240709182ed1e648e2d1f44be29acdb75fde27dd487558c7e401f3dab262d8e9b01ff886a152cfdd3f0b062fd22319b86033cd47da262488c568e08e45c3cd6ba5ae1f3aabccecee488be5e520e614c711fa815d9de1940dae8a90b0f7612a4c58ddd79f2bb2e4656562a78a23e9de39ea58c6370b0732b3afb319ab8fc0d565078b1a701085bc719dc8cb42d4df554bb90967033ba9f4628d1bbde436094489f4342d35de81ea0202ef6de6f0aeea3ca863942457b37b4b44c96b4382e784b17e2ce3040e1ce3c3392f58ecce61754316630e7f1cab7e4b4f73d47f5cb9f6c9e4e4085d8e50ec2be75822458058c16dbed02f1aad38d5c93076f1b5d81f1d614f55b8a94775d413c54a15a64b84fcf6aadfc2bc4181b52ad189f73bcd05e7fa294d94b999bf6119398ded8466913e5f4476ae31edd78d31484d8952c40764161af48e475746252d52170d67742490210eda0f564f08b15f005be2e9b1fbf0a29e9600ff008d1ae3fd9508c13157f9939aaed20eab6030c311e60c5e506dca9c2ab37d3e80bc1d09eb248a650c7134fe47204e6531f29758190d3a896b7f20892da18356abd00b5584b9bdf9001aea5c11480e6a52cd3dc038a56b4bcb36f83ccaabd19b5927a8fa973015acefdc654011b2955d87c8154ed04550b8ad956e7ee4a7848c94ef1adc58fe67e98657e1d28e6c3c7161c32789c1646201a0159d84afbf5cac9173b2d18e85c99926c5670b6aa483fab19d69bc8a3dfb9fddc2c5eb5bf92733b96e2e5231f5588b94968cd2baf7ecf7a912c2bb8baf57d2d6b9760cc55ae8d355953068bcce06fefc1575a7ea02ecb984eae5d421e51ec799bbee4c6f554f2a77dc320c18bbe3eae5eeccb3acbb77f8cdeaea63c861bf0806ea7f2f8cb3ebec5bc73dee7090a105b5ecc04c21d9dd731eed249d68d2c9c679600a8ca4b1422e0e9fcb5b28ddc0a67fec85d462a48b8087be97164534ba8452dba23b6c156273e40e8722e33d4b15f920c1555deb855c321b58078af74edcebfd7d1743ec5a92e110b0f331bd451b56d5a0f1e162b2e9216c8748ad20f8e5032972efdf633f7663d2043c2073d163a994433e8ac3d0fd5e4a0722046e29eef6017ad2fcfd781cf2f90e1b46c48520639568ff79e5591dfb87f00324ad23f0751788c50d079ec60f2bb251128f0b6a2f389a31479d38d6cd0c9660b40036265784dba9790c9ecd4f769b7291e9c65a482a5dbeba8dfcc9cacfb66f002b2feb89f486b95702f93ae1ac699d571fb7e06bee4c65bcc4b84351cae0921b623681467e7c9a0fb31ee5d93c15af152d3481f3b968bc2639fd039afc4093b19dc2100519d45707364231705b459a1223f57f273abe477f5dedd3c70cd677c8f362337687244a4c0744424b37acca30d57c577a7680879ef85409a54c95e12ca2ea6e54aa82c1b4f0fcf6418f6360707945be6bbe3cf8a7c76e1e841892ce4762c168637d45657c6d227bac810e8e54c63f6193a29a14aa5a7ed73975f0196a9fd42667f34106c7f3b036d18a38f69699a0a731b5e8957c2acfe9e7f107dc35a2644f304b3b240ec043a44d8684a859b61baf1ccec786db3ff72a9fed593ae180a01e27d3a0b6d6ab560c48bbb75139e4345b0bda0553c4e4e4f239ffc04db53651ad8041f1e46ceb68232b7b3fef3a7d9bf7969c9fd499e743c57ebe0f335f6cec3f1699e44e0fdb0b4e95a01a720937cf8874e5e2ef5890c3589c4c74f6e70fefbfc7ce636b64d1f512cad6e0c9de9c940b24746596f2e7ee03b15fc4f54b76c3b7a7c024f1b31c58ecd95ed30dfd70efaa80834b73da34fbbc5be5c1cbc28622218969e3bf115e4af72edac4468023953e9cc615180c3ec5542c6aa311ef0841c09f1b36bc697bc415c77ec481754dbed0ac32628019ed0a473b82a3cb687250ecf20cf97f03ba7ca2ccaf6ea4d9667ff8b29d15b14768cb33cade87216e463108eda940c9af64df617f395bfe311027da4ff67069c2df8888d1bd01d3ba43648286d0d00831f5d75a411ad626e2baf595c8fe5661a135a2be3689bb8947e0ffdfba3f872a9c4bd65cdd3e72c97fbbd2bbbf40afe56aab7c393e1d0a31d7357c2c68bd43d7acef96bc9341937d1371467033f71a32db120bada9aba525fc63818f3c5514d228d935367be4307f41ab32522f17463eee237711f94a5359b649dbb8f8b08cdd5d1ceb679e180bb8ac33d171252a2f1623a801a5916349af94a3f52b43f02dcf87b9f5278cf665681b3a974891b1c478ce05762d1991cff652f8b64fa40552a105be380c074046c69f4e3385f65932bd8f593f3e919fcc71be428cbcc858a8a5357b87bcd5c97c0a46420a083d2d56bfa16b47319e498d63d7d16a9337a637476d38974a842bc532e894ed3f5516ba8709d169edf28f361f4eec0158f9e7d4d1a55a0db1238e951b0ee1cc2eff16bc74c53b4ef65ada409c7697e1895f7fb88dea32132edce8cdb97a69f0955961598582fd400d7ea7cc2c3e2caa900d62a5ed1935c906c24752ee96e4a1d5f840d936408612ff06307abe54eca934f9d6d44d08b9db86722a84529c643836e49b3c15cc770ebc6d97c313ede2597fe8a96f9bf79b8e41aaaf6ed8b9b26ac0219b4597aefc547374041d653af7535ae0244373353c92ed07d286f52b8fd59c751776d151dc44eb7a00453728fc05e5c5697b63bd2dd4303b0928fd9bda8f95b1f9218c1904fc3204e6b48e7208d2f91b234969c71ac4ff90643f06c2cc1a5ed44ed871bddc004101dbf2e769c813330e405f7bc4ee88dd8f299bb710e51b916acbc5180b7f7c07657786664d9bbe1600a1bcb22c50fbdc0a1d31451ded9f49b220335fd1b6b8dcd9486b8a1e809722065785e8cf07c80d56275a053cab014fe6127b00b46b017d303bf0fd8dff4cc697f36b9c6beb7295fa7f421d17088031fc43070891ba8ecc57bbca8753f20f87f1e4783b7b478cab8ae898aaee83c5ece6a92b2874d5971899442fb957bf41ca7186566aa6ade704c1d3d6a6f9db15cf1460c0f2ed09a05b3c260bd17791437c84382ce9b7b9eaefb3aa3b3c2a4b548b0dbde766e5cb18594a2798f3e18a62df82f4770af370a3a9e08c531a55f5434f2220a1c9ce12003b8619c7b291c629bceb33257dac372315150fe3ff1eadfcaabc674619238a17b0d425e4bb5036ef258f7117e9f9c7aa784f33e53c20115d16630e449491ad0084d717f1d246ad05acfef9f72d3d2b6d56e1ab95cf9d3963e13a09dee1bc4a324883a9ce488bfe75dbf14a2ac33d443e20df36bb4934153b8b42473f9af8a16e9de02195c9fd2811895dc62d1f3ebb04f11fd0b1182f0def2fa1e71d07868491bec6877caabf0df96f6de587985f0bf46687be4ac8ae19201ca59f8db240fd3f3524b749b7d13484e702058c7b483fa89aa0191ce7e949e59546f92866535a6b85e999184d10d82580672742d4e627d1d0fc8e911399dbe617356d7abf4447137825993db18d09149202bca588302b1bea932a130b682dda77044fd7270151667a63946bdcb89647cffbf8d816de0639d6eb058e6659bb52b037a56e8b121ce3f5bc76a31c7f97b0bfa80f3300acf4a9ccdce353467018632280131e42a48be20e9fd37cc1b6d56291e47563f373191480f837f598c64f46e3a8260f4aeca8b19b3c16ccfd999a047964e0d98c48a241b43adf682cd9642d95d5790475c97c5a6faf4875de6b3087449b476e6b98a7e1e26cb546b88854e7bb4357c37b23916637e1acebcbdf8506bfd3663fa0b49ebc52c14942ae104142a99f3ada6ecb819da2462dbe36de8b2896ce9475e4af05b023b8900f0dd712a78abcfe60d8da13abb2d8a28775543a631ce09e91f11e732065e64453969c0bdfe56a6de95ef5a79b94185c7e0dbe43a251507e362196a3b61add261664fc6ea050c5206b693699501d7dd22445e872555515008cb7460b1bbfb92a3ce162e52059caaaf1e3c1bf526006fb47108a1dd728c9441eb38be41ead62977a17fb470ebb26aefb0e641054de6ebaf328a6d5c64385f3164595aab59628685551ba76d9efaaa7c8a32cf228f44d8793368ee8dcee5052704126f579bf4033a1fa60afa7f5d745c4224dffd646c047eef5ad8b2605f8d2910b63fe55548b591b39d9f321b039b7ca82fbfe8c5798a29ffcd9c51680c4d647d7decd052b6d45f4f2ea37b8527774a0b880c82fee1aee31f8408847483e1eebe0d84d4b162fbb4dbf094fe56f43fef1700f97e05e7fa112cf28ee1f902e56d74cd2a93a14c7425f74c5643c2ebfa86ecc3c98e8e87839706c32631522a8ee0034d99f6b2a01ed3f1ec8150334de865b393b089a7429af8a16b4c15b779c8e73abd92569aa7bb865a9cb2220a631aeb323547ad696e22005bb3f48b6818833eeff1b7c4a492e4be66e8ceb354a2cdc12737bd37b513c09a4dff78753e48926708457bdd3514ced5e9e39d5e6c9f9e0ac766c7626b37f9bb556ce44e0d7cac830cfbe7227ba0dc6a431f1db6d0ed409feaf424b3f690d1a64590c67f078a451aaf18ac54256f303a4ffc98abb2d210a5e0eb4f83e343d70cce3cd8fb0169411ce68bbaaa5b3e3391f1ce5ae853759c40c420206586c4df1dabc7fc926c0d3b3f0e439b97f55d02a6b505594592a54276bde5d188a4d1f429c80de61d18c9f4d6040b2705a712d6dbf94e8591630d908efcdb474e832ca61b68db8938da35be372811bd4c8be6d794ad6d5c2652eecd62f48b4409f4c83d2b7cd9125cdd2528114684493e7af7598baa8e66be555c341842423bd6cb031b82b2d5f18718176f151fd8aab3406f8d87e7788344cb946296f8c1563b642d7bfe7d9852b385f5432706a600b753a6c0b632ada0fec557c8106acb246c46ad49bf26b077c9ef7f651fdc256d31cffcb779d070b0df1be5fe80c98e7c640576e0a5f6df42920b07c72e498508fbc904c95d3dde8c411633e23fbf47755a6021d224d99b0eac3eb86a9d7437fae3755d01530da6af808a1571e744a28718b2c2385009be719131ad48e877286d52fcc90ab5744052fdea5f8aef13a92df6de50f23abcead33177550d8ea9460829d86c76403af36863a4e35d4013fd90dfc49fec9e883d7d1c4db43e56be4660b1696b5326441db3f0ce4f0d7bae4a2f5c1968d66f08d7491da76a138d736a32a75cf25ffdc2f5e6fb0e79802f9fc1ad9f2ad359ee0225bc91fdfa5ef7dfdc0f3de581f0d1d128fd4c435a155ff8e40537f94deb6650633ee1fa1a6eafbb45440a30914ad810c61257b73f5d3dbb322549ac2bca7b3a990cef3c9ac0bf15ea387ab849acf67f1e71698c5d06ea128cb4b3ffee88af36cf47627d110a40c413216a4f0dfd93961f54ff7dc21142688b1932167b014b9c4ceab8d821e82b13918d322c2cf1b80f6da6295e8ef12e3c0616bcf7549e4d54ebe562e2534b751a99ae1cb4da4bc9b4472749c6075d5fc45e5140b1a4035b915d0a97df4074f5f70ba52928d482b5b1630342e94c4fb4f361b6ff9a6731713e5155802e813c3a5a4fec286abef24bc3b17fae48b711b1bb19627cab662a2dcf52968d3163a198a76d7673c610d725b2656b83182ab512f854f0e9bda64dbad286392ece89d75fbe45dc242f379f24e2ca3e6a548705ebffe0a9b21707b333b76c794edad62337f2749573edaa613f0ab73f26e4336ae828465284177d6d5e5095ab6a4b6130e829bd54f137dd372f4a253f3f47e55e5dffb7ba56cd21f6406b002faa0c52720d6157af7d7593ac191e63b0d62c53f4c3f9210f4c1f8938062cb9f807e78c955fb3c03876cfdd6fe50614fba531c7a1bbffa7c19d6b4eadcf0e5ef1faaef9c0628ebc8b34c201a5ea61132e293128bb611c877e38c900eef2c3e08041e0a72c8f1d9fd96f9b81a9788f61dab292c45fa45d590c29f9588ccc817c379e3862c126fd2f19a9b5b9f8cd2de34d96cce9068878d9cad97ab29a17a845c6e055a0a623302a1ebc57ac2d957918d403dbcbb32551ae4d7164a07c4641d115f84e62fa4093521d59ad2327fd69b003be961c4e608565bad32ba9af26f326e4da826e34b3a7c4b4426cb1833b47c28555bb5b7cbc7dde2913e4358001936e696a1c834a91a13f909abf8dd6389324277b236b6f29bd7916053b8dba6deaf873d627e342fea451c71cc80a79abe807721a2764c1a1e1b01856f35120bc45e0ae49fc48a827ede744f6a9af15fa8454873b991687b7192f07cbc6d2980e5268a667172706f2cc31d3ff8a1af6e92002682ae61ea5a8bb278d3607a1ff183de7df8e4318bb65baa0197511be8ea3d9c9444dfff798183a324a1dc85b49e5bc1596f904a1b6e51bdb57329187685110b9243f58538f8b9dd200bc2d751610227519156bfaf757b79cb395d82502ba93fc4986eedbfb07854511422eed0a76025c939e230348dd6e8d2aeb1f1f28237cca07d57c7de0767a531542618793a45d2922747c87ee411d4169ad4bfeb21bbeed37c889b5d5abf7c8c7efc93d43613f5214b5d220d6d3896b077438e873056fe2cbb6c9eb18ff310eb4c7b298a8aa5bea0e6c27ac869103e83b3efe2f37f490ba055a22037471656ea41615ca5745f07022c36e9c2c95a3ec67dbc443ef95070e07dddf3801b24e3e783c1ebe34b1278e4328f0ff507fb60f910e6bea8fb907fe0a63d0f219f467b5ff893ed3935cb5b9cc8f79424842f9b2524bf9d9861415e38fb2c5a0320d28297ba3362033906c35416941c766beb879bd19909eeaa376984f83ee7f1021c7483ca5896e9c24173cda66a0d9b427579e9e95e2a666389a57f6e7d330ec312f740d5d6f7cc868f2a1b1007803eae3e38dce73a35f498e612ae04b0bd7ef7a1b6a4aa2d2987f91b49470a69e9361f418801fecebe16e9fa92adc81a24612d5d827c0cdc380c709b2e4a23db0c455f602c3de60f170bf55eee7484141622ebdebfd7e64ad264f74fd64930519a440f9bb100ab224b788a421f378d86aadc741fdd838055b882d6143c701646b89deaf57b272c90e1e974e136c8da08c9fb8142caa14a75c95b8ff703eee99cee916f7f9eead319ca84cebe8269757c232bf4aa2ef60028357e2c774b1e3a81997ca0f5130304dbda3cb1d35602ce729ebf6b6a225bc37ef525cfae2a7c38b75d379a55df54c892c528c5d50ed9d64bc9cc7ec8e0e81f38980f4cba041e2c61b9ef4056a5672314e18d4d5ef4cd62d2c3a6d36b9c06be9be395404c3d0210cbb51533093c5a978f13ea98bca09f952508e8ac7fc76657d13e1e3786293ec7a59be3949b4b68ef17d9903079c296c32364708a56d0b11545e193170974fcd60ffeee48a5499af4481de1d154e0efb92cdc76563509e2c33739419ca81de68cf6313b1a34c07ab5b9a02c5ff29e03458c345d9715ac07348c00fa33684c6727fb927b45a602774ff02fc14b9e251b37db5e7cf1baea35d9a6959200a8f3335040c05fada8dc3bb6d020d69a671c08133ca162740e38280d51e9b200c7208ea8d3bee4b0d8d9c559c275c0bee6a7ae1e16e90d7d732f965d1adc65fe26db11e713f6446b99688a472fa85af1fb4ad8c52af4d4487738fe172063ee8fd3ecc84e104fdefc1a6fb33ed18baf1d1b5e0412eb13057940d64256da75a3944750d18ff81f8764374c903c80e5e6aeda3dffc8ae550201b87ad9ac5549911a65118f8a83b6e2b28e106f865e5fbd1811ba168ab5be790506895d2fb0145b4e33dcd319ed3e78e3a6be96f3a50282c102b8136739e5928c8d4ef2ac95857d076ec08c46e216e5b9cdf0bb1c51a620fdfc2ee9b2fdaca6f12bfdd8608ff807485bbc3a2681dc41614176b09df94a414a1343a6a28205c14710cbc6e60f923187db56c73d66cc5a3e0e4685072082530174ef0ea6959b234f59f23b7c2b32668eba7e82b0ecd179b765b0bd13aac907b635e05db52985ae9c5f96a99d5ac8e1296f3c5da122bd5ce174b6464eafe0a165008620efdad038765d88187b14fafccc977c79ef724c8902439d6c6232b8eac78bae558607a932f351a056bf8b1276f9bf8200359619c5185bff40deb453162a4163943f244367810ed92dac2b8f54359201ae062ed3aa2251ac5d62c9c60f270d02d0bef971b9f8c426b4295b76862392b84071089f004ba49d1ee8aa4bfe92bfae8610595f97f848743d5a2c52864a7688a9518a1b23044f87a554efd2b64ed3bb0665bff9a7c80d6633b6ebee5d387ec630e7cd0f1ecf7aefabe7af147656749a4724bae5b22d22fec4f946ff9109e42edf51cbe7bc2e5c31191c8db5f4edc70c227180f42370b0d695b94dee5dac9a334a9df34a8412e2e3700e5e4d469a0fc67aba66177f8385c12ea14b856011210918bcee75c049840e24152630b7bd31cce0fff69963ec759e31bfaa04cbbc94ba10b201e0cb9fa54c8aaec7e81c04d6d94d725abc72d955e59d5520a121931aa9e43edb4f22cfcdfb75b9b54532feac15eb2ce0ad2f7e54c89ba2aaa59c105da3368c13b1e0f0533b854c13cf745c861210d9f6ec9957c04e18d11415ae132d5fe1b39baef939f805608b5872cfa2ce84cdab0a77d761a0b9b55039731aa550c6e660e6cab66271fcb18e94304f1d6080b67f7131e2c63dc86658085f998467a5452d0645f8a29000beaaf169e4ddc9864f4a04eb7e9e9ebe22a26ab172506fb869371cb03ef25caee317f1d5b24135ff15dc232f409dd2d2fd033b5815ef69034ab7d2a85466428e617bca1a86d71662fc01668287289b1cc2d86410c409309ac3b7964a7af344551862d81ca4b46e4aae40ff83043a2e028b4aa53c593ced1b2a91f873c7c4fe05dad5a957d5468a789ed9790f58421756d1823b1459532e3612c8844acb93f8d432c972d0b08dd93acc92c9185d24acf61050e4cd5c4160e14a8aa77f81d94e21eeb67595abd135547df98efbbec52da6c30da6b32f302473b2ba180e475f4ed905fb7d911185b1d1ebc8a1902c917d24c0cc88e5f5aead766d127a43a37a1ed36a70545bb47f02524a9254126315ab98825e95f71bf840467d2d89d0693fd87304df7e6df818007f0069e75ef3a3cccdcd3a3275db4cba3d7b30307192252b4894560f6cce17218557617942f45e3a639bb98de8bf2004cdb119c817428e4c6962b12e69dd69ba5b4d1e22abfa4071d94b4b8aedf2f93f5d4554a6feacee0d125a8b806037f5ec74298487dcfc6a45d78a2ff43bbd17ede990deb84b4953bab7ed4661f26ba1185fba9dd3e0b037e359be859d313ad4d6d773e2c77c4ae27bbd2480d86bd7691dffaf06f92007a13be73de6dc8e163aa135d17a226b49cba37d317c48e093ec69008acc1a048df738f0e76e3cb2b28de10225851c67d0fe8e3a3a70f5e42fcb1c326b834a12abd1288f917afc18c594f820274e15e850b52730e5d10ff3d420922c11dfbf473e573d4155f7e8645fe94d9fe51afeed68e777fad5aae1c2637c8df8fdd2855c99244c587d4d49cb84f7dff9a5ca0383a8dcf5c621fdb8a14e3332445e4be335162da1382006ceb027472373038954a70ad02430d4e755402032c6cfa0540382ef3113b7a4746174f8a9e6d5e8384bfd7288e783578c1f7ae6c6ff0634cabaec81dc317494da7c76cf7a63c50a6419762c3b8761d4a1fbad91aec7abda4d5bd841291619fade478226da1a8e4af1173a3247f65e8a123b0a7740118b3ef8277969a00eff7f47c79c71879dd25a60535c90a56ce943ad5010af8607cbee77bb573bf6e741a37d90f966f5bc6fb7f3c879d4e6d3a48a169d1e13d1b069af3214db18ae4c69d5e42d9140bf16e5aa640dc82c0efb6317780985d8d3a7d3298cc33afab64386e30c9ab212e9db5d09a945896dfb834b6c8c76c6d0600e725db70ba7e437636c21542a29790b888bf370baa5feaf850d904917bff45fc9df077ac3da197b36d1f3ea282b9a077b58981c7f11e4dbce0b65fa62efd6d1d95e2a9cb5f352e8e47eaee0bf25945470c26fb6a2213c121657315b9bc2bb834448dc9195e600acd3123c70dae6960ecfd8509a455b9a361371df922c5f04cc8bb9285ae417d7eb9a2d85ba815099ed1679a4be0d88f43d7479e86c568e90f6c38c47e0e194b3d97c1c97ce3275ca99fefd9608be779dfbe3e449e0b7252dc08420eee9b478b57ba35e55fdcaaee49b810bde27f20a0dfbb45cc868226540ecbdf097716ff7166932b16d9d4aef64def8cd88ac8e04470dcb58c1a16091e08d2e07bb34958d719c4bd823eea0faa9b404cbe18afcff801e173731dc8eb6cddddc580cacafe3f05a6ff2e1a640ac5c4a68122ce4d8f5121c1a6362c3c7c01821d62ce3e07a7ca7193088bab007b533dbcfa81d7cba0084b813c650b0ca12d86a37342d9ace0dd02b7f626bdba46d24a1ecd3f66518390c6830e8501e757a0377d409b2cdf9f04c3b8ef813afad8ebeea9259d48a9b02dd8f1c97d2a402715c01f4bb85c422af1c5c9ca3a2eb0ea5b7bea05a037089752a1a21031c225ab910f7972456c7ddaa24899ce4fa03cb7dda58d82505b6d477d50d31ddba5451ef500440d0022535e43fdcf8a3ec11e3c599f3e8e461c3a15a78ca4d79b42d66b9844ca3bbcced4f04e2b92977d4c6071162818aaa8a3a9e8df86670053910c10643f92dffaa02f9181d38cc659ab09cfcdb414c71ea34c6383d8fef3d4965999020a52dcd0051c66ed1d042cb3207bb7365a27ee02758b0265c2eb15a8ec4f3bcb70ab6fd152104ff6de0e33812dec450d238599c730b6a1cc96d65734cff6984ec95b9f4035130b889f32118eb6b46f82efeeddb143edd4597609452aef3ec3f44bc18ce2000575cb999d47d2063b3f7cff3e5ed24b3981206257b54c4832afeecd33be03a696d536d2c363ae0a4e467186b93bcc2dc1394abcbc3ada6bb35c70c7aae274b73dfb91401eb176e9e85fd31944dd9263d7ddbfb64b1baf21b636a3b3b0f186b8ae83147b0a4fe8e7ec0945bacc37e469fe8d430c7d410c3f765ba7a0f861bb4a06cf25b5601de1afc939fb03b6c55ecfb42effcbfb487a1cb7805b829cd9a13d18346513ea3ec5998a42e2d70cc2e5225f35f121eaa1484120ccb60fcacb3b130ef537a1c956463f7ae5d2afef68c9cfc074056d49d3926f8124533b70df71f35cf5a9565f4f64485e27c0dd306e28166d7f57dd6244b4d6898cda1566881e0e55dca7952a2cdefb562635b3e528549503d206c682ff0cd3dd78ebf256d1d2654b5bfed694d5d2dcbed12ca462fd882a5e0db2e5906621dde8796840240c692f81c038f1b39a44223b1e04ae523b3b0ddffa7e35aba2eb5939c75668709951e16ff7187a60795e42a20f4b9d5587a1aaa0995b7655758f50bf2d9c69d038dc7e1c00ae9ed657e0469e02adad3688c7d4c3d6417a167135666abf431eb5a1ae384d38ec62912618437fa95daaeef223a8eb955b267ebd0f115f543fdcdf9b32958be671e45eb7b0339ae88497b71b5180a145218d7f059bc0f3402f5c612e061a0c34dfe18d7dba28b930ac0a8f423a9fe55c626b2e96f4fe23d15d8e24917b4567755e6c71bbab74681ac48b62ac4c9cab93f1332703650ce6b6c8249be9aaff4334151dc89388e0f05ae311d6cd5f6672c7c8eb48645eb7dc211ee424daf159a16c16fcf73771565bb832209fe8c95742f96da6898b7143a1f4db305918a97e2ffb77d4c7c34dde26caba935efb903975d8d9e98fee691877fefc4f674812e057b280ffaa0ac1ec947a5e759c1eb8ea93acb183abd6fcc916313a74830e6d368b803eca97e9db612db39fda402f696e275a94789e5da3786c5558b4aeb4a81ef84e43ee5495e3ea65aeff68aab36e6c7f282fc46a66c4d53f6768dea92af92d0518a370ae215f2bbc2bfbbbb0d06598584cf13ac6b574adbe9b0773c7996cc4e62bdd57d7e7bbcdcfcc59749f888c47624f9c11b04def1b907d57c3149eb9bb4b8eb41fdb4c3987c06dbbcc0c4678706d20028931a9d20a6e3187812846b0529e6123a88aa96dadfebe27d7d7d19061be874c04c0889a8abf85a22395a8194eb69c963726cc75b67fc316005b7f37f39ccf1f8a15bbd35ceeb7c68d1fb9c87f855a5b99638c871430f79a9f034c102ad74c58c23e09d7c092e4190e4e86ee3786a3dbf8e4b251a93a3f63b0b325cb034822fb1cff5653a5f1216e5ea9ba115f881b5eed97defe18812ac71c9ebed875d0ffebc88432a2635a8ba80c6beae88918768f1f15f149999f8afd99a9ddbb317ab57c81afa7ca8e0fa0d1503a3ce6a4df78a89a385135ae163aa42aca1c7116ca0574242de64e4edb984bad84a4d2e6e333a84af1fb94488d811f7c40fe6498ced009c5ce6599f261d9137870f6a2f803288087993e0b62d75874863efbfdde590d4fca36600b79451176cba2c36def591426807e7e607e6ac27450e3c0972a670c24f512a11b15e1bca0c2ee52cf119f16dac48b1388101466621f672321afa5f2b7e2533459d70026479c4d92aee8e263f664769b839635f9b7f358230043ee5697a360ab0c1989bf5db0d81902a5afd4710466b40853400fdae5e42baab3c793d17db37c529b7e5d483ea62807bbd8d45f9260e56ebd511acf8ce09d9237a60e84f5cd5c42bd3ec72332cf8387b070ae6d4cacee11991463f62c86b5b3ea00330dcda225ddbe</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-up">      <input class="hbe hbe-input-field hbe-input-field-up" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-up" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-up">Hey, password is required here.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>手搓机器学习代码</title>
      <link href="/posts/4efb4e63/"/>
      <url>/posts/4efb4e63/</url>
      
        <content type="html"><![CDATA[<h1 id="线性回归">线性回归</h1><h2 id="一维">一维</h2><p>基于C1_W1_Lab03_Model_Representation_Soln</p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mtable width="100%"><mtr><mtd width="50%"></mtd><mtd><mrow><msub><mi>f</mi><mrow><mi>w</mi><mo separator="true">,</mo><mi>b</mi></mrow></msub><mo stretchy="false">(</mo><msup><mi>x</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><mo stretchy="false">)</mo><mo>=</mo><mi>w</mi><msup><mi>x</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><mo>+</mo><mi>b</mi></mrow></mtd><mtd width="50%"></mtd><mtd><mtext>(1)</mtext></mtd></mtr></mtable><annotation encoding="application/x-tex">f_{w,b}(x^{(i)}) = wx^{(i)} + b \tag{1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.224108em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight">b</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathdefault mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.0213299999999998em;vertical-align:-0.08333em;"></span><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathdefault mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">b</span></span><span class="tag"><span class="strut" style="height:1.224108em;vertical-align:-0.286108em;"></span><span class="mord text"><span class="mord">(</span><span class="mord"><span class="mord">1</span></span><span class="mord">)</span></span></span></span></span></span></p><table><thead><tr><th>Size (1000 sqft)</th><th>Price (1000s of dollars)</th></tr></thead><tbody><tr><td>1.0</td><td>300</td></tr><tr><td>2.0</td><td>500</td></tr></tbody></table><p>重要代码解释：<br><a href="https://blog.csdn.net/qq_22592457/article/details/105636480">plt.style.use()</a><br>matplotlib 使用某种样式<br>plt.style.use()<br>参数可以是一个 URL 或者路径，指向自己定义的 mplstyle 文件<br>可以把自己的 mplstyle 文件放到 mpl_configdir/stylelib 文件夹下，这样就能通过文件的名称来使用定义的样式，其中 mpl_configdir 可以通过 matplotlib.get_configdir() 来查询<br>参数也可以是一个列表，这样就会整合多个 mplstyle 中的样式<br><code>plt.style.use('./deeplearning.mplstyle')</code>的./表示上级目录下的文件，若当前目录文件名为ML则要<code>'./ML/deeplearning.mplstyle'</code><br>直接用.shape可以快速读取矩阵的形状，使用shape[0]读取矩阵第一维度(通常是行)的长度,但是当数组或矩阵是一维时，只能使用shape[0]，返回的是数组或矩阵中元素的个数,python里np.array 的shape (n,)是一维数组，里面有n个元素而shape(n,1)是二维数组，n行1列<br><a href="https://blog.csdn.net/WangZixuan1111/article/details/98063639">shape[0]</a><br><a href="https://www.jianshu.com/p/53e49c02c469">scatter()函数x,y通常为1维</a><br><a href="https://blog.csdn.net/mighty13/article/details/116547892">pyplot模块——图形的显示、关闭、重绘（show()、close()、draw()）</a><br><a href="https://www.runoob.com/matplotlib/matplotlib-pyplot.html">plot()</a><br><a href="https://www.jianshu.com/p/20b44e50cbce">lengend()</a><br>matplotLib Legend添加图例：展示数据的信息<br>用法：<br>legend(): 默认获取各组数据的Label并展示在图框左上角</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line">plt.style.use(<span class="string">&#x27;./ML/deeplearning.mplstyle&#x27;</span>)</span><br><span class="line">x_train=np.array([<span class="number">1.0</span>,<span class="number">2.0</span>])</span><br><span class="line">y_train=np.array([<span class="number">300.0</span>,<span class="number">500.0</span>])</span><br><span class="line">m=x_train.shape[<span class="number">0</span>] <span class="comment">#或者用m=len(x_train)</span></span><br><span class="line"><span class="comment"># print(m) #2</span></span><br><span class="line"><span class="comment"># Plot the data points</span></span><br><span class="line">plt.scatter(x_train,y_train,c=<span class="string">&#x27;r&#x27;</span>,marker=<span class="string">&#x27;x&#x27;</span>,label=<span class="string">&#x27;Actual Values&#x27;</span>)</span><br><span class="line"><span class="comment">#标题</span></span><br><span class="line">plt.title(<span class="string">&quot;Housing Prices&quot;</span>)</span><br><span class="line"><span class="comment"># Set the y-axis label</span></span><br><span class="line">plt.ylabel(<span class="string">&#x27;Price (in 1000s of dollars)&#x27;</span>)</span><br><span class="line"><span class="comment"># Set the x-axis label</span></span><br><span class="line">plt.xlabel(<span class="string">&#x27;Size (1000 sqft)&#x27;</span>)</span><br><span class="line"><span class="comment"># 显示图 plt.show()</span></span><br><span class="line"><span class="comment">#设置一维参数并调整使最后的输出可以拟合</span></span><br><span class="line">w=<span class="number">200</span></span><br><span class="line">b=<span class="number">100</span></span><br><span class="line"><span class="comment"># 拟合函数输出</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">compute_model_output</span>(<span class="params">x,w,b</span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    Computes the prediction of a linear model</span></span><br><span class="line"><span class="string">    Args:</span></span><br><span class="line"><span class="string">      x (ndarray (m,)): Data, m examples </span></span><br><span class="line"><span class="string">      w,b (scalar)    : model parameters  </span></span><br><span class="line"><span class="string">    Returns</span></span><br><span class="line"><span class="string">      y (ndarray (m,)): target values</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    m = x.shape[<span class="number">0</span>]</span><br><span class="line">    f_wb = np.zeros_like(x)</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(m):</span><br><span class="line">        f_wb[i]=w*x[i]+b</span><br><span class="line">    <span class="keyword">return</span> f_wb</span><br><span class="line"><span class="comment"># 绘制输出</span></span><br><span class="line">tmp_f_wb = compute_model_output(x_train, w, b)</span><br><span class="line"><span class="comment"># Plot our model prediction</span></span><br><span class="line">plt.plot(x_train, tmp_f_wb, c=<span class="string">&#x27;b&#x27;</span>,label=<span class="string">&#x27;Our Prediction&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Plot the data points</span></span><br><span class="line"><span class="comment"># plt.scatter(x_train, y_train, marker=&#x27;x&#x27;, c=&#x27;r&#x27;,label=&#x27;Actual Values&#x27;)        </span></span><br><span class="line"><span class="comment"># # Set the title</span></span><br><span class="line"><span class="comment"># plt.title(&quot;Housing Prices&quot;)</span></span><br><span class="line"><span class="comment"># # Set the y-axis label</span></span><br><span class="line"><span class="comment"># plt.ylabel(&#x27;Price (in 1000s of dollars)&#x27;)</span></span><br><span class="line"><span class="comment"># # Set the x-axis label</span></span><br><span class="line"><span class="comment"># plt.xlabel(&#x27;Size (1000 sqft)&#x27;)</span></span><br><span class="line"><span class="comment"># plt.legend()</span></span><br><span class="line"><span class="comment"># plt.show()</span></span><br><span class="line"><span class="comment"># Prediction并显示在图中</span></span><br><span class="line">x_i = <span class="number">1.2</span></span><br><span class="line">cost_1200sqft = w * x_i + b    </span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;$<span class="subst">&#123;cost_1200sqft:<span class="number">.0</span>f&#125;</span> thousand dollars&quot;</span>)</span><br><span class="line">plt.scatter(x_i, cost_1200sqft, marker=<span class="string">&#x27;x&#x27;</span>, c=<span class="string">&#x27;green&#x27;</span>,s=<span class="number">80</span>,label=<span class="string">&#x27;Prediction Values&#x27;</span>)  </span><br><span class="line">plt.legend()      </span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><h2 id="成本函数">成本函数</h2><p>基于C1_W1_Lab04_Cost_function_Soln<br>一个变量的成本等式为：</p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mtable width="100%"><mtr><mtd width="50%"></mtd><mtd><mrow><mi>J</mi><mo stretchy="false">(</mo><mi>w</mi><mo separator="true">,</mo><mi>b</mi><mo stretchy="false">)</mo><mo>=</mo><mfrac><mn>1</mn><mrow><mn>2</mn><mi>m</mi></mrow></mfrac><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>0</mn></mrow><mrow><mi>m</mi><mo>−</mo><mn>1</mn></mrow></munderover><mo stretchy="false">(</mo><msub><mi>f</mi><mrow><mi>w</mi><mo separator="true">,</mo><mi>b</mi></mrow></msub><mo stretchy="false">(</mo><msup><mi>x</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><mo stretchy="false">)</mo><mo>−</mo><msup><mi>y</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><msup><mo stretchy="false">)</mo><mn>2</mn></msup></mrow></mtd><mtd width="50%"></mtd><mtd><mtext>(1)</mtext></mtd></mtr></mtable><annotation encoding="application/x-tex">J(w,b) = \frac{1}{2m} \sum\limits_{i = 0}^{m-1} (f_{w,b}(x^{(i)}) - y^{(i)})^2 \tag{1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.09618em;">J</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">b</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.0787820000000004em;vertical-align:-1.277669em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span><span class="mord mathdefault">m</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8011130000000004em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">0</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.300005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">m</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.277669em;"><span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight">b</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathdefault mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.188em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathdefault mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span><span class="tag"><span class="strut" style="height:3.0787820000000004em;vertical-align:-1.277669em;"></span><span class="mord text"><span class="mord">(</span><span class="mord"><span class="mord">1</span></span><span class="mord">)</span></span></span></span></span></span></p><p>成本是衡量模型在训练数据上的准确程度的一个指标<br>这个模块是matplotlib中的GUI模块，可以通过调整bottom来实时改变显示的结果 <a href="https://blog.csdn.net/gushiyi27/article/details/122902813">matplotlib.widgets</a><br><code>from lab_utils_uni import plt_intuition, plt_stationary, plt_update_onclick, soup_bowl</code>用于引入lab_utils_uni.py内的各个函数  py中的指数运算使用<code>**</code>而不是^自定义函数plt_intuition详解：<br>w_array = np.arange(*w_range, 5) 相当于 w_array = np.arange(0,400, 5) 5为步长 <code>@interact(w=(*w_range,10),continuous_update=False)</code>这段代码提供交互功能，10为滑动的步长</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">plt_intuition</span>(<span class="params">x_train, y_train</span>):</span><br><span class="line"></span><br><span class="line">    w_range = np.array([<span class="number">200</span>-<span class="number">200</span>,<span class="number">200</span>+<span class="number">200</span>]) <span class="comment"># 0-400</span></span><br><span class="line">    tmp_b = <span class="number">100</span></span><br><span class="line"></span><br><span class="line">    w_array = np.arange(*w_range, <span class="number">5</span>) </span><br><span class="line">    cost = np.zeros_like(w_array)</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(w_array)):</span><br><span class="line">        tmp_w = w_array[i]</span><br><span class="line">        cost[i] = compute_cost(x_train, y_train, tmp_w, tmp_b)</span><br><span class="line"></span><br><span class="line"><span class="meta">    @interact(<span class="params">w=(<span class="params">*w_range,<span class="number">10</span></span>),continuous_update=<span class="literal">False</span></span>)</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">func</span>(<span class="params"> w=<span class="number">150</span></span>): <span class="comment">#默认以w=150绘制函数</span></span><br><span class="line">        f_wb = np.dot(x_train, w) + tmp_b</span><br><span class="line"></span><br><span class="line">        fig, ax = plt.subplots(<span class="number">1</span>, <span class="number">2</span>, constrained_layout=<span class="literal">True</span>, figsize=(<span class="number">8</span>,<span class="number">4</span>))</span><br><span class="line">        fig.canvas.toolbar_position = <span class="string">&#x27;bottom&#x27;</span></span><br><span class="line"></span><br><span class="line">        mk_cost_lines(x_train, y_train, w, tmp_b, ax[<span class="number">0</span>])</span><br><span class="line">        plt_house_x(x_train, y_train, f_wb=f_wb, ax=ax[<span class="number">0</span>])</span><br><span class="line">        <span class="comment">#对第二个图绘制曲线</span></span><br><span class="line">        ax[<span class="number">1</span>].plot(w_array, cost)</span><br><span class="line">        cur_cost = compute_cost(x_train, y_train, w, tmp_b)</span><br><span class="line">        ax[<span class="number">1</span>].scatter(w,cur_cost, s=<span class="number">100</span>, color=dldarkred, zorder= <span class="number">10</span>, label= <span class="string">f&quot;cost at w=<span class="subst">&#123;w&#125;</span>&quot;</span>)</span><br><span class="line">        ax[<span class="number">1</span>].hlines(cur_cost, ax[<span class="number">1</span>].get_xlim()[<span class="number">0</span>],w, lw=<span class="number">4</span>, color=dlpurple, ls=<span class="string">&#x27;dotted&#x27;</span>)</span><br><span class="line">        ax[<span class="number">1</span>].vlines(w, ax[<span class="number">1</span>].get_ylim()[<span class="number">0</span>],cur_cost, lw=<span class="number">4</span>, color=dlpurple, ls=<span class="string">&#x27;dotted&#x27;</span>)</span><br><span class="line">        ax[<span class="number">1</span>].set_title(<span class="string">&quot;Cost vs. w, (b fixed at 100)&quot;</span>)</span><br><span class="line">        ax[<span class="number">1</span>].set_ylabel(<span class="string">&#x27;Cost&#x27;</span>)</span><br><span class="line">        ax[<span class="number">1</span>].set_xlabel(<span class="string">&#x27;w&#x27;</span>)</span><br><span class="line">        ax[<span class="number">1</span>].legend(loc=<span class="string">&#x27;upper center&#x27;</span>)</span><br><span class="line">        fig.suptitle(<span class="string">f&quot;Minimize Cost: Current Cost = <span class="subst">&#123;cur_cost:<span class="number">0.0</span>f&#125;</span>&quot;</span>, fontsize=<span class="number">12</span>)</span><br><span class="line">        plt.show()</span><br></pre></td></tr></table></figure><p>总体代码：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">from</span> lab_utils_uni <span class="keyword">import</span> plt_intuition, plt_stationary, plt_update_onclick, soup_bowl</span><br><span class="line">plt.style.use(<span class="string">&#x27;./deeplearning.mplstyle&#x27;</span>)</span><br><span class="line">x_train=np.array([<span class="number">1</span>,<span class="number">2</span>])</span><br><span class="line">y_train=np.array([<span class="number">300</span>,<span class="number">500</span>])</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">compute_cost</span>(<span class="params">x, y, w, b</span>): </span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    Computes the cost function for linear regression.</span></span><br><span class="line"><span class="string">    </span></span><br><span class="line"><span class="string">    Args:</span></span><br><span class="line"><span class="string">      x (ndarray (m,)): Data, m examples </span></span><br><span class="line"><span class="string">      y (ndarray (m,)): target values</span></span><br><span class="line"><span class="string">      w,b (scalar)    : model parameters  </span></span><br><span class="line"><span class="string">    </span></span><br><span class="line"><span class="string">    Returns</span></span><br><span class="line"><span class="string">        total_cost (float): The cost of using w,b as the parameters for linear regression</span></span><br><span class="line"><span class="string">               to fit the data points in x and y</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    m=<span class="built_in">len</span>(x)</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(m):</span><br><span class="line">        cost=x[i]*w+b-y[i]</span><br><span class="line">        cost_sum+=cost**<span class="number">2</span></span><br><span class="line">    cost_total=(<span class="number">1</span> / (<span class="number">2</span> * m)) * cost_sum  </span><br><span class="line">    <span class="keyword">return</span> cost_total</span><br><span class="line">plt_intuition(x_train,y_train)</span><br><span class="line"><span class="comment">#更多数据</span></span><br><span class="line">x_train = np.array([<span class="number">1.0</span>, <span class="number">1.7</span>, <span class="number">2.0</span>, <span class="number">2.5</span>, <span class="number">3.0</span>, <span class="number">3.2</span>])</span><br><span class="line">y_train = np.array([<span class="number">250</span>, <span class="number">300</span>, <span class="number">480</span>,  <span class="number">430</span>,   <span class="number">630</span>, <span class="number">730</span>,])</span><br><span class="line">plt.close(<span class="string">&#x27;all&#x27;</span>) </span><br><span class="line">fig, ax, dyn_items = plt_stationary(x_train, y_train)</span><br><span class="line">updater = plt_update_onclick(fig, ax, x_train, y_train, dyn_items)</span><br><span class="line">soup_bowl()</span><br></pre></td></tr></table></figure><h2 id="线性回归的梯度下降">线性回归的梯度下降</h2><p>C1_W1_Lab05_Gradient_Descent_Soln<br><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>f</mi><mrow><mi>w</mi><mo separator="true">,</mo><mi>b</mi></mrow></msub><mo stretchy="false">(</mo><msup><mi>x</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">f_{w,b}(x^{(i)})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.174108em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight">b</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8879999999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathdefault mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>:</p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mtable width="100%"><mtr><mtd width="50%"></mtd><mtd><mrow><msub><mi>f</mi><mrow><mi>w</mi><mo separator="true">,</mo><mi>b</mi></mrow></msub><mo stretchy="false">(</mo><msup><mi>x</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><mo stretchy="false">)</mo><mo>=</mo><mi>w</mi><msup><mi>x</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><mo>+</mo><mi>b</mi></mrow></mtd><mtd width="50%"></mtd><mtd><mtext>(1)</mtext></mtd></mtr></mtable><annotation encoding="application/x-tex">f_{w,b}(x^{(i)}) = wx^{(i)} + b\tag{1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.224108em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight">b</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathdefault mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.0213299999999998em;vertical-align:-0.08333em;"></span><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathdefault mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">b</span></span><span class="tag"><span class="strut" style="height:1.224108em;vertical-align:-0.286108em;"></span><span class="mord text"><span class="mord">(</span><span class="mord"><span class="mord">1</span></span><span class="mord">)</span></span></span></span></span></span></p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mtable width="100%"><mtr><mtd width="50%"></mtd><mtd><mrow><mi>J</mi><mo stretchy="false">(</mo><mi>w</mi><mo separator="true">,</mo><mi>b</mi><mo stretchy="false">)</mo><mo>=</mo><mfrac><mn>1</mn><mrow><mn>2</mn><mi>m</mi></mrow></mfrac><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>0</mn></mrow><mrow><mi>m</mi><mo>−</mo><mn>1</mn></mrow></munderover><mo stretchy="false">(</mo><msub><mi>f</mi><mrow><mi>w</mi><mo separator="true">,</mo><mi>b</mi></mrow></msub><mo stretchy="false">(</mo><msup><mi>x</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><mo stretchy="false">)</mo><mo>−</mo><msup><mi>y</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><msup><mo stretchy="false">)</mo><mn>2</mn></msup></mrow></mtd><mtd width="50%"></mtd><mtd><mtext>(2)</mtext></mtd></mtr></mtable><annotation encoding="application/x-tex">J(w,b) = \frac{1}{2m} \sum\limits_{i = 0}^{m-1} (f_{w,b}(x^{(i)}) - y^{(i)})^2\tag{2}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.09618em;">J</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">b</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.0787820000000004em;vertical-align:-1.277669em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span><span class="mord mathdefault">m</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8011130000000004em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">0</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.300005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">m</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.277669em;"><span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight">b</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathdefault mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.188em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathdefault mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span><span class="tag"><span class="strut" style="height:3.0787820000000004em;vertical-align:-1.277669em;"></span><span class="mord text"><span class="mord">(</span><span class="mord"><span class="mord">2</span></span><span class="mord">)</span></span></span></span></span></span></p><p class='katex-block katex-error' title='ParseError: KaTeX parse error: No such environment: align* at position 7: \begin{̲a̲l̲i̲g̲n̲*̲}̲ \text{repeat}&amp;…'>\begin{align*} \text{repeat}&amp;\text{ until convergence:} \; \lbrace \newline\;  w &amp;= w -  \alpha \frac{\partial J(w,b)}{\partial w} \tag{3}  \; \newline  b &amp;= b -  \alpha \frac{\partial J(w,b)}{\partial b}  \newline \rbrace\end{align*}</p><p class='katex-block katex-error' title='ParseError: KaTeX parse error: No such environment: align at position 7: \begin{̲a̲l̲i̲g̲n̲}̲\frac{\partial…'>\begin{align}\frac{\partial J(w,b)}{\partial w}  &amp;= \frac{1}{m} \sum\limits_{i = 0}^{m-1} (f_{w,b}(x^{(i)}) - y^{(i)})x^{(i)} \tag{4}\\ \frac{\partial J(w,b)}{\partial b}  &amp;= \frac{1}{m} \sum\limits_{i = 0}^{m-1} (f_{w,b}(x^{(i)}) - y^{(i)}) \tag{5}\\ \end{align}</p><p>梯度下降需要同时更新，因此在代码中需要将等式左边的<code>w</code>写成<code>temp_w</code>，<code>b</code>写成<code>temp_b</code>以免交错更新<br>linspace(start, stop, num=50, endpoint=True, retstep=False, dtype=None）<br>作用：在指定的大间隔内（start，stop），返回固定间隔的数据间隔不一定是整数。他们返回num个等间距的样本。<br>append() 函数可以向列表末尾添加「任意类型」的元素  <a href="https://blog.csdn.net/wangyuxiang946/article/details/122142534">append()函数使用详解</a><br>下面的a = [1,2,3,4,5] a[-1]=5表示列表最后一项  Math.ceil()  “向上取整”， 即小数部分直接舍去，并向正数部分进1,Math.round()  “四舍五入”， 该函数返回的是一个四舍五入后的的整数,Math.floor()  “向下取整” ，即小数部分直接舍去,输出迭代周期内的10次结果:先将迭代次数num_iters/10并舍小数取余数=0即可<br>总体代码</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> math, copy</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line">plt.style.use(<span class="string">&#x27;./deeplearning.mplstyle&#x27;</span>)</span><br><span class="line"><span class="keyword">from</span> lab_utils_uni <span class="keyword">import</span> plt_house_x, plt_contour_wgrad, plt_divergence, plt_gradients</span><br><span class="line"><span class="comment"># Load our data set</span></span><br><span class="line">x_train = np.array([<span class="number">1.0</span>, <span class="number">2.0</span>])   <span class="comment">#features</span></span><br><span class="line">y_train = np.array([<span class="number">300.0</span>, <span class="number">500.0</span>])   <span class="comment">#target value</span></span><br><span class="line"><span class="comment">#Function to calculate the cost</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">compute_cost</span>(<span class="params">x, y, w, b</span>):</span><br><span class="line">   </span><br><span class="line">    m = x.shape[<span class="number">0</span>] </span><br><span class="line">    cost = <span class="number">0</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(m):</span><br><span class="line">        f_wb = w * x[i] + b</span><br><span class="line">        cost = cost + (f_wb - y[i])**<span class="number">2</span></span><br><span class="line">    total_cost = <span class="number">1</span> / (<span class="number">2</span> * m) * cost</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> total_cost</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">compute_gradient</span>(<span class="params">x, y, w, b</span>): </span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    Computes the gradient for linear regression </span></span><br><span class="line"><span class="string">    Args:</span></span><br><span class="line"><span class="string">      x (ndarray (m,)): Data, m examples </span></span><br><span class="line"><span class="string">      y (ndarray (m,)): target values</span></span><br><span class="line"><span class="string">      w,b (scalar)    : model parameters  </span></span><br><span class="line"><span class="string">    Returns</span></span><br><span class="line"><span class="string">      dj_dw (scalar): The gradient of the cost w.r.t. the parameters w</span></span><br><span class="line"><span class="string">      dj_db (scalar): The gradient of the cost w.r.t. the parameter b     </span></span><br><span class="line"><span class="string">     &quot;&quot;&quot;</span></span><br><span class="line">    m=x.shape[<span class="number">0</span>]</span><br><span class="line">    dj_dw=dj_db=<span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(m):</span><br><span class="line">        dj_dw_temp=(<span class="number">1</span>/m)*(w*x[i]+b-y[i])*x[i]</span><br><span class="line">        dj_db_temp=(<span class="number">1</span>/m)*(w*x[i]+b-y[i])</span><br><span class="line">        dj_dw+=dj_dw_temp</span><br><span class="line">        dj_db+=dj_db_temp</span><br><span class="line">    <span class="keyword">return</span> dj_dw,dj_db</span><br><span class="line">plt_gradients(x_train,y_train, compute_cost, compute_gradient)</span><br><span class="line">plt.show()</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">gradient_descent</span>(<span class="params">x, y, w_in, b_in, alpha, num_iters, cost_function, gradient_function</span>): </span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    Performs batch gradient descent to fit w,b. Updates w,b by taking </span></span><br><span class="line"><span class="string">    num_iters gradient steps with learning rate alpha</span></span><br><span class="line"><span class="string">    </span></span><br><span class="line"><span class="string">    Args:</span></span><br><span class="line"><span class="string">      x (ndarray (m,))  : Data, m examples </span></span><br><span class="line"><span class="string">      y (ndarray (m,))  : target values</span></span><br><span class="line"><span class="string">      w_in,b_in (scalar): initial values of model parameters  </span></span><br><span class="line"><span class="string">      alpha (float):     Learning rate</span></span><br><span class="line"><span class="string">      num_iters (int):   number of iterations to run gradient descent</span></span><br><span class="line"><span class="string">      cost_function:     function to call to produce cost</span></span><br><span class="line"><span class="string">      gradient_function: function to call to produce gradient</span></span><br><span class="line"><span class="string">      </span></span><br><span class="line"><span class="string">    Returns:</span></span><br><span class="line"><span class="string">      w (scalar): Updated value of parameter after running gradient descent</span></span><br><span class="line"><span class="string">      b (scalar): Updated value of parameter after running gradient descent</span></span><br><span class="line"><span class="string">      J_history (List): History of cost values</span></span><br><span class="line"><span class="string">      p_history (list): History of parameters [w,b] </span></span><br><span class="line"><span class="string">      &quot;&quot;&quot;</span></span><br><span class="line">    w=w_in</span><br><span class="line">    b=b_in</span><br><span class="line">    J_history=[]</span><br><span class="line">    p_history=[]</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(num_iters):</span><br><span class="line">        dj_dw,dj_db=gradient_function(x,y,w,b)</span><br><span class="line">        w=w-alpha*dj_dw</span><br><span class="line">        b=b-alpha*dj_db</span><br><span class="line">        <span class="keyword">if</span> i&lt;=<span class="number">100000</span>:</span><br><span class="line">            J_history.append(cost_function(x,y,w,b))</span><br><span class="line">            p_history.append([w,b])</span><br><span class="line">        <span class="comment"># Print cost every at intervals 10 times or as many iterations if &lt; 10</span></span><br><span class="line">        <span class="keyword">if</span> i% math.ceil(num_iters/<span class="number">10</span>) == <span class="number">0</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="built_in">print</span>(<span class="string">f&quot;Iteration <span class="subst">&#123;i:<span class="number">4</span>&#125;</span>: Cost <span class="subst">&#123;J_history[-<span class="number">1</span>]:<span class="number">0.2</span>e&#125;</span> &quot;</span>,</span><br><span class="line">                  <span class="string">f&quot;dj_dw: <span class="subst">&#123;dj_dw: <span class="number">0.3</span>e&#125;</span>, dj_db: <span class="subst">&#123;dj_db: <span class="number">0.3</span>e&#125;</span>  &quot;</span>,</span><br><span class="line">                  <span class="string">f&quot;w: <span class="subst">&#123;w: <span class="number">0.3</span>e&#125;</span>, b:<span class="subst">&#123;b: <span class="number">0.5</span>e&#125;</span>&quot;</span>))</span><br><span class="line">    <span class="keyword">return</span> w,b,J_history,p_history</span><br><span class="line">plt.close()</span><br><span class="line">w_i=<span class="number">0</span></span><br><span class="line">b_i=<span class="number">0</span></span><br><span class="line">internal=<span class="number">5000</span></span><br><span class="line">alpha=<span class="number">0.02</span></span><br><span class="line">w_f,b_f,J_h,p_h=gradient_descent(x_train,y_train,w_i,b_i,alpha,internal,compute_cost,compute_gradient)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&#x27;迭代完成后最终w=<span class="subst">&#123;w_f&#125;</span>,b=<span class="subst">&#123;b_f&#125;</span>&#x27;</span>)</span><br><span class="line"><span class="comment"># plot cost versus iteration  </span></span><br><span class="line">fig, (ax1, ax2) = plt.subplots(<span class="number">1</span>, <span class="number">2</span>, constrained_layout=<span class="literal">True</span>, figsize=(<span class="number">12</span>,<span class="number">4</span>))</span><br><span class="line">ax1.plot(J_h)</span><br><span class="line">ax2.plot(<span class="number">1000</span> + np.arange(<span class="built_in">len</span>(J_h[<span class="number">1000</span>:])), J_h[<span class="number">1000</span>:]) <span class="comment">#第1000次开始的成本</span></span><br><span class="line">a=<span class="number">1000</span> + np.arange(<span class="built_in">len</span>(J_h[<span class="number">1000</span>:]))</span><br><span class="line">b=J_h[<span class="number">1000</span>:]</span><br><span class="line">a1=<span class="built_in">len</span>(a); b1=<span class="built_in">len</span>(b)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&#x27;第二张图的横坐标为<span class="subst">&#123;a&#125;</span>,横纵坐标数组长度分别为<span class="subst">&#123;a1&#125;</span>,<span class="subst">&#123;b1&#125;</span>&#x27;</span>) <span class="comment">#打印第二张图的横坐标</span></span><br><span class="line">ax1.set_title(<span class="string">&quot;Cost vs. iteration&quot;</span>);  ax2.set_title(<span class="string">&quot;Cost vs. iteration (tail)&quot;</span>)</span><br><span class="line">ax1.set_ylabel(<span class="string">&#x27;Cost&#x27;</span>)            ;  ax2.set_ylabel(<span class="string">&#x27;Cost&#x27;</span>) </span><br><span class="line">ax1.set_xlabel(<span class="string">&#x27;iteration step&#x27;</span>)  ;  ax2.set_xlabel(<span class="string">&#x27;iteration step&#x27;</span>) </span><br><span class="line">plt.show()</span><br><span class="line"><span class="comment"># 使用迭代后的w,b预测</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;1000 sqft house prediction <span class="subst">&#123;w_f*<span class="number">1.0</span> + b_f:<span class="number">0.1</span>f&#125;</span> Thousand dollars&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;1200 sqft house prediction <span class="subst">&#123;w_f*<span class="number">1.2</span> + b_f:<span class="number">0.1</span>f&#125;</span> Thousand dollars&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;2000 sqft house prediction <span class="subst">&#123;w_f*<span class="number">2.0</span> + b_f:<span class="number">0.1</span>f&#125;</span> Thousand dollars&quot;</span>)</span><br></pre></td></tr></table></figure><h2 id="多元变量线性回归">多元变量线性回归</h2><p>基于C1_W2_Lab02_Multiple_Variable_Soln</p><table><thead><tr><th>Size (sqft)</th><th>Number of Bedrooms</th><th>Number of floors</th><th>Age of  Home</th><th>Price (1000s dollars)</th></tr></thead><tbody><tr><td>2104</td><td>5</td><td>1</td><td>45</td><td>460</td></tr><tr><td>1416</td><td>3</td><td>2</td><td>40</td><td>232</td></tr><tr><td>852</td><td>2</td><td>1</td><td>35</td><td>178</td></tr></tbody></table><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="bold">X</mi><mo>=</mo><mrow><mo fence="true">(</mo><mtable rowspacing="0.15999999999999992em" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msubsup><mi>x</mi><mn>0</mn><mrow><mo stretchy="false">(</mo><mn>0</mn><mo stretchy="false">)</mo></mrow></msubsup></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msubsup><mi>x</mi><mn>1</mn><mrow><mo stretchy="false">(</mo><mn>0</mn><mo stretchy="false">)</mo></mrow></msubsup></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mo lspace="0em" rspace="0em">⋯</mo></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msubsup><mi>x</mi><mrow><mi>n</mi><mo>−</mo><mn>1</mn></mrow><mrow><mo stretchy="false">(</mo><mn>0</mn><mo stretchy="false">)</mo></mrow></msubsup></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msubsup><mi>x</mi><mn>0</mn><mrow><mo stretchy="false">(</mo><mn>1</mn><mo stretchy="false">)</mo></mrow></msubsup></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msubsup><mi>x</mi><mn>1</mn><mrow><mo stretchy="false">(</mo><mn>1</mn><mo stretchy="false">)</mo></mrow></msubsup></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mo lspace="0em" rspace="0em">⋯</mo></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msubsup><mi>x</mi><mrow><mi>n</mi><mo>−</mo><mn>1</mn></mrow><mrow><mo stretchy="false">(</mo><mn>1</mn><mo stretchy="false">)</mo></mrow></msubsup></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mo lspace="0em" rspace="0em">⋯</mo></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msubsup><mi>x</mi><mn>0</mn><mrow><mo stretchy="false">(</mo><mi>m</mi><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo></mrow></msubsup></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msubsup><mi>x</mi><mn>1</mn><mrow><mo stretchy="false">(</mo><mi>m</mi><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo></mrow></msubsup></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mo lspace="0em" rspace="0em">⋯</mo></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msubsup><mi>x</mi><mrow><mi>n</mi><mo>−</mo><mn>1</mn></mrow><mrow><mo stretchy="false">(</mo><mi>m</mi><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo></mrow></msubsup></mstyle></mtd></mtr></mtable><mo fence="true">)</mo></mrow></mrow><annotation encoding="application/x-tex">\mathbf{X} = \begin{pmatrix} x^{(0)}_0 &amp; x^{(0)}_1 &amp; \cdots &amp; x^{(0)}_{n-1} \\  x^{(1)}_0 &amp; x^{(1)}_1 &amp; \cdots &amp; x^{(1)}_{n-1} \\ \cdots \\ x^{(m-1)}_0 &amp; x^{(m-1)}_1 &amp; \cdots &amp; x^{(m-1)}_{n-1} \end{pmatrix}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68611em;vertical-align:0em;"></span><span class="mord"><span class="mord mathbf">X</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:5.4144000000000005em;vertical-align:-2.4572000000000003em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.950035em;"><span style="top:-1.3499850000000007em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎝</span></span></span><span style="top:-2.4999950000000006em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎜</span></span></span><span style="top:-3.0950050000000005em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎜</span></span></span><span style="top:-3.6900150000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎜</span></span></span><span style="top:-3.7100150000000007em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎜</span></span></span><span style="top:-4.950035000000001em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎛</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.4500349999999997em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.9572000000000007em;"><span style="top:-4.957200000000001em;"><span class="pstrut" style="height:3.0448em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0448em;"><span style="top:-2.433692em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span><span style="top:-3.2198em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mtight">0</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.26630799999999993em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.5524em;"><span class="pstrut" style="height:3.0448em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0448em;"><span style="top:-2.433692em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span><span style="top:-3.2198em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mtight">1</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.26630799999999993em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.3524000000000003em;"><span class="pstrut" style="height:3.0448em;"></span><span class="mord"><span class="minner">⋯</span></span></span><span style="top:-0.9475999999999998em;"><span class="pstrut" style="height:3.0448em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0448em;"><span style="top:-2.433692em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span><span style="top:-3.2198em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathdefault mtight">m</span><span class="mbin mtight">−</span><span class="mord mtight">1</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.26630799999999993em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.4572000000000003em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.9572000000000007em;"><span style="top:-4.957200000000001em;"><span class="pstrut" style="height:3.0448em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0448em;"><span style="top:-2.433692em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span><span style="top:-3.2198em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mtight">0</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.26630799999999993em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.5524em;"><span class="pstrut" style="height:3.0448em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0448em;"><span style="top:-2.433692em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span><span style="top:-3.2198em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mtight">1</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.26630799999999993em;"><span></span></span></span></span></span></span></span></span><span style="top:-0.9475999999999998em;"><span class="pstrut" style="height:3.0448em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0448em;"><span style="top:-2.433692em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span><span style="top:-3.2198em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathdefault mtight">m</span><span class="mbin mtight">−</span><span class="mord mtight">1</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.26630799999999993em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.4572000000000003em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.9572000000000007em;"><span style="top:-4.957200000000001em;"><span class="pstrut" style="height:3.0448em;"></span><span class="mord"><span class="minner">⋯</span></span></span><span style="top:-3.5524em;"><span class="pstrut" style="height:3.0448em;"></span><span class="mord"><span class="minner">⋯</span></span></span><span style="top:-0.9475999999999998em;"><span class="pstrut" style="height:3.0448em;"></span><span class="mord"><span class="minner">⋯</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.4572000000000003em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.9572000000000007em;"><span style="top:-4.957200000000001em;"><span class="pstrut" style="height:3.0448em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0448em;"><span style="top:-2.433692em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2198em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mtight">0</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3246389999999999em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.5524em;"><span class="pstrut" style="height:3.0448em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0448em;"><span style="top:-2.433692em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2198em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mtight">1</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3246389999999999em;"><span></span></span></span></span></span></span></span></span><span style="top:-0.9475999999999998em;"><span class="pstrut" style="height:3.0448em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0448em;"><span style="top:-2.433692em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2198em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathdefault mtight">m</span><span class="mbin mtight">−</span><span class="mord mtight">1</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3246389999999999em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.4572000000000003em;"><span></span></span></span></span></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.950035em;"><span style="top:-1.3499850000000007em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎠</span></span></span><span style="top:-2.4999950000000006em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎟</span></span></span><span style="top:-3.0950050000000005em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎟</span></span></span><span style="top:-3.6900150000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎟</span></span></span><span style="top:-3.7100150000000007em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎟</span></span></span><span style="top:-4.950035000000001em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎞</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.4500349999999997em;"><span></span></span></span></span></span></span></span></span></span></span></span></p><p>notation:</p><ul><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi mathvariant="bold">x</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup></mrow><annotation encoding="application/x-tex">\mathbf{x}^{(i)}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8879999999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord"><span class="mord mathbf">x</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8879999999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathdefault mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span></span></span></span> is vector containing example i. <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi mathvariant="bold">x</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup></mrow><annotation encoding="application/x-tex">\mathbf{x}^{(i)}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8879999999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord"><span class="mord mathbf">x</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8879999999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathdefault mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span></span></span></span> <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>=</mo><mo stretchy="false">(</mo><msubsup><mi>x</mi><mn>0</mn><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msubsup><mo separator="true">,</mo><msubsup><mi>x</mi><mn>1</mn><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msubsup><mo separator="true">,</mo><mo>⋯</mo><mtext> </mtext><mo separator="true">,</mo><msubsup><mi>x</mi><mrow><mi>n</mi><mo>−</mo><mn>1</mn></mrow><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msubsup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">= (x^{(i)}_0, x^{(i)}_1, \cdots,x^{(i)}_{n-1})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.3694389999999999em;vertical-align:-0.3246389999999999em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0448em;"><span style="top:-2.433692em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span><span style="top:-3.2198em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathdefault mtight">i</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.26630799999999993em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0448em;"><span style="top:-2.433692em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span><span style="top:-3.2198em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathdefault mtight">i</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.26630799999999993em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner">⋯</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0448em;"><span style="top:-2.433692em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2198em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathdefault mtight">i</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3246389999999999em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></li><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mi>x</mi><mi>j</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msubsup></mrow><annotation encoding="application/x-tex">x^{(i)}_j</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.4577719999999998em;vertical-align:-0.4129719999999999em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0448em;"><span style="top:-2.4231360000000004em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span><span style="top:-3.2198em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathdefault mtight">i</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4129719999999999em;"><span></span></span></span></span></span></span></span></span></span> is element j in example i. The superscript in parenthesis indicates the example number while the subscript represents an element.</li></ul><ul><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="bold">w</mi></mrow><annotation encoding="application/x-tex">\mathbf{w}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.44444em;vertical-align:0em;"></span><span class="mord"><span class="mord mathbf" style="margin-right:0.01597em;">w</span></span></span></span></span> is a vector with <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">n</span></span></span></span> elements.<ul><li>Each element contains the parameter associated with one feature.</li><li>in our dataset, n is 4.</li><li>notionally, we draw this as a column vector</li></ul></li></ul><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="bold">w</mi><mo>=</mo><mrow><mo fence="true">(</mo><mtable rowspacing="0.15999999999999992em" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>w</mi><mn>0</mn></msub></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>w</mi><mn>1</mn></msub></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mo lspace="0em" rspace="0em">⋯</mo></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>w</mi><mrow><mi>n</mi><mo>−</mo><mn>1</mn></mrow></msub></mstyle></mtd></mtr></mtable><mo fence="true">)</mo></mrow></mrow><annotation encoding="application/x-tex">\mathbf{w} = \begin{pmatrix}w_0 \\ w_1 \\\cdots\\w_{n-1}\end{pmatrix}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.44444em;vertical-align:0em;"></span><span class="mord"><span class="mord mathbf" style="margin-right:0.01597em;">w</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:4.80006em;vertical-align:-2.15003em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6500299999999997em;"><span style="top:-1.6499900000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎝</span></span></span><span style="top:-2.8000000000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎜</span></span></span><span style="top:-3.39501em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎜</span></span></span><span style="top:-3.41001em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎜</span></span></span><span style="top:-4.65003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎛</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.15003em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6500000000000004em;"><span style="top:-4.8100000000000005em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="minner">⋯</span></span></span><span style="top:-1.2099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.1500000000000004em;"><span></span></span></span></span></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6500299999999997em;"><span style="top:-1.6499900000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎠</span></span></span><span style="top:-2.8000000000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎟</span></span></span><span style="top:-3.39501em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎟</span></span></span><span style="top:-3.41001em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎟</span></span></span><span style="top:-4.65003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎞</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.15003em;"><span></span></span></span></span></span></span></span></span></span></span></span></p><ul><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>b</mi></mrow><annotation encoding="application/x-tex">b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">b</span></span></span></span> is a scalar parameter.<br>The model's prediction with multiple variables is given by the linear model:</li></ul><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mtable width="100%"><mtr><mtd width="50%"></mtd><mtd><mrow><msub><mi>f</mi><mrow><mi mathvariant="bold">w</mi><mo separator="true">,</mo><mi>b</mi></mrow></msub><mo stretchy="false">(</mo><mi mathvariant="bold">x</mi><mo stretchy="false">)</mo><mo>=</mo><msub><mi>w</mi><mn>0</mn></msub><msub><mi>x</mi><mn>0</mn></msub><mo>+</mo><msub><mi>w</mi><mn>1</mn></msub><msub><mi>x</mi><mn>1</mn></msub><mo>+</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo>+</mo><msub><mi>w</mi><mrow><mi>n</mi><mo>−</mo><mn>1</mn></mrow></msub><msub><mi>x</mi><mrow><mi>n</mi><mo>−</mo><mn>1</mn></mrow></msub><mo>+</mo><mi>b</mi></mrow></mtd><mtd width="50%"></mtd><mtd><mtext>(1)</mtext></mtd></mtr></mtable><annotation encoding="application/x-tex">f_{\mathbf{w},b}(\mathbf{x}) =  w_0x_0 + w_1x_1 +... + w_{n-1}x_{n-1} + b \tag{1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathbf mtight" style="margin-right:0.01597em;">w</span></span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight">b</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathbf">x</span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.73333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.73333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord">.</span><span class="mord">.</span><span class="mord">.</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.791661em;vertical-align:-0.208331em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">b</span></span><span class="tag"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mord text"><span class="mord">(</span><span class="mord"><span class="mord">1</span></span><span class="mord">)</span></span></span></span></span></span></p><p>or in vector notation:</p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mtable width="100%"><mtr><mtd width="50%"></mtd><mtd><mrow><msub><mi>f</mi><mrow><mi mathvariant="bold">w</mi><mo separator="true">,</mo><mi>b</mi></mrow></msub><mo stretchy="false">(</mo><mi mathvariant="bold">x</mi><mo stretchy="false">)</mo><mo>=</mo><mi mathvariant="bold">w</mi><mo>⋅</mo><mi mathvariant="bold">x</mi><mo>+</mo><mi>b</mi></mrow></mtd><mtd width="50%"></mtd><mtd><mtext>(2)</mtext></mtd></mtr></mtable><annotation encoding="application/x-tex">f_{\mathbf{w},b}(\mathbf{x}) = \mathbf{w} \cdot \mathbf{x} + b  \tag{2} </annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathbf mtight" style="margin-right:0.01597em;">w</span></span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight">b</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathbf">x</span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.44445em;vertical-align:0em;"></span><span class="mord"><span class="mord mathbf" style="margin-right:0.01597em;">w</span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathbf">x</span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">b</span></span><span class="tag"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mord text"><span class="mord">(</span><span class="mord"><span class="mord">2</span></span><span class="mord">)</span></span></span></span></span></span></p><p>np.set_printoptions()用于控制Python中小数的显示精度。<br><code>np.set_printoptions(precision=None, threshold=None,  linewidth=None, suppress=None, formatter=None)</code><br>1.precision：控制输出结果的精度(即小数点后的位数)，默认值为8<br>2.threshold：当数组元素总数过大时，设置显示的数字位数，其余用省略号代替(当数组元素总数大于设置值，控制输出值得个数为6个，当数组元素小于或者等于设置值得时候，全部显示)，当设置值为sys.maxsize(需要导入sys库)，则会输出所有元素<br>3.linewidth：每行字符的数目，其余的数值会换到下一行<br>4.suppress：小数是否需要以科学计数法的形式输出<br>5.formatter：自定义输出规则<br>x[:,n]表示在全部数组（维）中取第n个数据，直观来说，x[:,n]就是取所有集合的第n个数据, x[n,:]表示在n个数组（维）中取全部数据，直观来说，x[n,:]就是取第n集合的所有数据<br><a href="https://blog.csdn.net/qq_43403214/article/details/100585644">二维数组中整行、列的读取，操作如下：</a><br>a = np.array([(1,2,3),(4,5,6),(7,8,9)])<br>print(a[:,0])  #读取第一列<br>print(a[0])    #读取第一行<br>w可以赋值成n维数组，n是列数dj_dw=np.zeros((n,)),这里的<code>def compute_gradient(X, y, w, b): </code>要特别注意<br>总体代码：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> copy, math</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line">plt.style.use(<span class="string">&#x27;./deeplearning.mplstyle&#x27;</span>)</span><br><span class="line">np.set_printoptions(precision=<span class="number">2</span>)  <span class="comment"># reduced display precision on numpy arrays</span></span><br><span class="line">X_train = np.array([[<span class="number">2104</span>, <span class="number">5</span>, <span class="number">1</span>, <span class="number">45</span>], [<span class="number">1416</span>, <span class="number">3</span>, <span class="number">2</span>, <span class="number">40</span>], [<span class="number">852</span>, <span class="number">2</span>, <span class="number">1</span>, <span class="number">35</span>]])</span><br><span class="line">y_train = np.array([<span class="number">460</span>, <span class="number">232</span>, <span class="number">178</span>])</span><br><span class="line">b_init = <span class="number">785.1811367994083</span></span><br><span class="line">w_init = np.array([ <span class="number">0.39133535</span>, <span class="number">18.75376741</span>, -<span class="number">53.36032453</span>, -<span class="number">26.42131618</span>])</span><br><span class="line"><span class="built_in">print</span>(X_train[<span class="number">0</span>])</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">predict_single_loop</span>(<span class="params">x, w, b</span>): </span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    single predict using linear regression</span></span><br><span class="line"><span class="string">    </span></span><br><span class="line"><span class="string">    Args:</span></span><br><span class="line"><span class="string">      x (ndarray): Shape (n,) example with multiple features</span></span><br><span class="line"><span class="string">      w (ndarray): Shape (n,) model parameters    </span></span><br><span class="line"><span class="string">      b (scalar):  model parameter     </span></span><br><span class="line"><span class="string">      </span></span><br><span class="line"><span class="string">    Returns:</span></span><br><span class="line"><span class="string">      p (scalar):  prediction</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    f_wb=np.dot(x,w)+b</span><br><span class="line">    <span class="keyword">return</span> f_wb</span><br><span class="line">x_0=X_train[<span class="number">0</span>,:]</span><br><span class="line">Yp0=predict_single_loop(x_0,w_init,b_init)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&#x27;初始w,b下的多元一阶线性预测值：<span class="subst">&#123;Yp0&#125;</span>&#x27;</span>)</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">compute_cost</span>(<span class="params">X, y, w, b</span>): </span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    compute cost</span></span><br><span class="line"><span class="string">    Args:</span></span><br><span class="line"><span class="string">      X (ndarray (m,n)): Data, m examples with n features</span></span><br><span class="line"><span class="string">      y (ndarray (m,)) : target values</span></span><br><span class="line"><span class="string">      w (ndarray (n,)) : model parameters  </span></span><br><span class="line"><span class="string">      b (scalar)       : model parameter</span></span><br><span class="line"><span class="string">      </span></span><br><span class="line"><span class="string">    Returns:</span></span><br><span class="line"><span class="string">      cost (scalar): cost</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    m=<span class="built_in">len</span>(X)</span><br><span class="line">    f_wbi=<span class="number">0</span></span><br><span class="line">    cost1=<span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(m):</span><br><span class="line">        f_wbi=predict_single_loop(X[i],w,b)</span><br><span class="line">        cost0=(<span class="number">1</span>/(<span class="number">2</span>*m))*(f_wbi-y[i])**<span class="number">2</span></span><br><span class="line">        cost1=cost0+cost1</span><br><span class="line">    <span class="keyword">return</span> cost1</span><br><span class="line">cost_init=compute_cost(X_train,y_train,w_init,b_init)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&#x27;初始w,b下的多元一阶线性预测的成本为：<span class="subst">&#123;cost_init&#125;</span>&#x27;</span>)</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">compute_gradient</span>(<span class="params">X, y, w, b</span>): </span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    Computes the gradient for linear regression </span></span><br><span class="line"><span class="string">    Args:</span></span><br><span class="line"><span class="string">      X (ndarray (m,n)): Data, m examples with n features</span></span><br><span class="line"><span class="string">      y (ndarray (m,)) : target values</span></span><br><span class="line"><span class="string">      w (ndarray (n,)) : model parameters  </span></span><br><span class="line"><span class="string">      b (scalar)       : model parameter</span></span><br><span class="line"><span class="string">      </span></span><br><span class="line"><span class="string">    Returns:</span></span><br><span class="line"><span class="string">      dj_dw (ndarray (n,)): The gradient of the cost w.r.t. the parameters w. </span></span><br><span class="line"><span class="string">      dj_db (scalar):       The gradient of the cost w.r.t. the parameter b. </span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    m,n = X.shape           <span class="comment">#(number of examples, number of features)</span></span><br><span class="line">    dj_dw=np.zeros((n,))</span><br><span class="line">    dj_db=<span class="number">0</span>       </span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(m): </span><br><span class="line">        f_wbi=predict_single_loop(X[i],w,b)</span><br><span class="line">        err=(<span class="number">1</span>/m)*(f_wbi-y[i])</span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(n):</span><br><span class="line">            dj_dw[j]=err*X[i,j]+dj_dw[j]</span><br><span class="line">        dj_db=err+dj_db</span><br><span class="line">    <span class="keyword">return</span> dj_dw,dj_db</span><br><span class="line">tmp_dj_dw, tmp_dj_db = compute_gradient(X_train, y_train, w_init, b_init)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&#x27;dj_db at initial w,b: <span class="subst">&#123;tmp_dj_db&#125;</span>&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&#x27;dj_dw at initial w,b: \n <span class="subst">&#123;tmp_dj_dw&#125;</span>&#x27;</span>)</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">gradient_descent</span>(<span class="params">X, y, w_in, b_in, cost_function, gradient_function, alpha, num_iters</span>): </span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    Performs batch gradient descent to learn theta. Updates theta by taking </span></span><br><span class="line"><span class="string">    num_iters gradient steps with learning rate alpha</span></span><br><span class="line"><span class="string">    </span></span><br><span class="line"><span class="string">    Args:</span></span><br><span class="line"><span class="string">      X (ndarray (m,n))   : Data, m examples with n features</span></span><br><span class="line"><span class="string">      y (ndarray (m,))    : target values</span></span><br><span class="line"><span class="string">      w_in (ndarray (n,)) : initial model parameters  </span></span><br><span class="line"><span class="string">      b_in (scalar)       : initial model parameter</span></span><br><span class="line"><span class="string">      cost_function       : function to compute cost</span></span><br><span class="line"><span class="string">      gradient_function   : function to compute the gradient</span></span><br><span class="line"><span class="string">      alpha (float)       : Learning rate</span></span><br><span class="line"><span class="string">      num_iters (int)     : number of iterations to run gradient descent</span></span><br><span class="line"><span class="string">      </span></span><br><span class="line"><span class="string">    Returns:</span></span><br><span class="line"><span class="string">      w (ndarray (n,)) : Updated values of parameters </span></span><br><span class="line"><span class="string">      b (scalar)       : Updated value of parameter       </span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    w=copy.deepcopy(w_in);b=b_in</span><br><span class="line">    J_h=[]</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(num_iters):</span><br><span class="line">        dj_dw, dj_db = gradient_function(X, y, w, b)</span><br><span class="line">        w=w-alpha*dj_dw</span><br><span class="line">        b=b-alpha*dj_db</span><br><span class="line">        <span class="comment"># Save cost J at each iteration</span></span><br><span class="line">        <span class="keyword">if</span> i&lt;<span class="number">100000</span>:      <span class="comment"># prevent resource exhaustion </span></span><br><span class="line">            J_h.append( cost_function(X, y, w, b))</span><br><span class="line"></span><br><span class="line">        <span class="comment"># Print cost every at intervals 10 times or as many iterations if &lt; 10</span></span><br><span class="line">        <span class="keyword">if</span> i% math.ceil(num_iters / <span class="number">10</span>) == <span class="number">0</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">f&quot;Iteration <span class="subst">&#123;i:4d&#125;</span>: Cost <span class="subst">&#123;J_h[-<span class="number">1</span>]:<span class="number">8.2</span>f&#125;</span>   &quot;</span>)</span><br><span class="line">        </span><br><span class="line">    <span class="keyword">return</span> w, b, J_h <span class="comment">#return final w,b and J history for graphing</span></span><br><span class="line">        </span><br><span class="line"><span class="comment"># initialize parameters</span></span><br><span class="line">initial_w = np.zeros_like(w_init)</span><br><span class="line">initial_b = <span class="number">0.</span></span><br><span class="line"><span class="comment"># some gradient descent settings</span></span><br><span class="line">iterations = <span class="number">9000</span></span><br><span class="line">alpha = <span class="number">5.0e-7</span></span><br><span class="line"><span class="comment"># run gradient descent </span></span><br><span class="line">w_final, b_final, J_hist = gradient_descent(X_train, y_train, initial_w, initial_b,</span><br><span class="line">                                                    compute_cost, compute_gradient, </span><br><span class="line">                                                    alpha, iterations)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;b,w found by gradient descent: <span class="subst">&#123;b_final:<span class="number">0.2</span>f&#125;</span>,<span class="subst">&#123;w_final&#125;</span> &quot;</span>)</span><br><span class="line">m,_ = X_train.shape</span><br><span class="line"><span class="comment"># print(X_train[i])</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(m):</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;prediction: <span class="subst">&#123;np.dot(X_train[i], w_final) + b_final:<span class="number">0.2</span>f&#125;</span>, target value: <span class="subst">&#123;y_train[i]&#125;</span>&quot;</span>)</span><br><span class="line"><span class="comment"># plot cost versus iteration  </span></span><br><span class="line">fig, (ax1, ax2) = plt.subplots(<span class="number">1</span>, <span class="number">2</span>, constrained_layout=<span class="literal">True</span>, figsize=(<span class="number">12</span>, <span class="number">4</span>))</span><br><span class="line">ax1.plot(J_hist)</span><br><span class="line">ax2.plot(<span class="number">100</span> + np.arange(<span class="built_in">len</span>(J_hist[<span class="number">100</span>:])), J_hist[<span class="number">100</span>:])</span><br><span class="line">ax1.set_title(<span class="string">&quot;Cost vs. iteration&quot;</span>);  ax2.set_title(<span class="string">&quot;Cost vs. iteration (tail)&quot;</span>)</span><br><span class="line">ax1.set_ylabel(<span class="string">&#x27;Cost&#x27;</span>)             ;  ax2.set_ylabel(<span class="string">&#x27;Cost&#x27;</span>) </span><br><span class="line">ax1.set_xlabel(<span class="string">&#x27;iteration step&#x27;</span>)   ;  ax2.set_xlabel(<span class="string">&#x27;iteration step&#x27;</span>) </span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><h3 id="特征缩放和学习率-多变量">特征缩放和学习率（多变量）</h3><p>基于C1 W2 Lab03将通过使用 z 分数归一化进行特征缩放来提高梯度下降的性能。</p><table><thead><tr><th>Size (sqft)</th><th>Number of Bedrooms</th><th>Number of floors</th><th>Age of  Home</th><th>Price (1000s dollars)</th></tr></thead><tbody><tr><td>952</td><td>2</td><td>1</td><td>65</td><td>271.5</td></tr><tr><td>1244</td><td>3</td><td>2</td><td>64</td><td>232</td></tr><tr><td>1947</td><td>3</td><td>2</td><td>17</td><td>509.8</td></tr><tr><td>...</td><td>...</td><td>...</td><td>...</td><td>...</td></tr></tbody></table><p>首先载入房屋信息数据，共4列其中3个特征，<code>X = data[:,:4];y = data[:,4]</code>X取除了最后一列价格以外的矩阵，y是取最后一列价格 sharey=True表示ax图共享y轴坐标  python绘图时<a href="https://blog.csdn.net/qq_31347869/article/details/104794515">fig和ax参数的功能和关系</a>，fig是大画板，ax是其中的小画板，对其中的一个小画板ax设置横坐标要用<code>ax[i].set_ylabel(&quot;Price (1000's)&quot;)</code> <a href="https://blog.csdn.net/mighty13/article/details/113818710">pyplot模块坐标轴标签设置（xlabel()、ylabel()）</a><br>为了外部模块中的<code>plot_cost_i_w</code>函数绘图方便，这里调用的<code>gradient_descent</code>返回的hist是一个字典,<code>np.ceil(ndarray)</code>用于计算大于等于改值的最小整数，例如save_interval = np.ceil(num_iters/10000)中num_iters=9000则输出为1，num_iters=11000则输出为2，通过<code>i == 0 or i % save_interval == 0</code>使得各值记录在案，最后通过格式化字符串输出,这里的<code>hist[&quot;params&quot;].append([w,b]);hist[&quot;grads&quot;].append([dj_dw,dj_db])</code>元素形式如下<code>[[0, 1], [1, 1], [2, 1], [3, 1], [4, 1]]</code> <a href="https://blog.csdn.net/neweastsun/article/details/99676029">linspace函数</a><br>该子函数代码如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#This version saves more values and is more verbose than the assigment versons</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">gradient_descent_houses</span>(<span class="params">X, y, w_in, b_in, cost_function, gradient_function, alpha, num_iters</span>): </span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    Performs batch gradient descent to learn theta. Updates theta by taking </span></span><br><span class="line"><span class="string">    num_iters gradient steps with learning rate alpha</span></span><br><span class="line"><span class="string">    </span></span><br><span class="line"><span class="string">    Args:</span></span><br><span class="line"><span class="string">      X : (array_like Shape (m,n)    matrix of examples </span></span><br><span class="line"><span class="string">      y : (array_like Shape (m,))    target value of each example</span></span><br><span class="line"><span class="string">      w_in : (array_like Shape (n,)) Initial values of parameters of the model</span></span><br><span class="line"><span class="string">      b_in : (scalar)                Initial value of parameter of the model</span></span><br><span class="line"><span class="string">      cost_function: function to compute cost</span></span><br><span class="line"><span class="string">      gradient_function: function to compute the gradient</span></span><br><span class="line"><span class="string">      alpha : (float) Learning rate</span></span><br><span class="line"><span class="string">      num_iters : (int) number of iterations to run gradient descent</span></span><br><span class="line"><span class="string">    Returns</span></span><br><span class="line"><span class="string">      w : (array_like Shape (n,)) Updated values of parameters of the model after</span></span><br><span class="line"><span class="string">          running gradient descent</span></span><br><span class="line"><span class="string">      b : (scalar)                Updated value of parameter of the model after</span></span><br><span class="line"><span class="string">          running gradient descent</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment"># number of training examples</span></span><br><span class="line">    m = <span class="built_in">len</span>(X)</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># An array to store values at each iteration primarily for graphing later</span></span><br><span class="line">    hist=&#123;&#125;</span><br><span class="line">    hist[<span class="string">&quot;cost&quot;</span>] = []; hist[<span class="string">&quot;params&quot;</span>] = []; hist[<span class="string">&quot;grads&quot;</span>]=[]; hist[<span class="string">&quot;iter&quot;</span>]=[];</span><br><span class="line">    </span><br><span class="line">    w = copy.deepcopy(w_in)  <span class="comment">#avoid modifying global w within function</span></span><br><span class="line">    b = b_in</span><br><span class="line">    save_interval = np.ceil(num_iters/<span class="number">10000</span>) <span class="comment"># prevent resource exhaustion for long runs</span></span><br><span class="line"></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;Iteration Cost          w0       w1       w2       w3       b       djdw0    djdw1    djdw2    djdw3    djdb  &quot;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;---------------------|--------|--------|--------|--------|--------|--------|--------|--------|--------|--------|&quot;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(num_iters):</span><br><span class="line"></span><br><span class="line">        <span class="comment"># Calculate the gradient and update the parameters</span></span><br><span class="line">        dj_db,dj_dw = gradient_function(X, y, w, b)   </span><br><span class="line"></span><br><span class="line">        <span class="comment"># Update Parameters using w, b, alpha and gradient</span></span><br><span class="line">        w = w - alpha * dj_dw               </span><br><span class="line">        b = b - alpha * dj_db               </span><br><span class="line">      </span><br><span class="line">        <span class="comment"># Save cost J,w,b at each save interval for graphing</span></span><br><span class="line">        <span class="keyword">if</span> i == <span class="number">0</span> <span class="keyword">or</span> i % save_interval == <span class="number">0</span>:     </span><br><span class="line">            hist[<span class="string">&quot;cost&quot;</span>].append(cost_function(X, y, w, b))</span><br><span class="line">            hist[<span class="string">&quot;params&quot;</span>].append([w,b])</span><br><span class="line">            hist[<span class="string">&quot;grads&quot;</span>].append([dj_dw,dj_db])</span><br><span class="line">            hist[<span class="string">&quot;iter&quot;</span>].append(i)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># Print cost every at intervals 10 times or as many iterations if &lt; 10</span></span><br><span class="line">        <span class="keyword">if</span> i% math.ceil(num_iters/<span class="number">10</span>) == <span class="number">0</span>:</span><br><span class="line">            <span class="comment">#print(f&quot;Iteration &#123;i:4d&#125;: Cost &#123;cost_function(X, y, w, b):8.2f&#125;   &quot;)</span></span><br><span class="line">            cst = cost_function(X, y, w, b)</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">f&quot;<span class="subst">&#123;i:9d&#125;</span> <span class="subst">&#123;cst:<span class="number">0.5</span>e&#125;</span> <span class="subst">&#123;w[<span class="number">0</span>]: <span class="number">0.1</span>e&#125;</span> <span class="subst">&#123;w[<span class="number">1</span>]: <span class="number">0.1</span>e&#125;</span> <span class="subst">&#123;w[<span class="number">2</span>]: <span class="number">0.1</span>e&#125;</span> <span class="subst">&#123;w[<span class="number">3</span>]: <span class="number">0.1</span>e&#125;</span> <span class="subst">&#123;b: <span class="number">0.1</span>e&#125;</span> <span class="subst">&#123;dj_dw[<span class="number">0</span>]: <span class="number">0.1</span>e&#125;</span> <span class="subst">&#123;dj_dw[<span class="number">1</span>]: <span class="number">0.1</span>e&#125;</span> <span class="subst">&#123;dj_dw[<span class="number">2</span>]: <span class="number">0.1</span>e&#125;</span> <span class="subst">&#123;dj_dw[<span class="number">3</span>]: <span class="number">0.1</span>e&#125;</span> <span class="subst">&#123;dj_db: <span class="number">0.1</span>e&#125;</span>&quot;</span>)</span><br><span class="line">       </span><br><span class="line">    <span class="keyword">return</span> w, b, hist <span class="comment">#return w,b and history for graphing</span></span><br></pre></td></tr></table></figure><p>特征缩放三种不同的技术：<br>特征缩放，实质上是将每个特征除以用户选择的值，以产生介于 -1 和 1 之间的范围。<br>均值归一化：$x_i := \dfrac{x_i - \mu_i}{max - min} $<br>我们将在下面使用 Z 分数归一化：</p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mtable width="100%"><mtr><mtd width="50%"></mtd><mtd><mrow><msubsup><mi>x</mi><mi>j</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msubsup><mo>=</mo><mfrac><mrow><msubsup><mi>x</mi><mi>j</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msubsup><mo>−</mo><msub><mi>μ</mi><mi>j</mi></msub></mrow><msub><mi>σ</mi><mi>j</mi></msub></mfrac></mrow></mtd><mtd width="50%"></mtd><mtd><mtext>(4)</mtext></mtd></mtr></mtable><annotation encoding="application/x-tex">x^{(i)}_j = \dfrac{x^{(i)}_j - \mu_j}{\sigma_j} \tag{4}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.4577719999999998em;vertical-align:-0.412972em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0448em;"><span style="top:-2.4231360000000004em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span><span style="top:-3.2198em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathdefault mtight">i</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.412972em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.81988em;vertical-align:-0.972108em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.847772em;"><span style="top:-2.3588em;"><span class="pstrut" style="height:3.0448em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.2748em;"><span class="pstrut" style="height:3.0448em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.847772em;"><span class="pstrut" style="height:3.0448em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0448em;"><span style="top:-2.4231360000000004em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span><span style="top:-3.2198em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathdefault mtight">i</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4129719999999999em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathdefault">μ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.972108em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span><span class="tag"><span class="strut" style="height:2.81988em;vertical-align:-0.972108em;"></span><span class="mord text"><span class="mord">(</span><span class="mord"><span class="mord">4</span></span><span class="mord">)</span></span></span></span></span></span></p><p class='katex-block katex-error' title='ParseError: KaTeX parse error: No such environment: align at position 7: \begin{̲a̲l̲i̲g̲n̲}̲\mu_j &amp;= \frac…'>\begin{align}\mu_j &amp;= \frac{1}{m} \sum_{i=0}^{m-1} x^{(i)}_j \tag{5}\\\sigma^2_j &amp;= \frac{1}{m} \sum_{i=0}^{m-1} (x^{(i)}_j - \mu_j)^2  \tag{6}\end{align}</p><p>实施说明：归一化特征时，重要的是 存储用于归一化的值 - 用于计算的平均值和标准偏差。学习参数后 从模型中，我们经常想预测我们没有的房子的价格 以前见过。给定一个新的 x 值（客厅面积和床位数量 房间），我们必须首先使用均值和标准差对 X 进行归一化 我们之前从训练集中计算出来的。<br>这里是对m examples, n features的X整体进行Z归一化，用到<a href="https://blog.csdn.net/qq_45473634/article/details/119820171">numpy.mean()-平均数函数</a>和<a href="https://blog.csdn.net/qq_45473634/article/details/119820832">Numpy.std() - 标准差函数</a>  <a href="https://blog.csdn.net/u011699626/article/details/109203191">np.ptp()</a>函数实现的功能等同于np.max(array) - np.min(array)。<br>结果看起来不错。需要注意的几点：<br>对于多个特征，我们不能再有一个图来显示结果与特征。<br>生成图时，使用了归一化特征。使用从规范化训练集中学习的参数的任何预测也必须规范化。即后续需要预测的数据也要进行归一化处理<br>总体代码</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line">np.set_printoptions(precision=<span class="number">2</span>)</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line">dlblue = <span class="string">&#x27;#0096ff&#x27;</span>; dlorange = <span class="string">&#x27;#FF9300&#x27;</span>; dldarkred=<span class="string">&#x27;#C00000&#x27;</span>; dlmagenta=<span class="string">&#x27;#FF40FF&#x27;</span>; dlpurple=<span class="string">&#x27;#7030A0&#x27;</span>; </span><br><span class="line">plt.style.use(<span class="string">&#x27;./deeplearning.mplstyle&#x27;</span>)</span><br><span class="line"><span class="keyword">from</span> lab_utils_multi <span class="keyword">import</span>  load_house_data, compute_cost, run_gradient_descent </span><br><span class="line"><span class="keyword">from</span> lab_utils_multi <span class="keyword">import</span>  norm_plot, plt_contour_multi, plt_equal_scale, plot_cost_i_w</span><br><span class="line"><span class="comment"># 载入数据</span></span><br><span class="line">X_train,y_train=load_house_data()</span><br><span class="line">X_features = [<span class="string">&#x27;size(sqft)&#x27;</span>,<span class="string">&#x27;bedrooms&#x27;</span>,<span class="string">&#x27;floors&#x27;</span>,<span class="string">&#x27;age&#x27;</span>]  </span><br><span class="line"><span class="comment"># 让我们通过绘制每个特征与价格来查看数据集及其特征。</span></span><br><span class="line">fig,ax=plt.subplots(<span class="number">1</span>,<span class="number">4</span>,figsize=(<span class="number">12</span>,<span class="number">3</span>),sharey=<span class="literal">True</span>)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(ax)):</span><br><span class="line">    ax[i].scatter(X_train[:,i],y_train,c=<span class="string">&#x27;b&#x27;</span>)</span><br><span class="line">    ax[i].set_xlabel(X_features[i])</span><br><span class="line">ax[<span class="number">0</span>].set_ylabel(<span class="string">&#x27;Price&#x27;</span>)</span><br><span class="line"><span class="comment"># plt.show()</span></span><br><span class="line"><span class="comment"># #set alpha to 9.9e-7</span></span><br><span class="line">_, _, hist = run_gradient_descent(X_train, y_train, <span class="number">10</span>, alpha = <span class="number">1e-7</span>)</span><br><span class="line">plot_cost_i_w(X_train, y_train, hist)</span><br><span class="line"><span class="comment"># num_iters=11000</span></span><br><span class="line"><span class="comment"># for i in range(num_iters):</span></span><br><span class="line"><span class="comment">#     save_interval = np.ceil(num_iters/10000)</span></span><br><span class="line"><span class="comment">#     print(save_interval)</span></span><br><span class="line"><span class="comment"># b=1</span></span><br><span class="line"><span class="comment"># hist=&#123;&#125;</span></span><br><span class="line"><span class="comment"># hist[&quot;cost&quot;] = []; hist[&quot;params&quot;] = []; hist[&quot;grads&quot;]=[]; hist[&quot;iter&quot;]=[];</span></span><br><span class="line"><span class="comment"># for w in range(5):</span></span><br><span class="line"><span class="comment">#     hist[&quot;params&quot;].append([w,b])</span></span><br><span class="line"><span class="comment"># print(hist[&quot;params&quot;])</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">zscore_normalize_features</span>(<span class="params">X</span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    computes  X, zcore normalized by column</span></span><br><span class="line"><span class="string">    </span></span><br><span class="line"><span class="string">    Args:</span></span><br><span class="line"><span class="string">      X (ndarray): Shape (m,n) input data, m examples, n features</span></span><br><span class="line"><span class="string">      </span></span><br><span class="line"><span class="string">    Returns:</span></span><br><span class="line"><span class="string">      X_norm (ndarray): Shape (m,n)  input normalized by column</span></span><br><span class="line"><span class="string">      mu (ndarray):     Shape (n,)   mean of each feature</span></span><br><span class="line"><span class="string">      sigma (ndarray):  Shape (n,)   standard deviation of each feature</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    mu=np.mean(X,axis=<span class="number">0</span>)</span><br><span class="line">    sigma=np.std(X,axis=<span class="number">0</span>)</span><br><span class="line">    X_norm=(X-mu)/sigma</span><br><span class="line">    <span class="keyword">return</span> X_norm, mu, sigma</span><br><span class="line"><span class="comment"># 让我们看一下 Z 分数归一化所涉及的步骤。下图显示了逐步的转换。size特证相对于age</span></span><br><span class="line">X_norm, mu, sigma=zscore_normalize_features(X_train)</span><br><span class="line">X_mean = (X_train - mu)</span><br><span class="line">fig,ax=plt.subplots(<span class="number">1</span>, <span class="number">3</span>, figsize=(<span class="number">12</span>, <span class="number">3</span>))</span><br><span class="line">ax[<span class="number">0</span>].scatter(X_train[:,<span class="number">0</span>], X_train[:,<span class="number">3</span>])</span><br><span class="line">ax[<span class="number">0</span>].set_xlabel(X_features[<span class="number">0</span>]); ax[<span class="number">0</span>].set_ylabel(X_features[<span class="number">3</span>]);</span><br><span class="line">ax[<span class="number">0</span>].set_title(<span class="string">&quot;unnormalized&quot;</span>)</span><br><span class="line">ax[<span class="number">0</span>].axis(<span class="string">&#x27;equal&#x27;</span>)</span><br><span class="line"></span><br><span class="line">ax[<span class="number">1</span>].scatter(X_mean[:,<span class="number">0</span>], X_mean[:,<span class="number">3</span>])</span><br><span class="line">ax[<span class="number">1</span>].set_xlabel(X_features[<span class="number">0</span>]); ax[<span class="number">0</span>].set_ylabel(X_features[<span class="number">3</span>]);</span><br><span class="line">ax[<span class="number">1</span>].set_title(<span class="string">r&quot;X - $\mu$&quot;</span>)</span><br><span class="line">ax[<span class="number">1</span>].axis(<span class="string">&#x27;equal&#x27;</span>)</span><br><span class="line"></span><br><span class="line">ax[<span class="number">2</span>].scatter(X_norm[:,<span class="number">0</span>], X_norm[:,<span class="number">3</span>])</span><br><span class="line">ax[<span class="number">2</span>].set_xlabel(X_features[<span class="number">0</span>]); ax[<span class="number">0</span>].set_ylabel(X_features[<span class="number">3</span>]);</span><br><span class="line">ax[<span class="number">2</span>].set_title(<span class="string">r&quot;Z-score normalized&quot;</span>)</span><br><span class="line">ax[<span class="number">2</span>].axis(<span class="string">&#x27;equal&#x27;</span>)</span><br><span class="line">plt.tight_layout(rect=[<span class="number">0</span>, <span class="number">0.03</span>, <span class="number">1</span>, <span class="number">0.95</span>])</span><br><span class="line">fig.suptitle(<span class="string">&quot;distribution of features before, during, after normalization&quot;</span>)</span><br><span class="line">plt.show()</span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">上图显示了两个训练集参数“age”和“sqft”之间的关系。这些以相同的比例绘制。</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">左：非规范化：“size（sqft）”特征的值范围或方差远大于年龄范围</span></span><br><span class="line"><span class="string">中间：第一步查找会移除每个要素的平均值或平均值。这将留下以零为中心的要素。很难看出“年龄”功能的差异，但“size（sqft）”显然在零附近。</span></span><br><span class="line"><span class="string">右：第二步除以方差。这使得两个要素都以零为中心，比例相似</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="comment"># normalize the original features</span></span><br><span class="line"><span class="comment"># X_norm, X_mu, X_sigma = zscore_normalize_features(X_train)</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;X_mu = <span class="subst">&#123;mu&#125;</span>, \nX_sigma = <span class="subst">&#123;sigma&#125;</span>&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;Peak to Peak range by column in Raw        X:<span class="subst">&#123;np.ptp(X_train,axis=<span class="number">0</span>)&#125;</span>&quot;</span>)   </span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;Peak to Peak range by column in Normalized X:<span class="subst">&#123;np.ptp(X_norm,axis=<span class="number">0</span>)&#125;</span>&quot;</span>)</span><br><span class="line"></span><br><span class="line">fig,ax=plt.subplots(<span class="number">1</span>, <span class="number">4</span>, figsize=(<span class="number">12</span>, <span class="number">3</span>))</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(ax)):</span><br><span class="line">    norm_plot(ax[i],X_train[:,i],)</span><br><span class="line">    ax[i].set_xlabel(X_features[i])</span><br><span class="line">ax[<span class="number">0</span>].set_ylabel(<span class="string">&quot;count&quot;</span>);</span><br><span class="line">fig.suptitle(<span class="string">&quot;distribution of features before normalization&quot;</span>)</span><br><span class="line">plt.show()</span><br><span class="line">fig,ax=plt.subplots(<span class="number">1</span>,<span class="number">4</span>,figsize=(<span class="number">12</span>,<span class="number">3</span>))</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(ax)):</span><br><span class="line">    norm_plot(ax[i],X_norm[:,i],)</span><br><span class="line">    ax[i].set_xlabel(X_features[i])</span><br><span class="line">ax[<span class="number">0</span>].set_ylabel(<span class="string">&quot;count&quot;</span>); </span><br><span class="line">fig.suptitle(<span class="string">f&quot;distribution of features after normalization&quot;</span>)</span><br><span class="line">plt.show()</span><br><span class="line"></span><br><span class="line">w_norm, b_norm, hist = run_gradient_descent(X_norm, y_train, <span class="number">1000</span>, <span class="number">1.0e-1</span>, )</span><br><span class="line"><span class="comment">#predict target using normalized features</span></span><br><span class="line">m=X_norm.shape[<span class="number">0</span>];yp=np.zeros(m)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(m):</span><br><span class="line">    yp[i]=np.dot(X_norm[i],w_norm)+b_norm</span><br><span class="line"> <span class="comment"># plot predictions and targets versus original features </span></span><br><span class="line">fig,ax=plt.subplots(<span class="number">1</span>,<span class="number">4</span>,figsize=(<span class="number">12</span>,<span class="number">3</span>),sharey=<span class="literal">True</span>) </span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(ax)):</span><br><span class="line">    ax[i].scatter(X_norm[:,i],y_train,label=<span class="string">&#x27;target&#x27;</span>)</span><br><span class="line">    ax[i].scatter(X_norm[:,i],yp,label=<span class="string">&#x27;predict&#x27;</span>,c=dlorange)</span><br><span class="line">    ax[i].set_xlabel(X_features[i])</span><br><span class="line">ax[<span class="number">0</span>].set_ylabel(<span class="string">&quot;Price&quot;</span>); ax[<span class="number">0</span>].legend();</span><br><span class="line">fig.suptitle(<span class="string">&quot;target versus prediction using z-score normalized model&quot;</span>)</span><br><span class="line">plt.show()</span><br><span class="line"><span class="comment"># First, normalize out example.</span></span><br><span class="line">x_house = np.array([<span class="number">1200</span>, <span class="number">3</span>, <span class="number">1</span>, <span class="number">40</span>])</span><br><span class="line">x_house_norm,_,_=zscore_normalize_features(x_house)</span><br><span class="line">x_house_predict = np.dot(x_house_norm, w_norm) + b_norm</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&#x27;该房屋的预测价格为<span class="subst">&#123;x_house_predict&#125;</span>&#x27;</span>)</span><br><span class="line">plt_equal_scale(X_train, X_norm, y_train)</span><br></pre></td></tr></table></figure><h2 id="特征工程和多项式回归">特征工程和多项式回归</h2><p>基于C1_W2_Lab04_FeatEng_PolyReg_Soln本例适用于要素/数据是非线性的组合  Python中的“ @”（@）符号有什么作用？简而言之，它用于装饰器语法和矩阵乘法。 <code>a @ b</code>相当于<code>dot(a, b)</code> numpy中reshapel函数的三种常见相关用法<br>reshape(1,-1)转化成1行：<br>reshape(2,-1)转换成两行：<br>reshape(-1,1)转换成1列：<br>reshape(-1,2)转化成两列<br>在科学记数法中，一个数被写成一个1与10之间的实数（尾数）与一个10的幂的积，为了得到统一的表达方式，该尾数并不包括10：<br>782300=7.823×10^5<br>0.00012=1.2×10^(−4)<br>10000=1×10^4<br>在电脑或计算器中一般用E或e（英语Exponential）来表示10的幂：比如1e-6表示1乘以10的负6次方<br>7.823E5=782300<br>1.2e−4=0.00012<br>若用一般的方法，将一个数的所有数位都写出，在表示非常大或非常小的数时，将难以清楚知道它的大小，有时亦会浪费很多空间。使用科学记数法写的数的数量级、精确度和数值都非常明确。<br>阅读代码这里的梯度下降X是要二维数组而y为一维需要变换一下<br>X : (array_like Shape (m,n)    matrix of examples<br>y : (array_like Shape (m,))    target value of each example<br>array_like Shape (m,n)是二维，array_like Shape (m,)是一维<br>好吧，正如预期的那样，不太合适。需要的是类似的东西<br>或多项式要素。 为此，您可以修改输入数据以设计所需的要素。如果将原始数据交换为将 价值，那么你可以实现<br>.让我们试试吧。换成以下：X=X**2也就是等价替换降维为一维线性,发现曲线几乎重合  <a href="https://blog.csdn.net/qq_33728095/article/details/102512600">np.c_ 用于连接两个矩阵</a>  使用<code>model_w,model_b = run_gradient_descent_feng(X, y1, iterations=9000, alpha=1e-5)</code>发现报错 <code>RuntimeWarning: overflow encountered in scalar add cost = cost + (f_wb_i - y[i])**2</code><br>原因是alpha数据不对导致计算式数值溢出，且对于高阶数据别忘了进行归一化处理以防止溢出特别是在拟合非线性曲线的时候 在<code>w_z,b_z=run_gradient_descent_feng(X1, y1, iterations=100000, alpha=1e-7)</code>中使用alpha=1e-7由于值太小导致1W次迭代也难以下降成本换成alpha=1e-1曲线拟合，足以说明alpha值的重要性<br>总体代码</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">from</span> lab_utils_multi <span class="keyword">import</span> zscore_normalize_features, run_gradient_descent_feng</span><br><span class="line">np.set_printoptions(precision=<span class="number">2</span>)  <span class="comment"># reduced display precision on numpy arrays</span></span><br><span class="line"><span class="comment"># 创建原始数据</span></span><br><span class="line">x=np.arange(<span class="number">0</span>,<span class="number">20</span>,<span class="number">1</span>)</span><br><span class="line">x_train=x.reshape(-<span class="number">1</span>,<span class="number">1</span>)</span><br><span class="line">y=<span class="number">1</span>+x**<span class="number">2</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">type</span>(y),<span class="built_in">type</span>(x_train))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&#x27;y的形状为<span class="subst">&#123;y.shape&#125;</span>，x的形状为<span class="subst">&#123;x.shape&#125;</span>,x_train的形状为<span class="subst">&#123;x_train.shape&#125;</span>&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&#x27;训练集合为<span class="subst">&#123;x_train&#125;</span>，输出为<span class="subst">&#123;y&#125;</span>&#x27;</span>)</span><br><span class="line">w1,b1=run_gradient_descent_feng(x_train,y,iterations=<span class="number">9000</span>,alpha =<span class="number">1e-5</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&#x27;梯度下降后的w1,b1为<span class="subst">&#123;w1&#125;</span>，<span class="subst">&#123;b1&#125;</span>&#x27;</span>)</span><br><span class="line">plt.scatter(x,y,marker=<span class="string">&#x27;o&#x27;</span>,c=<span class="string">&#x27;b&#x27;</span>,label=<span class="string">&#x27;target shujv&#x27;</span>)</span><br><span class="line">plt.scatter(x,np.dot(x_train,w1)+b1,marker=<span class="string">&#x27;x&#x27;</span>,c=<span class="string">&#x27;r&#x27;</span>,label=<span class="string">&#x27;predict shujv&#x27;</span>)</span><br><span class="line">plt.legend()</span><br><span class="line">plt.show()</span><br><span class="line"><span class="comment"># 等价降维</span></span><br><span class="line">x_train2=x**<span class="number">2</span>;x_train2=x_train2.reshape(-<span class="number">1</span>,<span class="number">1</span>)</span><br><span class="line">w2,b2=run_gradient_descent_feng(x_train2,y,iterations=<span class="number">9000</span>,alpha =<span class="number">1e-7</span>)</span><br><span class="line">plt.scatter(x,y,marker=<span class="string">&#x27;o&#x27;</span>,c=<span class="string">&#x27;b&#x27;</span>,label=<span class="string">&#x27;target shujv&#x27;</span>)</span><br><span class="line">plt.scatter(x,np.dot(x_train,w1)+b1,marker=<span class="string">&#x27;x&#x27;</span>,c=<span class="string">&#x27;r&#x27;</span>,label=<span class="string">&#x27;predict shujv&#x27;</span>)</span><br><span class="line">plt.scatter(x,np.dot(x_train2,w2)+b2,marker=<span class="string">&#x27;+&#x27;</span>,c=<span class="string">&#x27;r&#x27;</span>,label=<span class="string">&#x27;yhpredict shujv&#x27;</span>)</span><br><span class="line">plt.legend()</span><br><span class="line">plt.show()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">y1=x**<span class="number">2</span></span><br><span class="line">X=np.c_[x, x**<span class="number">2</span>, x**<span class="number">3</span>]</span><br><span class="line"><span class="built_in">print</span>(X)</span><br><span class="line">model_w,model_b = run_gradient_descent_feng(X, y1, iterations=<span class="number">9000</span>, alpha=<span class="number">1e-7</span>)</span><br><span class="line">plt.scatter(x, y1, marker=<span class="string">&#x27;x&#x27;</span>, c=<span class="string">&#x27;r&#x27;</span>, label=<span class="string">&quot;Actual Value&quot;</span>); plt.title(<span class="string">&quot;x, x**2, x**3 features&quot;</span>)</span><br><span class="line">plt.plot(x, X@model_w + model_b, label=<span class="string">&quot;Predicted Value&quot;</span>); plt.xlabel(<span class="string">&quot;x&quot;</span>); plt.ylabel(<span class="string">&quot;y&quot;</span>); plt.legend(); plt.show()</span><br><span class="line">X_feature=[<span class="string">&#x27;X&#x27;</span>,<span class="string">&#x27;X^2&#x27;</span>,<span class="string">&#x27;X^3&#x27;</span>]</span><br><span class="line"><span class="comment"># 下面，很明显，针对目标值映射x^2的功能是线性的。然后，线性回归可以使用该功能轻松生成模型。</span></span><br><span class="line">fig,ax=plt.subplots(<span class="number">1</span>,<span class="number">3</span>,figsize=(<span class="number">9</span>,<span class="number">3</span>),sharey=<span class="literal">True</span>)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(ax)):</span><br><span class="line">    ax[i].scatter(X[:,i],y)</span><br><span class="line">    ax[i].set_xlabel(X_feature[i])</span><br><span class="line">ax[<span class="number">0</span>].set_ylabel(<span class="string">&quot;y&quot;</span>)</span><br><span class="line">plt.show()</span><br><span class="line"><span class="comment"># Z归一化</span></span><br><span class="line">X1=zscore_normalize_features(X,rtn_ms=<span class="literal">False</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&#x27;X峰值原来的差是<span class="subst">&#123;np.ptp(X,axis=<span class="number">0</span>)&#125;</span>，各个特种Z归一化后的差是<span class="subst">&#123;np.ptp(X1,axis=<span class="number">0</span>)&#125;</span>&#x27;</span>)</span><br><span class="line">w_z,b_z=run_gradient_descent_feng(X1, y1, iterations=<span class="number">100000</span>, alpha=<span class="number">1e-1</span>)</span><br><span class="line">plt.scatter(x, y, marker=<span class="string">&#x27;x&#x27;</span>, c=<span class="string">&#x27;r&#x27;</span>, label=<span class="string">&quot;Actual Value&quot;</span>); plt.title(<span class="string">&quot;x, x**2, x**3 features&quot;</span>)</span><br><span class="line">plt.plot(x, X@model_w + model_b, label=<span class="string">&quot;Predicted Value&quot;</span>)</span><br><span class="line">plt.plot(x,X1@w_z + b_z, label=<span class="string">&quot;Z-Predicted Value&quot;</span>)</span><br><span class="line">plt.xlabel(<span class="string">&quot;x&quot;</span>); plt.ylabel(<span class="string">&quot;y&quot;</span>); </span><br><span class="line">plt.legend(); plt.show()</span><br><span class="line"><span class="comment"># 拟合cos</span></span><br><span class="line">y2=np.cos(x/<span class="number">2</span>);X2=np.c_[x, x**<span class="number">2</span>, x**<span class="number">3</span>,x**<span class="number">4</span>, x**<span class="number">5</span>, x**<span class="number">6</span>, x**<span class="number">7</span>, x**<span class="number">8</span>, x**<span class="number">9</span>, x**<span class="number">10</span>, x**<span class="number">11</span>, x**<span class="number">12</span>, x**<span class="number">13</span>]</span><br><span class="line">X2=zscore_normalize_features(X2)</span><br><span class="line">w_c,b_c=run_gradient_descent_feng(X2, y2, iterations=<span class="number">2000000</span>, alpha = <span class="number">1e-1</span>)</span><br><span class="line">plt.title(<span class="string">&quot;NIHE-cos&quot;</span>);plt.scatter(x, y2, marker=<span class="string">&#x27;x&#x27;</span>, c=<span class="string">&#x27;r&#x27;</span>, label=<span class="string">&quot;Actual Value&quot;</span>); </span><br><span class="line">plt.plot(x, X2@w_c + b_c, label=<span class="string">&quot;Predicted Value&quot;</span>)</span><br><span class="line">plt.xlabel(<span class="string">&quot;x&quot;</span>); plt.ylabel(<span class="string">&quot;y&quot;</span>); </span><br><span class="line">plt.legend(); plt.show()</span><br></pre></td></tr></table></figure><h1 id="分类">分类</h1><p>基于C1_W3_LAB01_Classification<br>分类问题的示例包括将电子邮件识别为垃圾邮件或非垃圾邮件，或者确定肿瘤是恶性还是良性。特别是，这些是二元分类的示例，其中有两种可能的结果。结果可以用“积极”/“消极”成对来描述，例如“是/否”、“真”/“假”或“1”/“0”。<br>分类数据集图通常使用符号来指示示例的结果。在下面的图中，“X”用于表示正值，而“O”表示负结果。<br>可以试试先打印 X_train[y_train == i] 这个，这是一个推导式，返回 X_train 中满足 y_train ==i 条件的记录。后面那个 [0] 操作则是获取索引位置为 0 的数据。本代码中<code>pos = y_train == 1</code>的作用也在于此，打印print(pos)结果为[False False False  True  True  True] 经典错误<code>plt.xlabel=&quot;x&quot;;plt.ylabel=&quot;y&quot;</code>应该是<code>plt.xlabel(&quot;x&quot;);plt.ylabel(&quot;y&quot;)</code> plt设置标题plt.suptitle('one variable plot') ax设置标题ax[0].set_title('one variable plot') ax对于坐标轴的操作会多set_而plt没有比如plt.ylim(-0.2,1.1),<a href="https://www.cnblogs.com/cgmcoding/p/13384221.html#:~:text=%E7%BB%93%E6%9E%9C%E6%98%AF%E4%B8%80%E6%A0%B7%E7%9A%84%EF%BC%8C%E5%8C%BA%E5%88%AB%E5%9C%A8%E4%BA%8E%EF%BC%9A%20%EF%BC%881%EF%BC%89plt.plot,%28%29%E5%85%88%E7%94%9F%E6%88%90%E4%B8%80%E4%B8%AAfigure%E7%94%BB%E5%B8%83%EF%BC%8C%E7%84%B6%E5%90%8E%E5%9C%A8%E8%BF%99%E4%B8%AA%E7%94%BB%E5%B8%83%E4%B8%8A%E9%9A%90%E5%BC%8F%E7%94%9F%E6%88%90%E7%9A%84%E7%94%BB%E5%9B%BE%E5%8C%BA%E5%9F%9F%E4%B8%8A%E7%94%BB%E5%9B%BE%20%EF%BC%882%EF%BC%89ax.plot%20%28%29%E5%90%8C%E6%97%B6%E7%94%9F%E6%88%90%E4%BA%86fig%E5%92%8Cax%E5%AF%B9%E8%B1%A1%EF%BC%8C%E7%84%B6%E5%90%8E%E7%94%A8ax%E5%AF%B9%E8%B1%A1%E5%9C%A8%E5%85%B6%E5%8C%BA%E5%9F%9F%E4%B8%8A%E7%94%BB%E5%9B%BE%EF%BC%8C%E6%8E%A8%E8%8D%90%E4%BD%BF%E7%94%A8%E8%AF%A5%E6%96%B9%E5%BC%8F">plt和ax的区别</a>  （1）plt.plot()先生成一个figure画布，然后在这个画布上隐式生成的画图区域上画图<br>（2）ax.plot()同时生成了fig和ax对象，然后用ax对象在其区域上画图，推荐使用该方式<br>一维的分类图</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="comment"># %matplotlib widget</span></span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line">plt.style.use(<span class="string">&#x27;./deeplearning.mplstyle&#x27;</span>)</span><br><span class="line">plt.rcParams[<span class="string">&#x27;font.size&#x27;</span>] = <span class="number">8</span></span><br><span class="line"><span class="keyword">from</span> lab_utils_common <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> plt_one_addpt_onclick <span class="keyword">import</span> plt_one_addpt_onclick</span><br><span class="line"></span><br><span class="line">x_train = np.array([<span class="number">0.</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>])</span><br><span class="line">y_train = np.array([<span class="number">0</span>,  <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>])</span><br><span class="line">x_train2 = np.array([[<span class="number">0.5</span>, <span class="number">1.5</span>], [<span class="number">1</span>,<span class="number">1</span>], [<span class="number">1.5</span>, <span class="number">0.5</span>], [<span class="number">3</span>, <span class="number">0.5</span>], [<span class="number">2</span>, <span class="number">2</span>], [<span class="number">1</span>, <span class="number">2.5</span>]])</span><br><span class="line">y_train2 = np.array([<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>])</span><br><span class="line">pos = y_train == <span class="number">1</span></span><br><span class="line">neg = y_train == <span class="number">0</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&#x27;这里的x_train[pos]=<span class="subst">&#123;x_train[pos]&#125;</span>等价于x_train[y_train == 1]=<span class="subst">&#123;x_train[y_train == <span class="number">1</span>]&#125;</span>&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(pos)</span><br><span class="line"><span class="comment"># ax.scatter(x_train[pos],y_train[pos],marker=&#x27;x&#x27;,c=&#x27;r&#x27;)</span></span><br><span class="line"><span class="comment"># ax.scatter(x_train[neg],y_train[neg],marker=&#x27;o&#x27;,c=&#x27;b&#x27;)</span></span><br><span class="line"><span class="comment"># ax.set_xlabel=&quot;x&quot;;ax.set_ylabel=&quot;y&quot;</span></span><br><span class="line">plt.scatter(x_train[pos],y_train[pos],marker=<span class="string">&#x27;x&#x27;</span>,c=<span class="string">&#x27;r&#x27;</span>,label=<span class="string">&#x27;y=1&#x27;</span>)</span><br><span class="line">plt.scatter(x_train[neg],y_train[neg],marker=<span class="string">&#x27;o&#x27;</span>,c=<span class="string">&#x27;b&#x27;</span>,label=<span class="string">&#x27;y=0&#x27;</span>)</span><br><span class="line">plt.suptitle(<span class="string">&#x27;one variable plot&#x27;</span>);plt.ylim(-<span class="number">0.2</span>,<span class="number">1.1</span>)</span><br><span class="line">plt.xlabel(<span class="string">&quot;x&quot;</span>);plt.ylabel(<span class="string">&quot;y&quot;</span>)</span><br><span class="line">plt.legend()</span><br><span class="line">plt.show()</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="sigmoid函数的逻辑回归">Sigmoid函数的逻辑回归</h2><p>正如讲座视频中所讨论的，对于分类任务，我们可以从使用线性回归模型开始,这可以通过使用“sigmoid 函数”来实现，该函数将所有输入值映射到 0 到 1 之间的值。如果输入是数字数组，我们希望将 sigmoid 函数应用于输入数组中的每个值。</p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mtable width="100%"><mtr><mtd width="50%"></mtd><mtd><mrow><mi>g</mi><mo stretchy="false">(</mo><mi>z</mi><mo stretchy="false">)</mo><mo>=</mo><mfrac><mn>1</mn><mrow><mn>1</mn><mo>+</mo><msup><mi>e</mi><mrow><mo>−</mo><mi>z</mi></mrow></msup></mrow></mfrac></mrow></mtd><mtd width="50%"></mtd><mtd><mtext>(1)</mtext></mtd></mtr></mtable><annotation encoding="application/x-tex">g(z) = \frac{1}{1+e^{-z}}\tag{1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.09077em;vertical-align:-0.7693300000000001em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathdefault">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.697331em;"><span style="top:-2.989em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mathdefault mtight" style="margin-right:0.04398em;">z</span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.7693300000000001em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span><span class="tag"><span class="strut" style="height:2.09077em;vertical-align:-0.7693300000000001em;"></span><span class="mord text"><span class="mord">(</span><span class="mord"><span class="mord">1</span></span><span class="mord">)</span></span></span></span></span></span></p><p>sigmoid 应用于熟悉的线性回归模型，如下所示：</p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mtable width="100%"><mtr><mtd width="50%"></mtd><mtd><mrow><msub><mi>f</mi><mrow><mi mathvariant="bold">w</mi><mo separator="true">,</mo><mi>b</mi></mrow></msub><mo stretchy="false">(</mo><mi mathvariant="bold">x</mi><mo stretchy="false">)</mo><mo>=</mo><mi>g</mi><mo stretchy="false">(</mo><mi mathvariant="bold">w</mi><mo>⋅</mo><mi mathvariant="bold">x</mi><mo>+</mo><mi>b</mi><mo stretchy="false">)</mo></mrow></mtd><mtd width="50%"></mtd><mtd><mtext>(2)</mtext></mtd></mtr></mtable><annotation encoding="application/x-tex">f_{\mathbf{w},b}(\mathbf{x}) = g(\mathbf{w} \cdot \mathbf{x} + b ) \tag{2} </annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathbf mtight" style="margin-right:0.01597em;">w</span></span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight">b</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathbf">x</span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord"><span class="mord mathbf" style="margin-right:0.01597em;">w</span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathbf">x</span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">b</span><span class="mclose">)</span></span><span class="tag"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mord text"><span class="mord">(</span><span class="mord"><span class="mord">2</span></span><span class="mord">)</span></span></span></span></span></span></p><p>where</p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mtable width="100%"><mtr><mtd width="50%"></mtd><mtd><mrow><mi>g</mi><mo stretchy="false">(</mo><mi>z</mi><mo stretchy="false">)</mo><mo>=</mo><mfrac><mn>1</mn><mrow><mn>1</mn><mo>+</mo><msup><mi>e</mi><mrow><mo>−</mo><mi>z</mi></mrow></msup></mrow></mfrac></mrow></mtd><mtd width="50%"></mtd><mtd><mtext>(3)</mtext></mtd></mtr></mtable><annotation encoding="application/x-tex">g(z) = \frac{1}{1+e^{-z}}\tag{3}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.09077em;vertical-align:-0.7693300000000001em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathdefault">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.697331em;"><span style="top:-2.989em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mathdefault mtight" style="margin-right:0.04398em;">z</span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.7693300000000001em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span><span class="tag"><span class="strut" style="height:2.09077em;vertical-align:-0.7693300000000001em;"></span><span class="mord text"><span class="mord">(</span><span class="mord"><span class="mord">3</span></span><span class="mord">)</span></span></span></span></span></span></p><p>and</p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mtable width="100%"><mtr><mtd width="50%"></mtd><mtd><mrow><mi>z</mi><mo>=</mo><mi mathvariant="bold">w</mi><mo>⋅</mo><mi mathvariant="bold">x</mi><mo>+</mo><mi>b</mi></mrow></mtd><mtd width="50%"></mtd><mtd><mtext>(4)</mtext></mtd></mtr></mtable><annotation encoding="application/x-tex">z = \mathbf{w} \cdot \mathbf{x} + b \tag{4} </annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.44445em;vertical-align:0em;"></span><span class="mord"><span class="mord mathbf" style="margin-right:0.01597em;">w</span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathbf">x</span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">b</span></span><span class="tag"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord text"><span class="mord">(</span><span class="mord"><span class="mord">4</span></span><span class="mord">)</span></span></span></span></span></span></p><p>让我们将逻辑回归应用于肿瘤分类的分类数据示例。<br>首先，加载参数的示例和初始值。请尝试以下步骤：<br>单击“运行逻辑回归”以找到给定训练数据的最佳逻辑回归模型<br>请注意，生成的模型与数据拟合得非常好。<br>请注意，橙色线是”z'在上文（4）中。它与线性回归模型中的线不匹配。 通过应用阈值。<br>勾选“切换 0.5 阈值”上的框，以显示应用阈值时的预测值。<br>这些预测看起来不错，预测与数据匹配 现在，在大肿瘤大小范围（接近10）中添加更多数据点，并重新运行线性回归。<br>与线性回归模型不同，该模型继续做出正确的预测</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="comment"># %matplotlib widget</span></span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line">plt.style.use(<span class="string">&#x27;./deeplearning.mplstyle&#x27;</span>)</span><br><span class="line">plt.rcParams[<span class="string">&#x27;font.size&#x27;</span>] = <span class="number">8</span></span><br><span class="line"><span class="keyword">from</span> plt_one_addpt_onclick <span class="keyword">import</span> plt_one_addpt_onclick</span><br><span class="line"><span class="keyword">from</span> lab_utils_common <span class="keyword">import</span> draw_vthresh</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">sigmoid</span>(<span class="params">z</span>):</span><br><span class="line">    g=<span class="number">1</span>/(<span class="number">1</span>+np.exp(-z))</span><br><span class="line">    <span class="keyword">return</span> g</span><br><span class="line">z=np.arange(-<span class="number">10</span>,<span class="number">20</span>)</span><br><span class="line"><span class="built_in">print</span>(z)</span><br><span class="line">g_z=sigmoid(z)</span><br><span class="line"><span class="built_in">print</span>(g_z)</span><br><span class="line"><span class="built_in">print</span>(np.c_[z,g_z])</span><br><span class="line">fig,ax = plt.subplots(<span class="number">1</span>,<span class="number">1</span>,figsize=(<span class="number">5</span>,<span class="number">3</span>))</span><br><span class="line"><span class="comment"># Plot z vs sigmoid(z)</span></span><br><span class="line">ax.plot(z, g_z, c=<span class="string">&quot;b&quot;</span>)</span><br><span class="line"></span><br><span class="line">ax.set_title(<span class="string">&quot;Sigmoid function&quot;</span>)</span><br><span class="line">ax.set_ylabel(<span class="string">&#x27;sigmoid(z)&#x27;</span>)</span><br><span class="line">ax.set_xlabel(<span class="string">&#x27;z&#x27;</span>)</span><br><span class="line">draw_vthresh(ax,<span class="number">0</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><h2 id="决策边界">决策边界</h2><p>假设您想在此数据上训练一个逻辑回归模型，其形式为<br><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><mi>g</mi><mo stretchy="false">(</mo><msub><mi>w</mi><mn>0</mn></msub><msub><mi>x</mi><mn>0</mn></msub><mo>+</mo><msub><mi>w</mi><mn>1</mn></msub><msub><mi>x</mi><mn>1</mn></msub><mo>+</mo><mi>b</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">f(x) = g(w_0x_0+w_1x_1 + b)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.73333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">b</span><span class="mclose">)</span></span></span></span><br>where <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>g</mi><mo stretchy="false">(</mo><mi>z</mi><mo stretchy="false">)</mo><mo>=</mo><mfrac><mn>1</mn><mrow><mn>1</mn><mo>+</mo><msup><mi>e</mi><mrow><mo>−</mo><mi>z</mi></mrow></msup></mrow></mfrac></mrow><annotation encoding="application/x-tex">g(z) = \frac{1}{1+e^{-z}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.2484389999999999em;vertical-align:-0.403331em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mbin mtight">+</span><span class="mord mtight"><span class="mord mathdefault mtight">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7026642857142857em;"><span style="top:-2.786em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mathdefault mtight" style="margin-right:0.04398em;">z</span></span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.403331em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span>, which is the sigmoid function</p><ul><li><p>Let's say that you trained the model and get the parameters as <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>b</mi><mo>=</mo><mo>−</mo><mn>3</mn><mo separator="true">,</mo><msub><mi>w</mi><mn>0</mn></msub><mo>=</mo><mn>1</mn><mo separator="true">,</mo><msub><mi>w</mi><mn>1</mn></msub><mo>=</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">b = -3, w_0 = 1, w_1 = 1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">b</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8388800000000001em;vertical-align:-0.19444em;"></span><span class="mord">−</span><span class="mord">3</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8388800000000001em;vertical-align:-0.19444em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span>. That is,</p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><mi>g</mi><mo stretchy="false">(</mo><msub><mi>x</mi><mn>0</mn></msub><mo>+</mo><msub><mi>x</mi><mn>1</mn></msub><mo>−</mo><mn>3</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">f(x) = g(x_0+x_1-3)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.73333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">3</span><span class="mclose">)</span></span></span></span><br>回想一下，对于逻辑回归，模型表示为</p></li></ul><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mtable width="100%"><mtr><mtd width="50%"></mtd><mtd><mrow><msub><mi>f</mi><mrow><mi mathvariant="bold">w</mi><mo separator="true">,</mo><mi>b</mi></mrow></msub><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><mi>g</mi><mo stretchy="false">(</mo><mi mathvariant="bold">w</mi><mo>⋅</mo><mi mathvariant="bold">x</mi><mo>+</mo><mi>b</mi><mo stretchy="false">)</mo></mrow></mtd><mtd width="50%"></mtd><mtd><mtext>(1)</mtext></mtd></mtr></mtable><annotation encoding="application/x-tex">f_{\mathbf{w},b}(x) = g(\mathbf{w} \cdot \mathbf{x} + b) \tag{1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathbf mtight" style="margin-right:0.01597em;">w</span></span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight">b</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord"><span class="mord mathbf" style="margin-right:0.01597em;">w</span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathbf">x</span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">b</span><span class="mclose">)</span></span><span class="tag"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mord text"><span class="mord">(</span><span class="mord"><span class="mord">1</span></span><span class="mord">)</span></span></span></span></span></span></p><p>where <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>g</mi><mo stretchy="false">(</mo><mi>z</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">g(z)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="mclose">)</span></span></span></span> is known as the sigmoid function and it maps all input values to values between 0 and 1:</p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mtable width="100%"><mtr><mtd width="50%"></mtd><mtd><mrow><mi>g</mi><mo stretchy="false">(</mo><mi>z</mi><mo stretchy="false">)</mo><mo>=</mo><mfrac><mn>1</mn><mrow><mn>1</mn><mo>+</mo><msup><mi>e</mi><mrow><mo>−</mo><mi>z</mi></mrow></msup></mrow></mfrac></mrow></mtd><mtd width="50%"></mtd><mtd><mtext>(2)</mtext></mtd></mtr></mtable><annotation encoding="application/x-tex">g(z) = \frac{1}{1+e^{-z}}\tag{2}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.09077em;vertical-align:-0.7693300000000001em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathdefault">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.697331em;"><span style="top:-2.989em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mathdefault mtight" style="margin-right:0.04398em;">z</span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.7693300000000001em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span><span class="tag"><span class="strut" style="height:2.09077em;vertical-align:-0.7693300000000001em;"></span><span class="mord text"><span class="mord">(</span><span class="mord"><span class="mord">2</span></span><span class="mord">)</span></span></span></span></span></span></p><p>and <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="bold">w</mi><mo>⋅</mo><mi mathvariant="bold">x</mi></mrow><annotation encoding="application/x-tex">\mathbf{w} \cdot \mathbf{x}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.44445em;vertical-align:0em;"></span><span class="mord"><span class="mord mathbf" style="margin-right:0.01597em;">w</span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.44444em;vertical-align:0em;"></span><span class="mord"><span class="mord mathbf">x</span></span></span></span></span> is the vector dot product:</p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="bold">w</mi><mo>⋅</mo><mi mathvariant="bold">x</mi><mo>=</mo><msub><mi>w</mi><mn>0</mn></msub><msub><mi>x</mi><mn>0</mn></msub><mo>+</mo><msub><mi>w</mi><mn>1</mn></msub><msub><mi>x</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">\mathbf{w} \cdot \mathbf{x} = w_0 x_0 + w_1 x_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.44445em;vertical-align:0em;"></span><span class="mord"><span class="mord mathbf" style="margin-right:0.01597em;">w</span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.44444em;vertical-align:0em;"></span><span class="mord"><span class="mord mathbf">x</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.73333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span></p><ul><li><p>We interpret the output of the model (<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>f</mi><mrow><mi mathvariant="bold">w</mi><mo separator="true">,</mo><mi>b</mi></mrow></msub><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">f_{\mathbf{w},b}(x)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathbf mtight" style="margin-right:0.01597em;">w</span></span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight">b</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span></span></span></span>) as the probability that <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>y</mi><mo>=</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">y=1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span> given <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi></mrow><annotation encoding="application/x-tex">x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">x</span></span></span></span> and parameterized by <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>w</mi></mrow><annotation encoding="application/x-tex">w</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.02691em;">w</span></span></span></span> and <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>b</mi></mrow><annotation encoding="application/x-tex">b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">b</span></span></span></span>.</p></li><li><p>Therefore, to get a final prediction (<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>y</mi><mo>=</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">y=0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span></span></span></span> or <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>y</mi><mo>=</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">y=1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span>) from the logistic regression model, we can use the following heuristic -</p><p>if <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>f</mi><mrow><mi mathvariant="bold">w</mi><mo separator="true">,</mo><mi>b</mi></mrow></msub><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>&gt;</mo><mo>=</mo><mn>0.5</mn></mrow><annotation encoding="application/x-tex">f_{\mathbf{w},b}(x) &gt;= 0.5</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathbf mtight" style="margin-right:0.01597em;">w</span></span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight">b</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&gt;</span></span><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span><span class="mord">.</span><span class="mord">5</span></span></span></span>, predict <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>y</mi><mo>=</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">y=1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span></p><p>if <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>f</mi><mrow><mi mathvariant="bold">w</mi><mo separator="true">,</mo><mi>b</mi></mrow></msub><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>&lt;</mo><mn>0.5</mn></mrow><annotation encoding="application/x-tex">f_{\mathbf{w},b}(x) &lt; 0.5</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathbf mtight" style="margin-right:0.01597em;">w</span></span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight">b</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span><span class="mord">.</span><span class="mord">5</span></span></span></span>, predict <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>y</mi><mo>=</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">y=0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span></span></span></span></p></li><li><p>Let's plot the sigmoid function to see where <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>g</mi><mo stretchy="false">(</mo><mi>z</mi><mo stretchy="false">)</mo><mo>&gt;</mo><mo>=</mo><mn>0.5</mn></mrow><annotation encoding="application/x-tex">g(z) &gt;= 0.5</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&gt;</span></span><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span><span class="mord">.</span><span class="mord">5</span></span></span></span><br>如您所见,<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>g</mi><mo stretchy="false">(</mo><mi>z</mi><mo stretchy="false">)</mo><mo>&gt;</mo><mo>=</mo><mn>0.5</mn></mrow><annotation encoding="application/x-tex">g(z) &gt;= 0.5</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&gt;</span></span><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span><span class="mord">.</span><span class="mord">5</span></span></span></span> for <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>z</mi><mo>&gt;</mo><mo>=</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">z &gt;=0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&gt;</span></span><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span></span></span></span><br>对于逻辑回归模型 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>z</mi><mo>=</mo><mi mathvariant="bold">w</mi><mo>⋅</mo><mi mathvariant="bold">x</mi><mo>+</mo><mi>b</mi></mrow><annotation encoding="application/x-tex">z = \mathbf{w} \cdot \mathbf{x} + b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.44445em;vertical-align:0em;"></span><span class="mord"><span class="mord mathbf" style="margin-right:0.01597em;">w</span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathbf">x</span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">b</span></span></span></span> 因此</p></li></ul><p>如果 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="bold">w</mi><mo>⋅</mo><mi mathvariant="bold">x</mi><mo>+</mo><mi>b</mi><mo>&gt;</mo><mo>=</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">\mathbf{w} \cdot \mathbf{x} + b &gt;= 0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.44445em;vertical-align:0em;"></span><span class="mord"><span class="mord mathbf" style="margin-right:0.01597em;">w</span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathbf">x</span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.73354em;vertical-align:-0.0391em;"></span><span class="mord mathdefault">b</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&gt;</span></span><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span></span></span></span><br>，模型预测  <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>y</mi><mo>=</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">y=1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span><br>如果 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="bold">w</mi><mo>⋅</mo><mi mathvariant="bold">x</mi><mo>+</mo><mi>b</mi><mo>&lt;</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">\mathbf{w} \cdot \mathbf{x} + b &lt; 0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.44445em;vertical-align:0em;"></span><span class="mord"><span class="mord mathbf" style="margin-right:0.01597em;">w</span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathbf">x</span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.73354em;vertical-align:-0.0391em;"></span><span class="mord mathdefault">b</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span></span></span></span><br>，模型预测 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>y</mi><mo>=</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">y=0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span></span></span></span><br>现在，让我们回到我们的示例，了解逻辑回归模型如何进行预测。</p><p>我们的逻辑回归模型具有以下形式</p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><mi>g</mi><mo stretchy="false">(</mo><mo>−</mo><mn>3</mn><mo>+</mo><msub><mi>x</mi><mn>0</mn></msub><mo>+</mo><msub><mi>x</mi><mn>1</mn></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">f(x) = g(-3 + x_0+x_1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord">−</span><span class="mord">3</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.73333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span><br>从你上面学到的内容中，你可以看到这个模型预测<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>y</mi><mo>=</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">y=1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span><br>如果<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>−</mo><mn>3</mn><mo>+</mo><msub><mi>x</mi><mn>0</mn></msub><mo>+</mo><msub><mi>x</mi><mn>1</mn></msub><mo>&gt;</mo><mo>=</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">-3 + x_0+x_1 &gt;= 0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">−</span><span class="mord">3</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.73333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.6891em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&gt;</span></span><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span></span></span></span></p><p>让我们看看这在图形上是什么样子的。我们将从绘图开始 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>−</mo><mn>3</mn><mo>+</mo><msub><mi>x</mi><mn>0</mn></msub><mo>+</mo><msub><mi>x</mi><mn>1</mn></msub><mo>=</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">-3 + x_0+x_1 = 0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">−</span><span class="mord">3</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.73333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span></span></span></span><br>，相当于<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>x</mi><mn>1</mn></msub><mo>=</mo><mn>3</mn><mo>−</mo><msub><mi>x</mi><mn>0</mn></msub></mrow><annotation encoding="application/x-tex">x_1 = 3 - x_0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">3</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>.<br><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>−</mo><mn>3</mn><mo>+</mo><msub><mi>x</mi><mn>0</mn></msub><mo>+</mo><msub><mi>x</mi><mn>1</mn></msub><mo>=</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">-3 + x_0+x_1 = 0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">−</span><span class="mord">3</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.73333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span></span></span></span>这条线称为决策边界下方y=0<br>总体代码</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="comment"># %matplotlib widget</span></span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line">plt.style.use(<span class="string">&#x27;./deeplearning.mplstyle&#x27;</span>)</span><br><span class="line">plt.rcParams[<span class="string">&#x27;font.size&#x27;</span>] = <span class="number">8</span></span><br><span class="line"><span class="keyword">from</span> lab_utils_common <span class="keyword">import</span> plot_data, dlc, sigmoid, draw_vthresh</span><br><span class="line"><span class="keyword">from</span> lab_utils_multi <span class="keyword">import</span> zscore_normalize_features, run_gradient_descent_feng</span><br><span class="line">np.set_printoptions(precision=<span class="number">2</span>)</span><br><span class="line">X = np.array([[<span class="number">0.5</span>, <span class="number">1.5</span>], [<span class="number">1</span>,<span class="number">1</span>], [<span class="number">1.5</span>, <span class="number">0.5</span>], [<span class="number">3</span>, <span class="number">0.5</span>], [<span class="number">2</span>, <span class="number">2</span>], [<span class="number">1</span>, <span class="number">2.5</span>]])</span><br><span class="line">y = np.array([<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>])</span><br><span class="line"><span class="built_in">print</span>(y.shape);w,b=run_gradient_descent_feng(X,y,iterations=<span class="number">10000</span>, alpha = <span class="number">1e-3</span>)</span><br><span class="line"><span class="comment"># 打印多元回归函数</span></span><br><span class="line">wb=<span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(w)):</span><br><span class="line">    wb+=<span class="string">f&#x27;(<span class="subst">&#123;w[i]&#125;</span>*x[<span class="subst">&#123;i&#125;</span>])+(<span class="subst">&#123;b&#125;</span>)&#x27;</span></span><br><span class="line"><span class="built_in">print</span>(wb)</span><br><span class="line">x0=np.arange(<span class="number">0</span>,<span class="number">6</span>)</span><br><span class="line">x1=<span class="number">3</span>-x0</span><br><span class="line">fig,ax=plt.subplots(<span class="number">1</span>,<span class="number">1</span>,figsize=(<span class="number">5</span>,<span class="number">5</span>))</span><br><span class="line">ax.plot(x0,x1,c=<span class="string">&#x27;b&#x27;</span>);ax.axis([<span class="number">0</span>,<span class="number">5</span>,<span class="number">0</span>,<span class="number">5</span>])</span><br><span class="line">ax.set_xlabel(<span class="string">&#x27;$x_0$&#x27;</span>);ax.set_ylabel(<span class="string">&#x27;$x_1$&#x27;</span>)</span><br><span class="line">ax.fill_between(x0,x1,facecolor=<span class="string">&#x27;green&#x27;</span>, alpha=<span class="number">0.3</span>)</span><br><span class="line">plot_data(X,y,ax)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><h3 id="逻辑回归损失">逻辑回归损失</h3><p>C1_W3_Lab05_Cost让我们使用平方误差成本获得成本的曲面图</p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>J</mi><mo stretchy="false">(</mo><mi>w</mi><mo separator="true">,</mo><mi>b</mi><mo stretchy="false">)</mo><mo>=</mo><mfrac><mn>1</mn><mrow><mn>2</mn><mi>m</mi></mrow></mfrac><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>0</mn></mrow><mrow><mi>m</mi><mo>−</mo><mn>1</mn></mrow></munderover><mo stretchy="false">(</mo><msub><mi>f</mi><mrow><mi>w</mi><mo separator="true">,</mo><mi>b</mi></mrow></msub><mo stretchy="false">(</mo><msup><mi>x</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><mo stretchy="false">)</mo><mo>−</mo><msup><mi>y</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><msup><mo stretchy="false">)</mo><mn>2</mn></msup></mrow><annotation encoding="application/x-tex">J(w,b) = \frac{1}{2m} \sum\limits_{i = 0}^{m-1} (f_{w,b}(x^{(i)}) - y^{(i)})^2 </annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.09618em;">J</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">b</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.0787820000000004em;vertical-align:-1.277669em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span><span class="mord mathdefault">m</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8011130000000004em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">0</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.300005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">m</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.277669em;"><span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight">b</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathdefault mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.188em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathdefault mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span></span></p><p>where</p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>f</mi><mrow><mi>w</mi><mo separator="true">,</mo><mi>b</mi></mrow></msub><mo stretchy="false">(</mo><msup><mi>x</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><mo stretchy="false">)</mo><mo>=</mo><mi>s</mi><mi>i</mi><mi>g</mi><mi>m</mi><mi>o</mi><mi>i</mi><mi>d</mi><mo stretchy="false">(</mo><mi>w</mi><msup><mi>x</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><mo>+</mo><mi>b</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">f_{w,b}(x^{(i)}) = sigmoid(wx^{(i)} + b )</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.224108em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight">b</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathdefault mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.188em;vertical-align:-0.25em;"></span><span class="mord mathdefault">s</span><span class="mord mathdefault">i</span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mord mathdefault">m</span><span class="mord mathdefault">o</span><span class="mord mathdefault">i</span><span class="mord mathdefault">d</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathdefault mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">b</span><span class="mclose">)</span></span></span></span></span></p><p>该结果很不平滑<br>损失是单个示例与其目标值之差的度量，而<br>成本是训练集损失的度量<br>这是定义的：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>l</mi><mi>o</mi><mi>s</mi><mi>s</mi><mo stretchy="false">(</mo><msub><mi>f</mi><mrow><mi mathvariant="bold">w</mi><mo separator="true">,</mo><mi>b</mi></mrow></msub><mo stretchy="false">(</mo><msup><mi mathvariant="bold">x</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><mo stretchy="false">)</mo><mo separator="true">,</mo><msup><mi>y</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">loss(f_{\mathbf{w},b}(\mathbf{x}^{(i)}), y^{(i)})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.174108em;vertical-align:-0.286108em;"></span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">o</span><span class="mord mathdefault">s</span><span class="mord mathdefault">s</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathbf mtight" style="margin-right:0.01597em;">w</span></span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight">b</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord"><span class="mord mathbf">x</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8879999999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathdefault mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8879999999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathdefault mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span> 是单个数据点的成本，即：<br>$$loss(f_{\mathbf{w},b}(\mathbf{x}^{(i)}), y^{(i)}) = (-y^{(i)} \log\left(f_{\mathbf{w},b}\left( \mathbf{x}^{(i)} \right) \right) - \left( 1 - y^{(i)}\right) \log \left( 1 - f_{\mathbf{w},b}\left( \mathbf{x}^{(i)} \right) \right)$$</p><h3 id="逻辑回归成本">逻辑回归成本</h3><p>成本是训练集损失的度量（之和），对于逻辑回归，成本函数的形式为</p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mtable width="100%"><mtr><mtd width="50%"></mtd><mtd><mrow><mi>J</mi><mo stretchy="false">(</mo><mi mathvariant="bold">w</mi><mo separator="true">,</mo><mi>b</mi><mo stretchy="false">)</mo><mo>=</mo><mfrac><mn>1</mn><mi>m</mi></mfrac><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>0</mn></mrow><mrow><mi>m</mi><mo>−</mo><mn>1</mn></mrow></munderover><mrow><mo fence="true">[</mo><mi>l</mi><mi>o</mi><mi>s</mi><mi>s</mi><mo stretchy="false">(</mo><msub><mi>f</mi><mrow><mi mathvariant="bold">w</mi><mo separator="true">,</mo><mi>b</mi></mrow></msub><mo stretchy="false">(</mo><msup><mi mathvariant="bold">x</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><mo stretchy="false">)</mo><mo separator="true">,</mo><msup><mi>y</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><mo stretchy="false">)</mo><mo fence="true">]</mo></mrow></mrow></mtd><mtd width="50%"></mtd><mtd><mtext>(1)</mtext></mtd></mtr></mtable><annotation encoding="application/x-tex">J(\mathbf{w},b) = \frac{1}{m} \sum_{i=0}^{m-1} \left[ loss(f_{\mathbf{w},b}(\mathbf{x}^{(i)}), y^{(i)}) \right] \tag{1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.09618em;">J</span><span class="mopen">(</span><span class="mord"><span class="mord mathbf" style="margin-right:0.01597em;">w</span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">b</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.0787820000000004em;vertical-align:-1.277669em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">m</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8011130000000004em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">0</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.300005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">m</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.277669em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size2">[</span></span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">o</span><span class="mord mathdefault">s</span><span class="mord mathdefault">s</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathbf mtight" style="margin-right:0.01597em;">w</span></span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight">b</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord"><span class="mord mathbf">x</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathdefault mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathdefault mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size2">]</span></span></span></span><span class="tag"><span class="strut" style="height:3.0787820000000004em;vertical-align:-1.277669em;"></span><span class="mord text"><span class="mord">(</span><span class="mord"><span class="mord">1</span></span><span class="mord">)</span></span></span></span></span></span></p><p>where</p><ul><li><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>l</mi><mi>o</mi><mi>s</mi><mi>s</mi><mo stretchy="false">(</mo><msub><mi>f</mi><mrow><mi mathvariant="bold">w</mi><mo separator="true">,</mo><mi>b</mi></mrow></msub><mo stretchy="false">(</mo><msup><mi mathvariant="bold">x</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><mo stretchy="false">)</mo><mo separator="true">,</mo><msup><mi>y</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">loss(f_{\mathbf{w},b}(\mathbf{x}^{(i)}), y^{(i)})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.174108em;vertical-align:-0.286108em;"></span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">o</span><span class="mord mathdefault">s</span><span class="mord mathdefault">s</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathbf mtight" style="margin-right:0.01597em;">w</span></span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight">b</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord"><span class="mord mathbf">x</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8879999999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathdefault mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8879999999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathdefault mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span> is the cost for a single data point, 在上文已经给出</p></li><li><p>where m is the number of training examples in the data set and:</p></li></ul><p class='katex-block katex-error' title='ParseError: KaTeX parse error: No such environment: align at position 7: \begin{̲a̲l̲i̲g̲n̲}̲  f_{\mathbf{w…'>\begin{align}  f_{\mathbf{w},b}(\mathbf{x^{(i)}}) &amp;= g(z^{(i)})\tag{3} \\  z^{(i)} &amp;= \mathbf{w} \cdot \mathbf{x}+ b\tag{4} \\  g(z^{(i)}) &amp;= \frac{1}{1+e^{-z^{(i)}}}\tag{5} \end{align}</p><p>compute_cost_logistic<br>在循环外创建一个变量来存储成本<br>遍历训练集中的所有示例。<br>计算每个训练样本的损失<br>计算，上面的等式（4）z_i<br>预测 sigmoid 函数在哪里，上面的公式 （3）。Sigmoid （5） 是一个库函数。f_wb_ig<br>计算此示例的损失，如上式（2）<br>将此成本添加到循环外创建的总成本变量<br>获取所有迭代的成本总和，并返回总数除以示例数。<br><code>gz=sigmoid(np.dot(w,X[i])+b)</code>也是要写在循环内的因为g(zi)算出来是一个数那么w,x[i]需要一个行和列是一维<br>总体如下</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="comment"># %matplotlib widget</span></span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line">plt.style.use(<span class="string">&#x27;./deeplearning.mplstyle&#x27;</span>)</span><br><span class="line">plt.rcParams[<span class="string">&#x27;font.size&#x27;</span>] = <span class="number">8</span></span><br><span class="line"><span class="keyword">from</span> lab_utils_common <span class="keyword">import</span>  plot_data, sigmoid, dlc</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line">X = np.array([[<span class="number">0.5</span>, <span class="number">1.5</span>], [<span class="number">1</span>,<span class="number">1</span>], [<span class="number">1.5</span>, <span class="number">0.5</span>], [<span class="number">3</span>, <span class="number">0.5</span>], [<span class="number">2</span>, <span class="number">2</span>], [<span class="number">1</span>, <span class="number">2.5</span>]])</span><br><span class="line">y = np.array([<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>])</span><br><span class="line">fig,ax = plt.subplots(<span class="number">1</span>,<span class="number">1</span>,figsize=(<span class="number">4</span>,<span class="number">4</span>))</span><br><span class="line">plot_data(X, y, ax)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Set both axes to be from 0-4</span></span><br><span class="line">ax.axis([<span class="number">0</span>, <span class="number">4</span>, <span class="number">0</span>, <span class="number">3.5</span>])</span><br><span class="line">ax.set_ylabel(<span class="string">&#x27;$x_1$&#x27;</span>, fontsize=<span class="number">12</span>)</span><br><span class="line">ax.set_xlabel(<span class="string">&#x27;$x_0$&#x27;</span>, fontsize=<span class="number">12</span>)</span><br><span class="line">plt.show()</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">compute_cost_logistic</span>(<span class="params">X, y, w, b</span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    Computes cost</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    Args:</span></span><br><span class="line"><span class="string">      X (ndarray): Shape (m,n) matrix of examples with n features</span></span><br><span class="line"><span class="string">      y (ndarray): Shape (m,)  target values</span></span><br><span class="line"><span class="string">      w (ndarray): Shape (n)   parameters for prediction   </span></span><br><span class="line"><span class="string">      b (scalar):              parameter  for prediction </span></span><br><span class="line"><span class="string">      </span></span><br><span class="line"><span class="string">    Returns:</span></span><br><span class="line"><span class="string">      cost (scalar): cost</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    m=X.shape[<span class="number">0</span>]</span><br><span class="line">    loss=<span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(m):</span><br><span class="line">        gz=sigmoid(np.dot(w,X[i])+b)</span><br><span class="line">        loss_i=-y[i]*np.log(gz)-(<span class="number">1</span>-y[i])*np.log(<span class="number">1</span>-gz)</span><br><span class="line">        loss+=loss_i</span><br><span class="line">    loss=(<span class="number">1</span>/m)*loss</span><br><span class="line">    <span class="keyword">return</span> loss    </span><br><span class="line"><span class="comment"># 检查测试</span></span><br><span class="line">w=np.array([<span class="number">1</span>,<span class="number">1</span>]);b=-<span class="number">3</span>;<span class="built_in">print</span>(y.shape,w.shape,w)</span><br><span class="line"><span class="built_in">print</span>(compute_cost_logistic(X, y, w, b))</span><br></pre></td></tr></table></figure><h2 id="逻辑回归的梯度下降">逻辑回归的梯度下降</h2><p>C1_W3_Lab6 在本练习中，您将：探索逻辑回归的梯度下降更新代码。在熟悉的数据集上探索梯度下降<code>reshape(-1,)</code>能将数据处理成(m,)的一维形式<br>回想一下梯度下降算法利用梯度计算：</p><p class='katex-block katex-error' title='ParseError: KaTeX parse error: No such environment: align* at position 7: \begin{̲a̲l̲i̲g̲n̲*̲}̲&amp;\text{repeat …'>\begin{align*}&amp;\text{repeat until convergence:} \; \lbrace \\&amp;  \; \; \;w_j = w_j -  \alpha \frac{\partial J(\mathbf{w},b)}{\partial w_j} \tag{1}  \; &amp; \text{for j := 0..n-1} \\ &amp;  \; \; \;  \; \;b = b -  \alpha \frac{\partial J(\mathbf{w},b)}{\partial b} \\&amp;\rbrace\end{align*}</p><p>Where each iteration performs simultaneous updates on <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>w</mi><mi>j</mi></msub></mrow><annotation encoding="application/x-tex">w_j</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.716668em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span> for all <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>j</mi></mrow><annotation encoding="application/x-tex">j</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.85396em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.05724em;">j</span></span></span></span>, where</p><p class='katex-block katex-error' title='ParseError: KaTeX parse error: No such environment: align* at position 7: \begin{̲a̲l̲i̲g̲n̲*̲}̲\frac{\partial…'>\begin{align*}\frac{\partial J(\mathbf{w},b)}{\partial w_j}  &amp;= \frac{1}{m} \sum\limits_{i = 0}^{m-1} (f_{\mathbf{w},b}(\mathbf{x}^{(i)}) - \mathbf{y}^{(i)})x_{j}^{(i)} \tag{2} \\\frac{\partial J(\mathbf{w},b)}{\partial b}  &amp;= \frac{1}{m} \sum\limits_{i = 0}^{m-1} (f_{\mathbf{w},b}(\mathbf{x}^{(i)}) - \mathbf{y}^{(i)}) \tag{3} \end{align*}</p><ul><li>m is the number of training examples in the data set</li><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>f</mi><mrow><mi mathvariant="bold">w</mi><mo separator="true">,</mo><mi>b</mi></mrow></msub><mo stretchy="false">(</mo><msup><mi>x</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">f_{\mathbf{w},b}(x^{(i)})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.174108em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathbf mtight" style="margin-right:0.01597em;">w</span></span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight">b</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8879999999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathdefault mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span> is the model's prediction, while <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>y</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup></mrow><annotation encoding="application/x-tex">y^{(i)}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0824399999999998em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8879999999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathdefault mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span></span></span></span> is the target</li><li>对于逻辑回归模型<br><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>z</mi><mo>=</mo><mi mathvariant="bold">w</mi><mo>⋅</mo><mi mathvariant="bold">x</mi><mo>+</mo><mi>b</mi></mrow><annotation encoding="application/x-tex">z = \mathbf{w} \cdot \mathbf{x} + b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.44445em;vertical-align:0em;"></span><span class="mord"><span class="mord mathbf" style="margin-right:0.01597em;">w</span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathbf">x</span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">b</span></span></span></span><br><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>f</mi><mrow><mi mathvariant="bold">w</mi><mo separator="true">,</mo><mi>b</mi></mrow></msub><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><mi>g</mi><mo stretchy="false">(</mo><mi>z</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">f_{\mathbf{w},b}(x) = g(z)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathbf mtight" style="margin-right:0.01597em;">w</span></span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight">b</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="mclose">)</span></span></span></span><br>where <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>g</mi><mo stretchy="false">(</mo><mi>z</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">g(z)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="mclose">)</span></span></span></span> is the sigmoid function:<br><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>g</mi><mo stretchy="false">(</mo><mi>z</mi><mo stretchy="false">)</mo><mo>=</mo><mfrac><mn>1</mn><mrow><mn>1</mn><mo>+</mo><msup><mi>e</mi><mrow><mo>−</mo><mi>z</mi></mrow></msup></mrow></mfrac></mrow><annotation encoding="application/x-tex">g(z) = \frac{1}{1+e^{-z}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.2484389999999999em;vertical-align:-0.403331em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mbin mtight">+</span><span class="mord mtight"><span class="mord mathdefault mtight">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7026642857142857em;"><span style="top:-2.786em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mathdefault mtight" style="margin-right:0.04398em;">z</span></span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.403331em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span><br>The gradient descent algorithm implementation has two components:</li></ul><ul><li><p>The loop implementing equation (1) above. This is <code>gradient_descent</code> below and is generally provided to you in optional and practice labs.</p></li><li><p>The calculation of the current gradient, equations (2,3) above. This is <code>compute_gradient_logistic</code> below. You will be asked to implement this weeks practice lab.<br>Implements equation (2),(3) above for all <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>w</mi><mi>j</mi></msub></mrow><annotation encoding="application/x-tex">w_j</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.716668em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span> and <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>b</mi></mrow><annotation encoding="application/x-tex">b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">b</span></span></span></span>.<br>There are many ways to implement this. Outlined below is this:</p></li><li><p>initialize variables to accumulate <code>dj_dw</code> and <code>dj_db</code></p></li><li><p>for each example</p><ul><li>calculate the error for that example <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>g</mi><mo stretchy="false">(</mo><mi mathvariant="bold">w</mi><mo>⋅</mo><msup><mi mathvariant="bold">x</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><mo>+</mo><mi>b</mi><mo stretchy="false">)</mo><mo>−</mo><msup><mi mathvariant="bold">y</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup></mrow><annotation encoding="application/x-tex">g(\mathbf{w} \cdot \mathbf{x}^{(i)} + b) - \mathbf{y}^{(i)}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord"><span class="mord mathbf" style="margin-right:0.01597em;">w</span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.9713299999999999em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord"><span class="mord mathbf">x</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8879999999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathdefault mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">b</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.0824399999999998em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord"><span class="mord mathbf" style="margin-right:0.01597em;">y</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8879999999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathdefault mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span></span></span></span></li><li>for each input value <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mi>x</mi><mi>j</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msubsup></mrow><annotation encoding="application/x-tex">x_{j}^{(i)}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.4577719999999998em;vertical-align:-0.4129719999999999em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0448em;"><span style="top:-2.4231360000000004em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span><span style="top:-3.2198em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathdefault mtight">i</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4129719999999999em;"><span></span></span></span></span></span></span></span></span></span> in this example,<ul><li>multiply the error by the input  <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mi>x</mi><mi>j</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msubsup></mrow><annotation encoding="application/x-tex">x_{j}^{(i)}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.4577719999999998em;vertical-align:-0.4129719999999999em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0448em;"><span style="top:-2.4231360000000004em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span><span style="top:-3.2198em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathdefault mtight">i</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4129719999999999em;"><span></span></span></span></span></span></span></span></span></span>, and add to the corresponding element of <code>dj_dw</code>. (equation 2 above)</li></ul></li><li>add the error to <code>dj_db</code> (equation 3 above)</li></ul></li><li><p>divide <code>dj_db</code> and <code>dj_dw</code> by total number of examples (m)</p></li><li><p>note that <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi mathvariant="bold">x</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup></mrow><annotation encoding="application/x-tex">\mathbf{x}^{(i)}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8879999999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord"><span class="mord mathbf">x</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8879999999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathdefault mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span></span></span></span> in numpy <code>X[i,:]</code> or <code>X[i]</code>  and <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mi>x</mi><mi>j</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msubsup></mrow><annotation encoding="application/x-tex">x_{j}^{(i)}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.4577719999999998em;vertical-align:-0.4129719999999999em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0448em;"><span style="top:-2.4231360000000004em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span><span style="top:-3.2198em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathdefault mtight">i</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4129719999999999em;"><span></span></span></span></span></span></span></span></span></span> is <code>X[i,j]</code><br>在求偏导的compute_gradient_logistic子函数中对dj_dw: (ndarray Shape (n,))用<code>dj_dw=np.zeros_like(n)</code>报错，用<code>dj_dw = np.zeros((n,))</code>正常,经查前者生成的是0维数据()，后者是一维数组(n,)因此前者维度不匹配报错，或者用np.zeros_like(X[0])即可生成于一维数组(n,)这里的n是X的列数<br>梯度下降代码  下面的代码实现公式（1）如下。花点时间查找例程中的函数并将其与上面的等式进行比较<br>在此子函数中使用<code>for j in range(n): w[j]=w[j]-alpha*dj_dw</code>多此一举，因为上文中返回的dj_dw本身就是一维数组(n,)类型用<code>w=w-alpha*dj_dw</code>就可以一次更新所有的w[j]j从0-n-1，<code>if i % math.ceil(num_iters/10)==0:和if num_iters&lt;=100000:</code>是要在for循环以内的这样才能实时计算保存cost和输出<br>绘制分界线，因为<code>z=w0*x0+w1*x1</code> 以z=0为临界线，所以<code>w0*x0+w1*x1=0</code>分别令x0=0，x1=0，在(x0,x1)二维平面中得到两点用plot绘制两点间的直线连接即可<br>能计算二维X (ndarray): Shape (m,n)的梯度下降函数也能用于计算一维，将一维<code>x_train = np.array([0., 1, 2, 3, 4, 5])</code>转换为二维一列的列数组即可，列数为1是因为特征只有一个<code>x_train=x_train.reshape(-1,1)</code><br>总代码</p></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="comment"># %matplotlib widget</span></span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line">plt.style.use(<span class="string">&#x27;./deeplearning.mplstyle&#x27;</span>)</span><br><span class="line">plt.rcParams[<span class="string">&#x27;font.size&#x27;</span>] = <span class="number">8</span></span><br><span class="line"><span class="keyword">import</span> copy, math</span><br><span class="line"><span class="keyword">from</span> lab_utils_common <span class="keyword">import</span>  dlc, plot_data, plt_tumor_data, sigmoid, compute_cost_logistic</span><br><span class="line"><span class="keyword">from</span> plt_quad_logistic <span class="keyword">import</span> plt_quad_logistic, plt_prob</span><br><span class="line"><span class="comment">#让我们从决策边界实验室中使用的相同两个特征数据集开始。</span></span><br><span class="line">X_train = np.array([[<span class="number">0.5</span>, <span class="number">1.5</span>], [<span class="number">1</span>,<span class="number">1</span>], [<span class="number">1.5</span>, <span class="number">0.5</span>], [<span class="number">3</span>, <span class="number">0.5</span>], [<span class="number">2</span>, <span class="number">2</span>], [<span class="number">1</span>, <span class="number">2.5</span>]])</span><br><span class="line">y_train = np.array([<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>])</span><br><span class="line"><span class="comment">#和以前一样，我们将    </span></span><br><span class="line"><span class="comment"># pos = y_train == 1</span></span><br><span class="line"><span class="comment"># neg = y_train == 0</span></span><br><span class="line"><span class="comment"># pos = pos.reshape(-1,)  #work with 1D or 1D y vectors</span></span><br><span class="line"><span class="comment"># neg = neg.reshape(-1,)</span></span><br><span class="line"><span class="comment"># print(pos,neg,pos.shape,neg.shape)</span></span><br><span class="line">fig,ax=plt.subplots(<span class="number">1</span>,<span class="number">1</span>,figsize=(<span class="number">6</span>,<span class="number">6</span>))</span><br><span class="line">plot_data(X_train,y_train,ax)</span><br><span class="line">ax.set_xlabel(<span class="string">&#x27;$x_0$&#x27;</span>);ax.set_ylabel(<span class="string">&#x27;$x_1$&#x27;</span>);</span><br><span class="line">plt.show()</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">compute_gradient_logistic</span>(<span class="params">X, y, w, b</span>): </span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    Computes the gradient for linear regression </span></span><br><span class="line"><span class="string"> </span></span><br><span class="line"><span class="string">    Args:</span></span><br><span class="line"><span class="string">      X : (ndarray Shape (m,n)) variable such as house size </span></span><br><span class="line"><span class="string">      y : (ndarray Shape (m,))  actual value </span></span><br><span class="line"><span class="string">      w : (ndarray Shape (n,))  parameters of the model      </span></span><br><span class="line"><span class="string">      b : (scalar)              parameter of the model   </span></span><br><span class="line"><span class="string">    Returns</span></span><br><span class="line"><span class="string">      dj_dw: (ndarray Shape (n,)) The gradient of the cost w.r.t. the parameters w. </span></span><br><span class="line"><span class="string">      dj_db: (scalar)             The gradient of the cost w.r.t. the parameter b. </span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    m,n=X.shape</span><br><span class="line">    dj_db=<span class="number">0</span></span><br><span class="line">    dj_dw=np.zeros_like(X[<span class="number">0</span>])  <span class="comment"># 或dj_dw = np.zeros((n,))</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(m):</span><br><span class="line">        fwb_i=sigmoid(np.dot(X[i],w)+b)</span><br><span class="line">        err=fwb_i-y[i]</span><br><span class="line">        dj_db+=(<span class="number">1</span>/m)*err</span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(n):</span><br><span class="line">            dj_dw[j]+=(<span class="number">1</span>/m)*err*X[i,j]</span><br><span class="line">    <span class="keyword">return</span> dj_dw,dj_db</span><br><span class="line"><span class="comment"># 测试</span></span><br><span class="line">X_tmp = np.array([[<span class="number">0.5</span>, <span class="number">1.5</span>], [<span class="number">1</span>,<span class="number">1</span>], [<span class="number">1.5</span>, <span class="number">0.5</span>], [<span class="number">3</span>, <span class="number">0.5</span>], [<span class="number">2</span>, <span class="number">2</span>], [<span class="number">1</span>, <span class="number">2.5</span>]])</span><br><span class="line">y_tmp = np.array([<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>])</span><br><span class="line">w = np.array([<span class="number">2.</span>,<span class="number">3.</span>])</span><br><span class="line">b = <span class="number">1.</span></span><br><span class="line">dj_dw, dj_db = compute_gradient_logistic(X_tmp, y_tmp, w, b)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;dj_db, non-vectorized version: <span class="subst">&#123;dj_db&#125;</span>&quot;</span> )</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;dj_dw, non-vectorized version: <span class="subst">&#123;dj_dw.tolist()&#125;</span>&quot;</span> )</span><br><span class="line">dj_dw1=np.zeros_like(<span class="number">2</span>);dj_dw2=np.zeros(<span class="number">2</span>);<span class="built_in">print</span>(dj_dw1,dj_dw2,dj_dw1.shape,dj_dw2.shape)</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">gradient_descent</span>(<span class="params">X, y, w_in, b_in, alpha, num_iters</span>): </span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    Performs batch gradient descent</span></span><br><span class="line"><span class="string">    </span></span><br><span class="line"><span class="string">    Args:</span></span><br><span class="line"><span class="string">      X (ndarray): Shape (m,n)    matrix of examples </span></span><br><span class="line"><span class="string">      y (ndarray): Shape (m,)     target value of each example</span></span><br><span class="line"><span class="string">      w_in (ndarray): Shape (n,)  Initial values of parameters of the model</span></span><br><span class="line"><span class="string">      b_in (scalar):              Initial value of parameter of the model</span></span><br><span class="line"><span class="string">      alpha (float):              Learning rate</span></span><br><span class="line"><span class="string">      num_iters (int):            number of iterations to run gradient descent</span></span><br><span class="line"><span class="string">      </span></span><br><span class="line"><span class="string">    Returns:</span></span><br><span class="line"><span class="string">      w (ndarray): Shape (n,)     Updated values of parameters</span></span><br><span class="line"><span class="string">      b (scalar):                 Updated value of parameter </span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    w=copy.deepcopy(w_in)</span><br><span class="line">    b=b_in</span><br><span class="line">    m,n=X.shape</span><br><span class="line">    J_history = [] <span class="comment">#存储成本</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(num_iters):</span><br><span class="line">        dj_dw, dj_db = compute_gradient_logistic(X, y, w, b)  </span><br><span class="line">        b=b-alpha*dj_db </span><br><span class="line">        w=w-alpha*dj_dw</span><br><span class="line">        <span class="keyword">if</span> num_iters&lt;=<span class="number">100000</span>:</span><br><span class="line">            J_history.append(compute_cost_logistic(X, y, w, b))</span><br><span class="line">        <span class="keyword">if</span> i % math.ceil(num_iters/<span class="number">10</span>)==<span class="number">0</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">f&quot;Iteration <span class="subst">&#123;i:4d&#125;</span>: Cost <span class="subst">&#123;J_history[-<span class="number">1</span>]&#125;</span> &quot;</span>)</span><br><span class="line">    <span class="keyword">return</span> w, b, J_history, <span class="comment">#return final w,b and J history for graphing</span></span><br><span class="line">w_in  = np.zeros_like(X_train[<span class="number">0</span>])</span><br><span class="line">b_in  = <span class="number">0.</span></span><br><span class="line">alpha = <span class="number">0.1</span></span><br><span class="line">num_iters = <span class="number">10000</span></span><br><span class="line">w_out, b_out, _ = gradient_descent(X_train, y_train, w_in, b_in, alpha, num_iters) </span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;\nupdated parameters: w:<span class="subst">&#123;w_out&#125;</span>, b:<span class="subst">&#123;b_out&#125;</span>&quot;</span>)        </span><br><span class="line">fig,ax = plt.subplots(<span class="number">1</span>,<span class="number">1</span>,figsize=(<span class="number">5</span>,<span class="number">4</span>))</span><br><span class="line"><span class="comment"># plot the probability </span></span><br><span class="line">plt_prob(ax, w_out, b_out)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Plot the original data</span></span><br><span class="line">ax.set_ylabel(<span class="string">r&#x27;$x_1$&#x27;</span>)</span><br><span class="line">ax.set_xlabel(<span class="string">r&#x27;$x_0$&#x27;</span>)   </span><br><span class="line">ax.axis([<span class="number">0</span>, <span class="number">4</span>, <span class="number">0</span>, <span class="number">3.5</span>])</span><br><span class="line">plot_data(X_train,y_train,ax)   </span><br><span class="line"><span class="comment"># Plot the decision boundary</span></span><br><span class="line">x0 = -b_out/w_out[<span class="number">1</span>]</span><br><span class="line">x1 = -b_out/w_out[<span class="number">0</span>]</span><br><span class="line"><span class="built_in">print</span>(w_out[<span class="number">0</span>],w_out[<span class="number">1</span>],x0,x1)</span><br><span class="line">ax.plot([<span class="number">0</span>,x0],[x1,<span class="number">0</span>], c=dlc[<span class="string">&quot;dlblue&quot;</span>], lw=<span class="number">1</span>)</span><br><span class="line">plt.show() </span><br><span class="line"><span class="comment"># 用一维的测试通用性 </span></span><br><span class="line">x_train = np.array([<span class="number">0.</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>])</span><br><span class="line">y_train = np.array([<span class="number">0</span>,  <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>])</span><br><span class="line">x_train=x_train.reshape(-<span class="number">1</span>,<span class="number">1</span>)</span><br><span class="line"><span class="built_in">print</span>(x_train)</span><br><span class="line">w_in1=<span class="number">1</span>;b_in1=<span class="number">1</span></span><br><span class="line">w_out1, b_out1, _ = gradient_descent(x_train, y_train, w_in1, b_in1, alpha, num_iters) </span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;\nupdated parameters: w:<span class="subst">&#123;w_out1&#125;</span>, b:<span class="subst">&#123;b_out1&#125;</span>&quot;</span>) </span><br></pre></td></tr></table></figure><h2 id="正则化成本和梯度">正则化成本和梯度</h2><p>正则化可修复过度拟合<br>在本实验中：<br>使用正则化项扩展以前的线性和逻辑成本函数。<br>重新运行前面的过度拟合示例，并添加了正则化项。<br>上面的幻灯片显示了线性回归和逻辑回归的成本和梯度函数。注意：<br>成本<br>线性回归和逻辑回归之间的成本函数差异很大，但向方程添加正则化是相同的。<br>梯度<br>线性回归和逻辑回归的梯度函数非常相似。They differ only in the implementation of <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>f</mi><mrow><mi>w</mi><mi>b</mi></mrow></msub></mrow><annotation encoding="application/x-tex">f_{wb}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span><span class="mord mathdefault mtight">b</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>.<br>正则化线性回归的成本函数<br>成本函数正则化线性回归的公式为：<br>The equation for the cost function regularized linear regression is:</p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mtable width="100%"><mtr><mtd width="50%"></mtd><mtd><mrow><mi>J</mi><mo stretchy="false">(</mo><mi mathvariant="bold">w</mi><mo separator="true">,</mo><mi>b</mi><mo stretchy="false">)</mo><mo>=</mo><mfrac><mn>1</mn><mrow><mn>2</mn><mi>m</mi></mrow></mfrac><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>0</mn></mrow><mrow><mi>m</mi><mo>−</mo><mn>1</mn></mrow></munderover><mo stretchy="false">(</mo><msub><mi>f</mi><mrow><mi mathvariant="bold">w</mi><mo separator="true">,</mo><mi>b</mi></mrow></msub><mo stretchy="false">(</mo><msup><mi mathvariant="bold">x</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><mo stretchy="false">)</mo><mo>−</mo><msup><mi>y</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><msup><mo stretchy="false">)</mo><mn>2</mn></msup><mo>+</mo><mfrac><mi>λ</mi><mrow><mn>2</mn><mi>m</mi></mrow></mfrac><munderover><mo>∑</mo><mrow><mi>j</mi><mo>=</mo><mn>0</mn></mrow><mrow><mi>n</mi><mo>−</mo><mn>1</mn></mrow></munderover><msubsup><mi>w</mi><mi>j</mi><mn>2</mn></msubsup></mrow></mtd><mtd width="50%"></mtd><mtd><mtext>(1)</mtext></mtd></mtr></mtable><annotation encoding="application/x-tex">J(\mathbf{w},b) = \frac{1}{2m} \sum\limits_{i = 0}^{m-1} (f_{\mathbf{w},b}(\mathbf{x}^{(i)}) - y^{(i)})^2  + \frac{\lambda}{2m}  \sum_{j=0}^{n-1} w_j^2 \tag{1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.09618em;">J</span><span class="mopen">(</span><span class="mord"><span class="mord mathbf" style="margin-right:0.01597em;">w</span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">b</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.0787820000000004em;vertical-align:-1.277669em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span><span class="mord mathdefault">m</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8011130000000004em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">0</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.300005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">m</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.277669em;"><span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathbf mtight" style="margin-right:0.01597em;">w</span></span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight">b</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord"><span class="mord mathbf">x</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathdefault mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.188em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathdefault mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:3.2148900000000005em;vertical-align:-1.4137769999999998em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.37144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span><span class="mord mathdefault">m</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">λ</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8011130000000006em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="mrel mtight">=</span><span class="mord mtight">0</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.4137769999999998em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.864108em;"><span style="top:-2.4530000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span><span style="top:-3.1130000000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.383108em;"><span></span></span></span></span></span></span></span><span class="tag"><span class="strut" style="height:3.2148900000000005em;vertical-align:-1.4137769999999998em;"></span><span class="mord text"><span class="mord">(</span><span class="mord"><span class="mord">1</span></span><span class="mord">)</span></span></span></span></span></span></p><p>where:</p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mtable width="100%"><mtr><mtd width="50%"></mtd><mtd><mrow><msub><mi>f</mi><mrow><mi mathvariant="bold">w</mi><mo separator="true">,</mo><mi>b</mi></mrow></msub><mo stretchy="false">(</mo><msup><mi mathvariant="bold">x</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><mo stretchy="false">)</mo><mo>=</mo><mi mathvariant="bold">w</mi><mo>⋅</mo><msup><mi mathvariant="bold">x</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><mo>+</mo><mi>b</mi></mrow></mtd><mtd width="50%"></mtd><mtd><mtext>(2)</mtext></mtd></mtr></mtable><annotation encoding="application/x-tex">f_{\mathbf{w},b}(\mathbf{x}^{(i)}) = \mathbf{w} \cdot \mathbf{x}^{(i)} + b  \tag{2} </annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.224108em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathbf mtight" style="margin-right:0.01597em;">w</span></span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight">b</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord"><span class="mord mathbf">x</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathdefault mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.44445em;vertical-align:0em;"></span><span class="mord"><span class="mord mathbf" style="margin-right:0.01597em;">w</span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.0213299999999998em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord"><span class="mord mathbf">x</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathdefault mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">b</span></span><span class="tag"><span class="strut" style="height:1.224108em;vertical-align:-0.286108em;"></span><span class="mord text"><span class="mord">(</span><span class="mord"><span class="mord">2</span></span><span class="mord">)</span></span></span></span></span></span></p><p>Compare this to the cost function without regularization (which you implemented in  a previous lab), which is of the form:</p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>J</mi><mo stretchy="false">(</mo><mi mathvariant="bold">w</mi><mo separator="true">,</mo><mi>b</mi><mo stretchy="false">)</mo><mo>=</mo><mfrac><mn>1</mn><mrow><mn>2</mn><mi>m</mi></mrow></mfrac><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>0</mn></mrow><mrow><mi>m</mi><mo>−</mo><mn>1</mn></mrow></munderover><mo stretchy="false">(</mo><msub><mi>f</mi><mrow><mi mathvariant="bold">w</mi><mo separator="true">,</mo><mi>b</mi></mrow></msub><mo stretchy="false">(</mo><msup><mi mathvariant="bold">x</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><mo stretchy="false">)</mo><mo>−</mo><msup><mi>y</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><msup><mo stretchy="false">)</mo><mn>2</mn></msup></mrow><annotation encoding="application/x-tex">J(\mathbf{w},b) = \frac{1}{2m} \sum\limits_{i = 0}^{m-1} (f_{\mathbf{w},b}(\mathbf{x}^{(i)}) - y^{(i)})^2 </annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.09618em;">J</span><span class="mopen">(</span><span class="mord"><span class="mord mathbf" style="margin-right:0.01597em;">w</span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">b</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.0787820000000004em;vertical-align:-1.277669em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span><span class="mord mathdefault">m</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8011130000000004em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">0</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.300005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">m</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.277669em;"><span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathbf mtight" style="margin-right:0.01597em;">w</span></span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight">b</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord"><span class="mord mathbf">x</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathdefault mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.188em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathdefault mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span></span></p><p>The difference is the regularization term,  <span style="color:blue"><br><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mfrac><mi>λ</mi><mrow><mn>2</mn><mi>m</mi></mrow></mfrac><msubsup><mo>∑</mo><mrow><mi>j</mi><mo>=</mo><mn>0</mn></mrow><mrow><mi>n</mi><mo>−</mo><mn>1</mn></mrow></msubsup><msubsup><mi>w</mi><mi>j</mi><mn>2</mn></msubsup></mrow><annotation encoding="application/x-tex">\frac{\lambda}{2m}  \sum_{j=0}^{n-1} w_j^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.389826em;vertical-align:-0.43581800000000004em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8801079999999999em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mathdefault mtight">m</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">λ</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.954008em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="mrel mtight">=</span><span class="mord mtight">0</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.43581800000000004em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-2.441336em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.394772em;"><span></span></span></span></span></span></span></span></span></span> </span><br>包括这个术语激励梯度下降以最小化参数的大小。请注意，在此示例中，参数 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>b</mi></mrow><annotation encoding="application/x-tex">b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">b</span></span></span></span><br>未规范化。这是标准做法。<br>下面是等式（1）和（2）的实现。请注意，这在本课程中使用了标准模式，即所有示例。<code>for loop m</code><br>这里的正则项和成本函数是并行相加不要写嵌套循环，不要把j嵌套在i内这样会多加i倍的正则项,线性回归的fwb不要用sigmoid又不是逻辑回归<br>有一个经典错误<code>for j in range(n): J_cost1+=J_cost0+(lambda_/(2*m))*(w[j]**2)</code>这个语句会把J_cost0加j次而实际只要加一次<br>正则化逻辑回归的成本函数<br>对于正则化逻辑回归，成本函数的形式为</p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mtable width="100%"><mtr><mtd width="50%"></mtd><mtd><mrow><mi>J</mi><mo stretchy="false">(</mo><mi mathvariant="bold">w</mi><mo separator="true">,</mo><mi>b</mi><mo stretchy="false">)</mo><mo>=</mo><mfrac><mn>1</mn><mi>m</mi></mfrac><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>0</mn></mrow><mrow><mi>m</mi><mo>−</mo><mn>1</mn></mrow></munderover><mrow><mo fence="true">[</mo><mo>−</mo><msup><mi>y</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><mi>log</mi><mo>⁡</mo><mrow><mo fence="true">(</mo><msub><mi>f</mi><mrow><mi mathvariant="bold">w</mi><mo separator="true">,</mo><mi>b</mi></mrow></msub><mrow><mo fence="true">(</mo><msup><mi mathvariant="bold">x</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><mo fence="true">)</mo></mrow><mo fence="true">)</mo></mrow><mo>−</mo><mrow><mo fence="true">(</mo><mn>1</mn><mo>−</mo><msup><mi>y</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><mo fence="true">)</mo></mrow><mi>log</mi><mo>⁡</mo><mrow><mo fence="true">(</mo><mn>1</mn><mo>−</mo><msub><mi>f</mi><mrow><mi mathvariant="bold">w</mi><mo separator="true">,</mo><mi>b</mi></mrow></msub><mrow><mo fence="true">(</mo><msup><mi mathvariant="bold">x</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><mo fence="true">)</mo></mrow><mo fence="true">)</mo></mrow><mo fence="true">]</mo></mrow><mo>+</mo><mfrac><mi>λ</mi><mrow><mn>2</mn><mi>m</mi></mrow></mfrac><munderover><mo>∑</mo><mrow><mi>j</mi><mo>=</mo><mn>0</mn></mrow><mrow><mi>n</mi><mo>−</mo><mn>1</mn></mrow></munderover><msubsup><mi>w</mi><mi>j</mi><mn>2</mn></msubsup></mrow></mtd><mtd width="50%"></mtd><mtd><mtext>(3)</mtext></mtd></mtr></mtable><annotation encoding="application/x-tex">J(\mathbf{w},b) = \frac{1}{m}  \sum_{i=0}^{m-1} \left[ -y^{(i)} \log\left(f_{\mathbf{w},b}\left( \mathbf{x}^{(i)} \right) \right) - \left( 1 - y^{(i)}\right) \log \left( 1 - f_{\mathbf{w},b}\left( \mathbf{x}^{(i)} \right) \right) \right] + \frac{\lambda}{2m}  \sum_{j=0}^{n-1} w_j^2 \tag{3}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.09618em;">J</span><span class="mopen">(</span><span class="mord"><span class="mord mathbf" style="margin-right:0.01597em;">w</span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">b</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.0787820000000004em;vertical-align:-1.277669em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">m</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8011130000000004em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">0</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.300005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">m</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.277669em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size2">[</span></span><span class="mord">−</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathdefault mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size2">(</span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathbf mtight" style="margin-right:0.01597em;">w</span></span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight">b</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size2">(</span></span><span class="mord"><span class="mord"><span class="mord mathbf">x</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathdefault mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size2">)</span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size2">)</span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size2">(</span></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathdefault mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size2">)</span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size2">(</span></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathbf mtight" style="margin-right:0.01597em;">w</span></span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight">b</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size2">(</span></span><span class="mord"><span class="mord"><span class="mord mathbf">x</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathdefault mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size2">)</span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size2">)</span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size2">]</span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:3.2148900000000005em;vertical-align:-1.4137769999999998em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.37144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span><span class="mord mathdefault">m</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">λ</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8011130000000006em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="mrel mtight">=</span><span class="mord mtight">0</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.4137769999999998em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.864108em;"><span style="top:-2.4530000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span><span style="top:-3.1130000000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.383108em;"><span></span></span></span></span></span></span></span><span class="tag"><span class="strut" style="height:3.2148900000000005em;vertical-align:-1.4137769999999998em;"></span><span class="mord text"><span class="mord">(</span><span class="mord"><span class="mord">3</span></span><span class="mord">)</span></span></span></span></span></span></p><p>where:</p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mtable width="100%"><mtr><mtd width="50%"></mtd><mtd><mrow><msub><mi>f</mi><mrow><mi mathvariant="bold">w</mi><mo separator="true">,</mo><mi>b</mi></mrow></msub><mo stretchy="false">(</mo><msup><mi mathvariant="bold">x</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><mo stretchy="false">)</mo><mo>=</mo><mi>s</mi><mi>i</mi><mi>g</mi><mi>m</mi><mi>o</mi><mi>i</mi><mi>d</mi><mo stretchy="false">(</mo><mi mathvariant="bold">w</mi><mo>⋅</mo><msup><mi mathvariant="bold">x</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><mo>+</mo><mi>b</mi><mo stretchy="false">)</mo></mrow></mtd><mtd width="50%"></mtd><mtd><mtext>(4)</mtext></mtd></mtr></mtable><annotation encoding="application/x-tex">f_{\mathbf{w},b}(\mathbf{x}^{(i)}) = sigmoid(\mathbf{w} \cdot \mathbf{x}^{(i)} + b)  \tag{4} </annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.224108em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathbf mtight" style="margin-right:0.01597em;">w</span></span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight">b</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord"><span class="mord mathbf">x</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathdefault mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">s</span><span class="mord mathdefault">i</span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mord mathdefault">m</span><span class="mord mathdefault">o</span><span class="mord mathdefault">i</span><span class="mord mathdefault">d</span><span class="mopen">(</span><span class="mord"><span class="mord mathbf" style="margin-right:0.01597em;">w</span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.0213299999999998em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord"><span class="mord mathbf">x</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathdefault mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">b</span><span class="mclose">)</span></span><span class="tag"><span class="strut" style="height:1.224108em;vertical-align:-0.286108em;"></span><span class="mord text"><span class="mord">(</span><span class="mord"><span class="mord">4</span></span><span class="mord">)</span></span></span></span></span></span></p><p>Compare this to the cost function without regularization (which you implemented in  a previous lab:</p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>J</mi><mo stretchy="false">(</mo><mi mathvariant="bold">w</mi><mo separator="true">,</mo><mi>b</mi><mo stretchy="false">)</mo><mo>=</mo><mfrac><mn>1</mn><mi>m</mi></mfrac><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>0</mn></mrow><mrow><mi>m</mi><mo>−</mo><mn>1</mn></mrow></munderover><mrow><mo fence="true">[</mo><mo stretchy="false">(</mo><mo>−</mo><msup><mi>y</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><mi>log</mi><mo>⁡</mo><mrow><mo fence="true">(</mo><msub><mi>f</mi><mrow><mi mathvariant="bold">w</mi><mo separator="true">,</mo><mi>b</mi></mrow></msub><mrow><mo fence="true">(</mo><msup><mi mathvariant="bold">x</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><mo fence="true">)</mo></mrow><mo fence="true">)</mo></mrow><mo>−</mo><mrow><mo fence="true">(</mo><mn>1</mn><mo>−</mo><msup><mi>y</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><mo fence="true">)</mo></mrow><mi>log</mi><mo>⁡</mo><mrow><mo fence="true">(</mo><mn>1</mn><mo>−</mo><msub><mi>f</mi><mrow><mi mathvariant="bold">w</mi><mo separator="true">,</mo><mi>b</mi></mrow></msub><mrow><mo fence="true">(</mo><msup><mi mathvariant="bold">x</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><mo fence="true">)</mo></mrow><mo fence="true">)</mo></mrow><mo fence="true">]</mo></mrow></mrow><annotation encoding="application/x-tex">J(\mathbf{w},b) = \frac{1}{m}\sum_{i=0}^{m-1} \left[ (-y^{(i)} \log\left(f_{\mathbf{w},b}\left( \mathbf{x}^{(i)} \right) \right) - \left( 1 - y^{(i)}\right) \log \left( 1 - f_{\mathbf{w},b}\left( \mathbf{x}^{(i)} \right) \right)\right] </annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.09618em;">J</span><span class="mopen">(</span><span class="mord"><span class="mord mathbf" style="margin-right:0.01597em;">w</span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">b</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.0787820000000004em;vertical-align:-1.277669em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">m</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8011130000000004em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">0</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.300005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">m</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.277669em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size2">[</span></span><span class="mopen">(</span><span class="mord">−</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathdefault mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size2">(</span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathbf mtight" style="margin-right:0.01597em;">w</span></span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight">b</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size2">(</span></span><span class="mord"><span class="mord"><span class="mord mathbf">x</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathdefault mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size2">)</span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size2">)</span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size2">(</span></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathdefault mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size2">)</span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size2">(</span></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathbf mtight" style="margin-right:0.01597em;">w</span></span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight">b</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size2">(</span></span><span class="mord"><span class="mord"><span class="mord mathbf">x</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathdefault mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size2">)</span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size2">)</span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size2">]</span></span></span></span></span></span></span></p><p>As was the case in linear regression above, the difference is the regularization term, which is    <span style="color:blue"><br><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mfrac><mi>λ</mi><mrow><mn>2</mn><mi>m</mi></mrow></mfrac><msubsup><mo>∑</mo><mrow><mi>j</mi><mo>=</mo><mn>0</mn></mrow><mrow><mi>n</mi><mo>−</mo><mn>1</mn></mrow></msubsup><msubsup><mi>w</mi><mi>j</mi><mn>2</mn></msubsup></mrow><annotation encoding="application/x-tex">\frac{\lambda}{2m}  \sum_{j=0}^{n-1} w_j^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.389826em;vertical-align:-0.43581800000000004em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8801079999999999em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mathdefault mtight">m</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">λ</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.954008em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="mrel mtight">=</span><span class="mord mtight">0</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.43581800000000004em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-2.441336em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.394772em;"><span></span></span></span></span></span></span></span></span></span> </span></p><p>Including this term incentives gradient descent to minimize the size of the parameters. Note, in this example, the parameter <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>b</mi></mrow><annotation encoding="application/x-tex">b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">b</span></span></span></span> is not regularized. This is standard practice.<br>梯度下降与正则化<br>运行梯度下降的基本算法不会随着正则化而改变，它是：</p><p class='katex-block katex-error' title='ParseError: KaTeX parse error: No such environment: align* at position 7: \begin{̲a̲l̲i̲g̲n̲*̲}̲&amp;\text{repeat …'>\begin{align*}&amp;\text{repeat until convergence:} \; \lbrace \\&amp;  \; \; \;w_j = w_j -  \alpha \frac{\partial J(\mathbf{w},b)}{\partial w_j} \tag{1}  \; &amp; \text{for j := 0..n-1} \\ &amp;  \; \; \;  \; \;b = b -  \alpha \frac{\partial J(\mathbf{w},b)}{\partial b} \\&amp;\rbrace\end{align*}</p><p>Where each iteration performs simultaneous updates on <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>w</mi><mi>j</mi></msub></mrow><annotation encoding="application/x-tex">w_j</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.716668em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span> for all <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>j</mi></mrow><annotation encoding="application/x-tex">j</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.85396em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.05724em;">j</span></span></span></span>.</p><p>What changes with regularization is computing the gradients.<br>The gradient calculation for both linear and logistic regression are nearly identical, differing only in computation of <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>f</mi><mrow><mi mathvariant="bold">w</mi><mi>b</mi></mrow></msub></mrow><annotation encoding="application/x-tex">f_{\mathbf{w}b}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathbf mtight" style="margin-right:0.01597em;">w</span></span><span class="mord mathdefault mtight">b</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>.</p><p class='katex-block katex-error' title='ParseError: KaTeX parse error: No such environment: align* at position 7: \begin{̲a̲l̲i̲g̲n̲*̲}̲\frac{\partial…'>\begin{align*}\frac{\partial J(\mathbf{w},b)}{\partial w_j}  &amp;= \frac{1}{m} \sum\limits_{i = 0}^{m-1} (f_{\mathbf{w},b}(\mathbf{x}^{(i)}) - y^{(i)})x_{j}^{(i)}  +  \frac{\lambda}{m} w_j \tag{2} \\\frac{\partial J(\mathbf{w},b)}{\partial b}  &amp;= \frac{1}{m} \sum\limits_{i = 0}^{m-1} (f_{\mathbf{w},b}(\mathbf{x}^{(i)}) - y^{(i)}) \tag{3} \end{align*}</p><ul><li><p>m is the number of training examples in the data set</p></li><li><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>f</mi><mrow><mi mathvariant="bold">w</mi><mo separator="true">,</mo><mi>b</mi></mrow></msub><mo stretchy="false">(</mo><msup><mi>x</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">f_{\mathbf{w},b}(x^{(i)})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.174108em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathbf mtight" style="margin-right:0.01597em;">w</span></span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight">b</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8879999999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathdefault mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span> is the model's prediction, while <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>y</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup></mrow><annotation encoding="application/x-tex">y^{(i)}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0824399999999998em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8879999999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathdefault mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span></span></span></span> is the target</p></li><li><p>For a  <span style="color:blue"> <strong>linear</strong> </span> regression model<br><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>f</mi><mrow><mi mathvariant="bold">w</mi><mo separator="true">,</mo><mi>b</mi></mrow></msub><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><mi mathvariant="bold">w</mi><mo>⋅</mo><mi mathvariant="bold">x</mi><mo>+</mo><mi>b</mi></mrow><annotation encoding="application/x-tex">f_{\mathbf{w},b}(x) = \mathbf{w} \cdot \mathbf{x} + b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathbf mtight" style="margin-right:0.01597em;">w</span></span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight">b</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.44445em;vertical-align:0em;"></span><span class="mord"><span class="mord mathbf" style="margin-right:0.01597em;">w</span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathbf">x</span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">b</span></span></span></span></p></li><li><p>For a <span style="color:blue"> <strong>logistic</strong> </span> regression model<br><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>z</mi><mo>=</mo><mi mathvariant="bold">w</mi><mo>⋅</mo><mi mathvariant="bold">x</mi><mo>+</mo><mi>b</mi></mrow><annotation encoding="application/x-tex">z = \mathbf{w} \cdot \mathbf{x} + b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.44445em;vertical-align:0em;"></span><span class="mord"><span class="mord mathbf" style="margin-right:0.01597em;">w</span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathbf">x</span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">b</span></span></span></span><br><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>f</mi><mrow><mi mathvariant="bold">w</mi><mo separator="true">,</mo><mi>b</mi></mrow></msub><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><mi>g</mi><mo stretchy="false">(</mo><mi>z</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">f_{\mathbf{w},b}(x) = g(z)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathbf mtight" style="margin-right:0.01597em;">w</span></span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight">b</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="mclose">)</span></span></span></span><br>where <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>g</mi><mo stretchy="false">(</mo><mi>z</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">g(z)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="mclose">)</span></span></span></span> is the sigmoid function:<br><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>g</mi><mo stretchy="false">(</mo><mi>z</mi><mo stretchy="false">)</mo><mo>=</mo><mfrac><mn>1</mn><mrow><mn>1</mn><mo>+</mo><msup><mi>e</mi><mrow><mo>−</mo><mi>z</mi></mrow></msup></mrow></mfrac></mrow><annotation encoding="application/x-tex">g(z) = \frac{1}{1+e^{-z}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.2484389999999999em;vertical-align:-0.403331em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mbin mtight">+</span><span class="mord mtight"><span class="mord mathdefault mtight">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7026642857142857em;"><span style="top:-2.786em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mathdefault mtight" style="margin-right:0.04398em;">z</span></span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.403331em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></p></li></ul><p>The term which adds regularization is  the <span style="color:blue">$\frac{\lambda}{m} w_j $</span>.<br>在<code>def compute_gradient_linear_reg(X, y, w, b, lambda_): </code>中语句<code>dj_dw+=(1/m)*(fwb_i-y[i])*X[i,j]+(lambda_/m)*w[j]</code>dj_dw应该用dj_dw[j]如果没有下标他会把所有项相加，后一项+(lambda_/m)*w[j]不应该嵌套在i的循环内因为没有累加符号<br>总代码</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">from</span>  plt_overfit <span class="keyword">import</span> overfit_example, output</span><br><span class="line"><span class="keyword">from</span> lab_utils_common <span class="keyword">import</span> sigmoid</span><br><span class="line">np.set_printoptions(precision=<span class="number">8</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">compute_cost_linear_reg</span>(<span class="params">X, y, w, b, lambda_ = <span class="number">1</span></span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    Computes the cost over all examples</span></span><br><span class="line"><span class="string">    Args:</span></span><br><span class="line"><span class="string">      X (ndarray (m,n): Data, m examples with n features</span></span><br><span class="line"><span class="string">      y (ndarray (m,)): target values</span></span><br><span class="line"><span class="string">      w (ndarray (n,)): model parameters  </span></span><br><span class="line"><span class="string">      b (scalar)      : model parameter</span></span><br><span class="line"><span class="string">      lambda_ (scalar): Controls amount of regularization</span></span><br><span class="line"><span class="string">    Returns:</span></span><br><span class="line"><span class="string">      total_cost (scalar):  cost </span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    m,n=X.shape;fwb_i=J_cost0=J_cost1=<span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(m):</span><br><span class="line">        fwb_i=np.dot(X[i],w)+b</span><br><span class="line">        J_cost0+=(<span class="number">1</span>/(<span class="number">2</span>*m))*((fwb_i-y[i])**<span class="number">2</span>)</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(n):</span><br><span class="line">        J_cost1+=(lambda_/(<span class="number">2</span>*m))*(w[j]**<span class="number">2</span>)</span><br><span class="line">    total_cost=J_cost1+J_cost0</span><br><span class="line">    <span class="keyword">return</span> total_cost</span><br><span class="line"><span class="comment"># 测试</span></span><br><span class="line">np.random.seed(<span class="number">1</span>)</span><br><span class="line">X_tmp = np.random.rand(<span class="number">5</span>,<span class="number">6</span>)</span><br><span class="line">y_tmp = np.array([<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>])</span><br><span class="line">w_tmp = np.random.rand(X_tmp.shape[<span class="number">1</span>]).reshape(-<span class="number">1</span>,)-<span class="number">0.5</span></span><br><span class="line">b_tmp = <span class="number">0.5</span></span><br><span class="line">lambda_tmp = <span class="number">0.7</span></span><br><span class="line">cost_tmp = compute_cost_linear_reg(X_tmp, y_tmp, w_tmp, b_tmp, lambda_tmp)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;Regularized cost:&quot;</span>, cost_tmp)</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">compute_cost_logistic_reg</span>(<span class="params">X, y, w, b, lambda_ = <span class="number">1</span></span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    Computes the cost over all examples</span></span><br><span class="line"><span class="string">    Args:</span></span><br><span class="line"><span class="string">    Args:</span></span><br><span class="line"><span class="string">      X (ndarray (m,n): Data, m examples with n features</span></span><br><span class="line"><span class="string">      y (ndarray (m,)): target values</span></span><br><span class="line"><span class="string">      w (ndarray (n,)): model parameters  </span></span><br><span class="line"><span class="string">      b (scalar)      : model parameter</span></span><br><span class="line"><span class="string">      lambda_ (scalar): Controls amount of regularization</span></span><br><span class="line"><span class="string">    Returns:</span></span><br><span class="line"><span class="string">      total_cost (scalar):  cost </span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    m,n=X.shape;Jz_cost0=Jz_cost1=<span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(m):</span><br><span class="line">        gz=sigmoid(np.dot(X[i],w)+b)</span><br><span class="line">        Jz_cost0+=(<span class="number">1</span>/m)*(-y[i]*np.log(gz)-(<span class="number">1</span>-y[i])*np.log(<span class="number">1</span>-gz))</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(n):</span><br><span class="line">        Jz_cost1+=(lambda_/(<span class="number">2</span>*m))*(w[j]**<span class="number">2</span>)</span><br><span class="line">    total_cost=Jz_cost0+Jz_cost1</span><br><span class="line">    <span class="keyword">return</span> total_cost</span><br><span class="line"><span class="comment">#测试</span></span><br><span class="line">np.random.seed(<span class="number">1</span>)</span><br><span class="line">X_tmp = np.random.rand(<span class="number">5</span>,<span class="number">6</span>)</span><br><span class="line">y_tmp = np.array([<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>])</span><br><span class="line">w_tmp = np.random.rand(X_tmp.shape[<span class="number">1</span>]).reshape(-<span class="number">1</span>,)-<span class="number">0.5</span></span><br><span class="line">b_tmp = <span class="number">0.5</span></span><br><span class="line">lambda_tmp = <span class="number">0.7</span></span><br><span class="line">cost_tmp = compute_cost_logistic_reg(X_tmp, y_tmp, w_tmp, b_tmp, lambda_tmp)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;Regularized cost:&quot;</span>, cost_tmp)</span><br><span class="line"><span class="comment">#用于正则化线性回归的梯度函数</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">compute_gradient_linear_reg</span>(<span class="params">X, y, w, b, lambda_</span>): </span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    Computes the gradient for linear regression </span></span><br><span class="line"><span class="string">    Args:</span></span><br><span class="line"><span class="string">      X (ndarray (m,n): Data, m examples with n features</span></span><br><span class="line"><span class="string">      y (ndarray (m,)): target values</span></span><br><span class="line"><span class="string">      w (ndarray (n,)): model parameters  </span></span><br><span class="line"><span class="string">      b (scalar)      : model parameter</span></span><br><span class="line"><span class="string">      lambda_ (scalar): Controls amount of regularization</span></span><br><span class="line"><span class="string">      </span></span><br><span class="line"><span class="string">    Returns:</span></span><br><span class="line"><span class="string">      dj_dw (ndarray (n,)): The gradient of the cost w.r.t. the parameters w. </span></span><br><span class="line"><span class="string">      dj_db (scalar):       The gradient of the cost w.r.t. the parameter b. </span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    m,n=X.shape</span><br><span class="line">    dj_db=fwb_i=<span class="number">0</span></span><br><span class="line">    dj_dw=np.zeros((n,))</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(m):</span><br><span class="line">        fwb_i=np.dot(X[i],w)+b</span><br><span class="line">        dj_db+=(<span class="number">1</span>/m)*(fwb_i-y[i])</span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(n): </span><br><span class="line">            dj_dw[j]+=(<span class="number">1</span>/m)*(fwb_i-y[i])*X[i,j]</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(n): </span><br><span class="line">        dj_dw[j]+=(lambda_/m)*w[j]</span><br><span class="line">    <span class="keyword">return</span> dj_dw,dj_db</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#测试</span></span><br><span class="line">np.random.seed(<span class="number">1</span>)</span><br><span class="line">X_tmp = np.random.rand(<span class="number">5</span>,<span class="number">3</span>)</span><br><span class="line">y_tmp = np.array([<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>])</span><br><span class="line">w_tmp = np.random.rand(X_tmp.shape[<span class="number">1</span>])</span><br><span class="line">b_tmp = <span class="number">0.5</span></span><br><span class="line">lambda_tmp = <span class="number">0.7</span></span><br><span class="line">dj_dw_tmp, dj_db_tmp =  compute_gradient_linear_reg(X_tmp, y_tmp, w_tmp, b_tmp, lambda_tmp)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;dj_db: <span class="subst">&#123;dj_db_tmp&#125;</span>&quot;</span>, )</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;Regularized dj_dw:\n <span class="subst">&#123;dj_dw_tmp.tolist()&#125;</span>&quot;</span>, )</span><br></pre></td></tr></table></figure><h2 id="正则化逻辑回归的梯度">正则化逻辑回归的梯度</h2><p>带正则化的梯度<br>正则化成本函数的梯度是成本相对于参数的偏导数 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>w</mi></mrow><annotation encoding="application/x-tex">w</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.02691em;">w</span></span></span></span> 和 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>b</mi></mrow><annotation encoding="application/x-tex">b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">b</span></span></span></span> :</p><p class='katex-block katex-error' title='ParseError: KaTeX parse error: No such environment: align* at position 7: \begin{̲a̲l̲i̲g̲n̲*̲}̲\frac{\partial…'>\begin{align*}\frac{\partial J(\mathbf{w})}{\partial b} &amp;= \frac{1}{m}  \sum_{i=0}^{m-1} (f_{\mathbf{w},b}(\mathbf{x}^{(i)}) - y^{(i)})  \tag {1} \\\frac{\partial J(\mathbf{w},b)}{\partial w_j} &amp;= \left( \frac{1}{m}  \sum_{i=0}^{m-1} (f_{\mathbf{w},b}(\mathbf{x}^{(i)}) - y^{(i)}) x_j^{(i)} \right) +  \frac{\lambda}{m} w_j  \quad\, \mbox{for $j=0...(n-1)$} \tag {2}\end{align*}</p><p>您将实现一个名为的函数，该函数将返回compute_gradient_reg<br><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mfrac><mrow><mi mathvariant="normal">∂</mi><mi>J</mi><mo stretchy="false">(</mo><mi mathvariant="bold">w</mi><mo separator="true">,</mo><mi>b</mi><mo stretchy="false">)</mo></mrow><mrow><mi mathvariant="normal">∂</mi><mi>w</mi></mrow></mfrac><mo separator="true">,</mo><mfrac><mrow><mi mathvariant="normal">∂</mi><mi>J</mi><mo stretchy="false">(</mo><mi mathvariant="bold">w</mi><mo separator="true">,</mo><mi>b</mi><mo stretchy="false">)</mo></mrow><mrow><mi mathvariant="normal">∂</mi><mi>b</mi></mrow></mfrac></mrow><annotation encoding="application/x-tex">\frac{\partial J(\mathbf{w},b)}{\partial w},\frac{\partial J(\mathbf{w},b)}{\partial b}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.355em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.01em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.485em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault mtight" style="margin-right:0.09618em;">J</span><span class="mopen mtight">(</span><span class="mord mtight"><span class="mord mathbf mtight" style="margin-right:0.01597em;">w</span></span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight">b</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.01em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault mtight">b</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.485em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault mtight" style="margin-right:0.09618em;">J</span><span class="mopen mtight">(</span><span class="mord mtight"><span class="mord mathbf mtight" style="margin-right:0.01597em;">w</span></span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight">b</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span><br>只是这里的f套用的是sigmoid函数,最后b输出dj_db: [0.34]可以用dj_db[0]截取<br><code>print(f'&#123;x1:.18f&#125;')</code>中.18f作用是输出小数点右边的18位数字</p><h1 id="神经元和层tensorflow">神经元和层Tensorflow</h1><p>基于C2_W1_Labo1，在本实验中，我们将探索神经元/单元和层的内部工作原理。特别是，该实验室将与您在课程 1 中掌握的模型、回归/线性模型和逻辑模型进行比较。该实验室将介绍Tensorflow，并演示如何在该框架中实现这些模型。</p><h2 id="未激活的神经元-回归-线性模型">未激活的神经元 - 回归/线性模型</h2><p>回归/线性模型<br>由未激活的神经元实现的功能与课程 1 中的线性回归相同：</p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mtable width="100%"><mtr><mtd width="50%"></mtd><mtd><mrow><msub><mi>f</mi><mrow><mi mathvariant="bold">w</mi><mo separator="true">,</mo><mi>b</mi></mrow></msub><mo stretchy="false">(</mo><msup><mi>x</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><mo stretchy="false">)</mo><mo>=</mo><mi mathvariant="bold">w</mi><mo>⋅</mo><msup><mi>x</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><mo>+</mo><mi>b</mi></mrow></mtd><mtd width="50%"></mtd><mtd><mtext>(1)</mtext></mtd></mtr></mtable><annotation encoding="application/x-tex">f_{\mathbf{w},b}(x^{(i)}) = \mathbf{w}\cdot x^{(i)} + b \tag{1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.224108em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathbf mtight" style="margin-right:0.01597em;">w</span></span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight">b</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathdefault mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.44445em;vertical-align:0em;"></span><span class="mord"><span class="mord mathbf" style="margin-right:0.01597em;">w</span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.0213299999999998em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathdefault mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">b</span></span><span class="tag"><span class="strut" style="height:1.224108em;vertical-align:-0.286108em;"></span><span class="mord text"><span class="mord">(</span><span class="mord"><span class="mord">1</span></span><span class="mord">)</span></span></span></span></span></span></p><p>我们可以定义一个具有一个神经元或单元的层，并将其与熟悉的线性回归函数进行比较。<br><code>linear_layer = tf.keras.layers.Dense(units=1, activation = 'linear', )</code><br>activation = 'linear'代表该层为线性模型输出【未激活】<br><code>w, b= linear_layer.get_weights()</code>返回权重，神经网络的权重也就是w,b。默认没有权重可初始化<code>a1 = linear_layer(X_train[0].reshape(1,1))</code>神经网络的输入必须是2维数组，以X_train[0]为例要.reshape(1,1)。这些权重w随机初始化为小数字，偏差b默认初始化为零。<br><code>a1 = linear_layer(X_train[0].reshape(1,1))</code>和<code>alin = np.dot(set_w,X_train[0].reshape(1,1)) + set_b</code>也就是此时神经网络做了线性回归运算<br>总代码</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">import</span> tensorflow <span class="keyword">as</span> tf</span><br><span class="line"><span class="keyword">from</span> tensorflow.keras.layers <span class="keyword">import</span> Dense, Input</span><br><span class="line"><span class="keyword">from</span> tensorflow.keras <span class="keyword">import</span> Sequential</span><br><span class="line"><span class="keyword">from</span> tensorflow.keras.losses <span class="keyword">import</span> MeanSquaredError, BinaryCrossentropy</span><br><span class="line"><span class="keyword">from</span> tensorflow.keras.activations <span class="keyword">import</span> sigmoid</span><br><span class="line"><span class="keyword">from</span> lab_utils_common <span class="keyword">import</span> dlc</span><br><span class="line"><span class="keyword">from</span> lab_neurons_utils <span class="keyword">import</span> plt_prob_1d, sigmoidnp, plt_linear, plt_logistic</span><br><span class="line">plt.style.use(<span class="string">&#x27;./deeplearning.mplstyle&#x27;</span>)</span><br><span class="line"><span class="keyword">import</span> logging</span><br><span class="line">logging.getLogger(<span class="string">&quot;tensorflow&quot;</span>).setLevel(logging.ERROR)</span><br><span class="line">tf.autograph.set_verbosity(<span class="number">0</span>)</span><br><span class="line"><span class="comment"># 数据</span></span><br><span class="line"><span class="comment"># 我们将使用课程 1 中的一个例子，即房价的线性回归</span></span><br><span class="line">X_train=np.array([[<span class="number">1.0</span>],[<span class="number">2.0</span>]],dtype=np.float32)</span><br><span class="line">Y_train=np.array([[<span class="number">300.0</span>],[<span class="number">500.0</span>]],dtype=np.float32)  </span><br><span class="line">fig, ax = plt.subplots(<span class="number">1</span>,<span class="number">1</span>)</span><br><span class="line">ax.scatter(X_train, Y_train, marker=<span class="string">&#x27;x&#x27;</span>, c=<span class="string">&#x27;r&#x27;</span>, label=<span class="string">&quot;Data Points&quot;</span>)</span><br><span class="line">ax.legend( fontsize=<span class="string">&#x27;xx-large&#x27;</span>)</span><br><span class="line">ax.set_ylabel(<span class="string">&#x27;Price (in 1000s of dollars)&#x27;</span>, fontsize=<span class="string">&#x27;xx-large&#x27;</span>)</span><br><span class="line">ax.set_xlabel(<span class="string">&#x27;Size (1000 sqft)&#x27;</span>, fontsize=<span class="string">&#x27;xx-large&#x27;</span>)</span><br><span class="line">plt.show()</span><br><span class="line"><span class="comment"># 我们可以定义一个具有一个神经元或单元的层，并将其与熟悉的线性回归函数进行比较。</span></span><br><span class="line">linear_layer=tf.keras.layers.Dense(units=<span class="number">1</span>,activation=<span class="string">&#x27;linear&#x27;</span>)</span><br><span class="line">linear_layer.get_weights()  </span><br><span class="line">a1 = linear_layer(X_train[<span class="number">0</span>].reshape(<span class="number">1</span>,<span class="number">1</span>))</span><br><span class="line"><span class="built_in">print</span>(a1)</span><br><span class="line">w,b=linear_layer.get_weights()  </span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&#x27;w=<span class="subst">&#123;w&#125;</span>,b=<span class="subst">&#123;b&#125;</span>&#x27;</span>)</span><br><span class="line">set_w=np.array([[<span class="number">200</span>]])</span><br><span class="line">set_b=np.array([<span class="number">100</span>])</span><br><span class="line">linear_layer.set_weights([set_w,set_b])</span><br><span class="line"><span class="built_in">print</span>(linear_layer.get_weights())</span><br><span class="line">a1 = linear_layer(X_train[<span class="number">0</span>].reshape(<span class="number">1</span>,<span class="number">1</span>))</span><br><span class="line"><span class="built_in">print</span>(a1)</span><br><span class="line">alin = np.dot(set_w,X_train[<span class="number">0</span>].reshape(<span class="number">1</span>,<span class="number">1</span>)) + set_b</span><br><span class="line"><span class="built_in">print</span>(alin)</span><br><span class="line">prediction_tf=linear_layer(X_train)</span><br><span class="line">prediction_np=np.dot(X_train,set_w)+set_b</span><br><span class="line">plt_linear(X_train, Y_train, prediction_tf, prediction_np)</span><br></pre></td></tr></table></figure><h2 id="具有sigmoid形激活的神经元">具有Sigmoid形激活的神经元</h2><p>由具有 sigmoid 激活的神经元/单元实现的功能与课程 1 中的逻辑回归相同：</p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mtable width="100%"><mtr><mtd width="50%"></mtd><mtd><mrow><msub><mi>f</mi><mrow><mi mathvariant="bold">w</mi><mo separator="true">,</mo><mi>b</mi></mrow></msub><mo stretchy="false">(</mo><msup><mi>x</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><mo stretchy="false">)</mo><mo>=</mo><mi>g</mi><mo stretchy="false">(</mo><mi mathvariant="bold">w</mi><msup><mi>x</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><mo>+</mo><mi>b</mi><mo stretchy="false">)</mo></mrow></mtd><mtd width="50%"></mtd><mtd><mtext>(2)</mtext></mtd></mtr></mtable><annotation encoding="application/x-tex">f_{\mathbf{w},b}(x^{(i)}) = g(\mathbf{w}x^{(i)} + b) \tag{2}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.224108em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathbf mtight" style="margin-right:0.01597em;">w</span></span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight">b</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathdefault mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.188em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord"><span class="mord mathbf" style="margin-right:0.01597em;">w</span></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathdefault mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">b</span><span class="mclose">)</span></span><span class="tag"><span class="strut" style="height:1.224108em;vertical-align:-0.286108em;"></span><span class="mord text"><span class="mord">(</span><span class="mord"><span class="mord">2</span></span><span class="mord">)</span></span></span></span></span></span></p><p>where $$g(x) = sigmoid(x)$$<br>Let's set <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>w</mi></mrow><annotation encoding="application/x-tex">w</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.02691em;">w</span></span></span></span> and <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>b</mi></mrow><annotation encoding="application/x-tex">b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">b</span></span></span></span> to some known values and check the model.<br>与上一段不同的是<code>activation = 'sigmoid'</code>后应写成<code>logistic_layer</code><br>总代码</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">import</span> tensorflow <span class="keyword">as</span> tf</span><br><span class="line"><span class="keyword">from</span> tensorflow.keras.layers <span class="keyword">import</span> Dense, Input</span><br><span class="line"><span class="keyword">from</span> tensorflow.keras <span class="keyword">import</span> Sequential</span><br><span class="line"><span class="keyword">from</span> tensorflow.keras.losses <span class="keyword">import</span> MeanSquaredError, BinaryCrossentropy</span><br><span class="line"><span class="keyword">from</span> tensorflow.keras.activations <span class="keyword">import</span> sigmoid</span><br><span class="line"><span class="keyword">from</span> lab_utils_common <span class="keyword">import</span> dlc</span><br><span class="line"><span class="keyword">from</span> lab_neurons_utils <span class="keyword">import</span> plt_prob_1d, sigmoidnp, plt_linear, plt_logistic</span><br><span class="line">plt.style.use(<span class="string">&#x27;./deeplearning.mplstyle&#x27;</span>)</span><br><span class="line"><span class="keyword">import</span> logging</span><br><span class="line">logging.getLogger(<span class="string">&quot;tensorflow&quot;</span>).setLevel(logging.ERROR)</span><br><span class="line"><span class="comment">#具有S形激活的神经元</span></span><br><span class="line">X_train=np.array([<span class="number">0</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>],dtype=np.float32).reshape(-<span class="number">1</span>,<span class="number">1</span>)</span><br><span class="line">Y_train=np.array([<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>],dtype=np.float32).reshape(-<span class="number">1</span>,<span class="number">1</span>)</span><br><span class="line">pos = Y_train == <span class="number">1</span></span><br><span class="line">neg = Y_train == <span class="number">0</span></span><br><span class="line">X_train[pos]</span><br><span class="line"><span class="built_in">print</span>(X_train[pos])</span><br><span class="line">fig,ax = plt.subplots(<span class="number">1</span>,<span class="number">1</span>,figsize=(<span class="number">4</span>,<span class="number">3</span>))</span><br><span class="line">ax.scatter(X_train[pos], Y_train[pos], marker=<span class="string">&#x27;x&#x27;</span>, s=<span class="number">80</span>, c = <span class="string">&#x27;red&#x27;</span>, label=<span class="string">&quot;y=1&quot;</span>)</span><br><span class="line">ax.scatter(X_train[neg], Y_train[neg], marker=<span class="string">&#x27;o&#x27;</span>, s=<span class="number">100</span>, label=<span class="string">&quot;y=0&quot;</span>, facecolors=<span class="string">&#x27;none&#x27;</span>, </span><br><span class="line">              edgecolors=dlc[<span class="string">&quot;dlblue&quot;</span>],lw=<span class="number">3</span>)</span><br><span class="line">ax.set_ylim(-<span class="number">0.08</span>,<span class="number">1.1</span>)</span><br><span class="line">ax.set_ylabel(<span class="string">&#x27;y&#x27;</span>, fontsize=<span class="number">12</span>)</span><br><span class="line">ax.set_xlabel(<span class="string">&#x27;x&#x27;</span>, fontsize=<span class="number">12</span>)</span><br><span class="line">ax.set_title(<span class="string">&#x27;one variable plot&#x27;</span>)</span><br><span class="line">ax.legend(fontsize=<span class="number">12</span>)</span><br><span class="line">plt.show()</span><br><span class="line">model=Sequential(</span><br><span class="line">    [</span><br><span class="line">        tf.keras.layers.Dense(<span class="number">1</span>,input_dim=<span class="number">1</span>,activation=<span class="string">&#x27;sigmoid&#x27;</span>,name=<span class="string">&#x27;L1&#x27;</span>)</span><br><span class="line">    ]</span><br><span class="line">)</span><br><span class="line">model.summary()</span><br><span class="line">logistic_layer = model.get_layer(<span class="string">&#x27;L1&#x27;</span>)</span><br><span class="line">w,b = logistic_layer.get_weights()</span><br><span class="line"><span class="built_in">print</span>(w,b) <span class="comment">#初始随机的w和b=0</span></span><br><span class="line"><span class="built_in">print</span>(w.shape,b.shape)</span><br><span class="line">set_w=np.array([[<span class="number">2</span>]])</span><br><span class="line">set_b=np.array([-<span class="number">4.5</span>])</span><br><span class="line">logistic_layer.set_weights([set_w,set_b])</span><br><span class="line"><span class="built_in">print</span>(logistic_layer.get_weights())</span><br><span class="line">a1 = model.predict(X_train[<span class="number">0</span>].reshape(<span class="number">1</span>,<span class="number">1</span>))</span><br><span class="line"><span class="built_in">print</span>(a1)</span><br><span class="line">alog = sigmoidnp(np.dot(set_w,X_train[<span class="number">0</span>].reshape(<span class="number">1</span>,<span class="number">1</span>)) + set_b)</span><br><span class="line"><span class="built_in">print</span>(alog)</span><br><span class="line">plt_logistic(X_train, Y_train, model, set_w, set_b, pos, neg)</span><br></pre></td></tr></table></figure><h2 id="双层s型神经网络-咖啡烘焙-网络">双层S型神经网络“咖啡烘焙”网络</h2><p>基于C2_W1_LAB02<br><a href="https://blog.csdn.net/weixin_45576847/article/details/117436597?ydreferer=aHR0cHM6Ly9jbi5iaW5nLmNvbS8%3D">关于plt.scatter(X[y==1,0], X[y==1,1])的解读</a><br>axis=0：在第一维操作,axis=1：在第二维操作,axis=-1：在最后一维操作<br><a href="https://blog.csdn.net/qq_39072607/article/details/89364254">np.tile()函数的作用</a><br>构建模型<code>tf.keras.Input(shape=(2,)),</code>这两的shape和<code>print(Xt[0].shape)</code>中的对应  <code>astype(int)</code>意思是转换为Int<br>总代码</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line">plt.style.use(<span class="string">&#x27;./deeplearning.mplstyle&#x27;</span>)</span><br><span class="line"><span class="keyword">import</span> tensorflow <span class="keyword">as</span> tf</span><br><span class="line"><span class="keyword">from</span> tensorflow.keras.models <span class="keyword">import</span> Sequential</span><br><span class="line"><span class="keyword">from</span> tensorflow.keras.layers <span class="keyword">import</span> Dense</span><br><span class="line"><span class="keyword">from</span> lab_utils_common <span class="keyword">import</span> dlc</span><br><span class="line"><span class="keyword">from</span> lab_coffee_utils <span class="keyword">import</span> load_coffee_data, plt_roast, plt_prob, plt_layer, plt_network, plt_output_unit</span><br><span class="line"><span class="keyword">import</span> logging</span><br><span class="line">logging.getLogger(<span class="string">&quot;tensorflow&quot;</span>).setLevel(logging.ERROR)</span><br><span class="line">tf.autograph.set_verbosity(<span class="number">0</span>)</span><br><span class="line">X,Y = load_coffee_data()</span><br><span class="line"><span class="built_in">print</span>(X.shape, Y.shape)</span><br><span class="line"><span class="built_in">print</span>(X,Y)</span><br><span class="line">plt_roast(X,Y)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;Temperature Max, Min pre normalization: <span class="subst">&#123;np.<span class="built_in">max</span>(X[:,<span class="number">0</span>]):<span class="number">0.2</span>f&#125;</span>, <span class="subst">&#123;np.<span class="built_in">min</span>(X[:,<span class="number">0</span>]):<span class="number">0.2</span>f&#125;</span>&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;Duration    Max, Min pre normalization: <span class="subst">&#123;np.<span class="built_in">max</span>(X[:,<span class="number">1</span>]):<span class="number">0.2</span>f&#125;</span>, <span class="subst">&#123;np.<span class="built_in">min</span>(X[:,<span class="number">1</span>]):<span class="number">0.2</span>f&#125;</span>&quot;</span>)</span><br><span class="line">norm_l = tf.keras.layers.Normalization(axis=-<span class="number">1</span>)</span><br><span class="line">norm_l.adapt(X)  <span class="comment"># learns mean, variance</span></span><br><span class="line">Xn = norm_l(X)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;Temperature Max, Min post normalization: <span class="subst">&#123;np.<span class="built_in">max</span>(Xn[:,<span class="number">0</span>]):<span class="number">0.2</span>f&#125;</span>, <span class="subst">&#123;np.<span class="built_in">min</span>(Xn[:,<span class="number">0</span>]):<span class="number">0.2</span>f&#125;</span>&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;Duration    Max, Min post normalization: <span class="subst">&#123;np.<span class="built_in">max</span>(Xn[:,<span class="number">1</span>]):<span class="number">0.2</span>f&#125;</span>, <span class="subst">&#123;np.<span class="built_in">min</span>(Xn[:,<span class="number">1</span>]):<span class="number">0.2</span>f&#125;</span>&quot;</span>)</span><br><span class="line"><span class="comment">#平铺/复制我们的数据以增加训练集大小并减少训练周期的数量。</span></span><br><span class="line">Xt=np.tile(Xn,(<span class="number">1000</span>,<span class="number">1</span>))</span><br><span class="line">Yt=np.tile(Y,(<span class="number">1000</span>,<span class="number">1</span>))</span><br><span class="line"><span class="built_in">print</span>(Xt[<span class="number">0</span>].shape)</span><br><span class="line"><span class="built_in">print</span>(Xt.shape,Yt.shape)  </span><br><span class="line"><span class="comment">#让我们建立讲座中描述的“咖啡烘焙网络”。有两层具有 S 形激活，如下所示：</span></span><br><span class="line">tf.random.set_seed(<span class="number">1234</span>)  <span class="comment"># applied to achieve consistent results</span></span><br><span class="line">model = Sequential(</span><br><span class="line">    [</span><br><span class="line">        tf.keras.Input(shape=(<span class="number">2</span>,)),</span><br><span class="line">        Dense(<span class="number">3</span>, activation=<span class="string">&#x27;sigmoid&#x27;</span>, name = <span class="string">&#x27;layer1&#x27;</span>),</span><br><span class="line">        Dense(<span class="number">1</span>, activation=<span class="string">&#x27;sigmoid&#x27;</span>, name = <span class="string">&#x27;layer2&#x27;</span>)</span><br><span class="line">     ]</span><br><span class="line">)</span><br><span class="line">model.summary()</span><br><span class="line">W1, b1 = model.get_layer(<span class="string">&quot;layer1&quot;</span>).get_weights()</span><br><span class="line">W2, b2 = model.get_layer(<span class="string">&quot;layer2&quot;</span>).get_weights()</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;W1<span class="subst">&#123;W1.shape&#125;</span>:\n&quot;</span>, W1, <span class="string">f&quot;\nb1<span class="subst">&#123;b1.shape&#125;</span>:&quot;</span>, b1)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;W2<span class="subst">&#123;W2.shape&#125;</span>:\n&quot;</span>, W2, <span class="string">f&quot;\nb2<span class="subst">&#123;b2.shape&#125;</span>:&quot;</span>, b2)</span><br><span class="line"><span class="comment"># 以下陈述将在第 2 周详细描述。目前：</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 该语句定义一个损失函数并指定编译优化。model.compile</span></span><br><span class="line"><span class="comment"># 该语句运行梯度下降并将权重拟合到数据。model.fit</span></span><br><span class="line">model.<span class="built_in">compile</span>(</span><br><span class="line">    loss = tf.keras.losses.BinaryCrossentropy(),</span><br><span class="line">    optimizer = tf.keras.optimizers.Adam(learning_rate=<span class="number">0.01</span>),</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">model.fit(</span><br><span class="line">    Xt,Yt,            </span><br><span class="line">    epochs=<span class="number">10</span>,</span><br><span class="line">)</span><br><span class="line">W1, b1 = model.get_layer(<span class="string">&quot;layer1&quot;</span>).get_weights()</span><br><span class="line">W2, b2 = model.get_layer(<span class="string">&quot;layer2&quot;</span>).get_weights()</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;W1:\n&quot;</span>, W1, <span class="string">&quot;\nb1:&quot;</span>, b1)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;W2:\n&quot;</span>, W2, <span class="string">&quot;\nb2:&quot;</span>, b2)</span><br><span class="line">W1 = np.array([</span><br><span class="line">    [-<span class="number">8.94</span>,  <span class="number">0.29</span>, <span class="number">12.89</span>],</span><br><span class="line">    [-<span class="number">0.17</span>, -<span class="number">7.34</span>, <span class="number">10.79</span>]] )</span><br><span class="line">b1 = np.array([-<span class="number">9.87</span>, -<span class="number">9.28</span>,  <span class="number">1.01</span>])</span><br><span class="line">W2 = np.array([</span><br><span class="line">    [-<span class="number">31.38</span>],</span><br><span class="line">    [-<span class="number">27.86</span>],</span><br><span class="line">    [-<span class="number">32.79</span>]])</span><br><span class="line">b2 = np.array([<span class="number">15.54</span>])</span><br><span class="line">model.get_layer(<span class="string">&quot;layer1&quot;</span>).set_weights([W1,b1])</span><br><span class="line">model.get_layer(<span class="string">&quot;layer2&quot;</span>).set_weights([W2,b2])</span><br><span class="line">X_test = np.array([</span><br><span class="line">    [<span class="number">200</span>,<span class="number">13.9</span>],  <span class="comment"># postive example</span></span><br><span class="line">    [<span class="number">200</span>,<span class="number">17</span>]])   <span class="comment"># negative example</span></span><br><span class="line">X_testn = norm_l(X_test)</span><br><span class="line">predictions = model.predict(X_testn)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;predictions = \n&quot;</span>, predictions)</span><br><span class="line"><span class="comment">#纪元和批次</span></span><br><span class="line"><span class="comment"># 在上面的语句中，数字设置为 10。这指定整个数据集应在训练期间应用 10 次。在训练期间，你会看到描述训练进度的输出，如下所示：compileepochs</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Epoch 1/10</span></span><br><span class="line"><span class="comment"># 6250/6250 [==============================] - 6s 910us/step - loss: 0.1782</span></span><br><span class="line"><span class="comment"># 第一行 描述模型当前正在运行的纪元。为了提高效率，训练数据集被分解为“批次”。Tensorflow 中批处理的默认大小为 32。我们的扩展数据集中有 200000 个示例或 6250 个批次。第 2 行的符号描述已执行的批次。Epoch 1/106250/6250 [====</span></span><br><span class="line">yhat = np.zeros_like(predictions)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(predictions)):</span><br><span class="line">    <span class="keyword">if</span> predictions[i] &gt;= <span class="number">0.5</span>:</span><br><span class="line">        yhat[i] = <span class="number">1</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        yhat[i] = <span class="number">0</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;decisions = \n<span class="subst">&#123;yhat&#125;</span>&quot;</span>)</span><br></pre></td></tr></table></figure><h3 id="np构建-咖啡烘焙-网络">np构建“咖啡烘焙”网络</h3><p>基于C2_W1_LAB03<br><a href="https://blog.csdn.net/PY0312/article/details/88956795?ydreferer=aHR0cHM6Ly9jbi5iaW5nLmNvbS8%3D">lambda 函数</a><br><code>def my_dense(a_in, W, b, g):</code>输入的a_in实际上是X[i]即X的第i行<br><code>def my_sequential(x, W1, b1, W2, b2):</code>用于将各层神经网络串联起来<br><code>def my_predict(X, W1, b1, W2, b2):</code>将X的各行遍历带入my_dense得到输出，此处输出shape为(m,1)<br>总代码</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line">plt.style.use(<span class="string">&#x27;./deeplearning.mplstyle&#x27;</span>)</span><br><span class="line"><span class="keyword">import</span> tensorflow <span class="keyword">as</span> tf</span><br><span class="line"><span class="keyword">from</span> lab_utils_common <span class="keyword">import</span> dlc, sigmoid</span><br><span class="line"><span class="keyword">from</span> lab_coffee_utils <span class="keyword">import</span> load_coffee_data, plt_roast, plt_prob, plt_layer, plt_network, plt_output_unit</span><br><span class="line"><span class="keyword">import</span> logging</span><br><span class="line">logging.getLogger(<span class="string">&quot;tensorflow&quot;</span>).setLevel(logging.ERROR)</span><br><span class="line">tf.autograph.set_verbosity(<span class="number">0</span>)</span><br><span class="line">X,Y = load_coffee_data()</span><br><span class="line"><span class="built_in">print</span>(X.shape, Y.shape)</span><br><span class="line">plt_roast(X,Y)</span><br><span class="line"><span class="comment"># 规范化数据</span></span><br><span class="line"><span class="comment"># 为了匹配前面的实验室，我们将对数据进行规范化。有关更多详细信息，请参阅该实验室</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;Temperature Max, Min pre normalization: <span class="subst">&#123;np.<span class="built_in">max</span>(X[:,<span class="number">0</span>]):<span class="number">0.2</span>f&#125;</span>, <span class="subst">&#123;np.<span class="built_in">min</span>(X[:,<span class="number">0</span>]):<span class="number">0.2</span>f&#125;</span>&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;Duration    Max, Min pre normalization: <span class="subst">&#123;np.<span class="built_in">max</span>(X[:,<span class="number">1</span>]):<span class="number">0.2</span>f&#125;</span>, <span class="subst">&#123;np.<span class="built_in">min</span>(X[:,<span class="number">1</span>]):<span class="number">0.2</span>f&#125;</span>&quot;</span>)</span><br><span class="line">norm_l = tf.keras.layers.Normalization(axis=-<span class="number">1</span>)</span><br><span class="line">norm_l.adapt(X)  <span class="comment"># learns mean, variance</span></span><br><span class="line">Xn = norm_l(X)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;Temperature Max, Min post normalization: <span class="subst">&#123;np.<span class="built_in">max</span>(Xn[:,<span class="number">0</span>]):<span class="number">0.2</span>f&#125;</span>, <span class="subst">&#123;np.<span class="built_in">min</span>(Xn[:,<span class="number">0</span>]):<span class="number">0.2</span>f&#125;</span>&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;Duration    Max, Min post normalization: <span class="subst">&#123;np.<span class="built_in">max</span>(Xn[:,<span class="number">1</span>]):<span class="number">0.2</span>f&#125;</span>, <span class="subst">&#123;np.<span class="built_in">min</span>(Xn[:,<span class="number">1</span>]):<span class="number">0.2</span>f&#125;</span>&quot;</span>)</span><br><span class="line"><span class="comment"># 在第一个可选实验室中，您在 NumPy 和 Tensorflow 中构建了一个神经元，并注意到它们的相似性。</span></span><br><span class="line"><span class="comment"># 一层仅包含多个神经元/单元。如讲座中所述，可以利用 for 循环访问层中的每个单元 （），</span></span><br><span class="line"><span class="comment"># 并执行该单元 （） 的权重的点积，并将单元 （） 的偏差相加以形成。然后可以将激活函数应用于该结果。</span></span><br><span class="line"><span class="comment"># 让我们在下面尝试构建一个“密集层”子例程。jW[:,j]b[j]zg(z)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">my_dense</span>(<span class="params">a_in, W, b, g</span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    Computes dense layer</span></span><br><span class="line"><span class="string">    Args:</span></span><br><span class="line"><span class="string">      a_in (ndarray (n, )) : Data, 1 example </span></span><br><span class="line"><span class="string">      W    (ndarray (n,j)) : Weight matrix, n features per unit, j units</span></span><br><span class="line"><span class="string">      b    (ndarray (j, )) : bias vector, j units  </span></span><br><span class="line"><span class="string">      g    activation function (e.g. sigmoid, relu..)</span></span><br><span class="line"><span class="string">    Returns</span></span><br><span class="line"><span class="string">      a_out (ndarray (j,))  : j units|</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    m=W.shape[<span class="number">1</span>]</span><br><span class="line">    a_out=np.zeros((m,))</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(m):</span><br><span class="line">        a_out[j]=g(np.dot(a_in,W[:,j])+b[j])</span><br><span class="line">    <span class="keyword">return</span> a_out</span><br><span class="line"><span class="comment">#下面的单元利用上面的子程序构建一个三层神经网络。my_dense</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">my_sequential</span>(<span class="params">x, W1, b1, W2, b2</span>):</span><br><span class="line">    a1=my_dense(x,W1,b1,sigmoid)</span><br><span class="line">    a2=my_dense(a1,W2,b2,sigmoid)</span><br><span class="line">    <span class="keyword">return</span> a2</span><br><span class="line">W1_tmp = np.array( [[-<span class="number">8.93</span>,  <span class="number">0.29</span>, <span class="number">12.9</span> ], [-<span class="number">0.1</span>,  -<span class="number">7.32</span>, <span class="number">10.81</span>]] )</span><br><span class="line">b1_tmp = np.array( [-<span class="number">9.82</span>, -<span class="number">9.28</span>,  <span class="number">0.96</span>] )</span><br><span class="line">W2_tmp = np.array( [[-<span class="number">31.18</span>], [-<span class="number">27.59</span>], [-<span class="number">32.56</span>]] )</span><br><span class="line">b2_tmp = np.array( [<span class="number">15.41</span>] )</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">my_predict</span>(<span class="params">X, W1, b1, W2, b2</span>):</span><br><span class="line">    m=X.shape[<span class="number">0</span>]</span><br><span class="line">    p=np.zeros((m,<span class="number">1</span>))</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(m):</span><br><span class="line">        p[i]=my_sequential(X[i],W1,b1,W2,b2)</span><br><span class="line">    <span class="keyword">return</span> p</span><br><span class="line">X_tst = np.array([</span><br><span class="line">    [<span class="number">200</span>,<span class="number">13.9</span>],  <span class="comment"># postive example</span></span><br><span class="line">    [<span class="number">200</span>,<span class="number">17</span>]])   <span class="comment"># negative example</span></span><br><span class="line">X_tstn = norm_l(X_tst)  <span class="comment"># remember to normalize</span></span><br><span class="line">predictions = my_predict(X_tstn, W1_tmp, b1_tmp, W2_tmp, b2_tmp)</span><br><span class="line">yhat=(predictions&gt;<span class="number">0.5</span>).astype(<span class="built_in">int</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;decisions = \n<span class="subst">&#123;yhat&#125;</span>&quot;</span>)</span><br><span class="line">netf= <span class="keyword">lambda</span> x : my_predict(norm_l(x),W1_tmp, b1_tmp, W2_tmp, b2_tmp)</span><br><span class="line">plt_network(X,Y,netf)</span><br></pre></td></tr></table></figure><h2 id="多类分类">多类分类</h2><p>多类分类基于C2_W2_Multiclass<br>神经网络通常用于对数据进行分类。例如神经网络：<br>拍摄照片并将照片中的主题分类为{狗，猫，马，其他}<br>取一个句子并对其元素的“词性”进行分类：{名词，动词，形容词等。<br>这种类型的网络在其最后一层中将有多个单元。每个输出都与一个类别相关联。将输入示例应用于网络时，具有最高值的输出是预测的类别。如果输出应用于 softmax 函数，则 softmax 的输出将提供输入在每个类别中的概率。<br>在本实验中，您将看到一个在 Tensorflow 中构建多类网络的示例。然后，我们将看看神经网络如何做出预测。<br>让我们从创建一个四类数据集开始。<br>输出层的神经元数量于分类类别数量相同，输出的最高值对应预测的类别。<br><a href="https://blog.csdn.net/bitcarmanlee/article/details/82320853">softmax详解</a>  <a href="https://blog.csdn.net/kevinelstri/article/details/52622960?ydreferer=aHR0cHM6Ly9jbi5iaW5nLmNvbS8%3D">make_blobs聚类数据生成器</a><br><a href="https://blog.csdn.net/xiaohutong1991/article/details/107923970">sklearn模型中random_state参数</a><br>make_blobs中参数centers=[[0,0]，[2.0,2.0]]是什么意思？<br>centers表示要生成的样本中心（类别）数，或者是确定的中心点。<br>形状 [n_centers，n_features] 的 int 或数组，可选 (默认值 = 3)<br>要生成的中心数量或固定的中心位置。centers=[[0,0]，[2.0,2.0]]表示中心点的位置坐标为（0，0）和（2，2）。<br>np.unique() 介绍<br>对于一维数组或者列表，np.unique() 函数 去除其中重复的元素 ，并按元素 由小到大 返回一个新的无元素重复的元组或者列表。<br>模型<br>图像本练习将使用如下所示的 2 层网络。 与二元分类网络不同，该网络有四个输出，每个类一个。给定一个输入示例，具有最高值的输出是输入的预测类。<br>下面是如何在Tensorflow中构建此网络的示例。请注意，输出层使用 a 而不是激活。虽然可以在输出层中包含 softmax，但如果在训练期间将线性输出传递给损失函数，则在数值上更稳定。如果模型用于预测概率，则可以在该点应用 softmax。linearsoftmax<br>该网络有两层第一层用<a href="https://blog.csdn.net/weixin_41929524/article/details/112253138">ReLU函数</a> 第二层输出用softmax 4神经元输出<br>model = Sequential(<br>[<br>Dense(2, activation = 'relu',   name = &quot;L1&quot;),<br>Dense(4, activation = 'linear', name = &quot;L2&quot;)<br>]<br>)<br>虽然是softmax 4神经元输出但是此处还是用'linear'，把softmax函数交给<code> loss=tf.keras.losses.SparseCategoricalCrossentropy(from_logits=True)</code>处理<br>SparseCategoricalCrossentropy函数用于计算多分类问题的交叉熵，计算公式如下： 参数from_logits=False表示输出的logits需要经过激活函数的处理，默认为False。 这样相比activation = 'softmax'配合默认false更精确<br>使用<code>print(model.predict(X_train));print(model.predict(X_train).shape)</code>可以直接打印输出层的输出，形状为（100,4）但在本例中还需找到每一维度X_train[i]4元素输出的最大值用来判断在哪个类中最有可能借助<a href="https://blog.csdn.net/weixin_42755982/article/details/104542538">np.argmax()</a><br>用lambda定义函数<code>model_predict = lambda Xl: np.argmax(model.predict(Xl),axis=1)</code>此时model_predict相当于一个函数(variable)def model_predict(XL:Any)-&gt;Any<br>经过训练后每一层的w,b都带有权重了使用adam梯度下降得出</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">model.fit(</span><br><span class="line">    X_train,y_train,</span><br><span class="line">    epochs=<span class="number">200</span></span><br><span class="line">)</span><br><span class="line">l1 = model.get_layer(<span class="string">&quot;L1&quot;</span>)</span><br><span class="line">W1,b1 = l1.get_weights()</span><br><span class="line"><span class="built_in">print</span>(W1,b1)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>第一层神经网络是2个神经元是因为正好可以用ReLU把4种类被分为类 0 和 1 与类 2 和 3 。<br>总代码</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="comment"># %matplotlib widget</span></span><br><span class="line"><span class="keyword">from</span> sklearn.datasets <span class="keyword">import</span> make_blobs</span><br><span class="line"><span class="keyword">import</span> tensorflow <span class="keyword">as</span> tf</span><br><span class="line"><span class="keyword">from</span> tensorflow.keras.models <span class="keyword">import</span> Sequential</span><br><span class="line"><span class="keyword">from</span> tensorflow.keras.layers <span class="keyword">import</span> Dense</span><br><span class="line">np.set_printoptions(precision=<span class="number">2</span>)</span><br><span class="line"><span class="keyword">from</span> lab_utils_multiclass_TF <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">import</span> logging</span><br><span class="line">logging.getLogger(<span class="string">&quot;tensorflow&quot;</span>).setLevel(logging.ERROR)</span><br><span class="line">tf.autograph.set_verbosity(<span class="number">0</span>)</span><br><span class="line"><span class="comment"># 我们将使用Scikit-Learn函数制作一个包含4个类别的训练数据集，</span></span><br><span class="line"><span class="comment"># 如下图所示。make_blobs</span></span><br><span class="line"><span class="comment"># make 4-class dataset for classification</span></span><br><span class="line">classes = <span class="number">4</span></span><br><span class="line">m = <span class="number">100</span></span><br><span class="line">centers = [[-<span class="number">5</span>, <span class="number">2</span>], [-<span class="number">2</span>, -<span class="number">2</span>], [<span class="number">1</span>, <span class="number">2</span>], [<span class="number">5</span>, -<span class="number">2</span>]]</span><br><span class="line">std = <span class="number">1.0</span></span><br><span class="line"><span class="comment">#这里的y是一维数组(m,)从0-3，4分类</span></span><br><span class="line">X_train, y_train = make_blobs(n_samples=m, centers=centers, cluster_std=std,random_state=<span class="number">30</span>)</span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">每个点代表一个训练示例。轴 （x0，x1） 是输入，</span></span><br><span class="line"><span class="string">颜色表示与示例关联的类。训练完成后，模型将呈现一个新示例 （x0，x1），并将预测类。</span></span><br><span class="line"><span class="string">生成时，此数据集代表了许多现实世界的分类问题。</span></span><br><span class="line"><span class="string">有多个输入要素 （x0,...,xn） 和多个输出类别。</span></span><br><span class="line"><span class="string">训练模型以使用输入特征来预测正确的输出类别。</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line">plt_mc(X_train,y_train,classes, centers, std=std)</span><br><span class="line"><span class="comment"># show classes in data set</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;unique classes <span class="subst">&#123;np.unique(y_train)&#125;</span>&quot;</span>)</span><br><span class="line"><span class="comment"># show how classes are represented</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;class representation <span class="subst">&#123;y_train[:<span class="number">10</span>]&#125;</span>&quot;</span>)</span><br><span class="line"><span class="comment"># show shapes of our dataset</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;shape of X_train: <span class="subst">&#123;X_train.shape&#125;</span>, shape of y_train: <span class="subst">&#123;y_train.shape&#125;</span>&quot;</span>)</span><br><span class="line">tf.random.set_seed(<span class="number">1234</span>)  <span class="comment"># applied to achieve consistent results</span></span><br><span class="line">model = Sequential(</span><br><span class="line">    [</span><br><span class="line">        Dense(<span class="number">2</span>, activation = <span class="string">&#x27;relu&#x27;</span>,   name = <span class="string">&quot;L1&quot;</span>),</span><br><span class="line">        Dense(<span class="number">4</span>, activation = <span class="string">&#x27;linear&#x27;</span>, name = <span class="string">&quot;L2&quot;</span>)</span><br><span class="line">    ]</span><br><span class="line">)</span><br><span class="line">model.<span class="built_in">compile</span>(</span><br><span class="line">    loss=tf.keras.losses.SparseCategoricalCrossentropy(from_logits=<span class="literal">True</span>),</span><br><span class="line">    optimizer=tf.keras.optimizers.Adam(<span class="number">0.01</span>)</span><br><span class="line">)</span><br><span class="line">model.fit(</span><br><span class="line">    X_train,y_train,</span><br><span class="line">    epochs=<span class="number">200</span></span><br><span class="line">)</span><br><span class="line"><span class="built_in">print</span>(model.predict(X_train))</span><br><span class="line"><span class="built_in">print</span>(model.predict(X_train).shape)</span><br><span class="line"><span class="comment">#make a model for plotting routines to call</span></span><br><span class="line"><span class="comment"># model_predict = lambda Xl: np.argmax(model.predict(Xl),axis=1)</span></span><br><span class="line"><span class="comment"># print(model_predict)</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">上面，决策边界显示了模型如何对输入空间进行分区。</span></span><br><span class="line"><span class="string">这个非常简单的模型在对训练数据进行分类时没有遇到任何问题。</span></span><br><span class="line"><span class="string">它是如何做到这一点的？让我们更详细地看一下网络。</span></span><br><span class="line"><span class="string">下面，我们将从模型中提取经过训练的权重，</span></span><br><span class="line"><span class="string">并用它来绘制每个网络单元的函数。</span></span><br><span class="line"><span class="string">再往下，对结果有更详细的解释。</span></span><br><span class="line"><span class="string">您无需了解这些细节即可成功使用神经网络，</span></span><br><span class="line"><span class="string">但更直观地了解这些层如何组合以解决分类问题可能会有所帮助。</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="comment"># gather the trained parameters from the first layer</span></span><br><span class="line">l1 = model.get_layer(<span class="string">&quot;L1&quot;</span>)</span><br><span class="line">W1,b1 = l1.get_weights()</span><br><span class="line"><span class="built_in">print</span>(W1,b1)</span><br><span class="line"><span class="comment"># gather the trained parameters from the output layer</span></span><br><span class="line">l2 = model.get_layer(<span class="string">&quot;L2&quot;</span>)</span><br><span class="line">W2, b2 = l2.get_weights()</span><br><span class="line"><span class="built_in">print</span>(W2,b2)</span><br><span class="line"><span class="comment"># plot the function of the first layer</span></span><br><span class="line">plt_layer_relu(X_train, y_train.reshape(-<span class="number">1</span>,), W1, b1, classes)  </span><br><span class="line"><span class="comment"># create the &#x27;new features&#x27;, the training examples after L1 transformation</span></span><br><span class="line">Xl2 = np.zeros_like(X_train)</span><br><span class="line">Xl2 = np.maximum(<span class="number">0</span>, np.dot(X_train,W1) + b1)</span><br><span class="line">plt_output_layer_linear(Xl2, y_train.reshape(-<span class="number">1</span>,), W2, b2, classes,</span><br><span class="line">                        x0_rng = (-<span class="number">0.25</span>,np.amax(Xl2[:,<span class="number">0</span>])), x1_rng = (-<span class="number">0.25</span>,np.amax(Xl2[:,<span class="number">1</span>])))</span><br></pre></td></tr></table></figure><h3 id="整流线性单元relu">整流线性单元ReLU</h3><p>本周，引入了一种新的激活，即整流线性单元（ReLU）。基于C2_W2_Relu</p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>a</mi><mo>=</mo><mi>m</mi><mi>a</mi><mi>x</mi><mo stretchy="false">(</mo><mn>0</mn><mo separator="true">,</mo><mi>z</mi><mo stretchy="false">)</mo><mspace width="1em"/><mspace width="1em"/><mtext> ReLU function</mtext></mrow><annotation encoding="application/x-tex">a = max(0,z) \quad\quad\text { ReLU function} </annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">a</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">m</span><span class="mord mathdefault">a</span><span class="mord mathdefault">x</span><span class="mopen">(</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="mclose">)</span><span class="mspace" style="margin-right:1em;"></span><span class="mspace" style="margin-right:1em;"></span><span class="mord text"><span class="mord"> ReLU function</span></span></span></span></span></span></p><p>使用.suptitle()设置图像标题为图像添加一个居中标题。  .tight_layoutt会自动调整子图参数，使之填充整个图像区域。这是个实验特性，可能在一些情况下不工作。它仅仅检查坐标轴标签、刻度标签以及标题的部分。<br>.axvline()函数用于在轴上添加一条垂直线。.axhline()函数用于在轴上添加一条水平线。<br>sigmoid 最适合开/关或二进制情况。ReLU提供连续的线性关系。此外，它有一个“关闭”范围，其中输出为零。 “关闭”功能使ReLU成为非线性激活。为什么需要这样做？让我们在下面检查一下。<br>所示函数由线性部分（分段线性）组成。斜率在线性部分是一致的，然后在过渡点突然变化。在过渡点处，将添加新的线性函数，当添加到现有函数时，将产生新的斜率。新函数在转换点添加，但不参与该点之前的输出。非线性激活函数负责在转换点之前和之后禁用输入，有时在转换点之后禁用输入。下面的练习提供了一个更具体的例子。<br>y[50:100]=0代表第50-第100个数据为0 tf.keras.losses.MeanSquaredError()  # 均方差损失函数</p><h3 id="softmax-函数">softmax 函数</h3><p>在本实验中，我们将探索 softmax 函数。此函数在 Softmax 回归和神经网络中用于解决多类分类问题。<br>在 softmax 回归和具有 Softmax 输出的神经网络中，生成 N 个输出，并选择 0 个输出作为预测类别。在这两种情况下，向量都是由应用于 softmax 函数的线性函数生成的。  softmax 函数将转换为概率分布，如下所述。应用 softmax 后，每个输出将介于 1 和 1 之间，输出将加到 &lt;&gt;，以便它们可以解释为概率。较大的输入将对应于较大的输出概率。<br>softmax 函数可以编写：</p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mtable width="100%"><mtr><mtd width="50%"></mtd><mtd><mrow><msub><mi>a</mi><mi>j</mi></msub><mo>=</mo><mfrac><msup><mi>e</mi><msub><mi>z</mi><mi>j</mi></msub></msup><mrow><munderover><mo>∑</mo><mrow><mi>k</mi><mo>=</mo><mn>1</mn></mrow><mi>N</mi></munderover><msup><mi>e</mi><msub><mi>z</mi><mi>k</mi></msub></msup></mrow></mfrac></mrow></mtd><mtd width="50%"></mtd><mtd><mtext>(1)</mtext></mtd></mtr></mtable><annotation encoding="application/x-tex">a_j = \frac{e^{z_j}}{ \sum_{k=1}^{N}{e^{z_k} }} \tag{1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.716668em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.512333em;vertical-align:-1.170941em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.341392em;"><span style="top:-2.128769em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.981231em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.10903em;">N</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29971000000000003em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.590392em;"><span style="top:-2.989em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3487714285714287em;margin-left:-0.04398em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15122857142857138em;"><span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3280857142857143em;"><span style="top:-2.357em;margin-left:-0.04398em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2818857142857143em;"><span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.170941em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span><span class="tag"><span class="strut" style="height:2.512333em;vertical-align:-1.170941em;"></span><span class="mord text"><span class="mord">(</span><span class="mord"><span class="mord">1</span></span><span class="mord">)</span></span></span></span></span></span></p><p>Cost：<br>与 Softmax 相关的损失函数，即交叉熵损失，为：<br>\begin{equation}<br>L(\mathbf{a},y)=\begin{cases}<br>-log(a_1), &amp; \text{if <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>y</mi><mo>=</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">y=1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span>}.\<br>&amp;\vdots\<br>-log(a_N), &amp; \text{if <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>y</mi><mo>=</mo><mi>N</mi></mrow><annotation encoding="application/x-tex">y=N</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span></span></span></span>}<br>\end{cases} \tag{3}<br>\end{equation}<br>注意上面（3）中，只有与目标对应的线会导致损失，其他线为零。为了编写成本方程，我们需要一个“指标函数”，当索引与目标匹配时，该函数将为 1，否则为零。</p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn mathvariant="bold">1</mn><mo stretchy="false">{</mo><mi>y</mi><mo>=</mo><mo>=</mo><mi>n</mi><mo stretchy="false">}</mo><mo>=</mo><mo>=</mo><mrow><mo fence="true">{</mo><mtable rowspacing="0.3599999999999999em" columnalign="left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mn>1</mn><mo separator="true">,</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mrow><mtext>if </mtext><mstyle scriptlevel="0" displaystyle="false"><mi>y</mi><mo>=</mo><mo>=</mo><mi>n</mi></mstyle></mrow><mi mathvariant="normal">.</mi></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mn>0</mn><mo separator="true">,</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mtext>otherwise</mtext><mi mathvariant="normal">.</mi></mrow></mstyle></mtd></mtr></mtable></mrow></mrow><annotation encoding="application/x-tex">\mathbf{1}\{y == n\} = =\begin{cases}  1, &amp; \text{if $y==n$}.\\  0, &amp; \text{otherwise}.\end{cases}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathbf">1</span></span><span class="mopen">{</span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span></span><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">n</span><span class="mclose">}</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span></span><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.0000299999999998em;vertical-align:-1.25003em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size4">{</span></span><span class="mord"><span class="mtable"><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.69em;"><span style="top:-3.69em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord">1</span><span class="mpunct">,</span></span></span><span style="top:-2.25em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord">0</span><span class="mpunct">,</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.19em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:1em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.69em;"><span style="top:-3.69em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord text"><span class="mord">if </span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">==</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord mathdefault">n</span></span><span class="mord">.</span></span></span><span style="top:-2.25em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord text"><span class="mord">otherwise</span></span><span class="mord">.</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.19em;"><span></span></span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><p>现在的成本是：<br>J(\mathbf{w},b) = - \left[ \sum_{i=1}^{m} \sum_{j=1}^{N}  1\left{y^{(i)} == j\right} \log \frac{e<sup>{z</sup>{(i)}<em>j}}{\sum</em>{k=1}^N e<sup>{z</sup>{(i)}_k} }\right]<br>哪里m是示例的数量，N是输出的数量。这是所有损失的平均值。<br>对于<code>print(p_nonpreferred [:,:2])</code>默认是取到第二列为止，而对于<code>print(p_nonpreferred [:2])</code>默认是取到第二行为止<br>如果在训练过程中将softmax和损失结合起来，可以获得更稳定和准确的结果。可以发现结果有很大不同，是因为将softmax和损失结合起来后模型的输出不在等于概率的输出，如果所需的输出是概率，则输出应再次由softmax处理。<br>如果仅要选择最有可能的类别，不需要 softmax。可以使用 np.argmax（） 直接找到找到最大输出的索引，因为呈现出正相关性，可以发现最大的输出类别索引是一致的也就表明了正相关性<br>利用softmax简单4分类总代码</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line">plt.style.use(<span class="string">&#x27;./deeplearning.mplstyle&#x27;</span>)</span><br><span class="line"><span class="keyword">import</span> tensorflow <span class="keyword">as</span> tf</span><br><span class="line"><span class="keyword">from</span> tensorflow.keras.models <span class="keyword">import</span> Sequential</span><br><span class="line"><span class="keyword">from</span> tensorflow.keras.layers <span class="keyword">import</span> Dense</span><br><span class="line"><span class="keyword">from</span> IPython.display <span class="keyword">import</span> display, Markdown, Latex</span><br><span class="line"><span class="keyword">from</span> sklearn.datasets <span class="keyword">import</span> make_blobs</span><br><span class="line"><span class="comment"># %matplotlib widget</span></span><br><span class="line"><span class="keyword">from</span> matplotlib.widgets <span class="keyword">import</span> Slider</span><br><span class="line"><span class="keyword">from</span> lab_utils_common <span class="keyword">import</span> dlc</span><br><span class="line"><span class="keyword">from</span> lab_utils_softmax <span class="keyword">import</span> plt_softmax</span><br><span class="line"><span class="keyword">import</span> logging</span><br><span class="line">logging.getLogger(<span class="string">&quot;tensorflow&quot;</span>).setLevel(logging.ERROR)</span><br><span class="line">tf.autograph.set_verbosity(<span class="number">0</span>)</span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">本实验将讨论在Tensorflow中实现softmax的两种交叉熵损失的方法，</span></span><br><span class="line"><span class="string">“明显”方法和“首选”方法。前者是最直接的，而后者在数值上更稳定。</span></span><br><span class="line"><span class="string">让我们首先创建一个数据集来训练多类分类模型。</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line">centers=[[-<span class="number">5</span>,<span class="number">2</span>],[-<span class="number">2</span>,-<span class="number">2</span>],[<span class="number">1</span>,<span class="number">2</span>],[<span class="number">5</span>,-<span class="number">2</span>]]  </span><br><span class="line">X_train, y_train = make_blobs(n_samples=<span class="number">2000</span>, centers=centers, cluster_std=<span class="number">1.0</span>,random_state=<span class="number">30</span>)</span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">方法一输出层直接用softmax激活</span></span><br><span class="line"><span class="string">下面的模型是使用 softmax 实现的，</span></span><br><span class="line"><span class="string">作为最终密集层中的激活。 </span></span><br><span class="line"><span class="string">损失函数在指令中单独指定。compile</span></span><br><span class="line"><span class="string">损失函数 .上述（3）中所述的损失。</span></span><br><span class="line"><span class="string">在此模型中，softmax发生在最后一层。损失函数接受softmax输出，</span></span><br><span class="line"><span class="string">这是一个概率向量。SparseCategoricalCrossentropy</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="comment"># model = Sequential(</span></span><br><span class="line"><span class="comment">#     [ </span></span><br><span class="line"><span class="comment">#         Dense(25, activation = &#x27;relu&#x27;),</span></span><br><span class="line"><span class="comment">#         Dense(15, activation = &#x27;relu&#x27;),</span></span><br><span class="line"><span class="comment">#         Dense(4, activation = &#x27;softmax&#x27;)    # &lt; softmax activation here</span></span><br><span class="line"><span class="comment">#     ]</span></span><br><span class="line"><span class="comment"># )</span></span><br><span class="line"><span class="comment"># model.compile(</span></span><br><span class="line"><span class="comment">#     loss=tf.keras.losses.SparseCategoricalCrossentropy(),</span></span><br><span class="line"><span class="comment">#     optimizer=tf.keras.optimizers.Adam(0.001),</span></span><br><span class="line"><span class="comment"># )</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># model.fit(</span></span><br><span class="line"><span class="comment">#     X_train,y_train,</span></span><br><span class="line"><span class="comment">#     epochs=10</span></span><br><span class="line"><span class="comment"># )</span></span><br><span class="line"><span class="comment"># p_nonpreferred = model.predict(X_train)</span></span><br><span class="line"><span class="comment"># print(p_nonpreferred,p_nonpreferred.shape)</span></span><br><span class="line"><span class="comment"># print(p_nonpreferred [:2])</span></span><br><span class="line"><span class="comment"># print(&quot;largest value&quot;, np.max(p_nonpreferred), &quot;smallest value&quot;, np.min(p_nonpreferred))</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">从讲座中回忆说，如果在训练过程中将softmax和损失结合起来，</span></span><br><span class="line"><span class="string">可以获得更稳定和准确的结果。这是由此处显示的“首选”组织启用的。  </span></span><br><span class="line"><span class="string">在首选组织中，最后一层具有线性激活。由于历史原因，</span></span><br><span class="line"><span class="string">这种形式的输出称为 logits。损失函数有一个附加参数：。</span></span><br><span class="line"><span class="string">这会通知损失函数，softmax 操作应包含在损失计算中。</span></span><br><span class="line"><span class="string">这允许优化实施。from_logits = True</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line">model = Sequential(</span><br><span class="line">    [ </span><br><span class="line">        Dense(<span class="number">25</span>, activation = <span class="string">&#x27;relu&#x27;</span>),</span><br><span class="line">        Dense(<span class="number">15</span>, activation = <span class="string">&#x27;relu&#x27;</span>),</span><br><span class="line">        Dense(<span class="number">4</span>, activation = <span class="string">&#x27;linear&#x27;</span>)    <span class="comment"># &lt; softmax activation here</span></span><br><span class="line">    ]</span><br><span class="line">)</span><br><span class="line">model.<span class="built_in">compile</span>(</span><br><span class="line">    loss=tf.keras.losses.SparseCategoricalCrossentropy(from_logits=<span class="literal">True</span>),</span><br><span class="line">    optimizer=tf.keras.optimizers.Adam(<span class="number">0.001</span>),</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">model.fit(</span><br><span class="line">    X_train,y_train,</span><br><span class="line">    epochs=<span class="number">10</span></span><br><span class="line">)</span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">请注意，在首选模型中，输出不是概率，但范围可以从大的负数到大的正数。</span></span><br><span class="line"><span class="string">在执行预期概率的预测时，必须通过 softmax 发送输出。 </span></span><br><span class="line"><span class="string">让我们看一下首选的模型输出：,这只是模型的输出不是概率的输出与第一种方法不同  </span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line">p_nonpreferred = model.predict(X_train)</span><br><span class="line"><span class="built_in">print</span>(p_nonpreferred,p_nonpreferred.shape)</span><br><span class="line"><span class="built_in">print</span>(p_nonpreferred [:<span class="number">2</span>])</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;largest value&quot;</span>, np.<span class="built_in">max</span>(p_nonpreferred), <span class="string">&quot;smallest value&quot;</span>, np.<span class="built_in">min</span>(p_nonpreferred))  </span><br><span class="line"><span class="comment">#找到前五组数据最大可能的类别   </span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">5</span>):</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&#x27;<span class="subst">&#123;p_nonpreferred[i]&#125;</span>,最大可能的类别（4分类）：<span class="subst">&#123;np.argmax(p_nonpreferred[i])&#125;</span>&#x27;</span>)</span><br><span class="line"><span class="comment"># 使用softmax转为概率预测  </span></span><br><span class="line">soft_nonpreferred=tf.nn.softmax(p_nonpreferred).numpy()</span><br><span class="line"><span class="built_in">print</span>(soft_nonpreferred,soft_nonpreferred.shape)</span><br><span class="line"><span class="built_in">print</span>(soft_nonpreferred [:<span class="number">2</span>])</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;largest Pridectvalue&quot;</span>, np.<span class="built_in">max</span>(soft_nonpreferred), <span class="string">&quot;smallest Pridectvalue&quot;</span>, np.<span class="built_in">min</span>(soft_nonpreferred))  </span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">5</span>):</span><br><span class="line">          <span class="built_in">print</span>(<span class="string">f&#x27;<span class="subst">&#123;soft_nonpreferred[i]&#125;</span>,最大可能的类别[概率版]（4分类）：<span class="subst">&#123;np.argmax(soft_nonpreferred[i])&#125;</span>&#x27;</span>)</span><br></pre></td></tr></table></figure><h3 id="高偏差和高方差">高偏差和高方差</h3><p>偏差体现的是偏离目标的程度，方差体现的是离散的程度。对于训练集来说，其预测误差会随着多项式项数的增加而下降，也就是拟合的效果会越来越好，但与此同时，同样的参数对于验证集来说，其预测误差会先下降，在到达低点之后在上升<a href="https://blog.csdn.net/youhuakongzhi/article/details/85258772">参考</a><br>减少偏差的一种方法是只使用更大的神经网络，更大的神经网络，我的意思是更多的隐藏层或每层更多的隐藏单元。<br>因此，Jcv和Jtrain中的巨大差距表明您可能存在高方差问题，如果您存在高方差问题，那么尝试修复它的一种方法是获取更多数据。<br>例如，我们已经看到，如果您的算法具有高偏差而不是高方差，那么在蜜罐项目（收集更多数据）上花费数易和数月可能不是最有成果的方向；但是，如果您的算法具有高方差，<br>那么收集更多数据可能会有很大帮助。</p><h3 id="recall召回率">Recall召回率</h3><p>Recall召回率即判断正确的概率，通俗的讲：Precision很高：说话靠谱；Recall很高：遗漏率很低<br>事实上，如果你想预测y等于1只有当你非常有信心时，你甚至可以将分界阈值提高到0.9，这会导致更高的精度，所以无论何时你预测患者患有这种疾病，你都可能是正<br>确的并且这会给你一个非常高的精度。<br>统计学上的F1评分，就是准确率和召回率的调和平均数,根据F1评分的大小来确定准确率和召回率是否合适</p><h2 id="应用机器学习的建议">应用机器学习的建议</h2><p>评估学习算法（多项式回归）<br>图像假设你创建了一个机器学习模型，并且发现它非常适合你的训练数据。你说完了？差一点。创建模型的目标是能够预测新示例的值。<br>在部署模型之前，如何测试模型在新数据上的性能？<br>答案分为两部分：<br>将原始数据集拆分为“训练”和“测试”集。<br>使用训练数据拟合模型的参数<br>使用测试数据在新数据上评估模型<br>开发一个误差函数来评估模型。<br>拆分数据集:<br>讲座建议保留20-40%的数据集进行测试。让我们使用函数train_test_split来执行拆分。运行以下单元格后仔细检查形状。<br>seed( ) 用于指定随机数生成时所用算法开始的整数值，如果使用相同的seed( )值，则每次生成的随即数都相同，如果不设置这个值，则系统根据时间来自己选择这个值，此时每次生成的随机数因时间差异而不同p<a href="https://blog.csdn.net/linzch3/article/details/58220569">numpy.random.seed()的使用</a><br><a href="https://blog.csdn.net/DSTJWJW/article/details/90667570">Python不重复批量随机抽样 random.sample() 和 numpy.random.choice() 的优缺点</a><br><a href="https://blog.csdn.net/weixin_48964486/article/details/122866347">train_test_split</a><br>模型评估的误差计算，线性回归<br>评估线性回归模型时，需要平均预测值和目标值的平方误差。</p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mtable width="100%"><mtr><mtd width="50%"></mtd><mtd><mrow><msub><mi>J</mi><mtext>test</mtext></msub><mo stretchy="false">(</mo><mi mathvariant="bold">w</mi><mo separator="true">,</mo><mi>b</mi><mo stretchy="false">)</mo><mo>=</mo><mfrac><mn>1</mn><mrow><mn>2</mn><msub><mi>m</mi><mtext>test</mtext></msub></mrow></mfrac><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>0</mn></mrow><mrow><msub><mi>m</mi><mtext>test</mtext></msub><mo>−</mo><mn>1</mn></mrow></munderover><mo stretchy="false">(</mo><msub><mi>f</mi><mrow><mi mathvariant="bold">w</mi><mo separator="true">,</mo><mi>b</mi></mrow></msub><mo stretchy="false">(</mo><msubsup><mi mathvariant="bold">x</mi><mtext>test</mtext><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msubsup><mo stretchy="false">)</mo><mo>−</mo><msubsup><mi>y</mi><mtext>test</mtext><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msubsup><msup><mo stretchy="false">)</mo><mn>2</mn></msup></mrow></mtd><mtd width="50%"></mtd><mtd><mtext>(1)</mtext></mtd></mtr></mtable><annotation encoding="application/x-tex"> J_\text{test}(\mathbf{w},b) =             \frac{1}{2m_\text{test}}\sum_{i=0}^{m_\text{test}-1} ( f_{\mathbf{w},b}(\mathbf{x}^{(i)}_\text{test}) - y^{(i)}_\text{test} )^2             \tag{1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.09618em;">J</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.09618em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord text mtight"><span class="mord mtight">test</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathbf" style="margin-right:0.01597em;">w</span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">b</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.0898820000000002em;vertical-align:-1.277669em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.3139999999999996em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span><span class="mord"><span class="mord mathdefault">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord text mtight"><span class="mord mtight">test</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8360000000000001em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8122130000000003em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">0</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.311105em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.29634285714285713em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord text mtight"><span class="mord mtight">test</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.277669em;"><span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathbf mtight" style="margin-right:0.01597em;">w</span></span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight">b</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord"><span class="mord mathbf">x</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0448em;"><span style="top:-2.454244em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord text mtight"><span class="mord mtight">test</span></span></span></span><span style="top:-3.2198em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathdefault mtight">i</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.24575599999999997em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.2948em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0448em;"><span style="top:-2.454244em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord text mtight"><span class="mord mtight">test</span></span></span></span><span style="top:-3.2198em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathdefault mtight">i</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.24575599999999997em;"><span></span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span><span class="tag"><span class="strut" style="height:3.0898820000000002em;vertical-align:-1.277669em;"></span><span class="mord text"><span class="mord">(</span><span class="mord"><span class="mord">1</span></span><span class="mord">)</span></span></span></span></span></span></p><p>下面，创建一个函数来评估线性回归模型的数据集上的误差:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">eval_mse</span>(<span class="params">y, yhat</span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot; </span></span><br><span class="line"><span class="string">    Calculate the mean squared error on a data set.</span></span><br><span class="line"><span class="string">    Args:</span></span><br><span class="line"><span class="string">      y    : (ndarray  Shape (m,) or (m,1))  target value of each example</span></span><br><span class="line"><span class="string">      yhat : (ndarray  Shape (m,) or (m,1))  predicted value of each example</span></span><br><span class="line"><span class="string">    Returns:</span></span><br><span class="line"><span class="string">      err: (scalar)             </span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    m = <span class="built_in">len</span>(y)</span><br><span class="line">    err = <span class="number">0.0</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(m):</span><br><span class="line">    <span class="comment">### START CODE HERE ### </span></span><br><span class="line">        err_i=(<span class="number">1</span>/(<span class="number">2</span>*m))*(y[i]-yhat[i])**<span class="number">2</span></span><br><span class="line">        err+=err_i</span><br><span class="line">    <span class="comment">### END CODE HERE ### </span></span><br><span class="line">    <span class="keyword">return</span>(err)</span><br></pre></td></tr></table></figure><p>比较训练和测试数据的性能<br>让我们构建一个高次多项式模型，以最大程度地减少训练误差。这将使用 中的linear_regression函数。如果您想查看详细信息，该代码位于导入的实用程序文件中。以下步骤如下：<br>创建并拟合模型。（“fit”是训练或运行梯度下降的另一个名称）。<br>计算训练数据上的误差。<br>计算测试数据上的误差。<br><a href="https://blog.csdn.net/OldDriver1995/article/details/105240965">PolynomialFeatures详解</a><br>生成数据集 x_ideal, y_ideal用于绘制理想曲线这里是x_train**2 + c，x_train, y_train为返回的数据集可再次分割成test和train或者调用两次分割成cv,test,train</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">gen_data</span>(<span class="params">m, seed=<span class="number">1</span>, scale=<span class="number">0.7</span></span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot; generate a data set based on a x^2 with added noise &quot;&quot;&quot;</span></span><br><span class="line">    c = <span class="number">0</span></span><br><span class="line">    x_train = np.linspace(<span class="number">0</span>,<span class="number">49</span>,m)</span><br><span class="line">    np.random.seed(seed)</span><br><span class="line">    y_ideal = x_train**<span class="number">2</span> + c</span><br><span class="line">    y_train = y_ideal + scale * y_ideal*(np.random.sample((m,))-<span class="number">0.5</span>)</span><br><span class="line">    x_ideal = x_train <span class="comment">#for redraw when new data included in X</span></span><br><span class="line">    <span class="keyword">return</span> x_train, y_train, x_ideal, y_ideal</span><br></pre></td></tr></table></figure><p>为了生成训练，测试，交叉验证三个数据集。我们将使用两次train_test_split，以获得三个拆分：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#split the data using sklearn routine </span></span><br><span class="line">X_train, X_, y_train, y_ = train_test_split(X,y,test_size=<span class="number">0.40</span>, random_state=<span class="number">1</span>)</span><br><span class="line">X_cv, X_test, y_cv, y_test = train_test_split(X_,y_,test_size=<span class="number">0.50</span>, random_state=<span class="number">1</span>)</span><br></pre></td></tr></table></figure><p><a href="https://www.runoob.com/python/func-number-max.html">max()</a>方法返回给定参数的最大值，参数可以为序列<br>ax.legend(loc='upper left') loc顾名思义是位置的意思<br>找到最佳度数：<br>在之前的实验中，您发现可以使用多项式创建能够拟合复杂曲线的模型（请参阅课程 1、第 2 周特征工程和多项式回归实验室）。此外，您还演示了通过增加多项式的次数，可以创建过拟合。（请参阅课程 1，第 3 周，过度拟合实验）。让我们在这里使用这些知识来测试我们区分过度拟合和欠拟合的能力。<br>让我们反复训练模型，使用循环每次迭代增加多项式的次数，用lmodel.mse计算每个次数下的误差存入数组中再使用<a href="https://blog.csdn.net/weixin_41770169/article/details/80714461">numpy.argmin</a>找到给出axis方向最小值的下标以便找到最合适的次数，节选代码如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> degree <span class="keyword">in</span> <span class="built_in">range</span>(max_degree):</span><br><span class="line">  lmodel=lin_model(degree+<span class="number">1</span>) <span class="comment">#避免出现非0次</span></span><br><span class="line">  lmodel.fit(X_train, y_train)</span><br><span class="line">  <span class="comment">#误差应该以cv组为基准</span></span><br><span class="line">  yhat = lmodel.predict(X_cv)</span><br><span class="line">  err_cv[degree] = lmodel.mse(y_cv, yhat)</span><br><span class="line">  <span class="comment">#同理可得train组的误差</span></span><br><span class="line">  yhat = lmodel.predict(X_train)</span><br><span class="line">  err_train[degree] = lmodel.mse(y_train, yhat)</span><br><span class="line">optimal_degree = np.argmin(err_cv)+<span class="number">1</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;最合适的次数是<span class="subst">&#123;optimal_degree&#125;</span>&quot;</span>)</span><br></pre></td></tr></table></figure><p>这代码跑了两次：一次2，一次5。<s>暂时不清楚是什么原因导致的</s>，答：由于train_test_split在分割数据集时会随机打乱数据，所以对不同目的的任务最好设置不同的random_state<br>调整正则化。<br>在以前的实验中，您已利用正则化来减少过度拟合。与度数类似，可以使用相同的方法来调整正则化参数 lambda()以便找到最合适的数值。<br>让我们从高次多项式开始并改变正则化参数来演示这一点。<br>二维的数组使用np.zeros要有里外两层小括号否则可能会报错<br>使用双重循环同时找到相对合适的次数和lambda，发现与分别找出来的结果一致<s>所以多此一举</s>有可能是这两个参数具有一定的独立性<br>总代码</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="comment"># %matplotlib widget</span></span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">from</span> sklearn.linear_model <span class="keyword">import</span> LinearRegression, Ridge</span><br><span class="line"><span class="keyword">from</span> sklearn.preprocessing <span class="keyword">import</span> StandardScaler, PolynomialFeatures</span><br><span class="line"><span class="keyword">from</span> sklearn.model_selection <span class="keyword">import</span> train_test_split</span><br><span class="line"><span class="keyword">from</span> sklearn.metrics <span class="keyword">import</span> mean_squared_error</span><br><span class="line"><span class="keyword">import</span> tensorflow <span class="keyword">as</span> tf</span><br><span class="line"><span class="keyword">from</span> tensorflow.keras.models <span class="keyword">import</span> Sequential</span><br><span class="line"><span class="keyword">from</span> tensorflow.keras.layers <span class="keyword">import</span> Dense</span><br><span class="line"><span class="keyword">from</span> tensorflow.keras.activations <span class="keyword">import</span> relu,linear</span><br><span class="line"><span class="keyword">from</span> tensorflow.keras.losses <span class="keyword">import</span> SparseCategoricalCrossentropy</span><br><span class="line"><span class="keyword">from</span> tensorflow.keras.optimizers <span class="keyword">import</span> Adam</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> logging</span><br><span class="line">logging.getLogger(<span class="string">&quot;tensorflow&quot;</span>).setLevel(logging.ERROR)</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> public_tests_a1 <span class="keyword">import</span> * </span><br><span class="line"></span><br><span class="line">tf.keras.backend.set_floatx(<span class="string">&#x27;float64&#x27;</span>)</span><br><span class="line"><span class="keyword">from</span> assigment_utils <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line">tf.autograph.set_verbosity(<span class="number">0</span>)</span><br><span class="line"><span class="comment"># Generate some data</span></span><br><span class="line">X,y,x_ideal,y_ideal = gen_data(<span class="number">18</span>, <span class="number">2</span>, <span class="number">0.7</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;X.shape&quot;</span>, X.shape, <span class="string">&quot;y.shape&quot;</span>, y.shape,<span class="string">&quot;y_ideal&quot;</span>,y_ideal)  </span><br><span class="line"><span class="built_in">print</span>(x_ideal,y_ideal)  </span><br><span class="line"><span class="comment">#split the data using sklearn routine </span></span><br><span class="line">X_train, X_test, y_train, y_test = train_test_split(X,y,test_size=<span class="number">0.33</span>, random_state=<span class="number">1</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;X_train.shape&quot;</span>, X_train.shape, <span class="string">&quot;y_train.shape&quot;</span>, y_train.shape)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;X_test.shape&quot;</span>, X_test.shape, <span class="string">&quot;y_test.shape&quot;</span>, y_test.shape)</span><br><span class="line"></span><br><span class="line">fig,ax=plt.subplots(<span class="number">1</span>,<span class="number">1</span>,figsize=(<span class="number">4</span>,<span class="number">4</span>))</span><br><span class="line">ax.plot(x_ideal, y_ideal, <span class="string">&quot;--&quot;</span>, color = <span class="string">&quot;orangered&quot;</span>, label=<span class="string">&quot;y_ideal&quot;</span>, lw=<span class="number">1</span>)</span><br><span class="line">ax.set_title(<span class="string">&quot;Training, Test&quot;</span>,fontsize = <span class="number">14</span>)  </span><br><span class="line">ax.set_xlabel(<span class="string">&quot;x&quot;</span>)</span><br><span class="line">ax.set_ylabel(<span class="string">&quot;y&quot;</span>)</span><br><span class="line">ax.scatter(X_train, y_train, color = <span class="string">&quot;red&quot;</span>,           label=<span class="string">&quot;train&quot;</span>)</span><br><span class="line">ax.scatter(X_test, y_test,   color = dlc[<span class="string">&quot;dlblue&quot;</span>],   label=<span class="string">&quot;test&quot;</span>)</span><br><span class="line">ax.legend(loc=<span class="string">&#x27;upper left&#x27;</span>)</span><br><span class="line">plt.show()  </span><br><span class="line"><span class="comment"># UNQ_C1</span></span><br><span class="line"><span class="comment"># GRADED CELL: eval_mse</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">eval_mse</span>(<span class="params">y, yhat</span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot; </span></span><br><span class="line"><span class="string">    Calculate the mean squared error on a data set.</span></span><br><span class="line"><span class="string">    Args:</span></span><br><span class="line"><span class="string">      y    : (ndarray  Shape (m,) or (m,1))  target value of each example</span></span><br><span class="line"><span class="string">      yhat : (ndarray  Shape (m,) or (m,1))  predicted value of each example</span></span><br><span class="line"><span class="string">    Returns:</span></span><br><span class="line"><span class="string">      err: (scalar)             </span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    m = <span class="built_in">len</span>(y)</span><br><span class="line">    err = <span class="number">0.0</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(m):</span><br><span class="line">    <span class="comment">### START CODE HERE ### </span></span><br><span class="line">        err_i=(<span class="number">1</span>/(<span class="number">2</span>*m))*(y[i]-yhat[i])**<span class="number">2</span></span><br><span class="line">        err+=err_i</span><br><span class="line">    <span class="comment">### END CODE HERE ### </span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span>(err)</span><br><span class="line"><span class="comment">#比较训练和测试数据的性能</span></span><br><span class="line"><span class="comment"># create a model in sklearn, train on training data</span></span><br><span class="line">degree = <span class="number">10</span></span><br><span class="line">lmodel = lin_model(degree) <span class="comment">#生成最高次数为10次的模型</span></span><br><span class="line">lmodel.fit(X_train, y_train)</span><br><span class="line"></span><br><span class="line"><span class="comment"># predict on training data, find training error</span></span><br><span class="line">yhat = lmodel.predict(X_train)</span><br><span class="line">err_train = lmodel.mse(y_train, yhat)</span><br><span class="line"></span><br><span class="line"><span class="comment"># predict on test data, find error</span></span><br><span class="line">yhat = lmodel.predict(X_test)</span><br><span class="line">err_test = lmodel.mse(y_test, yhat)</span><br><span class="line"><span class="comment">#打印误差发现训练集上的计算误差大大小于测试集的计算误差。</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;training err <span class="subst">&#123;err_train:<span class="number">0.2</span>f&#125;</span>, test err <span class="subst">&#123;err_test:<span class="number">0.2</span>f&#125;</span>&quot;</span>)</span><br><span class="line"><span class="comment">#绘制数据范围内的预测</span></span><br><span class="line">x=np.linspace(<span class="number">0</span>,<span class="built_in">int</span>(X.<span class="built_in">max</span>()),<span class="number">200</span>)</span><br><span class="line">y_pred=lmodel.predict(x)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;x=<span class="subst">&#123;x&#125;</span>&quot;</span>,<span class="string">f&quot;y_pred=<span class="subst">&#123;y_pred&#125;</span>&quot;</span>)</span><br><span class="line">plt_train_test(X_train, y_train, X_test, y_test, x, y_pred, x_ideal, y_ideal, degree)</span><br><span class="line"><span class="comment"># Generate  data</span></span><br><span class="line">X,y,x_ideal,y_ideal=gen_data(<span class="number">40</span>,<span class="number">5</span>,<span class="number">0.7</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;X.shape&quot;</span>, X.shape, <span class="string">&quot;y.shape&quot;</span>, y.shape)</span><br><span class="line"><span class="comment">#split the data using sklearn routine 训练百分之60 其余各 百分之20</span></span><br><span class="line">X_train, X_, y_train, y_ = train_test_split(X,y,test_size=<span class="number">0.4</span>, random_state=<span class="number">2</span>)</span><br><span class="line">X_test, X_cv, y_test, y_cv = train_test_split(X_,y_,test_size=<span class="number">0.5</span>, random_state=<span class="number">2</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;X_train.shape&quot;</span>, X_train.shape, <span class="string">&quot;y_train.shape&quot;</span>, y_train.shape)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;X_cv.shape&quot;</span>, X_cv.shape, <span class="string">&quot;y_cv.shape&quot;</span>, y_cv.shape)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;X_test.shape&quot;</span>, X_test.shape, <span class="string">&quot;y_test.shape&quot;</span>, y_test.shape)</span><br><span class="line"></span><br><span class="line">fig, ax = plt.subplots(<span class="number">1</span>,<span class="number">1</span>,figsize=(<span class="number">4</span>,<span class="number">4</span>))</span><br><span class="line">ax.plot(x_ideal, y_ideal, <span class="string">&quot;--&quot;</span>, color = <span class="string">&quot;orangered&quot;</span>, label=<span class="string">&quot;y_ideal&quot;</span>, lw=<span class="number">1</span>)</span><br><span class="line">ax.set_title(<span class="string">&quot;Training, CV, Test&quot;</span>,fontsize = <span class="number">14</span>)</span><br><span class="line">ax.set_xlabel(<span class="string">&quot;x&quot;</span>)</span><br><span class="line">ax.set_ylabel(<span class="string">&quot;y&quot;</span>)</span><br><span class="line"></span><br><span class="line">ax.scatter(X_train, y_train, color = <span class="string">&quot;red&quot;</span>,           label=<span class="string">&quot;train&quot;</span>)</span><br><span class="line">ax.scatter(X_cv, y_cv,       color = dlc[<span class="string">&quot;dlorange&quot;</span>], label=<span class="string">&quot;cv&quot;</span>)</span><br><span class="line">ax.scatter(X_test, y_test,   color = dlc[<span class="string">&quot;dlblue&quot;</span>],   label=<span class="string">&quot;test&quot;</span>)</span><br><span class="line">ax.legend(loc=<span class="string">&#x27;upper left&#x27;</span>)</span><br><span class="line">plt.show()  </span><br><span class="line"></span><br><span class="line">max_degree = <span class="number">9</span></span><br><span class="line">err_train = np.zeros(max_degree)    </span><br><span class="line">err_cv = np.zeros(max_degree)     </span><br><span class="line"><span class="comment">#以下代码以便于画出在不同次数下的曲线 </span></span><br><span class="line">x = np.linspace(<span class="number">0</span>,<span class="built_in">int</span>(X.<span class="built_in">max</span>()),<span class="number">100</span>)  </span><br><span class="line">y_pred = np.zeros((<span class="number">100</span>,max_degree))  <span class="comment">#columns are lines to plot</span></span><br><span class="line"><span class="built_in">print</span>(y_pred.shape)</span><br><span class="line"><span class="keyword">for</span> degree <span class="keyword">in</span> <span class="built_in">range</span>(max_degree):</span><br><span class="line">  lmodel=lin_model(degree+<span class="number">1</span>) <span class="comment">#避免出现非0次</span></span><br><span class="line">  lmodel.fit(X_train, y_train)</span><br><span class="line">  <span class="comment">#误差应该以cv组为基准</span></span><br><span class="line">  yhat = lmodel.predict(X_cv)</span><br><span class="line">  err_cv[degree] = lmodel.mse(y_cv, yhat)</span><br><span class="line">  <span class="comment">#同理可得train组的误差</span></span><br><span class="line">  yhat = lmodel.predict(X_train)</span><br><span class="line">  err_train[degree] = lmodel.mse(y_train, yhat)</span><br><span class="line"></span><br><span class="line">  <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">  以下代码给各变量赋值以便绘图</span></span><br><span class="line"><span class="string">  &quot;&quot;&quot;</span></span><br><span class="line">  y_pred[:,degree] = lmodel.predict(x)  </span><br><span class="line">optimal_degree = np.argmin(err_cv)+<span class="number">1</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;最合适的次数是<span class="subst">&#123;optimal_degree&#125;</span>&quot;</span>)</span><br><span class="line">plt.close(<span class="string">&quot;all&quot;</span>)</span><br><span class="line">plt_optimal_degree(X_train, y_train, X_cv, y_cv, x, y_pred, x_ideal, y_ideal, </span><br><span class="line">                   err_train, err_cv, optimal_degree, max_degree)</span><br><span class="line"></span><br><span class="line">lambda_range = np.array([<span class="number">0.0</span>, <span class="number">1e-6</span>, <span class="number">1e-5</span>, <span class="number">1e-4</span>,<span class="number">1e-3</span>,<span class="number">1e-2</span>, <span class="number">1e-1</span>,<span class="number">1</span>,<span class="number">10</span>,<span class="number">100</span>])</span><br><span class="line"><span class="comment"># 读取数组长度以便存储和比较err_</span></span><br><span class="line">num_steps=<span class="built_in">len</span>(lambda_range)</span><br><span class="line">degree=<span class="number">10</span>  </span><br><span class="line">err_cv1=np.zeros(num_steps)</span><br><span class="line">err_test1=np.zeros(num_steps)</span><br><span class="line">err_train1=np.zeros(num_steps)</span><br><span class="line">x=np.linspace(<span class="number">0</span>,<span class="built_in">int</span>(X.<span class="built_in">max</span>()),<span class="number">100</span>)</span><br><span class="line">y_pred=np.zeros((<span class="number">100</span>,num_steps))</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(num_steps):</span><br><span class="line">    lmodel=lin_model(degree, regularization = <span class="literal">False</span>, lambda_=lambda_range[i]) <span class="comment">#避免出现非0次</span></span><br><span class="line">    lmodel.fit(X_train,y_train)</span><br><span class="line">    yhat = lmodel.predict(X_cv)</span><br><span class="line">    err_cv1[i]=lmodel.mse(y_cv,yhat)</span><br><span class="line">    yhat = lmodel.predict(X_test)</span><br><span class="line">    err_test1[i]=lmodel.mse(y_test,yhat)</span><br><span class="line">    y_pred[:,i]=lmodel.predict(x)</span><br><span class="line">    yhat = lmodel.predict(X_train)</span><br><span class="line">    err_train1[i] = lmodel.mse(y_train, yhat)</span><br><span class="line">optimal_lambda=lambda_range[np.argmin(err_cv1)]</span><br><span class="line">optimal_reg_idx = np.argmin(err_cv) </span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;最合适的lambda是<span class="subst">&#123;optimal_lambda&#125;</span>&quot;</span>)</span><br><span class="line">plt.close(<span class="string">&quot;all&quot;</span>)</span><br><span class="line">plt_tune_regularization(X_train, y_train, X_cv, y_cv, x, y_pred, err_train1, err_cv1, optimal_reg_idx, lambda_range) </span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">使用双重循环找到相对合适的次数和lambda</span></span><br><span class="line"><span class="string">难点是y_pred的形状变了</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span> </span><br><span class="line">lambda_range = np.array([<span class="number">0.0</span>, <span class="number">1e-6</span>, <span class="number">1e-5</span>, <span class="number">1e-4</span>,<span class="number">1e-3</span>,<span class="number">1e-2</span>, <span class="number">1e-1</span>,<span class="number">1</span>,<span class="number">10</span>,<span class="number">100</span>])</span><br><span class="line"><span class="comment"># 读取数组长度以便存储和比较err_</span></span><br><span class="line">n=num_steps=<span class="built_in">len</span>(lambda_range)</span><br><span class="line"><span class="comment"># 从一到十</span></span><br><span class="line">m=max_degree=<span class="number">9</span>  </span><br><span class="line"><span class="comment"># mn=num_steps*max_degree</span></span><br><span class="line">err_cv2=np.zeros((m,n))</span><br><span class="line">err_test2=np.zeros((m,n))</span><br><span class="line">err_train2=np.zeros((m,n))</span><br><span class="line">x=np.linspace(<span class="number">0</span>,<span class="built_in">int</span>(X.<span class="built_in">max</span>()),<span class="number">100</span>)</span><br><span class="line">y_pred=np.zeros((<span class="number">100</span>,m,n))</span><br><span class="line"><span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(max_degree):</span><br><span class="line">  <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(num_steps):</span><br><span class="line">      lmodel=lin_model(j+<span class="number">1</span>, regularization = <span class="literal">False</span>, lambda_=lambda_range[i]) <span class="comment">#避免出现非0次</span></span><br><span class="line">      lmodel.fit(X_train,y_train)</span><br><span class="line">      yhat = lmodel.predict(X_cv)</span><br><span class="line">      err_cv2[j,i]=lmodel.mse(y_cv,yhat)</span><br><span class="line">      yhat = lmodel.predict(X_test)</span><br><span class="line">      err_test2[j,i]=lmodel.mse(y_test,yhat)</span><br><span class="line">      y_pred[:,j,i]=lmodel.predict(x)</span><br><span class="line">      yhat = lmodel.predict(X_train)</span><br><span class="line">      err_train2[j,i] = lmodel.mse(y_train, yhat)</span><br><span class="line">      <span class="comment"># 此时i*j已经把序号糅合在一起了怎么单独定位到i，j；所以把err设置为二维比较好,并把y_pred大胆的设置成3维</span></span><br><span class="line"><span class="comment"># def min2wsz(a[][]):</span></span><br><span class="line"><span class="built_in">min</span> = err_cv2[<span class="number">0</span>,<span class="number">0</span>]</span><br><span class="line">row = colum=<span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(max_degree):</span><br><span class="line">  <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(num_steps):</span><br><span class="line">    <span class="keyword">if</span> (err_cv2[j,i] &lt; <span class="built_in">min</span>):</span><br><span class="line">      <span class="built_in">min</span> = err_cv2[j,i]</span><br><span class="line">      row = j</span><br><span class="line">      colum = i</span><br><span class="line"><span class="comment"># i2=np.argmin(err_cv2,axis=1)</span></span><br><span class="line">optimal_lambda=lambda_range[colum]</span><br><span class="line">optimal_reg_idx = colum </span><br><span class="line">optimal_degree = row+<span class="number">1</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;最合适的次数是<span class="subst">&#123;optimal_degree&#125;</span>&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;最合适的lambda是<span class="subst">&#123;optimal_lambda&#125;</span>&quot;</span>)</span><br><span class="line"><span class="comment"># plt_optimal_degree(X_train, y_train, X_cv, y_cv, x, y_pred, x_ideal, y_ideal, </span></span><br><span class="line"><span class="comment">#                    err_train2, err_cv2, optimal_degree, max_degree)</span></span><br><span class="line"><span class="comment"># plt_tune_regularization(X_train, y_train, X_cv, y_cv, x, y_pred, err_train2, err_cv2, optimal_reg_idx, lambda_range) </span></span><br></pre></td></tr></table></figure><h1 id="决策树模型">决策树模型</h1><h2 id="纯度">纯度</h2><p>当样本中狗和猫的比例为1:1时熵(杂质)最大，纯度最小；反之，当样本中全为狗或者全为猫时杂质最小，该曲线类似于翻转的二次函数<br>H(p1)=-p1log2(p1)-p0log2(P0)=-p1log2(p1)-(1-p1)log2(1-p1)<br>只有Log的底数为2才满足</p><h2 id="信息增益">信息增益</h2><p>熵减少了，信息就增加了俗称信息增益,信息增益越大往往杂质减少的越多分割越明确<br>可以从root根处的熵H(0.5)-下一级加权熵计算信息增益，当树深到一定层数或者信息增益小于阈值可以考虑停止</p><h2 id="回归树">回归树</h2><p>在构建回归树时，我们不是试图减少熵，这是我们对分类问题的杂质度量，而是尝<br>试减少每个数据子集的值Y的权重方差。因此，就像前我们会为回归树选择能为您提供最大信息增益的特征一样您将选择能为您提供最大方差减少的特征，这就是为什么您选择耳朵形状作为分割特征的缘故。</p><h2 id="决策树应用">决策树应用</h2><p>1-软件包<br>首先，让我们运行下面的单元格来导入此分配期间需要的所有包。<br>numpy 是在 Python 中处理矩阵的基本包。<br>matplotlib 是一个著名的库，用于在 Python 中绘制图形。<br>utils.py包含此分配的帮助程序函数。您不需要修改此文件中的代码<br>2 - 问题陈述<br>假设您正在创办一家种植和销售野生蘑菇的公司。<br>由于并非所有蘑菇都可以食用，因此您希望能够根据其物理属性来判断给定的蘑菇是可食用的还是有毒的您有一些可用于此任务的现有数据。<br>你能用这些数据来帮助你确定哪些蘑菇可以安全销售吗？<br>注意：使用的数据集仅用于说明目的。它并不意味着作为识别食用蘑菇的指南。<br>3 - 数据集<br>首先加载此任务的数据集。您收集的数据集如下：</p><table><thead><tr><th style="text-align:center">Cap Color</th><th style="text-align:center">Stalk Shape</th><th style="text-align:center">Solitary</th><th style="text-align:center">Edible</th></tr></thead><tbody><tr><td style="text-align:center">Brown</td><td style="text-align:center">Tapering</td><td style="text-align:center">Yes</td><td style="text-align:center">1</td></tr><tr><td style="text-align:center">Brown</td><td style="text-align:center">Enlarging</td><td style="text-align:center">Yes</td><td style="text-align:center">1</td></tr><tr><td style="text-align:center">Brown</td><td style="text-align:center">Enlarging</td><td style="text-align:center">No</td><td style="text-align:center">0</td></tr><tr><td style="text-align:center">Brown</td><td style="text-align:center">Enlarging</td><td style="text-align:center">No</td><td style="text-align:center">0</td></tr><tr><td style="text-align:center">Brown</td><td style="text-align:center">Tapering</td><td style="text-align:center">Yes</td><td style="text-align:center">1</td></tr><tr><td style="text-align:center">Red</td><td style="text-align:center">Tapering</td><td style="text-align:center">Yes</td><td style="text-align:center">0</td></tr><tr><td style="text-align:center">Red</td><td style="text-align:center">Enlarging</td><td style="text-align:center">No</td><td style="text-align:center">0</td></tr><tr><td style="text-align:center">Brown</td><td style="text-align:center">Enlarging</td><td style="text-align:center">Yes</td><td style="text-align:center">1</td></tr><tr><td style="text-align:center">Red</td><td style="text-align:center">Tapering</td><td style="text-align:center">No</td><td style="text-align:center">1</td></tr><tr><td style="text-align:center">Brown</td><td style="text-align:center">Enlarging</td><td style="text-align:center">No</td><td style="text-align:center">0</td></tr></tbody></table><p>因此：<br>X_train每个示例包含三个功能<br>棕色（值 表示“棕色”帽颜色，表示“红色”帽颜色）10<br>锥形（值 表示“锥形茎形状”，表示“放大”茎形状）10<br>单独（值 表示“是”，指示“否”）10<br>y_train是蘑菇是否可以食用<br>y = 1表示可食用<br>y = 0表示有毒<br>对于二维数据len(X_train)输出的是行数，X_train[:5]是取前五行相当于X_train[:5,:]<br>4 - 诊断树复习器<br>在本练习实验室中，您将基于提供的数据集构建决策树。</p><p>回想一下，构建决策树的步骤如下：</p><p>从根节点的所有示例开始<br>计算所有可能特征的信息增益以进行拆分，然后选择信息增益最高的特征<br>根据所选要素分割数据集，并创建树的左右分支<br>继续重复拆分过程，直到满足停止条件<br>在本实验中，您将实现以下函数，这些函数允许您使用具有最高信息增益的功能将节点拆分为左右分支</p><p>计算节点处的熵<br>根据给定特征将节点上的数据集拆分为左右分支<br>计算对给定特征进行拆分的信息增益<br>选择信息获取最大化的功能<br>然后，我们将使用您实现的帮助程序函数通过重复拆分过程直到满足停止条件来构建决策树</p><p>对于本实验，我们选择的停止标准是将最大深度设置为 2<br>4.1 计算熵<br>首先，您将编写一个名为的帮助程序函数，用于计算节点上的熵（杂质度量）。compute_entropy</p><p>该函数接受一个 numpy 数组 （），该数组指示该节点中的示例是可食用的 （） 还是有毒的（y10)<br>完成以下功能以：compute_entropy()</p><p>计算<br>，这是可食用示例的比例（即具有值 = 在1y)<br>然后将熵计算为</p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>H</mi><mo stretchy="false">(</mo><msub><mi>p</mi><mn>1</mn></msub><mo stretchy="false">)</mo><mo>=</mo><mo>−</mo><msub><mi>p</mi><mn>1</mn></msub><msub><mtext>log</mtext><mn>2</mn></msub><mo stretchy="false">(</mo><msub><mi>p</mi><mn>1</mn></msub><mo stretchy="false">)</mo><mo>−</mo><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><msub><mi>p</mi><mn>1</mn></msub><mo stretchy="false">)</mo><msub><mtext>log</mtext><mn>2</mn></msub><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><msub><mi>p</mi><mn>1</mn></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">H(p_1) = -p_1 \text{log}_2(p_1) - (1- p_1) \text{log}_2(1- p_1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">−</span><span class="mord"><span class="mord mathdefault">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord text"><span class="mord">log</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.20696799999999996em;"><span style="top:-2.4558600000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.24414em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mord"><span class="mord text"><span class="mord">log</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.20696799999999996em;"><span style="top:-2.4558600000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.24414em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></span></p><p>注意<br>日志以基数计算<br>出于实施目的，<br>.也就是说，如果或，将熵设置为p_1 = 0;p_1 = 10<br>确保检查节点上的数据是否为空（即 ）。如果是，则返回len(y) != 00</p><p>习题1<br>请按照前面的说明完成该功能。compute_entropy()<br>如果您遇到困难，可以查看下面单元格后面显示的提示，以帮助您实现。<br>为计算p1先要numpy自带的方法统计数组中0元素或图像中0像素值的个数</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line">a = np.array([[<span class="number">0</span>,<span class="number">1</span>,<span class="number">2</span>],[<span class="number">2</span>,<span class="number">0</span>,<span class="number">0</span>]])</span><br><span class="line">cnt_array = np.where(a,<span class="number">0</span>,<span class="number">1</span>)</span><br><span class="line"><span class="built_in">print</span>(np.<span class="built_in">sum</span>(cnt_array)) </span><br></pre></td></tr></table></figure><p>等于0的元素置为1，求和即可<br>除了以上，统计py数组中某个数a的个数推荐方法：<code>len(y[y == a])</code>故<code>p1 = len(y[y == 1]) / len(y)</code><br>这里三种情况：y可能全为0或者1；y的数组不存在；y为正常情况.计算Log直接用np.logA(x)即可其中A是底数</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">compute_entropy</span>(<span class="params">y</span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    Computes the entropy for </span></span><br><span class="line"><span class="string">    </span></span><br><span class="line"><span class="string">    Args:</span></span><br><span class="line"><span class="string">y (narray): Numpy一维数组，表示节点上的每个示例是否为</span></span><br><span class="line"><span class="string">可食用(&#x27; 1 &#x27;)或有毒(&#x27; 0 &#x27;)</span></span><br><span class="line"><span class="string">       </span></span><br><span class="line"><span class="string">    Returns:</span></span><br><span class="line"><span class="string">        entropy (float):该节点的熵</span></span><br><span class="line"><span class="string">        </span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    <span class="comment"># You need to return the following variables correctly</span></span><br><span class="line">    entropy = <span class="number">0.</span></span><br><span class="line">    l=<span class="built_in">len</span>(y)</span><br><span class="line">    <span class="comment">### START CODE HERE ###</span></span><br><span class="line">    <span class="comment">#统计y数组中1的个数</span></span><br><span class="line">    <span class="keyword">if</span> l!=<span class="number">0</span>:</span><br><span class="line">        t0=np.<span class="built_in">sum</span>(np.where(y,<span class="number">0</span>,<span class="number">1</span>))</span><br><span class="line">        <span class="keyword">if</span> t0==<span class="number">0</span> <span class="keyword">or</span> t0==l:</span><br><span class="line">           entropy=<span class="number">0</span> </span><br><span class="line">        <span class="keyword">else</span>:    </span><br><span class="line">            t1=l-t0</span><br><span class="line">            p1=t1/l</span><br><span class="line">            entropy=-p1*np.log2(p1)-(<span class="number">1</span>-p1)*np.log2(<span class="number">1</span>-p1)      </span><br><span class="line">    <span class="comment">### END CODE HERE ###        </span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> entropy</span><br></pre></td></tr></table></figure><p>4.2 拆分数据集<br>接下来，您将编写一个名为的帮助程序函数，该函数接收节点和要拆分的特征的数据，并将其拆分为左右分支。稍后在实验室中，你将实现代码来计算拆分的好坏程度。split_dataset<br>该函数接收训练数据、该节点上的数据点索引列表以及要拆分的特征。<br>它拆分数据并在左侧和右侧分支返回索引的子集。<br>例如，假设我们从根节点（所以）开始，我们选择在特征上拆分，即示例是否有棕色上限。node_indices = [0,1,2,3,4,5,6,7,8,9]<br>然后，函数的输出是，并且left_indices = [0,1,2,3,4,7,9] right_indices = [5,6,8]<br>习题2<br>请完成下面显示的功能split_dataset()<br>对每个索引node_indices<br>如果该要素的索引处的值为 1，则将索引添加到X1left_indices<br>如果该要素的索引处的值为 0，则将索引添加到X0right_indices<br>4.3 计算信息增益<br>接下来，您将编写一个名为的函数，该函数接收训练数据、节点上的索引和要拆分的特征，并返回拆分获得的信息。information_gain<br>习题3<br>请完成下面显示的函数进行计算compute_information_gain()</p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext>Information Gain</mtext><mo>=</mo><mi>H</mi><mo stretchy="false">(</mo><msubsup><mi>p</mi><mn>1</mn><mtext>node</mtext></msubsup><mo stretchy="false">)</mo><mo>−</mo><mo stretchy="false">(</mo><msup><mi>w</mi><mtext>left</mtext></msup><mi>H</mi><mo stretchy="false">(</mo><msubsup><mi>p</mi><mn>1</mn><mtext>left</mtext></msubsup><mo stretchy="false">)</mo><mo>+</mo><msup><mi>w</mi><mtext>right</mtext></msup><mi>H</mi><mo stretchy="false">(</mo><msubsup><mi>p</mi><mn>1</mn><mtext>right</mtext></msubsup><mo stretchy="false">)</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\text{Information Gain} = H(p_1^\text{node})- (w^{\text{left}}H(p_1^\text{left}) + w^{\text{right}}H(p_1^\text{right}))</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord text"><span class="mord">Information Gain</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.1491079999999998em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8991079999999998em;"><span style="top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord text mtight"><span class="mord mtight">node</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.149108em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8991079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord text mtight"><span class="mord mtight">left</span></span></span></span></span></span></span></span></span></span><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8991079999999998em;"><span style="top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord text mtight"><span class="mord mtight">left</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.2333239999999996em;vertical-align:-0.266308em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8991079999999999em;"><span style="top:-3.1130000000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord text mtight"><span class="mord mtight">right</span></span></span></span></span></span></span></span></span></span><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9670159999999998em;"><span style="top:-2.433692em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span><span style="top:-3.180908em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord text mtight"><span class="mord mtight">right</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.266308em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mclose">)</span></span></span></span></span></p><ul><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>H</mi><mo stretchy="false">(</mo><msubsup><mi>p</mi><mn>1</mn><mtext>node</mtext></msubsup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">H(p_1^\text{node})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.099108em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.849108em;"><span style="top:-2.4518920000000004em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord text mtight"><span class="mord mtight">node</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.24810799999999997em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span> 是上一级节点处的熵</li><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>H</mi><mo stretchy="false">(</mo><msubsup><mi>p</mi><mn>1</mn><mtext>left</mtext></msubsup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">H(p_1^\text{left})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.099108em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.849108em;"><span style="top:-2.4518920000000004em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord text mtight"><span class="mord mtight">left</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.24810799999999997em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span> and <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>H</mi><mo stretchy="false">(</mo><msubsup><mi>p</mi><mn>1</mn><mtext>right</mtext></msubsup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">H(p_1^\text{right})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.2333239999999999em;vertical-align:-0.266308em;"></span><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9670159999999999em;"><span style="top:-2.433692em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span><span style="top:-3.1809080000000005em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord text mtight"><span class="mord mtight">right</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.266308em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span> 是分裂后产生的左分支和右分支的熵</li><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>w</mi><mtext>left</mtext></msup></mrow><annotation encoding="application/x-tex">w^{\text{left}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.849108em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.849108em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord text mtight"><span class="mord mtight">left</span></span></span></span></span></span></span></span></span></span></span></span></span> and <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>w</mi><mtext>right</mtext></msup></mrow><annotation encoding="application/x-tex">w^{\text{right}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8491079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8491079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord text mtight"><span class="mord mtight">right</span></span></span></span></span></span></span></span></span></span></span></span></span> 分别是左右分支中示例的比例</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">compute_information_gain</span>(<span class="params">X, y, node_indices, feature</span>):</span><br><span class="line">    </span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    Compute the information of splitting the node on a given feature</span></span><br><span class="line"><span class="string">    </span></span><br><span class="line"><span class="string">    Args:</span></span><br><span class="line"><span class="string">        X (ndarray):            Data matrix of shape(n_samples, n_features)</span></span><br><span class="line"><span class="string">        y (array like):         list or ndarray with n_samples containing the target variable</span></span><br><span class="line"><span class="string">        node_indices (ndarray): List containing the active indices. I.e, the samples being considered in this step.</span></span><br><span class="line"><span class="string">   </span></span><br><span class="line"><span class="string">    Returns:</span></span><br><span class="line"><span class="string">        cost (float):        Cost computed</span></span><br><span class="line"><span class="string">    </span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span>    </span><br><span class="line">    <span class="comment"># Split dataset</span></span><br><span class="line">    left_indices, right_indices = split_dataset(X, node_indices, feature)</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># Some useful variables</span></span><br><span class="line">    X_node, y_node = X[node_indices], y[node_indices]</span><br><span class="line">    X_left, y_left = X[left_indices], y[left_indices]</span><br><span class="line">    X_right, y_right = X[right_indices], y[right_indices]</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># You need to return the following variables correctly</span></span><br><span class="line">    information_gain = <span class="number">0</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">### START CODE HERE ###</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment"># Weights </span></span><br><span class="line">    w_left=<span class="built_in">len</span>(X_left)/<span class="built_in">len</span>(X_node)</span><br><span class="line">    w_right=<span class="built_in">len</span>(X_right)/<span class="built_in">len</span>(X_node)</span><br><span class="line">    HP1_node=compute_entropy(y_node)</span><br><span class="line">    HP1_left=compute_entropy(y_left)</span><br><span class="line">    HP1_right=compute_entropy(y_right)</span><br><span class="line">    <span class="comment">#Weighted entropy</span></span><br><span class="line">     </span><br><span class="line">    <span class="comment">#Information gain                                                   </span></span><br><span class="line">    information_gain = HP1_node-(w_left*HP1_left+w_right*HP1_right)</span><br><span class="line">    <span class="comment">### END CODE HERE ###  </span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> information_gain </span><br></pre></td></tr></table></figure><p>获得最佳拆分<br>现在，让我们编写一个函数，通过计算每个特征的信息增益来获取要拆分的最佳特征，就像我们上面所做的那样，并返回提供最大信息增益的特征<br>习题4<br>请完成如下所示的功能。get_best_split()<br>该函数接收训练数据，以及该节点上数据点的索引<br>函数的输出 提供最大信息增益的功能<br>您可以使用该函数循环访问特征并计算每个特征的信息 如果您遇到困难，可以查看下面单元格后面显示的提示，以帮助您实现。compute_information_gain()<br>使用X.shape[1]可以读取第二维的长度即特征的数量，X.shape[0]可以读取第一维的长度即示例的数量<br>为了找到最大信息增益，我们可将各个特征的信息增益存到一个数组中，然后找到最大值的索引值<a href="https://blog.csdn.net/liuweiyuxiang/article/details/81835310">python获得list或numpy数组中最大元素对应的索引</a></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_best_split</span>(<span class="params">X, y, node_indices</span>):   </span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    Returns the optimal feature and threshold value</span></span><br><span class="line"><span class="string">    to split the node data </span></span><br><span class="line"><span class="string">    </span></span><br><span class="line"><span class="string">    Args:</span></span><br><span class="line"><span class="string">        X (ndarray):            Data matrix of shape(n_samples, n_features)</span></span><br><span class="line"><span class="string">        y (array like):         list or ndarray with n_samples containing the target variable</span></span><br><span class="line"><span class="string">        node_indices (ndarray): List containing the active indices. I.e, the samples being considered in this step.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    Returns:</span></span><br><span class="line"><span class="string">        best_feature (int):     The index of the best feature to split</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span>    </span><br><span class="line">    </span><br><span class="line">    <span class="comment"># Some useful variables</span></span><br><span class="line">    num_features = X.shape[<span class="number">1</span>]</span><br><span class="line">    best_i=[]</span><br><span class="line">    <span class="comment"># You need to return the following variables correctly</span></span><br><span class="line">    best_feature = -<span class="number">1</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">### START CODE HERE ###</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(num_features):</span><br><span class="line">        best_i.append(compute_information_gain(X,y,node_indices,i)) </span><br><span class="line">    best_feature=best_i.index(<span class="built_in">max</span>(best_i))</span><br><span class="line">        </span><br><span class="line">    <span class="comment">### END CODE HERE ##    </span></span><br><span class="line">   </span><br><span class="line">    <span class="keyword">return</span> best_feature</span><br></pre></td></tr></table></figure><p>构建树<br>在本节中，我们使用您在上面实现的函数来生成决策树，方法是依次选择要拆分的最佳特征，直到达到停止条件（最大深度为 2）。<br>总代码</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">from</span> public_tests <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line">X_train = np.array([[<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>],[<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>],[<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>],[<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>],[<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>],[<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>],[<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>],[<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>],[<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>],[<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>]])</span><br><span class="line">y_train = np.array([<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>])</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;First few elements of X_train:\n&quot;</span>, X_train[:<span class="number">5</span>,:])</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;Type of X_train:&quot;</span>,<span class="built_in">type</span>(X_train))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;First few elements of y_train:&quot;</span>, y_train[:<span class="number">5</span>])</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;Type of y_train:&quot;</span>,<span class="built_in">type</span>(y_train))</span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;Number of training examples (m):&#x27;</span>, <span class="built_in">len</span>(X_train))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># UNQ_C1</span></span><br><span class="line"><span class="comment"># GRADED FUNCTION: compute_entropy</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">compute_entropy</span>(<span class="params">y</span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    Computes the entropy for </span></span><br><span class="line"><span class="string">    </span></span><br><span class="line"><span class="string">    Args:</span></span><br><span class="line"><span class="string">y (narray): Numpy一维数组，表示节点上的每个示例是否为</span></span><br><span class="line"><span class="string">可食用(&#x27; 1 &#x27;)或有毒(&#x27; 0 &#x27;)</span></span><br><span class="line"><span class="string">       </span></span><br><span class="line"><span class="string">    Returns:</span></span><br><span class="line"><span class="string">        entropy (float):该节点的熵</span></span><br><span class="line"><span class="string">        </span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    <span class="comment"># You need to return the following variables correctly</span></span><br><span class="line">    entropy = <span class="number">0.</span></span><br><span class="line">    l=<span class="built_in">len</span>(y)</span><br><span class="line">    <span class="comment">### START CODE HERE ###</span></span><br><span class="line">    <span class="comment">#统计y数组中1的个数</span></span><br><span class="line">    <span class="keyword">if</span> l!=<span class="number">0</span>:</span><br><span class="line">        t0=np.<span class="built_in">sum</span>(np.where(y,<span class="number">0</span>,<span class="number">1</span>))</span><br><span class="line">        <span class="keyword">if</span> t0==<span class="number">0</span> <span class="keyword">or</span> t0==l:</span><br><span class="line">           entropy=<span class="number">0</span> </span><br><span class="line">        <span class="keyword">else</span>:    </span><br><span class="line">            t1=l-t0</span><br><span class="line">            p1=t1/l</span><br><span class="line">            entropy=-p1*np.log2(p1)-(<span class="number">1</span>-p1)*np.log2(<span class="number">1</span>-p1)      </span><br><span class="line">    <span class="comment">### END CODE HERE ###        </span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> entropy</span><br><span class="line"><span class="comment"># Compute entropy at the root node (i.e. with all examples)</span></span><br><span class="line"><span class="comment"># Since we have 5 edible and 5 non-edible mushrooms, the entropy should be 1&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;Entropy at root node: &quot;</span>, compute_entropy(y_train)) </span><br><span class="line"></span><br><span class="line"><span class="comment"># UNIT TESTS</span></span><br><span class="line">compute_entropy_test(compute_entropy)</span><br><span class="line"></span><br><span class="line"><span class="comment"># UNQ_C2</span></span><br><span class="line"><span class="comment"># GRADED FUNCTION: split_dataset</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">split_dataset</span>(<span class="params">X, node_indices, feature</span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    Splits the data at the given node into</span></span><br><span class="line"><span class="string">    left and right branches</span></span><br><span class="line"><span class="string">    </span></span><br><span class="line"><span class="string">    Args:</span></span><br><span class="line"><span class="string">        X (ndarray):             Data matrix of shape(n_samples, n_features)</span></span><br><span class="line"><span class="string">        node_indices (ndarray):  包含活动索引的列表。即，在此步骤中考虑的样本。</span></span><br><span class="line"><span class="string">        feature (int):           Index of feature to split on s所要分割元素的索引</span></span><br><span class="line"><span class="string">    </span></span><br><span class="line"><span class="string">    Returns:</span></span><br><span class="line"><span class="string">        left_indices (ndarray): Indices with feature value == 1</span></span><br><span class="line"><span class="string">        right_indices (ndarray): Indices with feature value == 0</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment"># You need to return the following variables correctly</span></span><br><span class="line">    left_indices = []</span><br><span class="line">    right_indices = []</span><br><span class="line">    </span><br><span class="line">    <span class="comment">### START CODE HERE ###</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> node_indices:</span><br><span class="line">        <span class="keyword">if</span> X[i][feature]==<span class="number">1</span>:</span><br><span class="line">            left_indices.append(i)</span><br><span class="line">        <span class="keyword">elif</span> X[i][feature]==<span class="number">0</span>:</span><br><span class="line">            right_indices.append(i)</span><br><span class="line">    <span class="comment">### END CODE HERE ###</span></span><br><span class="line">        </span><br><span class="line">    <span class="keyword">return</span> left_indices, right_indices</span><br><span class="line">root_indices = [<span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment"># Feel free to play around with these variables</span></span><br><span class="line"><span class="comment"># The dataset only has three features, so this value can be 0 (Brown Cap), 1 (Tapering Stalk Shape) or 2 (Solitary)</span></span><br><span class="line">feature = <span class="number">0</span></span><br><span class="line"></span><br><span class="line">left_indices, right_indices = split_dataset(X_train, root_indices, feature)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;Left indices: &quot;</span>, left_indices)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;Right indices: &quot;</span>, right_indices)</span><br><span class="line"></span><br><span class="line"><span class="comment"># UNIT TESTS    </span></span><br><span class="line">split_dataset_test(split_dataset) </span><br><span class="line"><span class="comment"># UNQ_C3</span></span><br><span class="line"><span class="comment"># GRADED FUNCTION: compute_information_gain</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">compute_information_gain</span>(<span class="params">X, y, node_indices, feature</span>):</span><br><span class="line">    </span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    Compute the information of splitting the node on a given feature</span></span><br><span class="line"><span class="string">    </span></span><br><span class="line"><span class="string">    Args:</span></span><br><span class="line"><span class="string">        X (ndarray):            Data matrix of shape(n_samples, n_features)</span></span><br><span class="line"><span class="string">        y (array like):         list or ndarray with n_samples containing the target variable</span></span><br><span class="line"><span class="string">        node_indices (ndarray): List containing the active indices. I.e, the samples being considered in this step.</span></span><br><span class="line"><span class="string">   </span></span><br><span class="line"><span class="string">    Returns:</span></span><br><span class="line"><span class="string">        cost (float):        Cost computed</span></span><br><span class="line"><span class="string">    </span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span>    </span><br><span class="line">    <span class="comment"># Split dataset</span></span><br><span class="line">    left_indices, right_indices = split_dataset(X, node_indices, feature)</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># Some useful variables</span></span><br><span class="line">    X_node, y_node = X[node_indices], y[node_indices]</span><br><span class="line">    X_left, y_left = X[left_indices], y[left_indices]</span><br><span class="line">    X_right, y_right = X[right_indices], y[right_indices]</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># You need to return the following variables correctly</span></span><br><span class="line">    information_gain = <span class="number">0</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">### START CODE HERE ###</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment"># Weights </span></span><br><span class="line">    w_left=<span class="built_in">len</span>(X_left)/<span class="built_in">len</span>(X_node)</span><br><span class="line">    w_right=<span class="built_in">len</span>(X_right)/<span class="built_in">len</span>(X_node)</span><br><span class="line">    HP1_node=compute_entropy(y_node)</span><br><span class="line">    HP1_left=compute_entropy(y_left)</span><br><span class="line">    HP1_right=compute_entropy(y_right)</span><br><span class="line">    <span class="comment">#Weighted entropy</span></span><br><span class="line">     </span><br><span class="line">    <span class="comment">#Information gain                                                   </span></span><br><span class="line">    information_gain = HP1_node-(w_left*HP1_left+w_right*HP1_right)</span><br><span class="line">    <span class="comment">### END CODE HERE ###  </span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> information_gain </span><br><span class="line">info_gain0 = compute_information_gain(X_train, y_train, root_indices, feature=<span class="number">0</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;Information Gain from splitting the root on brown cap: &quot;</span>, info_gain0)</span><br><span class="line">    </span><br><span class="line">info_gain1 = compute_information_gain(X_train, y_train, root_indices, feature=<span class="number">1</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;Information Gain from splitting the root on tapering stalk shape: &quot;</span>, info_gain1)</span><br><span class="line"></span><br><span class="line">info_gain2 = compute_information_gain(X_train, y_train, root_indices, feature=<span class="number">2</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;Information Gain from splitting the root on solitary: &quot;</span>, info_gain2)</span><br><span class="line"></span><br><span class="line"><span class="comment"># UNIT TESTS</span></span><br><span class="line">compute_information_gain_test(compute_information_gain)</span><br><span class="line"></span><br><span class="line"><span class="comment"># UNQ_C4</span></span><br><span class="line"><span class="comment"># GRADED FUNCTION: get_best_split</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_best_split</span>(<span class="params">X, y, node_indices</span>):   </span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    Returns the optimal feature and threshold value</span></span><br><span class="line"><span class="string">    to split the node data </span></span><br><span class="line"><span class="string">    </span></span><br><span class="line"><span class="string">    Args:</span></span><br><span class="line"><span class="string">        X (ndarray):            Data matrix of shape(n_samples, n_features)</span></span><br><span class="line"><span class="string">        y (array like):         list or ndarray with n_samples containing the target variable</span></span><br><span class="line"><span class="string">        node_indices (ndarray): List containing the active indices. I.e, the samples being considered in this step.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    Returns:</span></span><br><span class="line"><span class="string">        best_feature (int):     The index of the best feature to split</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span>    </span><br><span class="line">    </span><br><span class="line">    <span class="comment"># Some useful variables</span></span><br><span class="line">    num_features = X.shape[<span class="number">1</span>]</span><br><span class="line">    best_i=[]</span><br><span class="line">    <span class="comment"># You need to return the following variables correctly</span></span><br><span class="line">    best_feature = -<span class="number">1</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">### START CODE HERE ###</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(num_features):</span><br><span class="line">        best_i.append(compute_information_gain(X,y,node_indices,i)) </span><br><span class="line">    best_feature=best_i.index(<span class="built_in">max</span>(best_i))</span><br><span class="line">        </span><br><span class="line">    <span class="comment">### END CODE HERE ##    </span></span><br><span class="line">   </span><br><span class="line">    <span class="keyword">return</span> best_feature</span><br><span class="line">best_feature = get_best_split(X_train, y_train, root_indices)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;Best feature to split on: %d&quot;</span> % best_feature)</span><br><span class="line"></span><br><span class="line"><span class="comment"># UNIT TESTS 以上代码测试通过</span></span><br><span class="line"><span class="comment"># get_best_split_test(get_best_split)</span></span><br><span class="line"><span class="comment"># Not graded</span></span><br><span class="line">tree = []</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">build_tree_recursive</span>(<span class="params">X, y, node_indices, branch_name, max_depth, current_depth</span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    Build a tree using the recursive algorithm that split the dataset into 2 subgroups at each node.</span></span><br><span class="line"><span class="string">    This function just prints the tree.</span></span><br><span class="line"><span class="string">    </span></span><br><span class="line"><span class="string">    Args:</span></span><br><span class="line"><span class="string">        X (ndarray):            Data matrix of shape(n_samples, n_features)</span></span><br><span class="line"><span class="string">        y (array like):         list or ndarray with n_samples containing the target variable</span></span><br><span class="line"><span class="string">        node_indices (ndarray): List containing the active indices. I.e, the samples being considered in this step.</span></span><br><span class="line"><span class="string">        branch_name (string):   Name of the branch. [&#x27;Root&#x27;, &#x27;Left&#x27;, &#x27;Right&#x27;]</span></span><br><span class="line"><span class="string">        max_depth (int):        Max depth of the resulting tree. </span></span><br><span class="line"><span class="string">        current_depth (int):    Current depth. Parameter used during recursive call.</span></span><br><span class="line"><span class="string">   </span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span> </span><br><span class="line"></span><br><span class="line">    <span class="comment"># Maximum depth reached - stop splitting</span></span><br><span class="line">    <span class="keyword">if</span> current_depth == max_depth:</span><br><span class="line">        formatting = <span class="string">&quot; &quot;</span>*current_depth + <span class="string">&quot;-&quot;</span>*current_depth</span><br><span class="line">        <span class="built_in">print</span>(formatting, <span class="string">&quot;%s leaf node with indices&quot;</span> % branch_name, node_indices)</span><br><span class="line">        <span class="keyword">return</span> <span class="comment">#直接退出函数</span></span><br><span class="line">   </span><br><span class="line">    <span class="comment"># Otherwise, get best split and split the data</span></span><br><span class="line">    <span class="comment"># Get the best feature and threshold at this node</span></span><br><span class="line">    best_feature = get_best_split(X, y, node_indices) </span><br><span class="line">    tree.append((current_depth, branch_name, best_feature, node_indices))</span><br><span class="line">    </span><br><span class="line">    formatting = <span class="string">&quot;-&quot;</span>*current_depth</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;%s Depth %d, %s: Split on feature: %d&quot;</span> % (formatting, current_depth, branch_name, best_feature))</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># Split the dataset at the best feature</span></span><br><span class="line">    left_indices, right_indices = split_dataset(X, node_indices, best_feature)</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># continue splitting the left and the right child. Increment current depth</span></span><br><span class="line">    build_tree_recursive(X, y, left_indices, <span class="string">&quot;Left&quot;</span>, max_depth, current_depth+<span class="number">1</span>)</span><br><span class="line">    build_tree_recursive(X, y, right_indices, <span class="string">&quot;Right&quot;</span>, max_depth, current_depth+<span class="number">1</span>)</span><br><span class="line">build_tree_recursive(X_train, y_train, root_indices, <span class="string">&quot;Root&quot;</span>, max_depth=<span class="number">2</span>, current_depth=<span class="number">0</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="k-均值聚类">K 均值聚类</h2><p>1 - 实现 K 均值<br>K-means算法是一种自动聚类以区分相似物的方法数据点在一起。<br>具体来说，你得到一个训练集 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">{</mo><msup><mi>x</mi><mrow><mtext>（</mtext><mn>1</mn><mtext>）</mtext></mrow></msup><mtext>，</mtext><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mtext>，</mtext><msup><mi>x</mi><mrow><mtext>（</mtext><mi>m</mi><mtext>）</mtext></mrow></msup><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">\{x^{（1）}， ...， x^{（m）}\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0913309999999998em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord cjk_fallback mtight">（</span><span class="mord mtight">1</span><span class="mord cjk_fallback mtight">）</span></span></span></span></span></span></span></span></span><span class="mord cjk_fallback">，</span><span class="mord">.</span><span class="mord">.</span><span class="mord">.</span><span class="mord cjk_fallback">，</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord cjk_fallback mtight">（</span><span class="mord mathdefault mtight">m</span><span class="mord cjk_fallback mtight">）</span></span></span></span></span></span></span></span></span><span class="mclose">}</span></span></span></span>，你想要 将数据分组到几个有凝聚力的“集群”中。<br>K 均值是一个迭代过程，它<br>首先随机初始质心，然后细化此猜测<br>重复将示例分配给其最近的质心，然后<br>根据分配重新计算质心。<br>在伪代码中，K 均值算法如下所示：<br># Initialize centroids<br># K is the number of clusters<br>centroids = kMeans_init_centroids(X, K)</p><p>for iter in range(iterations):<br># Cluster assignment step:<br># Assign each data point to the closest centroid.<br># idx[i] corresponds to the index of the centroid<br># assigned to example i<br>idx = find_closest_centroids(X, centroids)</p><pre><code># Move centroid step: # Compute means based on centroid assignmentscentroids = compute_means(X, idx, K)</code></pre><p>算法的内循环重复执行两个步骤：<br>（i） 将每个训练样本<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>x</mi><mrow><mtext>（</mtext><mi>i</mi><mtext>）</mtext></mrow></msup></mrow><annotation encoding="application/x-tex">x^{（i）}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8413309999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord cjk_fallback mtight">（</span><span class="mord mathdefault mtight">i</span><span class="mord cjk_fallback mtight">）</span></span></span></span></span></span></span></span></span></span></span></span> 分配给其最近的质心<br>（ii） 使用分配给它的点重新计算每个质心的平均值。<br><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>K</mi></mrow><annotation encoding="application/x-tex">K</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.07153em;">K</span></span></span></span>均值算法将始终收敛到质心的一组最终均值。<br>但是，收敛解可能并不总是理想的即有可能出现局部最优而不是整体最优，并且取决于质心的初始设置。<br>因此，在实践中，K-means算法通常使用不同的随机初始化运行几次。<br>从不同的随机初始化中选择这些不同解决方案的一种方法是选择具有最低成本函数值（失真）的解。<br>1.1 寻找最近的质心<br>在 K 均值算法的“聚类分配”阶段， 算法将每个训练样本<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>x</mi><mrow><mtext>（</mtext><mi>i</mi><mtext>）</mtext></mrow></msup></mrow><annotation encoding="application/x-tex">x^{（i）}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8413309999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord cjk_fallback mtight">（</span><span class="mord mathdefault mtight">i</span><span class="mord cjk_fallback mtight">）</span></span></span></span></span></span></span></span></span></span></span></span> 分配给其最接近的 质心，给定质心的当前位置。<br>习题1<br>您的任务找到距离数据集最近的质心。find_closest_centroids<br>此函数获取数据矩阵和所有位置，内部质心Xcentroids<br>它应该输出一个一维数组（具有与 相同数量的元素），该数组保存每个训练示例的最接近质心的索引（以 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">{</mo><mn>1</mn><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo separator="true">,</mo><mi>K</mi><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">\{1,...,K\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">.</span><span class="mord">.</span><span class="mord">.</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.07153em;">K</span><span class="mclose">}</span></span></span></span> 为单位的值，其中 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>K</mi></mrow><annotation encoding="application/x-tex">K</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.07153em;">K</span></span></span></span> 是质心总数）。<br>idxX<br>具体来说，对于我们设置的每个示例<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>x</mi><mrow><mtext>（</mtext><mi>i</mi><mtext>）</mtext></mrow></msup></mrow><annotation encoding="application/x-tex">x^{（i）}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8413309999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord cjk_fallback mtight">（</span><span class="mord mathdefault mtight">i</span><span class="mord cjk_fallback mtight">）</span></span></span></span></span></span></span></span></span></span></span></span> $$c^{（i）} ：= j \quad \mathrm{that ; minimizes} \quad ||x^{（i）} - \mu_j||^2，$$ 哪里<br><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>c</mi><mrow><mtext>（</mtext><mi>i</mi><mtext>）</mtext></mrow></msup></mrow><annotation encoding="application/x-tex">c^{（i）}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8413309999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault">c</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord cjk_fallback mtight">（</span><span class="mord mathdefault mtight">i</span><span class="mord cjk_fallback mtight">）</span></span></span></span></span></span></span></span></span></span></span></span> 是最接近 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>x</mi><mrow><mtext>（</mtext><mi>i</mi><mtext>）</mtext></mrow></msup></mrow><annotation encoding="application/x-tex">x^{（i）}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8413309999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord cjk_fallback mtight">（</span><span class="mord mathdefault mtight">i</span><span class="mord cjk_fallback mtight">）</span></span></span></span></span></span></span></span></span></span></span></span> 的质心索引（对应于起始代码中的 ），并且idx[i]<br><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>μ</mi><mi>j</mi></msub></mrow><annotation encoding="application/x-tex">\mu_j</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.716668em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault">μ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span> 是第 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>j</mi></mrow><annotation encoding="application/x-tex">j</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.85396em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.05724em;">j</span></span></span></span>'th 质心的位置（值）。（存储在起始代码中）centroids<br>如果您遇到困难，可以查看下面单元格后面显示的提示，以帮助您实现。<br>这里utils的loaddata和之前的文件不一样,基于from的相对引用比较困难，直接重命名即可<br>这里有m个X（i）每个都是二维数组，而随机产生的质心centroids也是二维数组，那么这里的距离就是二维坐标下的距离<br>报错： index 2 is out of bounds for axis 1 with size 2 是因为<code>jvli=(X[i,0]-centroids[j,0])**2+(X[i,1]-centroids[j,1])**2</code>代码的列索引溢出，列索引也是从0开始，print(X[1,0])即可检查数据,为啥使用jvliz0=[]<br>配合jvliz0.append(jvli)结果是错误的呢？原因是在双重循环中.append函数一直在列表末尾添加元素,使得存储Xi到质心距离的列表包含了全部的X,导致错误,在末尾添重新赋值为空即可jvliz0=[]<br>更推荐以下代码</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># UNQ_C1</span></span><br><span class="line"><span class="comment"># GRADED FUNCTION: find_closest_centroids</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">find_closest_centroids</span>(<span class="params">X, centroids</span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    Computes the centroid memberships for every example</span></span><br><span class="line"><span class="string">    </span></span><br><span class="line"><span class="string">    Args:</span></span><br><span class="line"><span class="string">        X (ndarray): (m, n) Input values      </span></span><br><span class="line"><span class="string">        centroids (ndarray): k centroids</span></span><br><span class="line"><span class="string">    </span></span><br><span class="line"><span class="string">    Returns:</span></span><br><span class="line"><span class="string">        idx (array_like): (m,) closest centroids</span></span><br><span class="line"><span class="string">    </span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># Set K ，K is total number of centroids</span></span><br><span class="line">    K = centroids.shape[<span class="number">0</span>]</span><br><span class="line">    m,n=X.shape</span><br><span class="line">    <span class="comment"># You need to return the following variables correctly</span></span><br><span class="line">    idx = np.zeros(m, dtype=<span class="built_in">int</span>)</span><br><span class="line">    jvliz0=[]</span><br><span class="line">    <span class="comment"># jvliz0=np.zeros(K, dtype=int)</span></span><br><span class="line">    <span class="comment">### START CODE HERE ###</span></span><br><span class="line">    <span class="comment">#计算每个Xi到K个质心的距离，寻找最短的那个质心</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(m):</span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(K):</span><br><span class="line">            jvli=<span class="built_in">float</span>((X[i,<span class="number">0</span>]-centroids[j,<span class="number">0</span>])**<span class="number">2</span>+(X[i,<span class="number">1</span>]-centroids[j,<span class="number">1</span>])**<span class="number">2</span>)</span><br><span class="line">            <span class="comment"># jvli = np.linalg.norm(X[i] - centroids[j]) </span></span><br><span class="line">            jvliz0.append(jvli)</span><br><span class="line">            <span class="comment"># jvliz0[j]=jvli</span></span><br><span class="line">            <span class="comment"># print(jvliz0)</span></span><br><span class="line">    </span><br><span class="line">        idx[i]=np.argmin(jvliz0)</span><br><span class="line">        jvliz0=[] <span class="comment">#关键</span></span><br><span class="line">    <span class="comment">### END CODE HERE ###</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> idx</span><br></pre></td></tr></table></figure><p>1.2 计算质心均值<br>将每个点分配给附近的质心后，第二阶段对于每个质心，算法重新计算训练集各类别的平均值并重新赋值给质心<br>习题2<br>请完成以下操作以重新计算每个质心的值compute_centroids<br>具体来说，对于每个质心<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>μ</mi><mi>k</mi></msub></mrow><annotation encoding="application/x-tex">\mu_k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault">μ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>我们设置</p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>μ</mi><mi>k</mi></msub><mo>=</mo><mfrac><mn>1</mn><mrow><mi mathvariant="normal">∣</mi><msub><mi>C</mi><mi>k</mi></msub><mi mathvariant="normal">∣</mi></mrow></mfrac><munder><mo>∑</mo><mrow><mi>i</mi><mo>∈</mo><msub><mi>C</mi><mi>k</mi></msub></mrow></munder><msup><mi>x</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup></mrow><annotation encoding="application/x-tex">\mu_k = \frac{1}{|C_k|} \sum_{i \in C_k} x^{(i)}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault">μ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.721636em;vertical-align:-1.400196em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">∣</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.936em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.050005em;"><span style="top:-1.855664em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mrel mtight">∈</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3487714285714287em;margin-left:-0.07153em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15122857142857138em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.0500049999999996em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.400196em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathdefault mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span></span></span></span></span></p><ul><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>C</mi><mi>k</mi></msub></mrow><annotation encoding="application/x-tex">C_k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 是分配给质心的示例集 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>k</mi></mrow><annotation encoding="application/x-tex">k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span></span></span></span></li><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">∣</mi><msub><mi>C</mi><mi>k</mi></msub><mi mathvariant="normal">∣</mi></mrow><annotation encoding="application/x-tex">|C_k|</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">∣</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span></span></span></span> 是集合中的示例数 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>C</mi><mi>k</mi></msub></mrow><annotation encoding="application/x-tex">C_k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><br>具体来说，如果两个例子说 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>x</mi><mrow><mo stretchy="false">(</mo><mn>3</mn><mo stretchy="false">)</mo></mrow></msup></mrow><annotation encoding="application/x-tex">x^{(3)}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8879999999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8879999999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mtight">3</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span></span></span></span> 和 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>x</mi><mrow><mo stretchy="false">(</mo><mn>5</mn><mo stretchy="false">)</mo></mrow></msup></mrow><annotation encoding="application/x-tex">x^{(5)}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8879999999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8879999999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mtight">5</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span></span></span></span> 被分配给质心 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>k</mi><mo>=</mo><mn>2</mn></mrow><annotation encoding="application/x-tex">k=2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">2</span></span></span></span>, 那么你应该更新 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>μ</mi><mn>2</mn></msub><mo>=</mo><mfrac><mn>1</mn><mn>2</mn></mfrac><mo stretchy="false">(</mo><msup><mi>x</mi><mrow><mo stretchy="false">(</mo><mn>3</mn><mo stretchy="false">)</mo></mrow></msup><mo>+</mo><msup><mi>x</mi><mrow><mo stretchy="false">(</mo><mn>5</mn><mo stretchy="false">)</mo></mrow></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\mu_2 = \frac{1}{2}(x^{(3)}+x^{(5)})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault">μ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.2329999999999999em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8879999999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mtight">3</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.138em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8879999999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mtight">5</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span><br>python循环赋值变量名的方法，<a href="https://blog.csdn.net/gsgbgxp/article/details/117769685">python在循环中创建并使用不同变量名</a></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">K=<span class="number">10</span></span><br><span class="line"><span class="keyword">for</span> i  <span class="keyword">in</span> <span class="built_in">range</span>(K):</span><br><span class="line">    <span class="built_in">exec</span>(<span class="string">f&#x27;X_cz<span class="subst">&#123;i&#125;</span>=[1,2]&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(X_cz0) <span class="comment">#[1,2]</span></span><br></pre></td></tr></table></figure><p>实际上<code># Find closest centroids using initial_centroids idx = find_closest_centroids(X, initial_centroids)</code>这段代码中的idx表示对X的分类结果，因此我们可以通过X[idx=k]来遍历对应编号为k的X数据集坐标类似前文中的plt.scatter(X[y==1,0], X[y==1,1])，X[y==1,0]其中1到m个数据集按行排列，y==1表示取y标记为1的X所在行，<code>,0</code>表示取第一列也就是X轴数据，<code>,1</code>表示取第二列也就是Y轴数据。<a href="https://blog.csdn.net/weixin_42018112/article/details/89075436">numpy mean()函数 详解</a><br>mean()函数的功能是求取平均值，经常操作的参数是axis，以m<em>n的矩阵为例：<br>axis不设置值，对m</em>n个数求平均值，返回一个实数<br>axis = 0：压缩行，对各列求均值，返回1<em>n的矩阵<br>axis = 1: 压缩列，对各行求均值，返回m</em>1的矩阵<br>重新分配质心子函数</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">compute_centroids</span>(<span class="params">X, idx, K</span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    Returns the new centroids by computing the means of the </span></span><br><span class="line"><span class="string">    data points assigned to each centroid.</span></span><br><span class="line"><span class="string">    </span></span><br><span class="line"><span class="string">    Args:</span></span><br><span class="line"><span class="string">        X (ndarray):   (m, n) Data points</span></span><br><span class="line"><span class="string">        idx (ndarray): (m,) Array containing index of closest centroid for each </span></span><br><span class="line"><span class="string">                       example in X. Concretely, idx[i] contains the index of </span></span><br><span class="line"><span class="string">                       the centroid closest to example i</span></span><br><span class="line"><span class="string">        K (int):       number of centroids</span></span><br><span class="line"><span class="string">    </span></span><br><span class="line"><span class="string">    Returns:</span></span><br><span class="line"><span class="string">        centroids (ndarray): (K, n) New centroids computed</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment"># Useful variables</span></span><br><span class="line">    m, n = X.shape</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># You need to return the following variables correctly</span></span><br><span class="line">    centroids = np.zeros((K, n))</span><br><span class="line">    <span class="comment"># for i  in range(K):</span></span><br><span class="line">    <span class="comment">#     exec(f&#x27;X_cz&#123;i&#125;=[]&#x27;)</span></span><br><span class="line">    <span class="comment">### START CODE HERE ###</span></span><br><span class="line">    <span class="comment"># for i in range(m):</span></span><br><span class="line">    <span class="comment">#     for j in range(K):</span></span><br><span class="line">    <span class="comment">#         if idx[i]==j:</span></span><br><span class="line">    <span class="comment">#             exec(f&#x27;X_cz&#123;j&#125;.append(X[i])&#x27;)</span></span><br><span class="line">    <span class="keyword">for</span> k <span class="keyword">in</span> <span class="built_in">range</span>(K):</span><br><span class="line">        points=X[idx==k]</span><br><span class="line">        centroids[k] = np.mean(points, axis = <span class="number">0</span>)</span><br><span class="line">    <span class="comment">### END CODE HERE ## </span></span><br><span class="line">    <span class="keyword">return</span> centroids</span><br></pre></td></tr></table></figure><p>2 - 示例数据集上的 K 均值<br>完成上述两个函数（ 和 ）后，下一步是运行 玩具 2D 数据集上的 K 均值算法可帮助您了解如何 K-means有效。find_closest_centroidscompute_centroids<br>我们鼓励您查看下面的函数 （） 以了解它是如何工作的。run_kMeans<br>请注意，代码调用您在循环中实现的两个函数。<br>当您运行下面的代码时，它将产生一个 可视化，逐步完成算法的进度每次迭代。<br>Numpy对逻辑表达式判别不清楚，它可以返回False如果等号两边两个式子是数值相等，也可以返回True因为等号两边两个式子是逻辑相等<a href="https://blog.csdn.net/ztf312/article/details/50708302">参考</a><br>因此语句<code>if centroidsnow.all()==centroidsold.all()</code>在old和new不完全相等的情况下也会判断为真,比较有多个元素的两数组建议用any(),any() 函数用于判断给定的可迭代参数 iterable 是否全部为 False，则返回 False，如果有一个为 True，则返回 True也就是有一个不相等就返回ture我们在此处判断false即可</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (centroidsnow-centroidsold).<span class="built_in">any</span>()==<span class="literal">False</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;共迭代<span class="subst">&#123;i+<span class="number">1</span>&#125;</span>次收敛&quot;</span>)</span><br><span class="line">    <span class="keyword">break</span></span><br></pre></td></tr></table></figure><p>3 - 随机初始化<br>示例数据集的质心初始分配旨在让您看到如图 1 所示的相同图。在实践中，初始化质心的一个好策略是从 训练集。<br>在练习的这一部分中，您应该了解如何实现该函数。kMeans_init_centroids<br>代码首先随机打乱示例的索引（使用 ）。np.random.permutation()<br>然后，它选择第一个 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>K</mi></mrow><annotation encoding="application/x-tex">K</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.07153em;">K</span></span></span></span> 基于索引随机排列的示例。<br>这允许随机选择示例，而不会有两次选择同一示例的风险。<br>注意：您无需为这部分练习实现任何内容。<br>4 - 使用 K 均值进行图像压缩<br>在本练习中，您将对图像压缩应用 K 均值。<br>以图像的简单 24 位颜色表示形式<br>，每个像素表示为三个 8 位无符号整数（范围从 0 到 255），指定红色、绿色和蓝色强度值。此编码通常称为 RGB 编码。<br>我们的图像包含数千种颜色，在练习的这一部分中，您将减少 颜色到16种颜色。<br>通过进行这种减少，可以有效地表示（压缩）照片。<br>具体来说，您只需要存储 16 种选定颜色的 RGB 值，对于图像中的每个像素，您现在只需要存储该位置的颜色索引（只需要 4 位即可表示 16 种可能性）。<br>在本部分中，您将使用 K-means 算法选择将用于表示压缩图像的 16 种颜色。<br>具体而言，您将原始图像中的每个像素视为数据示例，并使用 K-means 算法查找在三维 RGB 空间中对像素进行最佳分组（聚类）的 16 种颜色。<br>计算完图像上的聚类质心后，将使用 16 种颜色替换原始图像中的像素。<br>4 - 使用 K 均值进行图像压缩<br>在本练习中，您将对图像压缩应用 K 均值。<br>以图像的简单 24 位颜色表示形式<br>，每个像素表示为三个 8 位无符号整数（范围从 0 到 255），指定红色、绿色和蓝色强度值。此编码通常称为 RGB 编码。<br>我们的图像包含数千种颜色，在练习的这一部分中，您将减少 颜色到16种颜色。<br>通过进行这种减少，可以有效地表示（压缩）照片。<br>具体来说，您只需要存储 16 种选定颜色的 RGB 值，对于图像中的每个像素，您现在只需要存储该位置的颜色索引（只需要 4 位即可表示 16 种可能性）。<br>在本部分中，您将使用 K-means 算法选择将用于表示压缩图像的 16 种颜色。<br>具体而言，您将原始图像中的每个像素视为数据示例，并使用 K-means 算法查找在三维 RGB 空间中对像素进行最佳分组（聚类）的 16 种颜色。<br>计算完图像上的聚类质心后，将使用 16 种颜色替换原始图像中的像素。<br>存储图像的变量original_img是一个三维矩阵</p><ul><li>前两个索引标识像素位置</li><li>第三个索引表示红色、绿色或蓝色<br>例如，给出第 50 行和第 33 列处像素的蓝色强度。original_img[50, 33, 2]<br>处理数据<br>要调用 ，您需要首先将矩阵转换为二维矩阵。run_kMeansoriginal_img<br>下面的代码重塑了矩阵以创建一个original_img  <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>m</mi><mo>×</mo><mn>3</mn></mrow><annotation encoding="application/x-tex">m \times 3</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault">m</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">3</span></span></span></span><br>像素颜色矩阵（其中 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>m</mi><mo>=</mo><mn>16384</mn><mo>=</mo><mn>128</mn><mo>×</mo><mn>128</mn></mrow><annotation encoding="application/x-tex">m=16384 = 128\times128</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">m</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord">6</span><span class="mord">3</span><span class="mord">8</span><span class="mord">4</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">1</span><span class="mord">2</span><span class="mord">8</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord">2</span><span class="mord">8</span></span></span></span> )<br>find_closest_centroids函数40行在处理图片时报错，错误为ValueError: cannot convert float NaN to integer，加上Int还是报错，使用另一种方法也是报错<br>由于这里的距离实际上是由上一行中的公式得出的，而将公式变为<code>np.linalg.norm(X[i] - centroids[j])</code>没有报错，由于np.linalg.norm函数输出的值为float因此这里将公式改为<code>jvli=float((X[i,0]-centroids[j,0])**2+(X[i,1]-centroids[j,1])**2)</code>无报错问题解决，这个例子告诉我们一个算法在简单例子上能成功复杂的却不一定,这句话还有一个问题就是默认X只有两列，对于图像这种三列以上的数据处理不好<br>4.3 压缩图像<br>找到顶部后 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>K</mi><mo>=</mo><mn>16</mn></mrow><annotation encoding="application/x-tex">K=16</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.07153em;">K</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord">6</span></span></span></span> 颜色来代表图像，您现在可以 使用该函数将每个像素位置分配给其最近的质心。find_closest_centroids<br>这允许您使用每个像素的质心分配来表示原始图像。<br>请注意，您显著减少了描述图像所需的位数。<br>原始图像需要 24 位才能用于每个 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>128</mn><mo>×</mo><mn>128</mn></mrow><annotation encoding="application/x-tex">128\times128</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">1</span><span class="mord">2</span><span class="mord">8</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord">2</span><span class="mord">8</span></span></span></span><br>像素位置，导致总大小 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>128</mn><mo>×</mo><mn>128</mn><mo>×</mo><mn>24</mn><mo>=</mo><mn>393</mn><mo separator="true">,</mo><mn>216</mn></mrow><annotation encoding="application/x-tex">128 \times 128 \times 24 = 393,216</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">1</span><span class="mord">2</span><span class="mord">8</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">1</span><span class="mord">2</span><span class="mord">8</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">2</span><span class="mord">4</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8388800000000001em;vertical-align:-0.19444em;"></span><span class="mord">3</span><span class="mord">9</span><span class="mord">3</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">2</span><span class="mord">1</span><span class="mord">6</span></span></span></span> 位。<br>新的表示形式需要一些 16 种颜色的字典形式的开销存储，每种颜色需要 24 位（24位是因为RGB三通道每个通道8位），但图像本身只需要每个像素位置4位因为2^4=16种颜色。<br>因此，最终使用的位数为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>16</mn><mo>×</mo><mn>24</mn><mo>+</mo><mn>128</mn><mo>×</mo><mn>128</mn><mo>×</mo><mn>4</mn><mo>=</mo><mn>65</mn><mo separator="true">,</mo><mn>920</mn></mrow><annotation encoding="application/x-tex">16 \times 24 + 128 \times 128 \times 4 = 65,920</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">1</span><span class="mord">6</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">2</span><span class="mord">4</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">1</span><span class="mord">2</span><span class="mord">8</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">1</span><span class="mord">2</span><span class="mord">8</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">4</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8388800000000001em;vertical-align:-0.19444em;"></span><span class="mord">6</span><span class="mord">5</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">9</span><span class="mord">2</span><span class="mord">0</span></span></span></span><br>位，相当于将原始图像压缩约 6 倍。<br>把图像先reshape成m*3是因为3代表RGB通道，RGB通道三个列与颜色相关所以每个元素可用Kmeans算法压缩成16种颜色代替，m是总像素数按列取可取到每个像素，原来的图像形状为(128, 128, 3)三维<br>经测试，vscode和pycharm相对路径不统一，疑似vscode项目路径有问题<a href="https://blog.csdn.net/Bokman/article/details/108855175">因为我这里pycharm路径是对的</a><br>子函数run_kMeans编写有问题导致报错报错为处理图象时index溢出,原因是该函数的return 返回的变量名没改而前文的变量名改了，经测试该函数经过86次迭代收敛总代码为</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">from</span> utils2 <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line"><span class="comment"># %matplotlib inline</span></span><br><span class="line">X=load_data()</span><br><span class="line"><span class="comment">#test</span></span><br><span class="line"><span class="comment"># X1=X[:5]</span></span><br><span class="line"><span class="comment"># print(X1[1])</span></span><br><span class="line"><span class="comment"># print(X[1,0])</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># UNQ_C1</span></span><br><span class="line"><span class="comment"># GRADED FUNCTION: find_closest_centroids</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">find_closest_centroids</span>(<span class="params">X, centroids</span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    Computes the centroid memberships for every example</span></span><br><span class="line"><span class="string">    </span></span><br><span class="line"><span class="string">    Args:</span></span><br><span class="line"><span class="string">        X (ndarray): (m, n) Input values      </span></span><br><span class="line"><span class="string">        centroids (ndarray): k centroids</span></span><br><span class="line"><span class="string">    </span></span><br><span class="line"><span class="string">    Returns:</span></span><br><span class="line"><span class="string">        idx (array_like): (m,) closest centroids</span></span><br><span class="line"><span class="string">    </span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># Set K ，K is total number of centroids</span></span><br><span class="line">    K = centroids.shape[<span class="number">0</span>]</span><br><span class="line">    m,n=X.shape</span><br><span class="line">    <span class="comment"># You need to return the following variables correctly</span></span><br><span class="line">    idx = np.zeros(m, dtype=<span class="built_in">int</span>)</span><br><span class="line">    <span class="comment"># jvliz0=[]</span></span><br><span class="line">    <span class="comment"># jvliz0=np.zeros(K, dtype=int)</span></span><br><span class="line">    <span class="comment">### START CODE HERE ###</span></span><br><span class="line">    <span class="comment">#计算每个Xi到K个质心的距离，寻找最短的那个质心</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(m):</span><br><span class="line">        jvliz0=[] <span class="comment">#关键</span></span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(K):</span><br><span class="line">            <span class="comment"># jvli=float((X[i,0]-centroids[j,0])**2+(X[i,1]-centroids[j,1])**2)</span></span><br><span class="line">            jvli = np.linalg.norm(X[i] - centroids[j]) </span><br><span class="line">            <span class="comment">#jvli=np.sum(np.power((centroids-X[i]),2),1)</span></span><br><span class="line">            jvliz0.append(jvli)</span><br><span class="line">            <span class="comment"># jvliz0[j]=jvli</span></span><br><span class="line">            <span class="comment"># print(jvliz0)</span></span><br><span class="line">    </span><br><span class="line">        idx[i]=np.argmin(jvliz0)</span><br><span class="line"></span><br><span class="line">    <span class="comment">### END CODE HERE ###</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> idx</span><br><span class="line"><span class="comment"># Select an initial set of centroids (3 Centroids)</span></span><br><span class="line">initial_centroids = np.array([[<span class="number">3</span>,<span class="number">3</span>], [<span class="number">6</span>,<span class="number">2</span>], [<span class="number">8</span>,<span class="number">5</span>]])</span><br><span class="line"></span><br><span class="line"><span class="comment"># Find closest centroids using initial_centroids</span></span><br><span class="line">idx = find_closest_centroids(X, initial_centroids)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Print closest centroids for the first three elements</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;First three elements in idx are:&quot;</span>, idx[:<span class="number">3</span>])</span><br><span class="line"><span class="comment"># UNIT TEST</span></span><br><span class="line"><span class="keyword">from</span> public_tests2 <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line">find_closest_centroids_test(find_closest_centroids)</span><br><span class="line"><span class="comment"># K=10</span></span><br><span class="line"><span class="comment"># for i  in range(K):</span></span><br><span class="line"><span class="comment">#     exec(f&#x27;X_cz&#123;i&#125;=[1,2]&#x27;)</span></span><br><span class="line"><span class="comment"># print(X_cz0)</span></span><br><span class="line"><span class="comment"># UNQ_C2</span></span><br><span class="line"><span class="comment"># GRADED FUNCTION: compute_centpods</span></span><br><span class="line"><span class="comment"># points=X[idx==0]</span></span><br><span class="line"><span class="comment"># print(points)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">compute_centroids</span>(<span class="params">X, idx, K</span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    Returns the new centroids by computing the means of the </span></span><br><span class="line"><span class="string">    data points assigned to each centroid.</span></span><br><span class="line"><span class="string">    </span></span><br><span class="line"><span class="string">    Args:</span></span><br><span class="line"><span class="string">        X (ndarray):   (m, n) Data points</span></span><br><span class="line"><span class="string">        idx (ndarray): (m,) Array containing index of closest centroid for each </span></span><br><span class="line"><span class="string">                       example in X. Concretely, idx[i] contains the index of </span></span><br><span class="line"><span class="string">                       the centroid closest to example i</span></span><br><span class="line"><span class="string">        K (int):       number of centroids</span></span><br><span class="line"><span class="string">    </span></span><br><span class="line"><span class="string">    Returns:</span></span><br><span class="line"><span class="string">        centroids (ndarray): (K, n) New centroids computed</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment"># Useful variables</span></span><br><span class="line">    m, n = X.shape</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># You need to return the following variables correctly</span></span><br><span class="line">    centroids = np.zeros((K, n))</span><br><span class="line">    <span class="comment"># for i  in range(K):</span></span><br><span class="line">    <span class="comment">#     exec(f&#x27;X_cz&#123;i&#125;=[]&#x27;)</span></span><br><span class="line">    <span class="comment">### START CODE HERE ###</span></span><br><span class="line">    <span class="comment"># for i in range(m):</span></span><br><span class="line">    <span class="comment">#     for j in range(K):</span></span><br><span class="line">    <span class="comment">#         if idx[i]==j:</span></span><br><span class="line">    <span class="comment">#             exec(f&#x27;X_cz&#123;j&#125;.append(X[i])&#x27;)</span></span><br><span class="line">    <span class="keyword">for</span> k <span class="keyword">in</span> <span class="built_in">range</span>(K):</span><br><span class="line">        points=X[idx==k]</span><br><span class="line">        centroids[k] = np.mean(points, axis = <span class="number">0</span>)</span><br><span class="line">    <span class="comment">### END CODE HERE ## </span></span><br><span class="line">    <span class="keyword">return</span> centroids</span><br><span class="line">K = <span class="number">3</span></span><br><span class="line">centroids = compute_centroids(X, idx, K)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;The centroids are:&quot;</span>, centroids)</span><br><span class="line"><span class="comment"># You do not need to implement anything for this part</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">run_kMeans</span>(<span class="params">X, initial_centroids, max_iters=<span class="number">10</span>, plot_progress=<span class="literal">False</span></span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    Runs the K-Means algorithm on data matrix X, where each row of X</span></span><br><span class="line"><span class="string">    is a single example</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment"># Initialize values</span></span><br><span class="line">    m,n=X.shape</span><br><span class="line">    K=initial_centroids.shape[<span class="number">0</span>]</span><br><span class="line">    centroidsnow=initial_centroids</span><br><span class="line">    centroidsold=centroidsnow</span><br><span class="line"></span><br><span class="line">    idx = np.zeros(m)</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># Run K-Means</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(max_iters):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;当前迭代次数<span class="subst">&#123;i+<span class="number">1</span>&#125;</span>，最大次数<span class="subst">&#123;max_iters&#125;</span>,预计还剩<span class="subst">&#123;max_iters-i-<span class="number">1</span>&#125;</span>次&quot;</span>)</span><br><span class="line">        idx=find_closest_centroids(X, centroidsnow)</span><br><span class="line">        centroidsold=centroidsnow</span><br><span class="line">        centroidsnow = compute_centroids(X, idx, K)</span><br><span class="line">        <span class="comment">#打印比较质心位置以判断收敛情况</span></span><br><span class="line">        <span class="built_in">print</span>(centroidsnow==centroidsold)</span><br><span class="line"></span><br><span class="line">         <span class="comment"># Optionally plot progress</span></span><br><span class="line">        <span class="keyword">if</span> plot_progress:</span><br><span class="line">            plot_progress_kMeans(X, centroidsnow, centroidsold, idx, K, i+<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (centroidsnow-centroidsold).<span class="built_in">any</span>()==<span class="literal">False</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">f&quot;共迭代<span class="subst">&#123;i+<span class="number">1</span>&#125;</span>次收敛&quot;</span>)</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line">        </span><br><span class="line">     </span><br><span class="line"></span><br><span class="line">        <span class="comment"># Initialize values</span></span><br><span class="line">    <span class="comment"># m, n = X.shape</span></span><br><span class="line">    <span class="comment"># K = initial_centroids.shape[0]</span></span><br><span class="line">    <span class="comment"># centroids = initial_centroids</span></span><br><span class="line">    <span class="comment"># previous_centroids = centroids</span></span><br><span class="line">    <span class="comment"># idx = np.zeros(m)</span></span><br><span class="line">    <span class="comment">#</span></span><br><span class="line">    <span class="comment"># # Run K-Means</span></span><br><span class="line">    <span class="comment"># for i in range(max_iters):</span></span><br><span class="line">    <span class="comment">#</span></span><br><span class="line">    <span class="comment">#     #Output progress</span></span><br><span class="line">    <span class="comment">#     print(&quot;K-Means iteration %d/%d&quot; % (i, max_iters-1))</span></span><br><span class="line">    <span class="comment">#</span></span><br><span class="line">    <span class="comment">#     # For each example in X, assign it to the closest centroid</span></span><br><span class="line">    <span class="comment">#     idx = find_closest_centroids(X, centroids)</span></span><br><span class="line">    <span class="comment">#</span></span><br><span class="line">    <span class="comment">#     # Optionally plot progress</span></span><br><span class="line">    <span class="comment">#     if plot_progress:</span></span><br><span class="line">    <span class="comment">#         plot_progress_kMeans(X, centroids, previous_centroids, idx, K, i)</span></span><br><span class="line">    <span class="comment">#         previous_centroids = centroids</span></span><br><span class="line">    <span class="comment">#</span></span><br><span class="line">    <span class="comment">#     # Given the memberships, compute new centroids</span></span><br><span class="line">    <span class="comment">#     centroids = compute_centroids(X, idx, K)</span></span><br><span class="line">    plt.show()</span><br><span class="line">    <span class="keyword">return</span> centroidsnow, idx</span><br><span class="line"><span class="comment"># Load an example dataset</span></span><br><span class="line">X = load_data()</span><br><span class="line"></span><br><span class="line"><span class="comment"># Set initial centroids</span></span><br><span class="line">initial_centroids = np.array([[<span class="number">3</span>,<span class="number">3</span>],[<span class="number">6</span>,<span class="number">2</span>],[<span class="number">8</span>,<span class="number">5</span>]])</span><br><span class="line"><span class="comment">#K = 3</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Number of iterations</span></span><br><span class="line">max_iters = <span class="number">10</span></span><br><span class="line"></span><br><span class="line">centroids, idx = run_kMeans(X, initial_centroids, max_iters, plot_progress=<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># You do not need to modify this part</span></span><br><span class="line"><span class="comment"># 这个随机算法是先把X打乱然后把前K个X直接作为初试质心</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">kMeans_init_centroids</span>(<span class="params">X, K</span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    This function initializes K centroids that are to be </span></span><br><span class="line"><span class="string">    used in K-Means on the dataset X</span></span><br><span class="line"><span class="string">    </span></span><br><span class="line"><span class="string">    Args:</span></span><br><span class="line"><span class="string">        X (ndarray): Data points </span></span><br><span class="line"><span class="string">        K (int):     number of centroids/clusters</span></span><br><span class="line"><span class="string">    </span></span><br><span class="line"><span class="string">    Returns:</span></span><br><span class="line"><span class="string">        centroids (ndarray): Initialized centroids</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment"># Randomly reorder the indices of examples</span></span><br><span class="line">    randidx = np.random.permutation(X.shape[<span class="number">0</span>])</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># Take the first K examples as centroids</span></span><br><span class="line">    centroids = X[randidx[:K]]</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> centroids</span><br><span class="line"><span class="comment"># Load an image of a bird这一步只是加载而已</span></span><br><span class="line">original_img = plt.imread(<span class="string">&#x27;./data/bird_small.png&#x27;</span>)</span><br><span class="line"><span class="comment"># 可视化图像</span></span><br><span class="line"><span class="comment">#您可以使用下面的代码可视化刚刚加载的图像</span></span><br><span class="line">plt.imshow(original_img)</span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">检查变量的维度</span></span><br><span class="line"><span class="string">与往常一样，您将打印出变量的形状以更熟悉数据。</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;Shape of original_img is:&quot;</span>, original_img.shape)</span><br><span class="line"><span class="comment"># Divide by 255 so that all values are in the range 0 - 1</span></span><br><span class="line">original_img = original_img / <span class="number">255</span></span><br><span class="line"><span class="comment"># Reshape the image into an m x 3 matrix where m = number of pixels</span></span><br><span class="line"><span class="comment"># (in this case m = 128 x 128 = 16384)</span></span><br><span class="line"><span class="comment"># Each row will contain the Red, Green and Blue pixel values</span></span><br><span class="line"><span class="comment"># This gives us our dataset matrix X_img that we will use K-Means on.</span></span><br><span class="line"><span class="comment"># X_img大小为m*3 *3是因为R G B三个通道  </span></span><br><span class="line">X_img = np.reshape(original_img, (original_img.shape[<span class="number">0</span>] * original_img.shape[<span class="number">1</span>], <span class="number">3</span>))</span><br><span class="line"><span class="comment"># Run your K-Means algorithm on this data</span></span><br><span class="line"><span class="comment"># You should try different values of K and max_iters here</span></span><br><span class="line">K = <span class="number">16</span>                       </span><br><span class="line">max_iters = <span class="number">100</span></span><br><span class="line"><span class="comment"># Using the function you have implemented above. </span></span><br><span class="line">initial_centroids_t=kMeans_init_centroids(X_img,K)</span><br><span class="line"><span class="comment"># Run K-Means - this takes a couple of minutes</span></span><br><span class="line">centroids_t,idx_t=run_kMeans(X_img,initial_centroids_t,max_iters)</span><br><span class="line"><span class="comment"># idx_t=find_closest_centroids(X_img,centroids_t)</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;Shape of idx_t:&quot;</span>, idx_t.shape)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;Closest centroid for the first five elements:&quot;</span>, idx_t[:<span class="number">5</span>])</span><br><span class="line"><span class="comment"># Represent image in terms of indices</span></span><br><span class="line">X_recovered = centroids_t[idx_t,:] </span><br><span class="line"><span class="comment"># Reshape recovered image into proper dimensions</span></span><br><span class="line">X_recovered = np.reshape(X_recovered, original_img.shape) </span><br><span class="line"><span class="comment"># Display original image</span></span><br><span class="line">fig, ax = plt.subplots(<span class="number">1</span>,<span class="number">2</span>, figsize=(<span class="number">8</span>,<span class="number">8</span>))</span><br><span class="line">plt.axis(<span class="string">&#x27;off&#x27;</span>)</span><br><span class="line"></span><br><span class="line">ax[<span class="number">0</span>].imshow(original_img*<span class="number">255</span>)</span><br><span class="line">ax[<span class="number">0</span>].set_title(<span class="string">&#x27;Original&#x27;</span>)</span><br><span class="line">ax[<span class="number">0</span>].set_axis_off()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># Display compressed image</span></span><br><span class="line">ax[<span class="number">1</span>].imshow(X_recovered*<span class="number">255</span>)</span><br><span class="line">ax[<span class="number">1</span>].set_title(<span class="string">&#x27;Compressed with %d colours&#x27;</span>%K)</span><br><span class="line">ax[<span class="number">1</span>].set_axis_off()</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><h3 id="异常检测与监督学习对比">异常检测与监督学习对比</h3><p>异常检测包括检测是否存在一种<strong>全新</strong>的飞机发动机故障方式，这在您的数据集中从未见过  当你理想地应用监督学习时，你会希望有足够多的正面例子让算法了解正面例子<br>是什么样的，通过监督学习，我们倾向于假设未来的正例很可能与训练集中的正例相似，而不是一种全新的错误（正例）。</p><h1 id="协作过滤推荐系统">协作过滤推荐系统</h1><p>有点类似之前的线性回归预测房价，这里是根据用户的喜好w和电影特征x^i预测用户对该片的打分<br>符号：<br>|General <br />  Notation  | Description| Python (if any) |<br>|:-------------|:------------------------------------------------------------||<br>| <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>r</mi><mo stretchy="false">(</mo><mi>i</mi><mo separator="true">,</mo><mi>j</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">r(i,j)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mopen">(</span><span class="mord mathdefault">i</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.05724em;">j</span><span class="mclose">)</span></span></span></span>     | scalar; = 1  if user j rated game i  = 0  otherwise             ||<br>| <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>y</mi><mo stretchy="false">(</mo><mi>i</mi><mo separator="true">,</mo><mi>j</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">y(i,j)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mopen">(</span><span class="mord mathdefault">i</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.05724em;">j</span><span class="mclose">)</span></span></span></span>     | scalar; = rating given by user j on game  i    (if r(i,j) = 1 is defined) ||<br>|<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi mathvariant="bold">w</mi><mrow><mo stretchy="false">(</mo><mi>j</mi><mo stretchy="false">)</mo></mrow></msup></mrow><annotation encoding="application/x-tex">\mathbf{w}^{(j)}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8879999999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord"><span class="mord mathbf" style="margin-right:0.01597em;">w</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8879999999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span></span></span></span> | vector; parameters for user j ||<br>|<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>b</mi><mrow><mo stretchy="false">(</mo><mi>j</mi><mo stretchy="false">)</mo></mrow></msup></mrow><annotation encoding="application/x-tex">b^{(j)}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8879999999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault">b</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8879999999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span></span></span></span>     |  scalar; parameter for user j ||<br>| <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi mathvariant="bold">x</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup></mrow><annotation encoding="application/x-tex">\mathbf{x}^{(i)}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8879999999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord"><span class="mord mathbf">x</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8879999999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathdefault mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span></span></span></span> |   vector; feature ratings for movie i        ||<br>| <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>n</mi><mi>u</mi></msub></mrow><annotation encoding="application/x-tex">n_u</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">n</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">u</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>        | number of users |num_users|<br>| <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>n</mi><mi>m</mi></msub></mrow><annotation encoding="application/x-tex">n_m</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">n</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">m</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>        | number of movies | num_movies |<br>| <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">n</span></span></span></span>          | number of features | num_features                    |<br>| <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="bold">X</mi></mrow><annotation encoding="application/x-tex">\mathbf{X}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68611em;vertical-align:0em;"></span><span class="mord"><span class="mord mathbf">X</span></span></span></span></span> |  matrix of vectors <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi mathvariant="bold">x</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup></mrow><annotation encoding="application/x-tex">\mathbf{x}^{(i)}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8879999999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord"><span class="mord mathbf">x</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8879999999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathdefault mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span></span></span></span>         | X |<br>| <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="bold">W</mi></mrow><annotation encoding="application/x-tex">\mathbf{W}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68611em;vertical-align:0em;"></span><span class="mord"><span class="mord mathbf" style="margin-right:0.01597em;">W</span></span></span></span></span> |  matrix of vectors <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi mathvariant="bold">w</mi><mrow><mo stretchy="false">(</mo><mi>j</mi><mo stretchy="false">)</mo></mrow></msup></mrow><annotation encoding="application/x-tex">\mathbf{w}^{(j)}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8879999999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord"><span class="mord mathbf" style="margin-right:0.01597em;">w</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8879999999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span></span></span></span>         | W |<br>| <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="bold">b</mi></mrow><annotation encoding="application/x-tex">\mathbf{b}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord"><span class="mord mathbf">b</span></span></span></span></span> |  vector of bias parameters <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>b</mi><mrow><mo stretchy="false">(</mo><mi>j</mi><mo stretchy="false">)</mo></mrow></msup></mrow><annotation encoding="application/x-tex">b^{(j)}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8879999999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault">b</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8879999999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span></span></span></span> | b |<br>| <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="bold">R</mi></mrow><annotation encoding="application/x-tex">\mathbf{R}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68611em;vertical-align:0em;"></span><span class="mord"><span class="mord mathbf">R</span></span></span></span></span> | matrix of elements <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>r</mi><mo stretchy="false">(</mo><mi>i</mi><mo separator="true">,</mo><mi>j</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">r(i,j)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mopen">(</span><span class="mord mathdefault">i</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.05724em;">j</span><span class="mclose">)</span></span></span></span>                    | R |<br>2 - 推荐系统Image<br>在本实验中，您将实现协作过滤学习算法，并将其应用于电影分级数据集。 协作过滤推荐系统的目标是生成两个向量：对于每个用户，一个体现用户电影品味的“参数向量”。对于每部电影，一个相同大小的特征向量，它体现了电影的一些描述。两个向量的点积加上偏差项应产生用户可能对该电影的评分的估计值。<br>下图详细介绍了如何学习这些向量。<br>现有评级以矩阵形式提供，如图所示。<br>Y包含评级;0.5 到 5 分，分 0.5 步进。如果电影尚未评级，则为 0。<br>R电影评分为 1。电影在行中，用户在列中。每个用户都有一个参数向量<br><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>w</mi><mrow><mi>u</mi><mi>s</mi><mi>e</mi><mi>r</mi></mrow></msup></mrow><annotation encoding="application/x-tex">w^{user}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.664392em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">u</span><span class="mord mathdefault mtight">s</span><span class="mord mathdefault mtight">e</span><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span></span></span></span></span></span></span></span></span></span></span></span> 和偏见。每部电影都有一个特征向量<br>.通过使用现有的用户/电影评级作为训练数据来同时学习这些向量。上面显示了一个训练示例： <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi mathvariant="bold">w</mi><mrow><mo stretchy="false">(</mo><mn>1</mn><mo stretchy="false">)</mo></mrow></msup><mo>⋅</mo><msup><mi mathvariant="bold">x</mi><mrow><mo stretchy="false">(</mo><mn>1</mn><mo stretchy="false">)</mo></mrow></msup><mo>+</mo><msup><mi>b</mi><mrow><mo stretchy="false">(</mo><mn>1</mn><mo stretchy="false">)</mo></mrow></msup><mo>=</mo><mn>4</mn></mrow><annotation encoding="application/x-tex">\mathbf{w}^{(1)} \cdot \mathbf{x}^{(1)} + b^{(1)} = 4</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8879999999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord"><span class="mord mathbf" style="margin-right:0.01597em;">w</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8879999999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mtight">1</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.9713299999999999em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord"><span class="mord mathbf">x</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8879999999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mtight">1</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8879999999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault">b</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8879999999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mtight">1</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">4</span></span></span></span><br>.值得注意的是，特征向量<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>x</mi><mrow><mi>m</mi><mi>o</mi><mi>v</mi><mi>i</mi><mi>e</mi></mrow></msup></mrow><annotation encoding="application/x-tex">x^{movie}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.824664em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.824664em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">m</span><span class="mord mathdefault mtight">o</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">v</span><span class="mord mathdefault mtight">i</span><span class="mord mathdefault mtight">e</span></span></span></span></span></span></span></span></span></span></span></span><br>必须满足所有用户，而用户向量<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>w</mi><mrow><mi>u</mi><mi>s</mi><mi>e</mi><mi>r</mi></mrow></msup></mrow><annotation encoding="application/x-tex">w^{user}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.664392em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">u</span><span class="mord mathdefault mtight">s</span><span class="mord mathdefault mtight">e</span><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span></span></span></span></span></span></span></span></span></span></span></span>必须满足所有电影，也就是用户向量<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>w</mi><mrow><mi>u</mi><mi>s</mi><mi>e</mi><mi>r</mi></mrow></msup></mrow><annotation encoding="application/x-tex">w^{user}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.664392em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">u</span><span class="mord mathdefault mtight">s</span><span class="mord mathdefault mtight">e</span><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span></span></span></span></span></span></span></span></span></span></span></span>的维数和特征向量<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>x</mi><mrow><mi>m</mi><mi>o</mi><mi>v</mi><mi>i</mi><mi>e</mi></mrow></msup></mrow><annotation encoding="application/x-tex">x^{movie}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.824664em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.824664em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">m</span><span class="mord mathdefault mtight">o</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">v</span><span class="mord mathdefault mtight">i</span><span class="mord mathdefault mtight">e</span></span></span></span></span></span></span></span></span></span></span></span> 的特征数相同，使其支持正常内积。这是此方法名称的来源 - 所有用户协作生成评级集。<br>一旦学习了特征向量和参数，它们就可以用来预测用户如何对未分级的电影进行评分。如上图所示。该等式是预测用户 1 对电影零的评分的示例。<br>在本练习中，您将实现计算协同过滤的函数 目标函数。实现目标函数后，您将使用 TensorFlow 自定义训练循环来学习用于协同过滤的参数。第一步是详细说明将在实验室中使用的数据集和数据结构。</p><p>3 - 电影评分数据集图像<br>该数据集派生自 MovieLens“ml-latest-small”数据集。<br>[F.麦克斯韦·哈珀和约瑟夫·康斯坦。2015. MovieLens 数据集：历史和背景。ACM 交互式智能系统汇刊 （TiiS） 5， 4： 19：1–19：19.https://doi.org/10.1145/2827872]</p><p>原始数据集有 9000 部电影，由 600 位用户评分。自 2000 年以来，数据集的大小已缩小，以专注于 0 年以来的电影。该数据集由 5.5 到 0 的评分组成，以 5.&lt;&gt; 步为增量。缩减后的数据集具有 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>n</mi><mi>u</mi></msub><mo>=</mo><mn>443</mn></mrow><annotation encoding="application/x-tex">n_u = 443</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">n</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">u</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">4</span><span class="mord">4</span><span class="mord">3</span></span></span></span> users 和 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>n</mi><mi>m</mi></msub><mo>=</mo><mn>4778</mn></mrow><annotation encoding="application/x-tex">n_m= 4778</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">n</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">m</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">4</span><span class="mord">7</span><span class="mord">7</span><span class="mord">8</span></span></span></span> 电影。<br>下面，您将电影数据集加载到变量中 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>Y</mi></mrow><annotation encoding="application/x-tex">Y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.22222em;">Y</span></span></span></span> 和 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>R</mi></mrow><annotation encoding="application/x-tex">R</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.00773em;">R</span></span></span></span><br>矩阵 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>Y</mi></mrow><annotation encoding="application/x-tex">Y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.22222em;">Y</span></span></span></span> （一 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>n</mi><mi>m</mi></msub><mo>×</mo><msub><mi>n</mi><mi>u</mi></msub></mrow><annotation encoding="application/x-tex">n_m \times n_u</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.73333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">n</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">m</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">n</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">u</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> matrix） 存储评级  <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>y</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo separator="true">,</mo><mi>j</mi><mo stretchy="false">)</mo></mrow></msup></mrow><annotation encoding="application/x-tex">y^{(i,j)}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0824399999999998em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8879999999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathdefault mtight">i</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span></span></span></span>.矩阵<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>R</mi></mrow><annotation encoding="application/x-tex">R</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.00773em;">R</span></span></span></span><br>是一个二值指标矩阵，其中 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>R</mi><mo stretchy="false">(</mo><mi>i</mi><mo separator="true">,</mo><mi>j</mi><mo stretchy="false">)</mo><mo>=</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">R(i,j) = 1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="mopen">(</span><span class="mord mathdefault">i</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.05724em;">j</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span> 如果用户 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>j</mi></mrow><annotation encoding="application/x-tex">j</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.85396em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.05724em;">j</span></span></span></span> 评价了电影 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.65952em;vertical-align:0em;"></span><span class="mord mathdefault">i</span></span></span></span> 和 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>R</mi><mo stretchy="false">(</mo><mi>i</mi><mo separator="true">,</mo><mi>j</mi><mo stretchy="false">)</mo><mo>=</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">R(i,j)=0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="mopen">(</span><span class="mord mathdefault">i</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.05724em;">j</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span></span></span></span> 否则。<br>在本部分练习中，您还将使用 矩阵, <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="bold">X</mi></mrow><annotation encoding="application/x-tex">\mathbf{X}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68611em;vertical-align:0em;"></span><span class="mord"><span class="mord mathbf">X</span></span></span></span></span>, <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="bold">W</mi></mrow><annotation encoding="application/x-tex">\mathbf{W}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68611em;vertical-align:0em;"></span><span class="mord"><span class="mord mathbf" style="margin-right:0.01597em;">W</span></span></span></span></span> 和 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="bold">b</mi></mrow><annotation encoding="application/x-tex">\mathbf{b}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord"><span class="mord mathbf">b</span></span></span></span></span> :</p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="bold">X</mi><mo>=</mo><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo>−</mo><mo>−</mo><mo>−</mo><mo stretchy="false">(</mo><msup><mi mathvariant="bold">x</mi><mrow><mo stretchy="false">(</mo><mn>0</mn><mo stretchy="false">)</mo></mrow></msup><msup><mo stretchy="false">)</mo><mi>T</mi></msup><mo>−</mo><mo>−</mo><mo>−</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo>−</mo><mo>−</mo><mo>−</mo><mo stretchy="false">(</mo><msup><mi mathvariant="bold">x</mi><mrow><mo stretchy="false">(</mo><mn>1</mn><mo stretchy="false">)</mo></mrow></msup><msup><mo stretchy="false">)</mo><mi>T</mi></msup><mo>−</mo><mo>−</mo><mo>−</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mi><mi mathvariant="normal">⋮</mi><mpadded height="+0em" voffset="0em"><mspace mathbackground="black" width="0em" height="1.5em"></mspace></mpadded></mi></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo>−</mo><mo>−</mo><mo>−</mo><mo stretchy="false">(</mo><msup><mi mathvariant="bold">x</mi><mrow><mo stretchy="false">(</mo><msub><mi>n</mi><mi>m</mi></msub><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo></mrow></msup><msup><mo stretchy="false">)</mo><mi>T</mi></msup><mo>−</mo><mo>−</mo><mo>−</mo></mrow></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow><mo separator="true">,</mo><mspace width="1em"/><mi mathvariant="bold">W</mi><mo>=</mo><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo>−</mo><mo>−</mo><mo>−</mo><mo stretchy="false">(</mo><msup><mi mathvariant="bold">w</mi><mrow><mo stretchy="false">(</mo><mn>0</mn><mo stretchy="false">)</mo></mrow></msup><msup><mo stretchy="false">)</mo><mi>T</mi></msup><mo>−</mo><mo>−</mo><mo>−</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo>−</mo><mo>−</mo><mo>−</mo><mo stretchy="false">(</mo><msup><mi mathvariant="bold">w</mi><mrow><mo stretchy="false">(</mo><mn>1</mn><mo stretchy="false">)</mo></mrow></msup><msup><mo stretchy="false">)</mo><mi>T</mi></msup><mo>−</mo><mo>−</mo><mo>−</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mi><mi mathvariant="normal">⋮</mi><mpadded height="+0em" voffset="0em"><mspace mathbackground="black" width="0em" height="1.5em"></mspace></mpadded></mi></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo>−</mo><mo>−</mo><mo>−</mo><mo stretchy="false">(</mo><msup><mi mathvariant="bold">w</mi><mrow><mo stretchy="false">(</mo><msub><mi>n</mi><mi>u</mi></msub><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo></mrow></msup><msup><mo stretchy="false">)</mo><mi>T</mi></msup><mo>−</mo><mo>−</mo><mo>−</mo></mrow></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow><mo separator="true">,</mo><mspace width="1em"/><mi mathvariant="bold">b</mi><mo>=</mo><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msup><mi>b</mi><mrow><mo stretchy="false">(</mo><mn>0</mn><mo stretchy="false">)</mo></mrow></msup></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msup><mi>b</mi><mrow><mo stretchy="false">(</mo><mn>1</mn><mo stretchy="false">)</mo></mrow></msup></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mi><mi mathvariant="normal">⋮</mi><mpadded height="+0em" voffset="0em"><mspace mathbackground="black" width="0em" height="1.5em"></mspace></mpadded></mi></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msup><mi>b</mi><mrow><mo stretchy="false">(</mo><msub><mi>n</mi><mi>u</mi></msub><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo></mrow></msup></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow><mspace width="1em"/></mrow><annotation encoding="application/x-tex">\mathbf{X} = \begin{bmatrix}--- (\mathbf{x}^{(0)})^T --- \\--- (\mathbf{x}^{(1)})^T --- \\\vdots \\--- (\mathbf{x}^{(n_m-1)})^T --- \\\end{bmatrix} , \quad\mathbf{W} = \begin{bmatrix}--- (\mathbf{w}^{(0)})^T --- \\--- (\mathbf{w}^{(1)})^T --- \\\vdots \\--- (\mathbf{w}^{(n_u-1)})^T --- \\\end{bmatrix},\quad\mathbf{ b} = \begin{bmatrix} b^{(0)}  \\ b^{(1)} \\\vdots \\b^{(n_u-1)} \\\end{bmatrix}\quad</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68611em;vertical-align:0em;"></span><span class="mord"><span class="mord mathbf">X</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:5.603999999999999em;vertical-align:-2.5519999999999996em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.953995em;"><span style="top:-1.3499850000000007em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎣</span></span></span><span style="top:-2.4999850000000006em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-3.0959850000000007em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-3.6919850000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-3.712975em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-4.953995em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎡</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.4500349999999997em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.052em;"><span style="top:-5.851500000000001em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord">−</span><span class="mopen">(</span><span class="mord"><span class="mord"><span class="mord mathbf">x</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8879999999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mtight">0</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord">−</span><span class="mord">−</span></span></span><span style="top:-4.6034999999999995em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord">−</span><span class="mopen">(</span><span class="mord"><span class="mord"><span class="mord mathbf">x</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8879999999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mtight">1</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord">−</span><span class="mord">−</span></span></span><span style="top:-2.7434999999999996em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord"><span class="mord">⋮</span><span class="mord rule" style="border-right-width:0em;border-top-width:1.5em;bottom:0em;"></span></span></span></span><span style="top:-1.4955000000000005em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord">−</span><span class="mopen">(</span><span class="mord"><span class="mord"><span class="mord mathbf">x</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8879999999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mtight"><span class="mord mathdefault mtight">n</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16454285714285719em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight">m</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mbin mtight">−</span><span class="mord mtight">1</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord">−</span><span class="mord">−</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.5519999999999996em;"><span></span></span></span></span></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.953995em;"><span style="top:-1.3499850000000007em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎦</span></span></span><span style="top:-2.4999850000000006em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-3.0959850000000007em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-3.6919850000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-3.712975em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-4.953995em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎤</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.4500349999999997em;"><span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:1em;"></span><span class="mord"><span class="mord mathbf" style="margin-right:0.01597em;">W</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:5.603999999999999em;vertical-align:-2.5519999999999996em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.953995em;"><span style="top:-1.3499850000000007em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎣</span></span></span><span style="top:-2.4999850000000006em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-3.0959850000000007em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-3.6919850000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-3.712975em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-4.953995em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎡</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.4500349999999997em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.052em;"><span style="top:-5.851500000000001em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord">−</span><span class="mopen">(</span><span class="mord"><span class="mord"><span class="mord mathbf" style="margin-right:0.01597em;">w</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8879999999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mtight">0</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord">−</span><span class="mord">−</span></span></span><span style="top:-4.6034999999999995em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord">−</span><span class="mopen">(</span><span class="mord"><span class="mord"><span class="mord mathbf" style="margin-right:0.01597em;">w</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8879999999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mtight">1</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord">−</span><span class="mord">−</span></span></span><span style="top:-2.7434999999999996em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord"><span class="mord">⋮</span><span class="mord rule" style="border-right-width:0em;border-top-width:1.5em;bottom:0em;"></span></span></span></span><span style="top:-1.4955000000000005em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord">−</span><span class="mopen">(</span><span class="mord"><span class="mord"><span class="mord mathbf" style="margin-right:0.01597em;">w</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8879999999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mtight"><span class="mord mathdefault mtight">n</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16454285714285719em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight">u</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mbin mtight">−</span><span class="mord mtight">1</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord">−</span><span class="mord">−</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.5519999999999996em;"><span></span></span></span></span></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.953995em;"><span style="top:-1.3499850000000007em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎦</span></span></span><span style="top:-2.4999850000000006em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-3.0959850000000007em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-3.6919850000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-3.712975em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-4.953995em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎤</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.4500349999999997em;"><span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:1em;"></span><span class="mord"><span class="mord mathbf">b</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:5.603999999999999em;vertical-align:-2.5519999999999996em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.953995em;"><span style="top:-1.3499850000000007em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎣</span></span></span><span style="top:-2.4999850000000006em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-3.0959850000000007em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-3.6919850000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-3.712975em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-4.953995em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎡</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.4500349999999997em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.052em;"><span style="top:-5.851500000000001em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">b</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8879999999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mtight">0</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span></span></span><span style="top:-4.6034999999999995em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">b</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8879999999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mtight">1</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span></span></span><span style="top:-2.7434999999999996em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord"><span class="mord">⋮</span><span class="mord rule" style="border-right-width:0em;border-top-width:1.5em;bottom:0em;"></span></span></span></span><span style="top:-1.4955000000000005em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">b</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8879999999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mtight"><span class="mord mathdefault mtight">n</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16454285714285719em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight">u</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mbin mtight">−</span><span class="mord mtight">1</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.5519999999999996em;"><span></span></span></span></span></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.953995em;"><span style="top:-1.3499850000000007em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎦</span></span></span><span style="top:-2.4999850000000006em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-3.0959850000000007em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-3.6919850000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-3.712975em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-4.953995em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎤</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.4500349999999997em;"><span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:1em;"></span></span></span></span></span></p><p>我们将从加载电影收视率数据集开始，以了解数据的结构。我们将加载Y和R替换为电影数据集。<br>我们还将加载X，W和b使用预先计算的值。这些值将在稍后的实验室中学习，但我们将使用预先计算的值来开发成本模型。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#  From the matrix, we can compute statistics like average rating.</span></span><br><span class="line">a=Y[<span class="number">0</span>, R[<span class="number">0</span>, :].astype(<span class="built_in">bool</span>)]</span><br><span class="line"><span class="built_in">print</span>(a)</span><br><span class="line">tsmean =  np.mean(a)</span><br></pre></td></tr></table></figure><p>上面语句的作用难以理解用嵌套法逐一击破：<br>.astype(bool)是什么意思？<br>正如astype的中文意思，作为布尔类型，也就是true or false<br>R中的列数与W的行数也就是用户数一致,R中数据也只有0/1推测R是代表用户是否评价了这部电影的标记，<code>R[0, :].astype(bool)</code>中的TRUE数量正好是5个，a最后输出的元素也是5个<br>np.array可使用 shape。而对于列表list，却不能使用shape.T1、将列表转为array格式，然后使用shape即可！list_shape = np.array(list_01).shape<br>如果R[0, :].astype(bool)全为False则a没有输出也就是a为Nan,因此可知Y[0, R[0, :].astype(bool)]是对应Y数组第0行，443列中对应R[0, :].astype(bool)为TRUE的列也就是参与评分用户中给电影1的评分情况。<br>4 - 协同过滤学习算法图像<br>现在，您将开始实施协作过滤学习 算法。您将从实现目标函数开始。</p><p>电影设置中的协同过滤算法 建议考虑了一组n<br>-维参数向量 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi mathvariant="bold">x</mi><mrow><mo stretchy="false">(</mo><mn>0</mn><mo stretchy="false">)</mo></mrow></msup><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo separator="true">,</mo><msup><mi mathvariant="bold">x</mi><mrow><mo stretchy="false">(</mo><msub><mi>n</mi><mi>m</mi></msub><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo></mrow></msup></mrow><annotation encoding="application/x-tex">\mathbf{x}^{(0)},...,\mathbf{x}^{(n_m-1)}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0824399999999998em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord"><span class="mord mathbf">x</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8879999999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mtight">0</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">.</span><span class="mord">.</span><span class="mord">.</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord"><span class="mord mathbf">x</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8879999999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mtight"><span class="mord mathdefault mtight">n</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16454285714285719em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight">m</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mbin mtight">−</span><span class="mord mtight">1</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span></span></span></span> ,<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi mathvariant="bold">w</mi><mrow><mo stretchy="false">(</mo><mn>0</mn><mo stretchy="false">)</mo></mrow></msup><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo separator="true">,</mo><msup><mi mathvariant="bold">w</mi><mrow><mo stretchy="false">(</mo><msub><mi>n</mi><mi>u</mi></msub><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo></mrow></msup></mrow><annotation encoding="application/x-tex">\mathbf{w}^{(0)},...,\mathbf{w}^{(n_u-1)}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0824399999999998em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord"><span class="mord mathbf" style="margin-right:0.01597em;">w</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8879999999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mtight">0</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">.</span><span class="mord">.</span><span class="mord">.</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord"><span class="mord mathbf" style="margin-right:0.01597em;">w</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8879999999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mtight"><span class="mord mathdefault mtight">n</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16454285714285719em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight">u</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mbin mtight">−</span><span class="mord mtight">1</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span></span></span></span><br>和 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>b</mi><mrow><mo stretchy="false">(</mo><mn>0</mn><mo stretchy="false">)</mo></mrow></msup><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo separator="true">,</mo><msup><mi>b</mi><mrow><mo stretchy="false">(</mo><msub><mi>n</mi><mi>u</mi></msub><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo></mrow></msup></mrow><annotation encoding="application/x-tex">b^{(0)},...,b^{(n_u-1)}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0824399999999998em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault">b</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8879999999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mtight">0</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">.</span><span class="mord">.</span><span class="mord">.</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">b</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8879999999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mtight"><span class="mord mathdefault mtight">n</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16454285714285719em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight">u</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mbin mtight">−</span><span class="mord mtight">1</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span></span></span></span><br>，其中 模型预测电影的分级 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.65952em;vertical-align:0em;"></span><span class="mord mathdefault">i</span></span></span></span><br>按用户j<br>如 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>y</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo separator="true">,</mo><mi>j</mi><mo stretchy="false">)</mo></mrow></msup><mo>=</mo><msup><mi mathvariant="bold">w</mi><mrow><mo stretchy="false">(</mo><mi>j</mi><mo stretchy="false">)</mo></mrow></msup><mo>⋅</mo><msup><mi mathvariant="bold">x</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><mo>+</mo><msup><mi>b</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup></mrow><annotation encoding="application/x-tex">y^{(i,j)} = \mathbf{w}^{(j)}\cdot \mathbf{x}^{(i)} + b^{(i)}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0824399999999998em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8879999999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathdefault mtight">i</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8879999999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord"><span class="mord mathbf" style="margin-right:0.01597em;">w</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8879999999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.9713299999999999em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord"><span class="mord mathbf">x</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8879999999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathdefault mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8879999999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault">b</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8879999999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathdefault mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span></span></span></span><br>.给定一个数据集，其中包含 一些用户对某些电影产生的一组评分，你希望 了解参数向量  <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi mathvariant="bold">x</mi><mrow><mo stretchy="false">(</mo><mn>0</mn><mo stretchy="false">)</mo></mrow></msup><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo separator="true">,</mo><msup><mi mathvariant="bold">x</mi><mrow><mo stretchy="false">(</mo><msub><mi>n</mi><mi>m</mi></msub><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo></mrow></msup><mo separator="true">,</mo><msup><mi mathvariant="bold">w</mi><mrow><mo stretchy="false">(</mo><mn>0</mn><mo stretchy="false">)</mo></mrow></msup><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo separator="true">,</mo><msup><mi mathvariant="bold">w</mi><mrow><mo stretchy="false">(</mo><msub><mi>n</mi><mi>u</mi></msub><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo></mrow></msup></mrow><annotation encoding="application/x-tex">\mathbf{x}^{(0)},...,\mathbf{x}^{(n_m-1)},\mathbf{w}^{(0)},...,\mathbf{w}^{(n_u-1)}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0824399999999998em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord"><span class="mord mathbf">x</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8879999999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mtight">0</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">.</span><span class="mord">.</span><span class="mord">.</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord"><span class="mord mathbf">x</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8879999999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mtight"><span class="mord mathdefault mtight">n</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16454285714285719em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight">m</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mbin mtight">−</span><span class="mord mtight">1</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord"><span class="mord mathbf" style="margin-right:0.01597em;">w</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8879999999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mtight">0</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">.</span><span class="mord">.</span><span class="mord">.</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord"><span class="mord mathbf" style="margin-right:0.01597em;">w</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8879999999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mtight"><span class="mord mathdefault mtight">n</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16454285714285719em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight">u</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mbin mtight">−</span><span class="mord mtight">1</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span></span></span></span> 和 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>b</mi><mrow><mo stretchy="false">(</mo><mn>0</mn><mo stretchy="false">)</mo></mrow></msup><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo separator="true">,</mo><msup><mi>b</mi><mrow><mo stretchy="false">(</mo><msub><mi>n</mi><mi>u</mi></msub><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo></mrow></msup></mrow><annotation encoding="application/x-tex">b^{(0)},...,b^{(n_u-1)}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0824399999999998em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault">b</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8879999999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mtight">0</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">.</span><span class="mord">.</span><span class="mord">.</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">b</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8879999999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mtight"><span class="mord mathdefault mtight">n</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16454285714285719em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight">u</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mbin mtight">−</span><span class="mord mtight">1</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span></span></span></span> 产生最佳拟合（最小化 平方误差）。您将在 cofiCostFunc 中完成代码以计算成本协同过滤功能。<br>4.1 协同过滤成本函数<br>协同过滤成本函数由下式给出</p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mtable width="100%"><mtr><mtd width="50%"></mtd><mtd><mrow><mi>J</mi><mo stretchy="false">(</mo><mrow><msup><mi mathvariant="bold">x</mi><mrow><mo stretchy="false">(</mo><mn>0</mn><mo stretchy="false">)</mo></mrow></msup><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo separator="true">,</mo><msup><mi mathvariant="bold">x</mi><mrow><mo stretchy="false">(</mo><msub><mi>n</mi><mi>m</mi></msub><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo></mrow></msup><mo separator="true">,</mo><msup><mi mathvariant="bold">w</mi><mrow><mo stretchy="false">(</mo><mn>0</mn><mo stretchy="false">)</mo></mrow></msup><mo separator="true">,</mo><msup><mi>b</mi><mrow><mo stretchy="false">(</mo><mn>0</mn><mo stretchy="false">)</mo></mrow></msup><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo separator="true">,</mo><msup><mi mathvariant="bold">w</mi><mrow><mo stretchy="false">(</mo><msub><mi>n</mi><mi>u</mi></msub><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo></mrow></msup><mo separator="true">,</mo><msup><mi>b</mi><mrow><mo stretchy="false">(</mo><msub><mi>n</mi><mi>u</mi></msub><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo></mrow></msup></mrow><mo stretchy="false">)</mo><mo>=</mo><mfrac><mn>1</mn><mn>2</mn></mfrac><munder><mo>∑</mo><mrow><mo stretchy="false">(</mo><mi>i</mi><mo separator="true">,</mo><mi>j</mi><mo stretchy="false">)</mo><mo>:</mo><mi>r</mi><mo stretchy="false">(</mo><mi>i</mi><mo separator="true">,</mo><mi>j</mi><mo stretchy="false">)</mo><mo>=</mo><mn>1</mn></mrow></munder><mo stretchy="false">(</mo><msup><mi mathvariant="bold">w</mi><mrow><mo stretchy="false">(</mo><mi>j</mi><mo stretchy="false">)</mo></mrow></msup><mo>⋅</mo><msup><mi mathvariant="bold">x</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><mo>+</mo><msup><mi>b</mi><mrow><mo stretchy="false">(</mo><mi>j</mi><mo stretchy="false">)</mo></mrow></msup><mo>−</mo><msup><mi>y</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo separator="true">,</mo><mi>j</mi><mo stretchy="false">)</mo></mrow></msup><msup><mo stretchy="false">)</mo><mn>2</mn></msup><mo>+</mo><munder><munder><mrow><mfrac><mi>λ</mi><mn>2</mn></mfrac><munderover><mo>∑</mo><mrow><mi>j</mi><mo>=</mo><mn>0</mn></mrow><mrow><msub><mi>n</mi><mi>u</mi></msub><mo>−</mo><mn>1</mn></mrow></munderover><munderover><mo>∑</mo><mrow><mi>k</mi><mo>=</mo><mn>0</mn></mrow><mrow><mi>n</mi><mo>−</mo><mn>1</mn></mrow></munderover><mo stretchy="false">(</mo><msubsup><mi mathvariant="bold">w</mi><mi>k</mi><mrow><mo stretchy="false">(</mo><mi>j</mi><mo stretchy="false">)</mo></mrow></msubsup><msup><mo stretchy="false">)</mo><mn>2</mn></msup><mo>+</mo><mfrac><mi>λ</mi><mn>2</mn></mfrac><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>0</mn></mrow><mrow><msub><mi>n</mi><mi>m</mi></msub><mo>−</mo><mn>1</mn></mrow></munderover><munderover><mo>∑</mo><mrow><mi>k</mi><mo>=</mo><mn>0</mn></mrow><mrow><mi>n</mi><mo>−</mo><mn>1</mn></mrow></munderover><mo stretchy="false">(</mo><msubsup><mi mathvariant="bold">x</mi><mi>k</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msubsup><msup><mo stretchy="false">)</mo><mn>2</mn></msup></mrow><mo stretchy="true">⏟</mo></munder><mrow><mi>r</mi><mi>e</mi><mi>g</mi><mi>u</mi><mi>l</mi><mi>a</mi><mi>r</mi><mi>i</mi><mi>z</mi><mi>a</mi><mi>t</mi><mi>i</mi><mi>o</mi><mi>n</mi></mrow></munder></mrow></mtd><mtd width="50%"></mtd><mtd><mtext>(1)</mtext></mtd></mtr></mtable><annotation encoding="application/x-tex">J({\mathbf{x}^{(0)},...,\mathbf{x}^{(n_m-1)},\mathbf{w}^{(0)},b^{(0)},...,\mathbf{w}^{(n_u-1)},b^{(n_u-1)}})= \frac{1}{2}\sum_{(i,j):r(i,j)=1}(\mathbf{w}^{(j)} \cdot \mathbf{x}^{(i)} + b^{(j)} - y^{(i,j)})^2+\underbrace{\frac{\lambda}{2}\sum_{j=0}^{n_u-1}\sum_{k=0}^{n-1}(\mathbf{w}^{(j)}_k)^2+ \frac{\lambda}{2}\sum_{i=0}^{n_m-1}\sum_{k=0}^{n-1}(\mathbf{x}_k^{(i)})^2}_{regularization}\tag{1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.188em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.09618em;">J</span><span class="mopen">(</span><span class="mord"><span class="mord"><span class="mord"><span class="mord mathbf">x</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mtight">0</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">.</span><span class="mord">.</span><span class="mord">.</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord"><span class="mord mathbf">x</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mtight"><span class="mord mathdefault mtight">n</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16454285714285719em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight">m</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mbin mtight">−</span><span class="mord mtight">1</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord"><span class="mord mathbf" style="margin-right:0.01597em;">w</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mtight">0</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">b</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mtight">0</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">.</span><span class="mord">.</span><span class="mord">.</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord"><span class="mord mathbf" style="margin-right:0.01597em;">w</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mtight"><span class="mord mathdefault mtight">n</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16454285714285719em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight">u</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mbin mtight">−</span><span class="mord mtight">1</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">b</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mtight"><span class="mord mathdefault mtight">n</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16454285714285719em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight">u</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mbin mtight">−</span><span class="mord mtight">1</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.8374449999999998em;vertical-align:-1.516005em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.050005em;"><span style="top:-1.808995em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathdefault mtight">i</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="mclose mtight">)</span><span class="mrel mtight">:</span><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span><span class="mopen mtight">(</span><span class="mord mathdefault mtight">i</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="mclose mtight">)</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.0500049999999996em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.516005em;"><span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord"><span class="mord mathbf" style="margin-right:0.01597em;">w</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.0213299999999998em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord"><span class="mord mathbf">x</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathdefault mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.0213299999999998em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathdefault">b</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.188em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathdefault mtight">i</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:4.696206em;vertical-align:-2.8839930000000003em;"></span><span class="mord munder"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8122130000000003em;"><span style="top:-1.064328em;"><span class="pstrut" style="height:3.8122130000000003em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span><span class="mord mathdefault mtight">e</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">g</span><span class="mord mathdefault mtight">u</span><span class="mord mathdefault mtight" style="margin-right:0.01968em;">l</span><span class="mord mathdefault mtight">a</span><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span><span class="mord mathdefault mtight">i</span><span class="mord mathdefault mtight" style="margin-right:0.04398em;">z</span><span class="mord mathdefault mtight">a</span><span class="mord mathdefault mtight">t</span><span class="mord mathdefault mtight">i</span><span class="mord mathdefault mtight">o</span><span class="mord mathdefault mtight">n</span></span></span></span><span style="top:-3.8122130000000003em;"><span class="pstrut" style="height:3.8122130000000003em;"></span><span class="mord munder"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8122130000000003em;"><span class="svg-align" style="top:-1.7504360000000005em;"><span class="pstrut" style="height:3.8122130000000007em;"></span><span class="stretchy" style="height:0.548em;min-width:1.6em;"><span class="brace-left" style="height:0.548em;"><svg width='400em' height='0.548em' viewBox='0 0 400000 548' preserveAspectRatio='xMinYMin slice'><path d='M0 6l6-6h17c12.688 0 19.313.3 20 1 4 4 7.313 8.3 10 13 35.313 51.3 80.813 93.8 136.5 127.5 55.688 33.7 117.188 55.8 184.5 66.5.688 0 2 .3 4 1 18.688 2.7 76 4.3 172 5h399450v120H429l-6-1c-124.688-8-235-61.7-331-161C60.687 138.7 32.312 99.3 7 54L0 41V6z'/></svg></span><span class="brace-center" style="height:0.548em;"><svg width='400em' height='0.548em' viewBox='0 0 400000 548' preserveAspectRatio='xMidYMin slice'><path d='M199572 214c100.7 8.3 195.3 44 280 108 55.3 42 101.7 93 139 153l9 14c2.7-4 5.7-8.7 9-14 53.3-86.7 123.7-153 211-199 66.7-36 137.3-56.3 212-62h199568v120H200432c-178.3 11.7-311.7 78.3-403 201-6 8-9.7 12-11 12-.7.7-6.7 1-18 1s-17.3-.3-18-1c-1.3 0-5-4-11-12-44.7-59.3-101.3-106.3-170-141s-145.3-54.3-229-60H0V214z'/></svg></span><span class="brace-right" style="height:0.548em;"><svg width='400em' height='0.548em' viewBox='0 0 400000 548' preserveAspectRatio='xMaxYMin slice'><path d='M399994 0l6 6v35l-6 11c-56 104-135.3 181.3-238 232-57.3 28.7-117 45-179 50H-300V214h399897c43.3-7 81-15 113-26 100.7-33 179.7-91 237-174 2.7-5 6-9 10-13 .7-1 7.3-1 20-1h17z'/></svg></span></span></span><span style="top:-3.8122130000000007em;"><span class="pstrut" style="height:3.8122130000000007em;"></span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.37144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">λ</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8122130000000005em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="mrel mtight">=</span><span class="mord mtight">0</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.311105em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16454285714285719em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight">u</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.4137769999999998em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8011130000000002em;"><span style="top:-1.8478869999999998em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span><span class="mrel mtight">=</span><span class="mord mtight">0</span></span></span></span><span style="top:-3.0500049999999996em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.300005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.302113em;"><span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord"><span class="mord mathbf" style="margin-right:0.01597em;">w</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0448em;"><span style="top:-2.3986920000000005em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span><span style="top:-3.2198em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3013079999999999em;"><span></span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.37144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">λ</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8122130000000003em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">0</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.311105em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16454285714285719em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight">m</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.277669em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8011130000000002em;"><span style="top:-1.8478869999999998em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span><span class="mrel mtight">=</span><span class="mord mtight">0</span></span></span></span><span style="top:-3.0500049999999996em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.300005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.302113em;"><span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord"><span class="mord mathbf">x</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0448em;"><span style="top:-2.3986920000000005em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span><span style="top:-3.2198em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathdefault mtight">i</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3013079999999999em;"><span></span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.061777em;"><span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.8839930000000003em;"><span></span></span></span></span></span></span><span class="tag"><span class="strut" style="height:4.696206em;vertical-align:-2.8839930000000003em;"></span><span class="mord text"><span class="mord">(</span><span class="mord"><span class="mord">1</span></span><span class="mord">)</span></span></span></span></span></span></p><p>1）中的第一个总结是“对于所有人i,j,哪里r(i,j)等于1，可以写成:</p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>=</mo><mfrac><mn>1</mn><mn>2</mn></mfrac><munderover><mo>∑</mo><mrow><mi>j</mi><mo>=</mo><mn>0</mn></mrow><mrow><msub><mi>n</mi><mi>u</mi></msub><mo>−</mo><mn>1</mn></mrow></munderover><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>0</mn></mrow><mrow><msub><mi>n</mi><mi>m</mi></msub><mo>−</mo><mn>1</mn></mrow></munderover><mi>r</mi><mo stretchy="false">(</mo><mi>i</mi><mo separator="true">,</mo><mi>j</mi><mo stretchy="false">)</mo><mo>∗</mo><mo stretchy="false">(</mo><msup><mi mathvariant="bold">w</mi><mrow><mo stretchy="false">(</mo><mi>j</mi><mo stretchy="false">)</mo></mrow></msup><mo>⋅</mo><msup><mi mathvariant="bold">x</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><mo>+</mo><msup><mi>b</mi><mrow><mo stretchy="false">(</mo><mi>j</mi><mo stretchy="false">)</mo></mrow></msup><mo>−</mo><msup><mi>y</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo separator="true">,</mo><mi>j</mi><mo stretchy="false">)</mo></mrow></msup><msup><mo stretchy="false">)</mo><mn>2</mn></msup><mo>+</mo><mtext>regularization</mtext></mrow><annotation encoding="application/x-tex">= \frac{1}{2}\sum_{j=0}^{n_u-1} \sum_{i=0}^{n_m-1}r(i,j)*(\mathbf{w}^{(j)} \cdot \mathbf{x}^{(i)} + b^{(j)} - y^{(i,j)})^2+\text{regularization}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.2259900000000004em;vertical-align:-1.4137769999999998em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8122130000000005em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="mrel mtight">=</span><span class="mord mtight">0</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.311105em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16454285714285719em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight">u</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.4137769999999998em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8122130000000003em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">0</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.311105em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16454285714285719em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight">m</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.277669em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mopen">(</span><span class="mord mathdefault">i</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.05724em;">j</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.188em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord"><span class="mord mathbf" style="margin-right:0.01597em;">w</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.0213299999999998em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord"><span class="mord mathbf">x</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathdefault mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.0213299999999998em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathdefault">b</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.188em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathdefault mtight">i</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord text"><span class="mord">regularization</span></span></span></span></span></span></p><p>您现在应该编写 cofiCostFunc（协作过滤成本函数）来返回此成本。<br>练习 1<br>for 循环实现：<br>首先使用 for 循环实现成本函数。 考虑分两步开发成本函数。首先，开发不正则化的成本函数。下面提供了一个不包括正则化的测试用例，用于测试您的实现。一旦工作，添加正则化并运行包含正则化的测试。请注意，您应该为用户计算成本j和电影i仅当R(i,j)=1时<br>正则化只是对 W 数组和 X 数组的每个元素进行平方，并将它们对所有平方元素求和。 您可以使用 np.square（） 和 np.sum（）。<br>把numpy.ndarray格式的数组表示成R(i)形式会报错因为要用中括号<br>协同过滤成本函数的代码化：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">cofi_cost_func</span>(<span class="params">X, W, b, Y, R, lambda_</span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    Returns the cost for the content-based filtering</span></span><br><span class="line"><span class="string">    Args:</span></span><br><span class="line"><span class="string">      X (ndarray (num_movies,num_features)): matrix of item features</span></span><br><span class="line"><span class="string">      W (ndarray (num_users,num_features)) : matrix of user parameters</span></span><br><span class="line"><span class="string">      b (ndarray (1, num_users)            : vector of user parameters</span></span><br><span class="line"><span class="string">      Y (ndarray (num_movies,num_users)    : matrix of user ratings of movies</span></span><br><span class="line"><span class="string">      R (ndarray (num_movies,num_users)    : matrix, where R(i, j) = 1 if the i-th movies was rated by the j-th user</span></span><br><span class="line"><span class="string">      lambda_ (float): regularization parameter</span></span><br><span class="line"><span class="string">    Returns:</span></span><br><span class="line"><span class="string">      J (float) : Cost</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    nm, nu = Y.shape</span><br><span class="line">    J = <span class="number">0</span></span><br><span class="line">    <span class="comment"># ### START CODE HERE ###</span></span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(nu):</span><br><span class="line">        Wj=W[j,:]</span><br><span class="line">        <span class="comment">#b只能取一个数</span></span><br><span class="line">        bj=b[<span class="number">0</span>,j]</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(nm):</span><br><span class="line">            Xi=X[i, :]</span><br><span class="line">            Yij=Y[i, j]</span><br><span class="line">            r=R[i,j]</span><br><span class="line">            J+=np.square(r*(np.dot(Wj,Xi)+bj-Yij))</span><br><span class="line">            </span><br><span class="line">    J += lambda_ * (np.<span class="built_in">sum</span>(np.square(W)) + np.<span class="built_in">sum</span>(np.square(X)))</span><br><span class="line">    J=(<span class="number">1</span>/<span class="number">2</span>)*J</span><br><span class="line"></span><br><span class="line">    <span class="comment">### END CODE HERE ###</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> J</span><br></pre></td></tr></table></figure><p><code>r=R[i,j]</code>这句如果改为<code>R=R[i,j]</code>会报错因为传进来的形参是R而且上下文中多次定义了R，np.square平方操作的时候括号位置别写错，这里的正则化只是对 W 数组和 X 数组的每个元素进行平方所以直接用np.square就行。<br>矢量化实现<br>创建矢量化实现进行计算非常重要<br>，因为它稍后会在优化过程中多次调用。所使用的线性代数不是本系列的重点，因此提供了实现。如果您是线性代数方面的专家，请随时创建您的版本，而无需引用下面的代码。<br>运行下面的代码，并验证它是否生成与非矢量化版本相同的结果。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">cofi_cost_func_v</span>(<span class="params">X, W, b, Y, R, lambda_</span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    Returns the cost for the content-based filtering</span></span><br><span class="line"><span class="string">    Vectorized for speed. Uses tensorflow operations to be compatible with custom training loop.</span></span><br><span class="line"><span class="string">    Args:</span></span><br><span class="line"><span class="string">      X (ndarray (num_movies,num_features)): matrix of item features</span></span><br><span class="line"><span class="string">      W (ndarray (num_users,num_features)) : matrix of user parameters</span></span><br><span class="line"><span class="string">      b (ndarray (1, num_users)            : vector of user parameters</span></span><br><span class="line"><span class="string">      Y (ndarray (num_movies,num_users)    : matrix of user ratings of movies</span></span><br><span class="line"><span class="string">      R (ndarray (num_movies,num_users)    : matrix, where R(i, j) = 1 if the i-th movies was rated by the j-th user</span></span><br><span class="line"><span class="string">      lambda_ (float): regularization parameter</span></span><br><span class="line"><span class="string">    Returns:</span></span><br><span class="line"><span class="string">      J (float) : Cost</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    j = (tf.linalg.matmul(X, tf.transpose(W)) + b - Y)*R</span><br><span class="line">    J = <span class="number">0.5</span> * tf.reduce_sum(j**<span class="number">2</span>) + (lambda_/<span class="number">2</span>) * (tf.reduce_sum(X**<span class="number">2</span>) + tf.reduce_sum(W**<span class="number">2</span>))</span><br><span class="line">    <span class="keyword">return</span> J</span><br></pre></td></tr></table></figure><p>矢量化就是加快了运行速度因为减少了for循环</p><h2 id="学习电影推荐图像">学习电影推荐图像</h2><p>完成实施协作筛选成本后 函数，你可以开始训练你的算法来制作 为自己推荐电影。<br>在下面的单元格中，您可以输入自己的电影选择。然后，该算法将为您提出建议！我们根据自己的喜好填写了一些值，但是在您按照我们的选择进行操作后，您应该更改它以符合您的口味。 数据集中所有电影的列表位于文件电影列表中。<br>其中<code>movieList, movieList_df = load_Movie_List_pd()</code>中第一个参数用于打印电影标题，第二个参数用于打印csv文件内容包括序号<br>以下代码用于存储被我评价的电影对应的序号,并按升序排列<code>my_rated = [i for i in range(len(my_ratings)) if my_ratings[i] &gt; 0]</code><br>我们的新建的按照序号对电影评价代码如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">movieList, movieList_df = load_Movie_List_pd()</span><br><span class="line"><span class="comment"># print(movieList_df)</span></span><br><span class="line"></span><br><span class="line">my_ratings = np.zeros(num_movies)          <span class="comment">#  Initialize my ratings</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Check the file small_movie_list.csv for id of each movie in our dataset</span></span><br><span class="line"><span class="comment"># For example, Toy Story 3 (2010) has ID 2700, so to rate it &quot;5&quot;, you can set</span></span><br><span class="line">my_ratings[<span class="number">2700</span>] = <span class="number">5</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#Or suppose you did not enjoy Persuasion (2007), you can set</span></span><br><span class="line">my_ratings[<span class="number">2609</span>] = <span class="number">2</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment"># We have selected a few movies we liked / did not like and the ratings we</span></span><br><span class="line"><span class="comment"># gave are as follows:</span></span><br><span class="line">my_ratings[<span class="number">929</span>]  = <span class="number">5</span>   <span class="comment"># Lord of the Rings: The Return of the King, The</span></span><br><span class="line">my_ratings[<span class="number">246</span>]  = <span class="number">5</span>   <span class="comment"># Shrek (2001)</span></span><br><span class="line">my_ratings[<span class="number">2716</span>] = <span class="number">3</span>   <span class="comment"># Inception</span></span><br><span class="line">my_ratings[<span class="number">1150</span>] = <span class="number">5</span>   <span class="comment"># Incredibles, The (2004)</span></span><br><span class="line">my_ratings[<span class="number">382</span>]  = <span class="number">2</span>   <span class="comment"># Amelie (Fabuleux destin d&#x27;Amélie Poulain, Le)</span></span><br><span class="line">my_ratings[<span class="number">366</span>]  = <span class="number">5</span>   <span class="comment"># Harry Potter and the Sorcerer&#x27;s Stone (a.k.a. Harry Potter and the Philosopher&#x27;s Stone) (2001)</span></span><br><span class="line">my_ratings[<span class="number">622</span>]  = <span class="number">5</span>   <span class="comment"># Harry Potter and the Chamber of Secrets (2002)</span></span><br><span class="line">my_ratings[<span class="number">988</span>]  = <span class="number">3</span>   <span class="comment"># Eternal Sunshine of the Spotless Mind (2004)</span></span><br><span class="line">my_ratings[<span class="number">2925</span>] = <span class="number">1</span>   <span class="comment"># Louis Theroux: Law &amp; Disorder (2008)</span></span><br><span class="line">my_ratings[<span class="number">2937</span>] = <span class="number">1</span>   <span class="comment"># Nothing to Declare (Rien à déclarer)</span></span><br><span class="line">my_ratings[<span class="number">793</span>]  = <span class="number">5</span>   <span class="comment"># Pirates of the Caribbean: The Curse of the Black Pearl (2003)</span></span><br><span class="line"><span class="comment">#用于存储被我评价的电影对应的序号,并按升序排列</span></span><br><span class="line">my_rated = [i <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(my_ratings)) <span class="keyword">if</span> my_ratings[i] &gt; <span class="number">0</span>]</span><br><span class="line"><span class="built_in">print</span>(my_rated)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;\nNew user ratings:\n&#x27;</span>)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(my_ratings)):</span><br><span class="line">    <span class="keyword">if</span> my_ratings[i] &gt; <span class="number">0</span> :</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&#x27;Rated <span class="subst">&#123;my_ratings[i]&#125;</span> for  <span class="subst">&#123;movieList_df.loc[i,<span class="string">&quot;title&quot;</span>]&#125;</span>&#x27;</span>);</span><br></pre></td></tr></table></figure><p>现在将以上新建的评价加入到Y,R数组中，使用<a href="https://blog.csdn.net/qq_33728095/article/details/102512600">np.c_</a>按列连接矩阵，注意<a href="https://blog.csdn.net/Cy_coding/article/details/114959585">numpy一维数组np.array永远为列向量</a><br><a href="https://blog.csdn.net/dcrmg/article/details/79028043">tf.random.normal函数用于从“服从指定正态分布的序列”中随机取出指定个数的值</a><br>这里还用了<a href="https://zhuanlan.zhihu.com/p/32698042">Adam方法：对梯度的一阶矩估计（First Moment Estimation，即梯度的均值）和二阶矩估计（Second Moment Estimation，即梯度的未中心化的方差）进行综合考虑，计算出更新步长</a>。<br>现在，我们来训练协作过滤模型。这将学习参数X,W和b.<br>学习中涉及的操作w,b和x同时不属于 TensorFlow 神经网络软件包中提供的典型“层”。因此，课程 2 中使用的流程：Model、Compile（）、Fit（）、Predict（） 并不直接适用。相反，我们可以使用自定义训练循环。<br>回想一下早期实验室的梯度下降步骤。<br>重复直到收敛：<br>计算前向传递<br>计算损失相对于参数的导数<br>使用学习率和计算导数更新参数<br>TensorFlow 具有为您计算导数的出色能力。如下所示。在本节中，将跟踪对 Tensorflow 变量的操作。稍后调用时，它将返回相对于跟踪变量的损失梯度。然后，可以使用优化器将梯度应用于参数。 这是对 TensorFlow 和其他机器学习框架的有用功能的简要介绍。通过在感兴趣的框架内调查“自定义训练循环”，可以找到更多信息。tf.GradientTape()tape.gradient()<br>6 - 建议<br>下面，我们计算所有电影和用户的评分，并显示推荐的电影。这些是基于上面输入的电影和评级。预测电影的分级my_ratings[]i对于用户j，你计算 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi mathvariant="bold">w</mi><mrow><mo stretchy="false">(</mo><mi>j</mi><mo stretchy="false">)</mo></mrow></msup><mo>⋅</mo><msup><mi mathvariant="bold">x</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><mo>+</mo><msup><mi>b</mi><mrow><mo stretchy="false">(</mo><mi>j</mi><mo stretchy="false">)</mo></mrow></msup></mrow><annotation encoding="application/x-tex">\mathbf{w}^{(j)} \cdot \mathbf{x}^{(i)} + b^{(j)}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8879999999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord"><span class="mord mathbf" style="margin-right:0.01597em;">w</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8879999999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.9713299999999999em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord"><span class="mord mathbf">x</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8879999999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathdefault mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8879999999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault">b</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8879999999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span></span></span></span> .这可以使用矩阵乘法计算所有评级。<br>在实践中，可以利用额外的信息来增强我们的预测。上图中，前几百部电影的预测收视率处于很小的范围内。我们可以通过选择那些顶级电影、平均评分高的电影和评分超过 20 的电影来增强上述内容。本节使用 Pandas 数据框，该数据框具有许多方便的排序功能。<br>在实践中，可以利用额外的信息来增强我们的预测。上图中，前几百部电影的预测收视率处于很小的范围内。我们可以通过选择那些顶级电影、平均评分高的电影和评分超过 20 的电影来增强上述内容。本节使用 Pandas 数据框，该数据框具有许多方便的排序功能。<br>暂时把代码跑了一遍但是梯度下降以后的代码没有完全看懂，以后再看11/3</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> tensorflow <span class="keyword">as</span> tf</span><br><span class="line"><span class="keyword">from</span> tensorflow <span class="keyword">import</span> keras</span><br><span class="line"><span class="keyword">from</span> recsys_utils <span class="keyword">import</span> *</span><br><span class="line"><span class="comment">#Load data</span></span><br><span class="line">X, W, b, num_movies, num_features, num_users = load_precalc_params_small()</span><br><span class="line">Y, R = load_ratings_small()</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;Y&quot;</span>, Y.shape, <span class="string">&quot;R&quot;</span>, R.shape)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;X&quot;</span>, X.shape)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;W&quot;</span>, W.shape)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;b&quot;</span>, b.shape)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;num_features&quot;</span>, num_features)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;num_movies&quot;</span>,   num_movies)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;num_users&quot;</span>,    num_users)</span><br><span class="line"><span class="comment">#  From the matrix, we can compute statistics like average rating.</span></span><br><span class="line"><span class="comment"># list = []</span></span><br><span class="line"><span class="comment"># for i in range(443):</span></span><br><span class="line"><span class="comment">#     list.append(False)</span></span><br><span class="line"><span class="comment"># print(np.array(list).shape)</span></span><br><span class="line">a=Y[<span class="number">0</span>, R[<span class="number">0</span>, :].astype(<span class="built_in">bool</span>)]</span><br><span class="line"><span class="comment"># b=R[0, :].astype(bool)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># print(b.shape)</span></span><br><span class="line"><span class="comment"># print(&#x27;True个数：&#x27;, np.sum(b!=0))</span></span><br><span class="line"><span class="comment"># print(b)</span></span><br><span class="line"><span class="comment"># print(a)</span></span><br><span class="line">tsmean = np.mean(a)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;Average rating for movie 1 : <span class="subst">&#123;tsmean:<span class="number">0.3</span>f&#125;</span> / 5&quot;</span> )</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># GRADED FUNCTION: cofi_cost_func</span></span><br><span class="line"><span class="comment"># UNQ_C1</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">cofi_cost_func</span>(<span class="params">X, W, b, Y, R, lambda_</span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    Returns the cost for the content-based filtering</span></span><br><span class="line"><span class="string">    Args:</span></span><br><span class="line"><span class="string">      X (ndarray (num_movies,num_features)): matrix of item features</span></span><br><span class="line"><span class="string">      W (ndarray (num_users,num_features)) : matrix of user parameters</span></span><br><span class="line"><span class="string">      b (ndarray (1, num_users)            : vector of user parameters</span></span><br><span class="line"><span class="string">      Y (ndarray (num_movies,num_users)    : matrix of user ratings of movies</span></span><br><span class="line"><span class="string">      R (ndarray (num_movies,num_users)    : matrix, where R(i, j) = 1 if the i-th movies was rated by the j-th user</span></span><br><span class="line"><span class="string">      lambda_ (float): regularization parameter</span></span><br><span class="line"><span class="string">    Returns:</span></span><br><span class="line"><span class="string">      J (float) : Cost</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    nm, nu = Y.shape</span><br><span class="line">    J = <span class="number">0</span></span><br><span class="line">    <span class="comment"># ### START CODE HERE ###</span></span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(nu):</span><br><span class="line">        Wj=W[j,:]</span><br><span class="line">        <span class="comment">#b只能取一个数</span></span><br><span class="line">        bj=b[<span class="number">0</span>,j]</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(nm):</span><br><span class="line">            Xi=X[i, :]</span><br><span class="line">            Yij=Y[i, j]</span><br><span class="line">            r=R[i,j]</span><br><span class="line">            J+=np.square(r*(np.dot(Wj,Xi)+bj-Yij))</span><br><span class="line"></span><br><span class="line">    J += lambda_ * (np.<span class="built_in">sum</span>(np.square(W)) + np.<span class="built_in">sum</span>(np.square(X)))</span><br><span class="line">    J=(<span class="number">1</span>/<span class="number">2</span>)*J</span><br><span class="line"></span><br><span class="line">    <span class="comment">### END CODE HERE ###</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> J</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># Reduce the data set size so that this runs faster</span></span><br><span class="line">num_users_r = <span class="number">4</span></span><br><span class="line">num_movies_r = <span class="number">5</span></span><br><span class="line">num_features_r = <span class="number">3</span></span><br><span class="line"></span><br><span class="line">X_r = X[:num_movies_r, :num_features_r]</span><br><span class="line">W_r = W[:num_users_r,  :num_features_r]</span><br><span class="line">b_r = b[<span class="number">0</span>, :num_users_r].reshape(<span class="number">1</span>,-<span class="number">1</span>)</span><br><span class="line">Y_r = Y[:num_movies_r, :num_users_r]</span><br><span class="line">R_r = R[:num_movies_r, :num_users_r]</span><br><span class="line"></span><br><span class="line"><span class="comment"># Evaluate cost function</span></span><br><span class="line">J = cofi_cost_func(X_r, W_r, b_r, Y_r, R_r, <span class="number">0</span>);</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;Cost: <span class="subst">&#123;J:<span class="number">0.2</span>f&#125;</span>&quot;</span>)</span><br><span class="line"><span class="comment"># Evaluate cost function with regularization</span></span><br><span class="line">J = cofi_cost_func(X_r, W_r, b_r, Y_r, R_r, <span class="number">1.5</span>);</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;Cost (with regularization): <span class="subst">&#123;J:<span class="number">0.2</span>f&#125;</span>&quot;</span>)</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">cofi_cost_func_v</span>(<span class="params">X, W, b, Y, R, lambda_</span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    Returns the cost for the content-based filtering</span></span><br><span class="line"><span class="string">    Vectorized for speed. Uses tensorflow operations to be compatible with custom training loop.</span></span><br><span class="line"><span class="string">    Args:</span></span><br><span class="line"><span class="string">      X (ndarray (num_movies,num_features)): matrix of item features</span></span><br><span class="line"><span class="string">      W (ndarray (num_users,num_features)) : matrix of user parameters</span></span><br><span class="line"><span class="string">      b (ndarray (1, num_users)            : vector of user parameters</span></span><br><span class="line"><span class="string">      Y (ndarray (num_movies,num_users)    : matrix of user ratings of movies</span></span><br><span class="line"><span class="string">      R (ndarray (num_movies,num_users)    : matrix, where R(i, j) = 1 if the i-th movies was rated by the j-th user</span></span><br><span class="line"><span class="string">      lambda_ (float): regularization parameter</span></span><br><span class="line"><span class="string">    Returns:</span></span><br><span class="line"><span class="string">      J (float) : Cost</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    j = (tf.linalg.matmul(X, tf.transpose(W)) + b - Y)*R</span><br><span class="line">    J = <span class="number">0.5</span> * tf.reduce_sum(j**<span class="number">2</span>) + (lambda_/<span class="number">2</span>) * (tf.reduce_sum(X**<span class="number">2</span>) + tf.reduce_sum(W**<span class="number">2</span>))</span><br><span class="line">    <span class="keyword">return</span> J</span><br><span class="line"><span class="comment"># Evaluate cost function</span></span><br><span class="line">J = cofi_cost_func_v(X_r, W_r, b_r, Y_r, R_r, <span class="number">0</span>);</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;Cost: <span class="subst">&#123;J:<span class="number">0.2</span>f&#125;</span>&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Evaluate cost function with regularization</span></span><br><span class="line">J = cofi_cost_func_v(X_r, W_r, b_r, Y_r, R_r, <span class="number">1.5</span>);</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;Cost (with regularization): <span class="subst">&#123;J:<span class="number">0.2</span>f&#125;</span>&quot;</span>)\</span><br><span class="line"></span><br><span class="line">movieList, movieList_df = load_Movie_List_pd()</span><br><span class="line"><span class="comment"># print(movieList_df)</span></span><br><span class="line"></span><br><span class="line">my_ratings = np.zeros(num_movies)          <span class="comment">#  Initialize my ratings</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Check the file small_movie_list.csv for id of each movie in our dataset</span></span><br><span class="line"><span class="comment"># For example, Toy Story 3 (2010) has ID 2700, so to rate it &quot;5&quot;, you can set</span></span><br><span class="line">my_ratings[<span class="number">2700</span>] = <span class="number">5</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#Or suppose you did not enjoy Persuasion (2007), you can set</span></span><br><span class="line">my_ratings[<span class="number">2609</span>] = <span class="number">2</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment"># We have selected a few movies we liked / did not like and the ratings we</span></span><br><span class="line"><span class="comment"># gave are as follows:</span></span><br><span class="line">my_ratings[<span class="number">929</span>]  = <span class="number">5</span>   <span class="comment"># Lord of the Rings: The Return of the King, The</span></span><br><span class="line">my_ratings[<span class="number">246</span>]  = <span class="number">5</span>   <span class="comment"># Shrek (2001)</span></span><br><span class="line">my_ratings[<span class="number">2716</span>] = <span class="number">3</span>   <span class="comment"># Inception</span></span><br><span class="line">my_ratings[<span class="number">1150</span>] = <span class="number">5</span>   <span class="comment"># Incredibles, The (2004)</span></span><br><span class="line">my_ratings[<span class="number">382</span>]  = <span class="number">2</span>   <span class="comment"># Amelie (Fabuleux destin d&#x27;Amélie Poulain, Le)</span></span><br><span class="line">my_ratings[<span class="number">366</span>]  = <span class="number">5</span>   <span class="comment"># Harry Potter and the Sorcerer&#x27;s Stone (a.k.a. Harry Potter and the Philosopher&#x27;s Stone) (2001)</span></span><br><span class="line">my_ratings[<span class="number">622</span>]  = <span class="number">5</span>   <span class="comment"># Harry Potter and the Chamber of Secrets (2002)</span></span><br><span class="line">my_ratings[<span class="number">988</span>]  = <span class="number">3</span>   <span class="comment"># Eternal Sunshine of the Spotless Mind (2004)</span></span><br><span class="line">my_ratings[<span class="number">2925</span>] = <span class="number">1</span>   <span class="comment"># Louis Theroux: Law &amp; Disorder (2008)</span></span><br><span class="line">my_ratings[<span class="number">2937</span>] = <span class="number">1</span>   <span class="comment"># Nothing to Declare (Rien à déclarer)</span></span><br><span class="line">my_ratings[<span class="number">793</span>]  = <span class="number">5</span>   <span class="comment"># Pirates of the Caribbean: The Curse of the Black Pearl (2003)</span></span><br><span class="line"><span class="comment">#用于存储被我评价的电影对应的序号,并按升序排列</span></span><br><span class="line">my_rated = [i <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(my_ratings)) <span class="keyword">if</span> my_ratings[i] &gt; <span class="number">0</span>]</span><br><span class="line"><span class="built_in">print</span>(my_rated)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;\nNew user ratings:\n&#x27;</span>)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(my_ratings)):</span><br><span class="line">    <span class="keyword">if</span> my_ratings[i] &gt; <span class="number">0</span> :</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&#x27;Rated <span class="subst">&#123;my_ratings[i]&#125;</span> for  <span class="subst">&#123;movieList_df.loc[i,<span class="string">&quot;title&quot;</span>]&#125;</span>&#x27;</span>);</span><br><span class="line"><span class="comment"># Reload ratings and add new ratings</span></span><br><span class="line">Y, R = load_ratings_small()</span><br><span class="line">Y = np.c_[my_ratings, Y]</span><br><span class="line">R = np.c_[(my_ratings != <span class="number">0</span>).astype(<span class="built_in">int</span>), R]</span><br><span class="line"></span><br><span class="line"><span class="comment"># Normalize the Dataset</span></span><br><span class="line">Ynorm, Ymean = normalizeRatings(Y, R)</span><br><span class="line"><span class="comment">#  Useful Values</span></span><br><span class="line">num_movies, num_users = Y.shape</span><br><span class="line">num_features = <span class="number">100</span></span><br><span class="line"><span class="comment">#  Useful Values</span></span><br><span class="line">num_movies, num_users = Y.shape</span><br><span class="line">num_features = <span class="number">100</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">以下代码用于初始化W,X,b以便</span></span><br><span class="line"><span class="string">作用在梯度下降中</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="comment"># Set Initial Parameters (W, X), use tf.Variable to track these variables</span></span><br><span class="line">tf.random.set_seed(<span class="number">1234</span>) <span class="comment"># for consistent results</span></span><br><span class="line">W = tf.Variable(tf.random.normal((num_users,  num_features),dtype=tf.float64),  name=<span class="string">&#x27;W&#x27;</span>)</span><br><span class="line">X = tf.Variable(tf.random.normal((num_movies, num_features),dtype=tf.float64),  name=<span class="string">&#x27;X&#x27;</span>)</span><br><span class="line">b = tf.Variable(tf.random.normal((<span class="number">1</span>,          num_users),   dtype=tf.float64),  name=<span class="string">&#x27;b&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Instantiate an optimizer.Adam优化</span></span><br><span class="line">optimizer = keras.optimizers.Adam(learning_rate=<span class="number">1e-1</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 已知成本函数运行梯度下降迭代</span></span><br><span class="line">iterations = <span class="number">200</span></span><br><span class="line">lambda_ = <span class="number">1</span></span><br><span class="line"><span class="keyword">for</span> <span class="built_in">iter</span> <span class="keyword">in</span> <span class="built_in">range</span>(iterations):</span><br><span class="line">    <span class="comment"># Use TensorFlow’s GradientTape</span></span><br><span class="line">    <span class="comment"># to record the operations used to compute the cost</span></span><br><span class="line">    <span class="keyword">with</span> tf.GradientTape() <span class="keyword">as</span> tape:</span><br><span class="line"></span><br><span class="line">        <span class="comment"># Compute the cost (forward pass included in cost)</span></span><br><span class="line">        cost_value = cofi_cost_func_v(X, W, b, Ynorm, R, lambda_)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># Use the gradient tape to automatically retrieve</span></span><br><span class="line">    <span class="comment"># the gradients of the trainable variables with respect to the loss</span></span><br><span class="line">    grads = tape.gradient( cost_value, [X,W,b] )</span><br><span class="line"></span><br><span class="line">    <span class="comment"># Run one step of gradient descent by updating</span></span><br><span class="line">    <span class="comment"># the value of the variables to minimize the loss.</span></span><br><span class="line">    optimizer.apply_gradients( <span class="built_in">zip</span>(grads, [X,W,b]) )</span><br><span class="line"></span><br><span class="line">    <span class="comment"># Log periodically.</span></span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">iter</span> % <span class="number">20</span> == <span class="number">0</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;Training loss at iteration <span class="subst">&#123;<span class="built_in">iter</span>&#125;</span>: <span class="subst">&#123;cost_value:<span class="number">0.1</span>f&#125;</span>&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Make a prediction using trained weights and biases 做出预测</span></span><br><span class="line">p = np.matmul(X.numpy(), np.transpose(W.numpy())) + b.numpy()</span><br><span class="line"></span><br><span class="line"><span class="comment">#restore the mean 可能和之前标准化过有关系</span></span><br><span class="line">pm = p + Ymean</span><br><span class="line"></span><br><span class="line">my_predictions = pm[:,<span class="number">0</span>]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># sort predictions 对预测结果进行降序排序</span></span><br><span class="line">ix = tf.argsort(my_predictions, direction=<span class="string">&#x27;DESCENDING&#x27;</span>)</span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">由于上文使用了降序，所以这里取前17个评分</span></span><br><span class="line"><span class="string">最高的电影由于每次迭代产生的W,b不同所以预测出的</span></span><br><span class="line"><span class="string">电影可能不一样，如果不在之前我的评论中则</span></span><br><span class="line"><span class="string">显示该电影的预测分数</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">17</span>):</span><br><span class="line">    j = ix[i]</span><br><span class="line">    <span class="keyword">if</span> j <span class="keyword">not</span> <span class="keyword">in</span> my_rated:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&#x27;Predicting rating <span class="subst">&#123;my_predictions[j]:<span class="number">0.2</span>f&#125;</span> for movie <span class="subst">&#123;movieList[j]&#125;</span>&#x27;</span>)</span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">如果之前对电影做出过评论</span></span><br><span class="line"><span class="string">则显示原始值和预测值</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;\n\nOriginal vs Predicted ratings:\n&#x27;</span>)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(my_ratings)):</span><br><span class="line">    <span class="keyword">if</span> my_ratings[i] &gt; <span class="number">0</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&#x27;Original <span class="subst">&#123;my_ratings[i]&#125;</span>, Predicted <span class="subst">&#123;my_predictions[i]:<span class="number">0.2</span>f&#125;</span> for <span class="subst">&#123;movieList[i]&#125;</span>&#x27;</span>)</span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">利用额外的信息来增强我们的预测其实不应该放在最后</span></span><br><span class="line"><span class="string">为了防止歧义因此注释掉</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="comment"># filter=(movieList_df[&quot;number of ratings&quot;] &gt; 20)</span></span><br><span class="line"><span class="comment"># movieList_df[&quot;pred&quot;] = my_predictions</span></span><br><span class="line"><span class="comment"># movieList_df = movieList_df.reindex(columns=[&quot;pred&quot;, &quot;mean rating&quot;, &quot;number of ratings&quot;, &quot;title&quot;])</span></span><br><span class="line"><span class="comment"># movieList_df.loc[ix[:300]].loc[filter].sort_values(&quot;mean rating&quot;, ascending=False)</span></span><br></pre></td></tr></table></figure><h3 id="基于内容的过滤的深度学习">基于内容的过滤的深度学习</h3><p>在本练习中，您将使用神经网络实现基于内容的过滤，以构建电影推荐系统。<br>2 - 电影评分数据集图像<br>该数据集派生自 MovieLens ml-latest-small 数据集。<br>[F.麦克斯韦·哈珀和约瑟夫·康斯坦。2015. MovieLens 数据集：历史和背景。ACM 交互式智能系统汇刊 （TiiS） 5， 4： 19：1–19：19.https://doi.org/10.1145/2827872]<br>原始数据集有 9000 部电影，由 600 名用户评分，评分范围为 0.5 到 5，以 0.5 步为增量。该数据集的大小已经缩小，以专注于自 2000 年以来的电影和流行类型。缩减后的数据集具有 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>n</mi><mi>u</mi></msub><mo>=</mo><mn>395</mn></mrow><annotation encoding="application/x-tex">n_u = 395</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">n</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">u</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">3</span><span class="mord">9</span><span class="mord">5</span></span></span></span> users 和 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>n</mi><mi>m</mi></msub><mo>=</mo><mn>694</mn></mrow><annotation encoding="application/x-tex">n_m= 694</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">n</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">m</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">6</span><span class="mord">9</span><span class="mord">4</span></span></span></span> 电影。对于每部电影，数据集提供电影标题、发行日期以及一种或多种类型。比如《玩具总动员3》在2010年上映，有几种类型：“冒险|动画|儿童|喜剧|奇幻|IMAX”。此数据集除了用户评分外，几乎不包含有关用户的信息。该数据集用于为下述神经网络创建训练向量<br>2.1 使用神经网络进行基于内容的过滤<br>在协作筛选实验室中，您生成了两个向量，一个是用户向量，另一个是项目/电影向量，其点积将预测分级。向量仅来自评级。<br>基于内容的筛选还会生成用户和电影特征向量，但会识别出可能存在有关用户和/或电影的其他可用信息，这些信息可能会改进预测。附加信息被提供给神经网络，然后神经网络生成用户和电影向量，如下所示。<br>提供给网络的电影内容是原始数据和一些“工程功能”的组合。回想一下课程 1 第 2 周实验 4 中的特征工程讨论和实验。最初的特点是电影上映的年份，电影的类型呈现为一个热门的载体。有 14 种流派。工程功能是从用户评分得出的平均评分。具有多种类型的电影每个类型都有一个训练向量。<br>用户内容仅由工程功能组成。每个流派的平均评分是按用户计算的。此外，还提供用户 ID、评分计数和评分平均值，但不包括在训练或预测内容中。它们在解释数据时很有用。<br>训练集由数据集中用户所做的所有评分组成。用户和电影/项目向量作为训练集一起呈现到上述网络。对于用户分级的所有电影，用户向量都是相同的。<br>下面，让我们加载并显示一些数据。</p><p>np.genfromtxt函数通过字符串截取到array中，多维的列表其实是获取行数，对于多维array,len是用于获取行数<br>导入数据：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Load Data, set configuration variables</span></span><br><span class="line">item_train, user_train, y_train, item_features, user_features, item_vecs, movie_dict, user_to_genre = load_data()</span><br><span class="line"></span><br><span class="line">num_user_features = user_train.shape[<span class="number">1</span>] - <span class="number">3</span>  <span class="comment"># remove userid, rating count and ave rating during training</span></span><br><span class="line">num_item_features = item_train.shape[<span class="number">1</span>] - <span class="number">1</span>  <span class="comment"># remove movie id at train time</span></span><br><span class="line">uvs = <span class="number">3</span>  <span class="comment"># user genre vector start</span></span><br><span class="line">ivs = <span class="number">3</span>  <span class="comment"># item genre vector start</span></span><br><span class="line">u_s = <span class="number">3</span>  <span class="comment"># start of columns to use in training, user</span></span><br><span class="line">i_s = <span class="number">1</span>  <span class="comment"># start of columns to use in training, items</span></span><br><span class="line">scaledata = <span class="literal">True</span>  <span class="comment"># applies the standard scalar to data if true</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;Number of training vectors: <span class="subst">&#123;<span class="built_in">len</span>(item_train)&#125;</span>&quot;</span>)</span><br></pre></td></tr></table></figure><p>.shape[1]是获取列，列数-1就是去除左边第一个特征,<code>content item_train.csv</code>文件中后面的14列0/1代表<br>电影在14个流派中属于的流派。<br>归一化数据</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># scale training data</span></span><br><span class="line"><span class="keyword">if</span> scaledata:</span><br><span class="line">    item_train_save = item_train</span><br><span class="line">    user_train_save = user_train</span><br><span class="line"></span><br><span class="line">    scalerItem = StandardScaler()</span><br><span class="line">    scalerItem.fit(item_train)</span><br><span class="line">    item_train = scalerItem.transform(item_train)</span><br><span class="line"></span><br><span class="line">    scalerUser = StandardScaler()</span><br><span class="line">    scalerUser.fit(user_train)</span><br><span class="line">    user_train = scalerUser.transform(user_train)</span><br><span class="line"></span><br><span class="line">    <span class="built_in">print</span>(np.allclose(item_train_save, scalerItem.inverse_transform(item_train)))</span><br><span class="line">    <span class="built_in">print</span>(np.allclose(user_train_save, scalerUser.inverse_transform(user_train)))</span><br></pre></td></tr></table></figure><p>使用sklearn数据预处理，Fit(): Method calculates the parameters μ and σ and saves them as internal objects.<br>解释：简单来说，就是求得训练集X的均值啊，方差啊，最大值啊，最小值啊这些训练集X固有的属性。可以理解为一个训练过程<br>Transform(): Method using these calculated parameters apply the transformation to a particular dataset.<br>解释：在Fit的基础上，进行标准化，降维，归一化等操作（看具体用的是哪个工具，如PCA，StandardScaler等）。<br><code>y_train</code>包含用户对电影的真实评分数据可用于后续处理。<br>来拆分和洗牌数据</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">item_train, item_test = train_test_split(item_train, train_size=<span class="number">0.80</span>, shuffle=<span class="literal">True</span>, random_state=<span class="number">1</span>)</span><br><span class="line">user_train, user_test = train_test_split(user_train, train_size=<span class="number">0.80</span>, shuffle=<span class="literal">True</span>, random_state=<span class="number">1</span>)</span><br><span class="line">y_train, y_test       = train_test_split(y_train,    train_size=<span class="number">0.80</span>, shuffle=<span class="literal">True</span>, random_state=<span class="number">1</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;movie/item training data shape: <span class="subst">&#123;item_train.shape&#125;</span>&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;movie/item test  data shape: <span class="subst">&#123;item_test.shape&#125;</span>&quot;</span>)</span><br><span class="line"><span class="comment">#缩放、随机排列的数据现在的平均值为零。</span></span><br><span class="line">pprint_train(user_train, user_features, uvs, u_s, maxcount=<span class="number">5</span>)</span><br></pre></td></tr></table></figure><p>3 - 用于基于内容的过滤的神经网络<br>现在，让我们构建一个神经网络，如上图所示。它将有两个网络，由一个点积组合而成。您将构建这两个网络。在此示例中，它们将是相同的。请注意，这些网络不需要相同。如果用户内容比电影内容大得多，则可以选择增加用户网络相对于电影网络的复杂性。在这种情况下，内容是相似的，因此网络是相同的。<br>使用 Keras 顺序模型<br>第一层是具有 256 个单元和 relu 激活的致密层。<br>第二层是致密层，有 128 个单位和一个 relu 激活。<br>第三层是具有单元和线性或无激活的致密层。num_outputs<br>将提供网络的其余部分。提供的代码不使用 Keras 顺序模型，而是使用 Keras 函数式 API。这种格式允许在组件互连方式方面具有更大的灵活性。<br>构建好神经网络后，下面，您将使用模型在多种情况下进行预测。<br>对新用户的预测<br>首先，我们将创建一个新用户，并让模型为该用户推荐电影。在示例用户内容上尝试此示例后，可以随意更改用户内容以匹配自己的偏好，并查看模型的建议。请注意，评分介于 0.5 和 5.0 之间（含 0.5 和 5.0），以半步为增量。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">new_user_id = <span class="number">5000</span></span><br><span class="line">new_rating_ave = <span class="number">1.0</span></span><br><span class="line">new_action = <span class="number">1.0</span></span><br><span class="line">new_adventure = <span class="number">1</span></span><br><span class="line">new_animation = <span class="number">1</span></span><br><span class="line">new_childrens = <span class="number">1</span></span><br><span class="line">new_comedy = <span class="number">5</span></span><br><span class="line">new_crime = <span class="number">1</span></span><br><span class="line">new_documentary = <span class="number">1</span></span><br><span class="line">new_drama = <span class="number">1</span></span><br><span class="line">new_fantasy = <span class="number">1</span></span><br><span class="line">new_horror = <span class="number">1</span></span><br><span class="line">new_mystery = <span class="number">1</span></span><br><span class="line">new_romance = <span class="number">5</span></span><br><span class="line">new_scifi = <span class="number">5</span></span><br><span class="line">new_thriller = <span class="number">1</span></span><br><span class="line">new_rating_count = <span class="number">3</span></span><br><span class="line"></span><br><span class="line">user_vec = np.array([[new_user_id, new_rating_count, new_rating_ave,</span><br><span class="line">                      new_action, new_adventure, new_animation, new_childrens,</span><br><span class="line">                      new_comedy, new_crime, new_documentary,</span><br><span class="line">                      new_drama, new_fantasy, new_horror, new_mystery,</span><br><span class="line">                      new_romance, new_scifi, new_thriller]])</span><br></pre></td></tr></table></figure><p>如果您确实在上面创建了一个用户，值得注意的是，该网络经过训练，<br>可以在给定包含一组用户类型评级的用户向量的情况下预测用户评级。<br>如果没有具有类似评级集的用户，仅仅为单一类型提供最高评级，<br>为其余类型提供最低评级，可能对网络没有意义。<br>现有用户的预测。<br>让我们看一下“用户 36”（数据集中的用户之一）的预测。<br>我们可以将预测的评级与模型的评级进行比较。<br>请注意，具有多种类型的电影在训练数据中多次显示。<br>例如，《时光机》有三种类型：冒险、动作、科幻</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">uid =  <span class="number">36</span> </span><br><span class="line"><span class="comment"># form a set of user vectors. This is the same vector, transformed and repeated.</span></span><br><span class="line">user_vecs, y_vecs = get_user_vecs(uid, scalerUser.inverse_transform(user_train), item_vecs, user_to_genre)</span><br><span class="line"></span><br><span class="line"><span class="comment"># scale the vectors and make predictions for all movies. Return results sorted by rating.</span></span><br><span class="line">sorted_index, sorted_ypu, sorted_items, sorted_user = predict_uservec(user_vecs, item_vecs, model, u_s, i_s, scaler, </span><br><span class="line">                                                                      scalerUser, scalerItem, scaledata=scaledata)</span><br><span class="line">sorted_y = y_vecs[sorted_index]</span><br><span class="line"></span><br><span class="line"><span class="comment">#print sorted predictions</span></span><br><span class="line">print_existing_user(sorted_ypu, sorted_y.reshape(-<span class="number">1</span>,<span class="number">1</span>), sorted_user, sorted_items, item_features, ivs, uvs, movie_dict, maxcount = <span class="number">10</span>)</span><br></pre></td></tr></table></figure><p>查找相似项目<br>上面的神经网络产生两个特征向量，一个是用户特征向量 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>v</mi><mi>u</mi></msub></mrow><annotation encoding="application/x-tex">v_u</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">u</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><br>和电影特征向量， <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>v</mi><mi>m</mi></msub></mrow><annotation encoding="application/x-tex">v_m</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">m</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><br>.这些是 32 个条目向量，其值难以解释。但是，相似的项目将具有相似的向量。此信息可用于提出建议。例如，如果用户对《玩具总动员3》的评价很高，则可以通过选择具有相似电影特征向量的电影来推荐类似的电影。</p><p>相似性度量是两个向量之间的平方距离  $ \mathbf{v_m^{(k)}}$<br>和  <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mi mathvariant="bold">v</mi><mi mathvariant="bold">m</mi><mrow><mo stretchy="false">(</mo><mi mathvariant="bold">i</mi><mo stretchy="false">)</mo></mrow></msubsup></mrow><annotation encoding="application/x-tex">\mathbf{v_m^{(i)}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.171108em;vertical-align:-0.12630800000000003em;"></span><span class="mord"><span class="mord"><span class="mord mathbf" style="margin-right:0.01597em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0448em;"><span style="top:-2.5736920000000003em;margin-left:-0.01597em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathbf mtight">m</span></span></span><span style="top:-3.2198em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathbf mtight">i</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.12630800000000003em;"><span></span></span></span></span></span></span></span></span></span></span><br>: $$\left\Vert \mathbf{v_m^{(k)}} - \mathbf{v_m^{(i)}}  \right\Vert^2 = \sum_{l=1}<sup>{n}(v_{m_l}</sup>{(k)} - v_{m_l}<sup>{(i)})</sup>2\tag{1}$$<br>这个平方距离矩阵上标代表电影种类，下标代表电影的特征数m，因为对角线是相同的电影，所以沿对角线的掩码值不会包含在计算中。然后，我们可以通过找到每行的最小值来找到最近的电影。</p><h2 id="强化学习">强化学习</h2><h3 id="q-s-a-函数">Q(s,a)函数</h3><p>这个函数就是在状态s执行动作a，然后后续都做最有选择看看收益，最后把不同的动作比较得到maxQ。然后这个变量不太清除似乎是错误决定的概率<br><code># Probability of going in the wrong direction misstep_prob = 0.0</code></p><h3 id="深度-q-学习-月球着陆器">深度 Q 学习 - 月球着陆器</h3><p>在这项任务中，您将训练一名特工将月球着陆器安全地降落在月球表面的着陆台上。<br>1 - 导入包<br>我们将使用以下软件包：<br>numpy是 Python 中用于科学计算的包。<br>deque将是内存缓冲区的数据结构。<br>namedtuple将用于存储体验元组。<br>该工具包是可用于测试强化学习算法的环境集合。我们应该注意，在此笔记本中，我们使用的是 版本 .gymgym0.24.0<br>PIL.Image并且是渲染月球着陆器环境所必需的。pyvirtualdisplay<br>我们将使用框架中的几个模块来构建深度学习模型。tensorflow.keras<br>utils是一个模块，其中包含此赋值的帮助程序函数。您无需修改此文件中的代码。<br>运行下面的单元格以导入所有必需的包。<br>pyvirtualdisplay报错，重新安装包可以在jupyter notebook中直接输入pip命令，在前面加感叹号</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Set up a virtual display to render the Lunar Lander environment.</span></span><br><span class="line">Display(visible=<span class="number">0</span>, size=(<span class="number">840</span>, <span class="number">480</span>)).start();</span><br></pre></td></tr></table></figure><p>这行代码报错估计是windows不支持要在liunx中使用</p><h2 id="机器学习背景知识补充">机器学习背景知识补充</h2><p>argmax是一种函数，是对函数求参数(集合)的函数。当我们有另一个函数y=f(x)时，若有结果x0= argmax(f(x))，则表示当函数f(x)取x=x0的时候，得到f(x)取值范围的最大值；若有多个点使得f(x)取得相同的最大值，那么argmax(f(x))的结果就是一个点集。换句话说，argmax(f(x))是使得 f(x)取得最大值所对应的变量点x(或x的集合)。arg即argument，此处意为“自变量”。<br><a href="https://zhuanlan.zhihu.com/p/259836059#:~:text=NP%E9%9A%BE%E9%97%AE%E9%A2%98%EF%BC%88NP-hard%E9%97%AE%E9%A2%98%EF%BC%89%EF%BC%9A%E5%AE%83%E6%BB%A1%E8%B6%B3NPC%E9%97%AE%E9%A2%98%E5%AE%9A%E4%B9%89%E7%9A%84%E7%AC%AC%E4%BA%8C%E6%9D%A1%E4%BD%86%E4%B8%8D%E4%B8%80%E5%AE%9A%E8%A6%81%E6%BB%A1%E8%B6%B3%E7%AC%AC%E4%B8%80%E6%9D%A1%EF%BC%88%E5%B0%B1%E6%98%AF%E8%AF%B4%EF%BC%8CNP-Hard%E9%97%AE%E9%A2%98%E8%A6%81%E6%AF%94,NPC%E9%97%AE%E9%A2%98%E7%9A%84%E8%8C%83%E5%9B%B4%E5%B9%BF%EF%BC%8CNP-Hard%E9%97%AE%E9%A2%98%E6%B2%A1%E6%9C%89%E9%99%90%E5%AE%9A%E5%B1%9E%E4%BA%8ENP%EF%BC%89%EF%BC%8C%E5%8D%B3%E6%89%80%E6%9C%89%E7%9A%84NP%E9%97%AE%E9%A2%98%E9%83%BD%E8%83%BD%E7%BA%A6%E5%8C%96%E5%88%B0%E5%AE%83%EF%BC%8C%E4%BD%86%E6%98%AF%E4%BB%96%E4%B8%8D%E4%B8%80%E5%AE%9A%E6%98%AF%E4%B8%80%E4%B8%AANP%E9%97%AE%E9%A2%98%E3%80%82">P问题、NP问题、NP完全问题和NP难问题理解</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>翻译以及感想：与世隔绝扰乱社会互动，破坏大黄蜂大脑发育稳定</title>
      <link href="/posts/c3e520a5/"/>
      <url>/posts/c3e520a5/</url>
      
        <content type="html"><![CDATA[<h1 id="摘要">摘要</h1><p>与世隔绝，特别是在早期生活中，会导致有害的生理和行为后果。在这里，我们利用新的高通量工具，从行为、分子和神经解剖学的角度全面研究隔离对大黄蜂的影响。我们在完全隔离的情况下饲养新出现的大黄蜂，以小组形式或在它们出生的群体中饲养，然后分析它们单独或与另一只蜜蜂配对时的行为。我们发现，当独处时，每种养育条件下的个体都表现出不同的行为特征。当与同种蜜蜂配对时，以小群或在出生群体中饲养的蜜蜂表现出类似的行为特征。然而，与世隔绝的蜜蜂表现出更多的社交互动。为了确定这些差异的神经生物学相关性，我们量化了大脑基因的表达，并测量了来自每种养育条件的一部分人的关键大脑区域的体积。总体而言，我们发现，与世隔绝增加了社会互动，扰乱了基因表达和大脑发育。在小群体中有限的社会经验足以保存大脑发育和社会行为的典型模式。</p><h1 id="1-结果和讨论">1.结果和讨论</h1><p>群居动物依靠与同种生物的互动才能生存。与社会群体隔绝会对身体健康、健康甚至长寿造成不利影响。1-6在敏感的发育时期，例如在生命的早期，社会隔离的影响甚至更为深远，当时社会经历可能强烈地影响个人的社会能力，即根据社会环境的变化调整行为的能力。7-9这可能导致较差的发育或健康结果。10例如，社会环境中的攻击性增加是社会孤立的常见结果，在老鼠、11、12条鱼、8、13只苍蝇、14-16和蟋蟀中。17、18早期生活环境也可能影响社会昆虫的社会能力，19越来越多的研究表明，社会隔离会影响蜜蜂的行为和生理，20-22只蚂蚁，1，2，4，23，24只蚂蚁和25-27只蜜蜂。在这里，我们研究了大黄蜂，熊蜂，熊蜂的社会隔离对个人和社会行为，基因表达和神经解剖学的影响。<br>大黄蜂生活在由大约100-200名雌性工蜂和一只蜂王组成的群居群体中。个体在行为上表现出始终如一的差异，这种差异随着时间和环境的变化而稳定。这些行为特征是在成年期的头1-2周通过个体之间的成对和空间互动而建立的。29-32在成年早期的同一时期，大黄蜂的大脑迅速发育。33为了确定社会隔离是否以及如何影响该物种的社会行为，我们在这一早期生命发育阶段通过实验改变了工作者的社会环境，然后分析了单独或与社会伴侣配对的个体蜜蜂行为。<br>为了改变大黄蜂早期的生活社交体验，我们开发了一个模块化的住宅室，将居民与外部听觉、视觉和气味线索隔离(星形方法；图1A)。我们收集了28只新孵化的幼蜂，从它们银色的外表和在群体中的迟缓行为可以辨认出来，并将它们分成3种不同的早期生活处理条件：隔离(96只行为，16只RNA测序，20只成像)，其中一只蜜蜂被完全社会隔离；群养(113只行为，15只RNA测序，24只成像)，其中4只巢友被安置在蜂群外；和蜂窝式(n=99用于行为，n=9用于RNA测序，n=22用于成像)，在这种情况下，个体立即返回其出生的蜂群。<br>(一)试验性概述。通过银白色的色素沉着和缓慢、迟缓的步态来识别新出现的寒鸦，它们被分配到三种处理条件中的一种：群体(COL)，其中个体被送回其出生的群体；群体(GRP)，其中四个筑巢伙伴在群体外共居；以及隔离(ISO)，其中一只蜜蜂被完全社会隔离。蜂群饲养的蜜蜂可以接触到蜂王(用皇冠表示)、巢友和巢。<br>黄色底物表示在每个饲养室中使用人造蜂蜡作为底物(STAR法)。蜜蜂在这些处理条件下连续饲养9天。在羽化后第10天，收集蜜蜂进行行为和神经生物学分析。<br>(B)行为分析和嵌入。在红外线照射下，从上方记录自由活动的蜜蜂30min。蜜蜂在单独或成对的环境中进行化验。在行为测试的持续时间内，Sleap被用来跟踪身体部位和蜜蜂的身份(黑色覆盖；跟踪示例见视频S1)。使用t-SNE将所有被测试蜜蜂的身体部分时间痕迹的光谱图一起嵌入到二维空间中。使用分水岭变换对高密度区域进行聚类，然后根据它们共同的行为主题组合在一起，形成一个包含5个离散行为的行为图：空闲、触角行为、梳理、运动和快速运动。有关完整的详细信息，请参见图S1中的STAR方法和视频S2。<br>(C)时间使用作文。隔离和群养蜜蜂在时间使用构成上有显著差异(ILR转化分数的非参数多变量检验，Wilks‘s lambda-type统计量，**p&lt;0.01)。隔离蜂群与群养蜂群间、群养蜂群与群养蜂群间差异均无统计学意义(p&gt;0.15)。隔离蜜蜂n=29，群养蜜蜂n=36，群养蜜蜂n=31。<br>(D-H)离散行为成分分析。单蜂在空闲、触角和快速运动行为上存在显著差异，这可以通过iso或grp蜜蜂的几何平均值与三叶蜂之间的对数比率差异来量化(误差条是自举95%的可信区间)。<br>如果自举的95%可信区间不与0重叠，则认为差异显著。*p&lt;0.05，**p&lt;0.01。<br>蜜蜂连续9天处于处理状态；因此，孤立的蜜蜂被饲养时完全没有社交经验，而群养和群养的蜜蜂经历了不同程度的社会化。在羽化后第10天，进行行为分析，并收集组织进行下游分析。308只蜜蜂被纳入行为试验分析，40只蜜蜂被纳入转录组分析，66只蜜蜂被纳入容量分析(详见STAR方法)。不同的个体集合被用于每个下游分析(行为、脑基因表达、脑形态)，排除了结合多个数据集的分析。<br>我们通过记录蜜蜂在10厘米培养皿中的自由行为，记录了它们在红外线照射下30分钟的自由行为，这是蜜蜂看不到的。34对于配对条件，我们分析了相同的处理对(Iso+Iso，Grp+Grp，Col+Col)，以及每种可能的组合(Iso+Grp，Iso+Col，Grp+Col，以及来自不同群体的Grp蜜蜂)(图S1和S2)，从而捕捉到了实验蜜蜂自己(“单飞”)和另一只蜜蜂(“配对”)的行为。为了量化蜜蜂的行为，我们使用了MotionMapper技术。35我们首先使用SLEAP36姿势跟踪软件来识别每一帧中的身体部位(图1B；视频S1)，然后对身体部位进行连续的小波变换。<br>仓位时间序列。然后使用t分布随机邻近嵌入(t-SNE)将串联的光谱密度嵌入到二维中，并且在t-SNE空间的每个位置花费的时间的概率密度函数显示对应于通常重复的身体部分动态的峰值(图1B和S1，详情见STAR方法)。我们通过分水岭变换分割嵌入的空间，以分离固定的肢体动力学区域。我们根据相应的视频片段将每个区域分配到五种离散行为状态中的一种：空闲(不动)、触角运动、梳理、运动和快速运动行为，这些行为主要见于群养蜜蜂的单独试验(图1和图S1；视频S2)。这使我们能够为每一只蜜蜂定义离散的行为组成特征，并准确地确定每一组蜜蜂的行为偏见。群养蜜蜂比群养或隔离的蜜蜂有更多的空闲时间，而群养的蜜蜂比群养或隔离的蜜蜂在快速运动中花费的时间多得多(图1C)。<br>为了利用成分数据分析原理量化每个治疗组的行为特征的差异，37，38我们对离散的行为分数进行了等距对数比(ILR)变换，以四个独立分量来表示数据。我们对ILR成分进行了非参数多变量分析，发现单独隔离的蜜蜂和群体饲养的蜜蜂的总体行为特征之间存在显著差异(Wilks‘s lambda类型统计，p&lt;0.01；图1C)。为了检验群养和群养或隔离蜜蜂之间的具体行为差异，我们以群养蜜蜂作为分母的对照组，计算了每个行为组件的个体几何平均值的对数比。与群养的蜜蜂相比，我们发现群养和隔离的个体的闲置行为都受到了抑制，并且群养的蜜蜂表现出更高水平的快速运动和受抑制的触角行为(图1D-1H；详细信息见STAR方法)。这些数据通过量化蜜蜂在行为分析过程中的瞬时速度得到支持(图S1E)。<br>这些模式与在蚂蚁中发现的不同，在蚂蚁中，与其蜂巢筑巢的个体相比，孤立的个体表现出更多的运动活动。3总体而言，我们的数据表明，在单独的环境中，来自所有三个处理组的蜜蜂以独特的方式在行为上存在差异，表明早期生活环境对个体行为的影响。<br>为了表征隔离对社会行为的影响，我们接下来研究了两两互动，这被认为是群体行为动态的基石。39我们首先量化了成对蜜蜂接近的频率。<br>我们将配对蜜蜂的胸腔间距离的分布除以随机排列产生的分布，使我们能够检查与随机机会相比特定胸腔间距离的丰富情况(图2A)。为了清楚起见，我们只给出了相同处理对的结果，但所有成对比较都在补充信息中给出(图S2)。为了确定与社会伴侣的距离是否会影响蜜蜂的整体行为，我们量化了配对蜜蜂行为的变化，这取决于它们与社会伴侣的距离。我们计算了在0.2厘米间隔内不同胸腔距离处的肢体动力学(即蜜蜂的平均t-SNE嵌入空间)和胸间距离为8厘米处的肢体动力学之间的Jensen-Shannon发散(衡量概率分布之间的差异)40(图2B)。我们通过消除蜜蜂相互接触的帧或竞技场边缘的数据，解决了跟踪误差或受限运动产生的伪影。我们发现，在所有配对类型中，当蜜蜂之间的距离小于2厘米(大约两个身体长度)时，行为随距离变化很大，但在较大距离时，蜜蜂的行为基本上不受伴侣的影响(图2A)。基于这些结果，我们定义了当蜜蜂胸间距离小于2厘米时为附属蜜蜂，当蜜蜂之间距离较远时为非附属蜜蜂。这与以前在类似范围内定义社会互动的研究是一致的。32我们的结果表明，与相同处理对的克隆或群养蜜蜂相比，隔离的大黄蜂对胸部距离较近(&lt;2厘米)的占有率最高，如不重叠的标准误差区所示(图2A)。因此，与与世隔绝的蜜蜂不同，20只与世隔绝的大黄蜂在所有配对中与社会伴侣相处的时间最长。我们还发现，与零模型相比，成对的群养大黄蜂更有可能被大的胸腔距离分开，这也与先前观察到的群养蜜蜂的行为不同。<br>接下来，我们计算了每个离散行为组件的关联丰富，定义为关联与非关联时每个行为花费的时间比例的对数比。<br>积极的从属充实表示一种行为在从属关系中发生的频率较高，而消极的从属关系充实表示一种行为在从属关系中发生的次数较少。为了调查从属关系对特定行为的影响，我们使用蜜蜂复制的几何平均值计算了每个行为的从属丰富程度，并引导这些方法来计算可信区间(n=5,000；图2C)。我们发现，孤立的蜜蜂在五分之四的行为上表现出显著的丰富或枯竭。与世隔绝的蜜蜂有更多的空闲和触角行为，而在附属时运动更少和运动更快。相比之下，群养和群养的蜜蜂只在附属和非附属州之间的梳理方面显示出显著的变化(增加)(图2C)。<br>为了比较不同饲养条件下从属关系对行为的影响，我们计算了在相同饲养条件下每只蜜蜂的从属关系丰富度。我们发现，在三种行为(触角、运动和快速运动)上，隔离蜜蜂和群养蜜蜂之间的中位数联系丰富有所不同，在快速运动方面，隔离蜜蜂和群养蜜蜂之间存在差异，但群养蜜蜂和群养蜜蜂之间没有差异(图2D)。总而言之，这些数据表明，在三种饲养条件中，隔离饲养的蜜蜂与社交伙伴相处的时间最长，在与社交伙伴建立联系时表现出最大的行为变化。<br>从属关系和其他社会合作模式往往依赖于区分筑巢伙伴和非筑巢伙伴的能力。大黄蜂和其他群居昆虫主要通过它们触角上的化学感受器探测到化学信号来做到这一点。这些物质的化学成分信号可以随身体部位43、44的不同而不同，因此天线接触的位置可以指示针对特定气味子集而不是其他气味子集。我们将触角接触伴侣蜜蜂的触角、腹部和身体区域归一化，按每个指定区域占用的蜜蜂总可用边缘的比例进行归一化(图2E和2F)。这些结果表明，相同饲养条件的蜜蜂对触角的接触明显多于触角对腹部或触角对身体的触碰(Wilcoxon秩和检验，p&lt;0.001)(图2F)。成对的群养和隔离蜜蜂的触角接触总体水平高于群养蜜蜂，相对触角接触的质量水平高于其他模式(图S2J-S2L)。然而，一对孤立的蜜蜂在从事触角对触角、触角对腹部或触角对身体接触的倾向方面没有统计上的显著差异，这表明这种社会互动模式失去了特异性。聚焦于我们控制组更喜欢的触角对触角触摸模式，我们发现相同饲养条件的蜜蜂对触角接触所花费的时间比例相当，但与群养和群养蜜蜂相比，孤立蜜蜂在这一行为上表现出显著更高的差异(图2G)。我们的数据显示，早期生活中的社会经历调节了触角接触的倾向，并可能影响行为的专一性。在蚂蚁中也观察到了类似的现象，与出生的蚁群隔离会导致社会互动的增加(例如，滋养松弛)，并减少对非巢友的攻击。<br>综上所述，我们的行为分析结果表明，早期的社会环境会在以后的生活中导致关键的社会行为特征的变化。与群养蜜蜂相比，单独饲养的蜜蜂和群养蜜蜂在独居环境中都表现出不安的行为特征。然而，在配对测试中，当孤立的蜜蜂靠近伴侣蜜蜂时，它们的行为会发生广泛而显著的变化--当它们联系在一起时，它们的行动减少，闲置和触角行为增加。相比之下，群养和群养蜜蜂的行为在很大程度上不会受到接近社会伴侣的影响。孤立的蜜蜂在与伙伴蜜蜂的触角接触上花费的时间也有很大的差异，而群养和群养的蜜蜂更一致。这表明，虽然群养条件下的蜂箱外环境会改变蜜蜂在独处时的行为，但只有与世隔绝的蜜蜂在社交伙伴在场时才会扰乱行为。相比之下，观察到的群养蜜蜂的社会行为仍然完好无损，这表明即使减少了群体规模，也可能足以维持群居昆虫典型社会互动的许多方面。<br>我们在隔离的蜜蜂和群养的蜜蜂之间发现的行为差异表明，这些试验组之间可能存在潜在的神经生物学差异。为了更好地了解这些行为变化的分子基础，我们使用TM30 seq，一种基于标签的30浓缩RNA测序方法，对处理蜜蜂的子集(分离，n=16；组，n=15；群，n=9)进行了全脑转录组测序。45我们首先分析了跨处理组的差异表达基因(DGs)，阻止了出生蜂群(图3A；STAR方法)。<br>在成对比较中，孤立蜜蜂的大脑转录与群养和群养蜜蜂的大脑转录显示出明显的差异。我们发现隔离和群养蜜蜂之间的脑基因表达有很大差异(94度，FDR&lt;0.05)，而隔离蜜蜂和群养蜜蜂之间的差异不大(27度，FDR&lt;0.05)(图3A；参见数据S1以获取完整的基因列表)。总体而言，与其他两种饲养条件中的任何一种相比，大多数DEGS在隔离的蜜蜂中的表达都有所减少(数据S1)。令人惊讶的是，在群养和群养的蜜蜂之间没有发现DEG(图3A)。GO术语丰富分析表明，社会隔离影响对社会交流很重要的分子系统，包括丰富与类固醇生物合成过程(已知与昆虫内分泌信号和信息素产生有关)调节的注释术语，这在蜂群或成群的蜜蜂中找不到(图S3；数据S2)。总体而言，我们的转录数据表明，就像我们观察到的行为变化一样，完全的社交隔离会导致对社交生活至关重要的关键神经分子系统的表达发生显著变化，而集体养育并不会显著改变全脑基因的表达。<br>6个基因在分离的和成组的DEG以及分离的和群体饲养的一组中是共同的二乙二醇聚酯。这些基因中有两个参与保幼激素(JH)的信号传递：载脂蛋白(apoLp；图3B)和热休克蛋白83(hsp83；图3D)。在群居昆虫中，JH信号是生殖分化和社会行为的关键调节因子。47-52 ApoLp和hsp83是协调JH运输到其利用部位并启动其下游效应的一系列蛋白质之一。50，53此外，热休克蛋白先前已被确定为蜜蜂、小鼠和刺鱼神经基因组中对社会挑战做出反应的关键保守成员。54 apoLp、hsp83和97hsp在我们的转录数据库中的差异表达强烈表明，社会隔离扰乱了大黄蜂中JH的信号传递，突显了这一途径在调节昆虫间社会行为方面的重要性。<br>虽然差异基因表达单独考虑每个基因，但网络分析提供了对转录组的全球网络属性的洞察。为了更好地了解不同治疗组之间的基因表达差异，我们使用加权基因共表达网络分析(WGCNA56)来研究基因网络动力学。为了强调隔离引起的网络变化，以及由于没有证据表明群养和群养蜜蜂之间的基因表达存在显著差异，我们将两组蜜蜂的转录数据合并为一组用于这一分析(分类数据见图S4)。我们使用隔离蜜蜂的数据和群养和群养蜜蜂数据的组合来构建全局共表达网络，然后识别出具有连锁共表达的基因模块。<br>为了在孤立和有社会经验的蜜蜂之间建立网络组织中的一致性和差异性，从每个行为背景的两个相关矩阵的加权平均中得出16个共识模块(图3和S3；数据S3；STAR方法)。然后，我们测试了零假设，即与社会经验丰富的蜜蜂相比，隔离的蜜蜂中的所有基因模块之间的相关矩阵没有差异(模块间的连接性；图3H-3K)。这一分析揭示了独立蜜蜂转录本在模块水平上的失调，如图3J所示，其中接近1的数字表示保存更牢固的相关性(高保存性)，而接近0的数字表示保存较差的相关性(低保存性)。例如，与群养和群养(C+G)蜜蜂相比，青色模块中的基因在其与隔离(I)中其他模块的邻接关系中显示出较低的保存性(图3J；数据S3)。然后，我们通过计算每个模块中所有可能的成对基因表达组合的平均相关性来检查模块内的连通性。对于青色模块，该值在群养和群养蜜蜂中为0.32，在隔离蜜蜂中为0.28(图3K)，表明隔离蜜蜂中的基因表达相关性在统计上显著下降。<br>纵观所有模块，分离的蜜蜂数据集中的模块中的基因往往显示出比群体和群体饲养的数据集中的那些更高的模块内连接性(图3K；表S1)。综上所述，我们的数据显示，社会隔离导致了大脑转录组的模块内和模块间的失调(图3H-3K)。<br>考虑到隔离对大脑基因表达的影响，我们接下来询问社会隔离是否会导致大脑发育的广泛变化。这些影响在脊椎动物中得到了很好的描述，57越来越多的证据表明，隔离也会影响昆虫的大脑。4、21、25、26例如，在蚂蚁身上的研究表明，在早期生命中长期的社会隔离会损害与感觉整合、学习和记忆有关的关键大脑区域的发育。4大黄蜂的早期发育期的标志是神经纤维体积的变化，大约在剥离后9天左右达到成年状态。33这种成熟过程可能受到不同过程的影响，如学习、内源性激素信号和经验，包括社会经验。58-60确定社会养育环境如何影响大黄蜂大脑的发育，我们使用具有代表性的工蜂大脑的全共焦成像堆栈创建了一个带注释的大脑模板(图4A和4B；视频S3)。将实验蜜蜂(隔离，n=20；群养，n=24；群养，n=22；步长2.542 mm)的单个共聚焦堆栈拟合到该模板进行体积分析，并对感兴趣的神经纤维区的体素进行求和。为了解释大脑大小的个体差异，我们将感兴趣的神经鞘中的体素除以大脑样本中所有测量的体素，得出每只蜜蜂的体积分数(图4C-4F)。<br>我们发现，虽然所有大脑区域的平均体积分数在不同的治疗条件下是相似的，但体积分数明显不同(图4C-4F和S5)。对于所有的神经皮层区域，群体和群体饲养的蜜蜂之间的个体间差异很小，表明个体之间的同质性，但这种差异在孤立的蜜蜂中很高(图4C-4F和S5)。我们的结果不同于以前对群居昆虫的研究，后者使用手动分割方法来测量绝对体积4，33，61(尽管以前研究的数据表明这些研究中也存在个体间差异33，61)。我们在这里报告的自动化方法能够在比以前的研究更精细的范围内对大脑体积进行量化，并减少人类偏见的可能性。<br>群养和群养蜜蜂的大脑之间的紧密连贯性，以及在触角对触角接触和孤立蜜蜂的大脑中观察到的不断增加的差异，强烈表明社会环境对大黄蜂的发育起到了强大的缓冲作用。<br>在完全缺乏社会线索的情况下，大脑可能会变得容易受到去钙化的影响，定义为偏离优化的表型。62-64换句话说，社会隔离似乎破坏了大脑的稳定，并随机改变了大脑的发展轨迹，导致观察到的神经纤维体积的更大变化。这种增加的变异可能是通过基因表达或基因网络关系的变化来调节的，并可能有助于解释我们观察到的触角对触角接触的更大差异，触角接触是隔离蜜蜂社会互动的一个关键方面。<br>综上所述，我们的结果表明，早期生活的社会环境塑造了大黄蜂的成年行为，并且这些影响在社会背景下是显著的。虽然这三组蜜蜂在单独测试中都有不同的行为谱系，但孤立的蜜蜂表现出独特的行为反应，这些反应是由社会联系引起的，而群体饲养的蜜蜂和集群饲养的蜜蜂都没有表现出这种反应-它们花更多的时间与社会伴侣在一起，并在社交必不可少的行为(头对头的触角)上表现出较低的特异性。被隔离的蜜蜂在触角行为和大脑生理方面也表现出更大的个体间差异。<br>我们在大黄蜂身上观察到的社会隔离的行为影响可能是社会能力降低的标志，类似于脊椎动物中所描述的。7-9社会能力，或个人根据环境调节社会行为的能力，依赖于行为灵活性和信息感知。7，9触角的专一性丧失(图S2)，例如，可能是孤立蜜蜂社会能力降低的迹象。这些行为变化是否由于发现社交线索、处理相关线索的显著程度或产生适当线索的能力受到干扰，目前尚不清楚。奇怪的是，中国的社交能力较低脊椎动物通常表现为不适当的或更强的攻击性。在我们的研究中，孤立的个体没有表现出大黄蜂典型的攻击行为，如飞镖、咬人或嗡嗡作响的翅膀，68-70与蚂蚁的研究表明隔离导致攻击减少。2，4这可能表明脊椎动物和群居昆虫在社会能力上的一个重要差异。众所周知，大黄蜂群体具有很高的社会耐受性，甚至对非亲属蜜蜂也是如此，71在蜂群周期的竞争阶段，当工蜂年龄大得多时，争斗行为通常表现出来。68、69被隔离的蜜蜂的行为特征可能会随着时间的推移而改变，或者是随着年龄的增长，或者是随着接触社会同种物质的不同程度的改变。我们在这里报道的隔离诱导的行为和神经基因组变化如何在大黄蜂的一生中进化仍然是一个令人兴奋的悬而未决的问题。我们的研究为未来直接评估这些潜在原因以及社会孤立的代价的研究奠定了基础。</p><h1 id="总结和感想">总结和感想</h1><p>这篇文章是一项关于社会隔离对大黄蜂行为和大脑发育影响的科学研究。作者使用了三种不同的饲养条件分别为：隔离，其中一只蜜蜂被完全社会隔离；群养，其中四个筑巢伙伴在群体外共居；和蜂窝式，其中个体立即返回其出生的蜂群，来改变大黄蜂早期的社会经验，然后观察了它们在单独或成对的环境中的行为，以及它们的大脑基因表达和神经解剖学。在研究的技术手段层面，文章的作者使用模块化的住宅室来隔离蜜蜂和控制它们的社会环境，使用红外线摄像机和SLEAP软件来跟踪蜜蜂的身体部位和行为，使用MotionMapper技术和t-SNE算法来量化蜜蜂的行为特征和状态，使用TM30 seq方法对蜜蜂的全脑转录组进行测序和分析，使用全共焦成像堆栈和自动化方法来测量蜜蜂的大脑区域的体积。再通过上述方法将信息汇总成图表，还对图表中的各个信息进行说明，详细生动的展现了三组不同黄蜂的行为特征。最后他们发现，与世隔绝的大黄蜂表现出更多的社交互动，但也表现出更低的社会能力和更大的个体差异。由此认为，社会隔离扰乱了大黄蜂的基因表达和大脑发育，导致了行为上的不稳定和失调。<br>这片文章使用各种信息手段来全面研究社会隔离对昆虫行为的影响值得我们学习。我认为当前信息技术高速发展，作为研究人员也应该解放思想，提高跨学科的融合研究能力，充分利用各种工具和算法进行信息融合处理。通过阅读这片文章，让我知道了社会隔离如何扰乱大黄蜂的基因表达和大脑发育，这是一个有创新性的研究点，还为进一步探索社会能力的分子和神经机制，以及它们在不同社会昆虫中的进化提供了线索。同时普遍性寓于特殊性之中，即使该文章以蜜蜂为模式昆虫，但我们应该有迁移学习能力，对于同类生物如甲虫，蜻蜓，该文章的方法也具有普遍意义，为我们的研究提供了较好示范样本，该文章所得到的结论也对研究人类的社会行为和长寿因子具有重要意义。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>翻译文章以及感想：微塑料对昆虫生理的影响及兴奋作用的指征</title>
      <link href="/posts/e0e0105/"/>
      <url>/posts/e0e0105/</url>
      
        <content type="html"><![CDATA[<h1 id="摘要">摘要</h1><p>昆虫在生态系统中扮演着重要的角色。近年来，全球昆虫数量和种类都出现了戏剧性的下降。微塑料污染已引起广泛关注。为此，本文综述了近年来微塑料对昆虫生理效应的研究进展。结果表明，微塑料对昆虫生理的影响具有剂量依赖性，涉及多种因素，包括微塑料的不同物理化学性质和昆虫的生理特性。微塑料会对昆虫的生存、繁殖、发育和肠道微生物区系产生负面影响。高浓度和小尺寸通常与高毒性有关。现有的研究还表明，在微塑料的作用中存在阈值和兴奋反应，即低剂量对昆虫有利。这表明，不仅要关注大剂量微塑料的毒性，而且要从兴奋的角度全面了解微塑料对昆虫的影响。</p><h1 id="研究背景">研究背景</h1><p>在近年来最好的科幻小说之一《三体问题》中，有一句话很有说服力：“虫子从来没有真正被击败过。事实上，和所有人类文明一样，昆虫并没有灭绝，它们仍然自豪地行走在天地之间，这是人所共知的。但虫子真的像人类想象的那样强大吗？昆虫是生态系统的重要组成部分，对包括人类在内的整个生物圈的生存有着深远的影响。昆虫在生态系统中扮演着分解者、植食性、传粉者、捕食者或寄生虫的角色，它们本身也是其他动植物的猎物。昆虫生物多样性和种群的减少不仅会影响生态系统服务，包括植物授粉，还会影响食物链中以昆虫为食的动植物的生存，导致食物链和生态系统的崩溃，造成巨大的生态和环境连锁效应，从而造成社会和经济损失。<br>近年来，全球昆虫生物多样性呈急剧下降趋势。然而，由于昆虫衰退的过程是非常宏观的，处于其中的人类很难获得足够直观和深刻的体验。而且，除美国和欧洲等少数发达国家外，对昆虫生物多样性的监测极差，昆虫衰退和多样性丧失的状况被严重低估。相关研究在世界范围内提出了令人震惊的科学证据。例如，荷兰奈梅亨大学和其他机构的研究人员在2017年进行的一项研究[2]表明，总的来说，1989年至2016年间，德国各地飞行昆虫的生物量下降了76%。澳大利亚悉尼大学的科学家发表了一篇2019年全球范围内昆虫衰退现状及其驱动因素的综述[3]，强调世界上近一半的昆虫物种正在迅速减少，三分之一受到威胁，并指出栖息地丧失、农业集约化、污染、病原体和生物入侵以及气候变化等生物因素是最重要的驱动因素。因此，昆虫多样性和生物量的下降是一个值得人类关注的现象。<br>由于它们的多功能性，塑料已经渗透到人类所有的活动和公共事业中。1907年，利奥·贝克兰生产了世界上第一个合成塑料，从1950年到2018年，全球塑料年产量从170万吨大幅增加到3.59亿吨[4]。由于废物管理不善，大约1-5%的塑料最终成为陆地环境中的废物，主要是海洋环境中的废物。<br>最近的新冠肺炎疫情推动了一次性塑料的消费。研究估计，全世界各使用了1290亿个口罩和650亿个手套在2020年上半年[5]。由于担心塑料作为病毒载体导致的疾病传播，人们选择使用一次性塑料医疗产品，而不是重复使用它们。数据显示，截至2021年8月，新冠肺炎疫情在全球范围内产生了840±140万吨塑料垃圾。其中，向全球海洋排放的塑料总量为25.9±3.8万吨，占全球河流塑料排放总量的1.5±0.2%[6]。医疗废物管理不善，特别是在发展中国家，增加了潜在的生态和健康风险，尽管经济活动减少导致其他类型塑料材料的消费和处置减少。<br>微纳米塑料(MPS/NPs)是一种新兴的全球性污染物。<br>污染的普遍程度和严重程度令人极为关切。在Web of Science Core Collection数据库中使用关键字“微塑料”和“纳米塑料”进行搜索显示，出版物的数量(MPS。12465个/NPS。2234)在过去十年中迅速增长，这表明科学界对这一主题的兴趣日益浓厚(图1)。微塑料被定义为尺寸为0.1-5000毫米的塑料颗粒，而纳米塑料的尺寸小于0.1毫米。在不同类型动物的样本中检测到了微塑料[7]。例如，太平洋牡蛎摄取聚苯乙烯微球(PS-MPS)影响了摄食和繁殖[8]。摄取丙纶超细纤维可减少蟹类的食物消耗，降低其生长所需的能量[9]。在大鼠摄入MPS/NPS后，观察到肠道炎症和肠道微生物区系失调[7]。人类处于食物链的顶端。研究证实，微塑料已经“侵入”人体，在人类血液和母乳中发现了微塑料颗粒[10，11]。<br>本文综述了近年来微塑料对昆虫生理效应的研究现状。首先，描述了可能影响昆虫的微塑料的来源。然后，简要介绍了微塑料在昆虫生理上的作用。此外，根据兴奋反应理论，比较了不同物理化学性质的微塑料对昆虫的影响。最后，我们展望了微塑料和昆虫生理学研究的未来挑战和前景。</p><h1 id="可影响昆虫的微塑料来源">可影响昆虫的微塑料来源</h1><p>微塑料根据释放到环境中的来源分为初级或次级[4，10]：初级MPS的制造尺寸小于5 mm，用于商业应用，如牙膏、去角质面部磨砂膏、成型用塑料粉。<br>纳米塑料通常来自涂料、粘合剂、电子产品等的释放。二次MP/NPs是较大塑料物品降解后的产物，受到剪切力和紫外线辐射等多种因素的调节。二次MPS/NPs占环境释放的大部分，而一级MPS只占15-30%。</p><h2 id="空气中微塑料的大小-组成-丰度-来源及影响因素">空气中微塑料的大小、组成、丰度、来源及影响因素</h2><p>显然，空气中的微塑料对昆虫，特别是那些有飞行能力的昆虫起到了调节作用。<br>空气中微塑料的尺寸从5000毫米到&lt;25毫米不等。大多数空气中的微塑料是以纤维的形式存在的。例如，法国巴黎的一项研究发现，纤维类型占90%，而二维碎片只占10%[12]。因此，对大气微塑料的研究主要集中在纤维的研究上。气载微塑料由天然聚合物和合成聚合物组成。天然聚合物主要是纤维素和蛋白质。已检测到20多种合成聚合物。最常见的类型是PET、PE、PP和PS。合成纺织品是空气中微塑料的主要来源。因此，室内空气中的微塑料比室外空气中的微塑料多，可能是因为室内的纺织品更多。<br>空气中微塑料还有其他来源，包括汽车轮胎和刹车颗粒、大型塑料的降解、工业排放等[13]。大气中纤维的浓度取决于许多因素，包括经济发展、消费习惯、城市化、交通、天气、海拔、风速、风向、湿度、温度。例如，在巴黎一栋建筑的屋顶上进行了93天的测量，在晴朗的天气下，微塑性沉积最低，为29个颗粒/平方米/天，而在下雨时，最高的微塑性沉积为280个颗粒/平方米/天[14]。雨雪过后，雨雪可以进入陆地、湖泊和海洋，因此大气中的微塑料也可以成为土壤和水中微塑料的来源之一。<br>对来自多个地点的雪样的分析表明，检测到的MPS的大小从11毫米到475毫米不等[13]。雪中的微塑料也体现了富含纤维的特征。雪中的聚合物组成变化很大，清漆是最常见的，其次是橡胶，然后是聚酰胺(包括尼龙)。在北极的雪中发现了微塑料。<br>微塑料的丰度和类型取决于积雪的地理区域。欧洲雪地微塑料浓度较高(0.19,103至154,103 N升。1)比北极雪地(0e14.4,103N升。1)。<br>欧洲样品和北极样品的聚合物组成有67%的差异。在欧洲样品中，聚酰胺、清漆、3型橡胶、丁腈橡胶、乙烯-乙酸乙烯酯和聚乙烯的丰度要高得多，而聚苯乙烯、聚氯乙烯(PVC)、聚碳酸酯、聚乳酸和聚酰亚胺只存在于北极雪地。清漆主要用于建筑物和车辆等物体的表面涂装。<br>橡胶可能会因轮胎、电缆和鞋底等物体的磨损而进入大气。聚酰胺主要是用于合成纤维织物，如地毯。在雪中的发现表明了大气作为空气微塑料来源的重要性。<br>微塑料悬浮在大气中，可以附着在昆虫身体的表面。昆虫可以将微塑料输送到生态系统，如昆虫种群、植物、土壤，从而进入食物链。例如，工蜂可以从环境中运输微塑料纤维，保存在它们的角质层和消化道中，并进入蜂箱的不同基质，包括幼虫、蜂蜜和蜂蜡[15]。因此，昆虫可以充当载体，将空气中的微塑料传递给生态系统，并最终传递给人类。</p><h2 id="土壤中微塑料的大小-组成-丰度-来源及其影响因素">土壤中微塑料的大小、组成、丰度、来源及其影响因素</h2><p>土壤微塑料污染也是一个严重的问题。由于塑料的不可降解性质，多年来它往往会分解成微塑料，影响生活在土壤中的昆虫。<br>土壤中的微塑料尺寸从几微米到几毫米不等，其中小于1毫米的颗粒被广泛观察到。它们的丰度范围也很广，从0.1到100,000 N/kg(95%&lt;13,090 N/kg)[16]。在大多数研究中，碎片和纤维最为丰富，而颗粒、泡沫和薄膜中的形状也经常被看到。常见的聚合物类型有聚乙烯(PE)、聚丙烯(PP)、聚酰胺(PA)、聚苯乙烯(PS)、聚氯乙烯(PVC)和聚酯(PET)。PE和PP是土壤中最常见的聚合物类型[17]。微塑料进入土壤的来源包括地膜覆盖、污泥和堆肥的施用、灌溉、垃圾和大气沉积等。这些因素也影响微塑料的浓度和类型。地膜覆盖是中国农业领域微塑料的主要来源[18]。<br>数据表明，影响微塑料丰度的关键因素是土地利用类型，而不是土壤性质。城市密度较大的地区土壤中MP含量最高，反映了日常人类活动和工业生产对土壤MP污染的较大贡献。浅层土和深层土也表现出不同的微塑性特征。对上海郊区20块塑料大棚覆盖的菜地进行了试验研究。土壤表层(0E3 Cm)微塑料含量为78.00±12.91N/kg，深层(3E6 Cm)微塑料含量为62.50±12.97N/kg。浅层土壤MPS为1.91±0.13 mm，深层为1.48±0.11 mm。深层土壤中的微塑料越来越少，越来越小。微塑料的主要形状为纤维、碎片和薄膜，大多为黑色或透明。这表明微塑料污染可能主要来源于农田的地膜覆盖和污水污泥。浅层土壤中的微塑料可以通过蚯蚓等动物的一系列活动进入深层土壤，这可能对土壤生物群产生潜在的负面影响，从而影响耕作过程[20]。</p><h2 id="水源中微塑料的大小-组成-丰度-来源及其影响因素">水源中微塑料的大小、组成、丰度、来源及其影响因素</h2><p>水中的微塑料污染是所有类型的污染的水槽，无论是土壤还是空气中的污染，都可以进入水中。这对水生昆虫或具有水生阶段的昆虫构成了威胁。<br>在水生系统中，塑料颗粒的大小、形状、化学成分和浓度各不相同。每年有大量的塑料垃圾进入海洋。最常见的微塑性聚合物类型是聚丙烯(PP)、聚乙烯(PE)、聚氯乙烯(PVC)、聚苯乙烯(PS)和聚四氟乙烯(PTFE)[21]。对撒丁岛水域微塑料的研究表明，2012年的平均浓度为0.15 N/立方米，2019年的平均浓度为0.19 N/立方米[22]，这反映了海洋中微塑料随时间的积累。一般来说，高度城市化地区附近水域的微塑料水平比农村地区附近水域的微塑料水平高得多。洋流也是影响相关海域微塑料浓度的一个因素。<br>世界各地的淡水系统中都检测到了微塑料。纤维是淡水中微塑料的主要类型，碎片排在第二位[23]。微塑料的浓度在不同的样品中有很大的不同，跨越了七个数量级。聚丙烯(PP)、聚乙烯(PE)、聚苯乙烯(PS)和聚对苯二甲酸乙二酯(PET)占污染物的近3/4，其中PP和PE的检出率最高。淡水环境中的微塑料主要来自合成纺织品、个人护理产品、工业原料和塑料垃圾的不当处置。微塑料的分布与种群密度呈正相关。在武汉，地处市中心的中国、北湖和环子湖的地表水中微生物浓度最高，分别为8925N/m<sub>3和8550N/m</sub>3[24]。除了人口密度和靠近城市中心之外，河流和湖泊中微塑料的丰度和分布还受到水文和气象条件的影响。例如，位于蒙古境内人口密度较低的偏远地区的霍夫斯格湖就含有高浓度的微塑料[25]。根据上述数据，与陆地相连的淡水由于靠近人类生产和生活，通常含有高浓度的微塑料。因此，对于许多需要在淡水中生活的昆虫来说，研究微塑料对它们生理的影响是很重要的。</p><h1 id="微塑料对昆虫生理的影响">微塑料对昆虫生理的影响</h1><h2 id="水生昆虫">水生昆虫</h2><p>全世界已知的昆虫大约有100万种，其中只有大约100种是严格意义上的海洋昆虫(只生活在海洋中)。因此，目前的研究主要集中在水生昆虫上，这些昆虫主要是淡水生物。<br>这些生物对环境变化，特别是污染非常敏感。尽管微塑料对水生昆虫的研究有限，但目前的证据表明，塑料对幼虫和成虫都有负面影响[26]。农业中用于作物保护的大型黑色塑料，包括巨型塑料(&gt;1米)、大型塑料(&gt;25厘米至&lt;1米)对成年水生昆虫(陆栖阶段)有害。由于昆虫根据趋光性或偏光性来选择产卵地点，它们将塑料表面误认为水面。结果，这些巨大的黑色塑料吸引了大量的水生昆虫，导致产卵尝试失败和后代发育[27]，并可能导致后代迅速而持久的减少。<br>水环境中的微塑料可能对幼体水生昆虫(水生阶段)有害，因为它们在觅食、繁殖、生长和建造庇护所[28，29]。河摇蚊已被经济合作与发展组织(OECD)选为暴露的模式生物[30]。例如，在河摇蚊中，微塑料可以填满肠道，并在淡水底栖生态系统中诱导幼虫假化[31]。与未消化的有机或矿物颗粒相比，微塑料的排泄速度更慢。较大的颗粒物往往会造成短期毒性，而较小的颗粒物会造成长期毒性。<br>微塑料的短期毒性可能是由于肠道上皮的机械损伤，激活了幼虫的炎症反应，导致了活性氧物种。从长远来看，这些反应需要消耗能量来维持机体，并可能导致脂肪储备减少，发育延迟，体长缩短，发育时间延长。有趣的是，微塑料会导致男性和女性不同的发育迟缓[32]。正常情况下，雌性平均比雄性发育晚1天，以减少近亲繁殖，但确保适时交配。摄入微塑料后，两性之间的时间差增加了2-4天。显然，这推迟了交配，至少也推迟了后代的出现。也有可能随着时间的推移，这会导致雄性生殖能力下降，或者通过捕食雄性而影响生殖。<br>此外，大塑料可能会引起成年水生昆虫分布的变化，而微塑料则会干扰发育，导致体型缩小。这将对食物链中以它们为食的动植物的生存产生重大影响。</p><h2 id="陆生昆虫">陆生昆虫</h2><p>对于蜜蜂、黑腹果蝇、热带蟋蟀和家蚕等陆生昆虫，摄取微塑料对死亡率的影响一般不显著，但已发现生长、运动、相关基因表达、取食和产卵、遗传毒性和肠道微生物区系的变化[33，34-38]。<br>蜜蜂作为重要的传粉者，具有广泛的活动范围，是微塑料的活跃取样器。因此，这里将以蜜蜂为例。到目前为止，只有几项研究调查了微塑料对蜜蜂生理的作用。哥本哈根附近的这项研究发现，13种微塑料附着在蜜蜂的身体上。其中，聚酯最为常见，其次是聚乙烯和聚氯乙烯[39]。然而，在中国六个省的田间采集的蜜蜂样本中只发现了四种类型的微塑料，包括聚苯乙烯(PS)[40]。这表明，影响蜜蜂的微塑料类型在地理上是相关的。<br>实验表明，短期摄入(24-48小时)聚酯微纤维和PE微球对蜜蜂的存活和觅食行为没有显著影响[41，42]。然而，长期摄入微塑料可能会导致一系列变化。暴露在聚苯乙烯(PS)中21天能够导致PS在中肠内积聚。0.5毫米大小的PS可以被破坏并进入中肠组织，然后转移到其他器官组织[40]。同时，免疫反应等基因的表达发生明显改变，从而增加了蜜蜂对以色列急性麻痹病毒的易感性，这对蜜蜂群体是有害的。另一项研究发现，摄入较小的PS微塑料(100纳米)15天会改变蜜蜂肠道微生物区系中的细菌丰度，使它们更容易受到致病细菌Hafnia alvei的影响。并显著增加死亡率[43]。对蜜蜂种群的研究表明，工蜂摄入的聚酯微纤维可以转移到蜂蜡、蜂蜜和幼虫身上[15]。暴露于50 mg/L的1个月对蜜蜂种群和蜂蜜储量无显著影响。这些对蜜蜂的有限研究表明，微塑料的效果与摄入时间和微塑料的大小有关。接触微塑料的时间越长，微塑料颗粒越小，毒性越大。有趣的是，欧洲和美国的研究集中在聚酯微纤维和PE微球上，而中国的研究集中在聚苯乙烯(PS)上。微塑料研究类型的选择可能与从不同地区收集的蜜蜂样本提供的先验信息有关[40，39]。对更多微塑料类型的研究将有助于更好地理解环境微塑料对蜜蜂的作用。未来在微塑料对蜜蜂的影响中，浓度也起着关键作用。浓度越高，毒性可能越早、越明显。在蜂蜜中发现了微塑料[44]。此外，有证据表明，蜜蜂可以将微塑料从环境转移到蜂箱基质中，包括蜂蜜[15]。由于蜜蜂为人类提供蜂蜜产品，微塑料可以通过蜜蜂进入人类食物链，从而影响人类健康。<br>在其他陆生昆虫中也发现了类似的微塑料效应，如家蚕(见表1)。PS-NPs能被幼虫摄取并进入组织和血淋巴。幼虫的运动行为显著改变[45]。另一项研究表明，PS-MPS和NPS急性暴露72h对幼虫的体重或存活率没有显著影响。PS-NPs在肠道组织中积累，而不是PS-MPS。PS-MPS能诱导更强的免疫应答，在感染粘质沙雷氏菌Bm1后能更好地存活。相反，PS-NPs抑制了免疫反应，宿主在感染后表现出更高的死亡率[46]。对不同类型、大小和剂量的微塑料在各种陆生昆虫上的研究将提供更全面的信息。</p><h1 id="微塑料对昆虫的兴奋效应">微塑料对昆虫的兴奋效应</h1><p>塑料污染是当今全球环境问题的核心。其对昆虫的潜在负面风险是当前的研究热点。然而，尽管作为化合物的微塑料是静态的，但作为有机体的昆虫是活的动态系统，能够对外部刺激做出适应性反应，以增加它们的抵抗力，以实现更好的生存和繁殖。当然，如果外界刺激太大，昆虫的生理功能就会受损，甚至死亡。这类似于人类在接触高剂量病毒时会被感染甚至死亡，但接触少量灭活病毒疫苗会增加抵抗力。因此，全面了解微塑料在昆虫生理上的作用需要考虑兴奋效应，这是一种反映低剂量外部刺激对生物体的有益影响和高剂量刺激的有害影响的两相剂量-反应关系(图2)。<br>最近的研究表明，微塑料可以通过诱导摇蚊、蜜蜂、黑腹果蝇产生活性氧来引起氧化应激[31，43，47]。氧化应激可通过激活Nrf2/ARE途径和上调维生素(包括热休克蛋白)来诱导兴奋反应。尽管数据有限，但有一些研究证明了微塑料对昆虫的潜在兴奋作用(表2)，证明了微塑料在促进生长和生殖、降低免疫反应、增强全球变暖下的耐热性、延长寿命和降低杀虫剂毒性方面的潜在作用。<br>微塑料对昆虫的影响受MPS的物理化学性质的影响如下。</p><h2 id="浓度">浓度</h2><p>可见，微塑料的作用与浓缩系数有关。根据兴奋理论，高剂量的外部刺激会产生有害的影响。目前的研究证明，浓度越高，毒性越大。例如，用三种不同浓度(0.5、5和50 mg/L)的聚乙烯(PE)MP口服蜜蜂蜜蜂，只有最高浓度的PE才会对死亡趋势产生影响。当果蝇暴露于不同浓度(0.005.5、0.0 5、0.5 mg/m L)的聚苯乙烯微塑料微珠(PS-MPS)时，以0.5 mg/m L的PS-MPS对果蝇的毒性最大，对果蝇的存活有最大的负面影响。中肠细胞的坏死和凋亡程度也与高浓度的PS-MPS[52]有关。然而，在所回顾的大多数实验中使用的浓度可能与真实环境中的不同。因此，模拟真实情况下的浓度暴露更具现实意义。<br>在环境条件下暴露于低浓度的微塑料可能有利于昆虫的生理功能，在果蝇饲料中分别给予1g/L、10g/L、20g/L约2 mM的PET-MPS后，发现1g/L的ET-MPS对雄性果蝇的存活有显著的促进作用，而较高浓度的ET-MPS对果蝇的存活有显著的负效应[35]。由于存活时间可长达60-70天，昆虫有足够的时间做出适应性反应。因此，低浓度的PET-MPS可以触发兴奋通路，提高身体的表现。我们注意到，这种兴奋效应只在男性身上观察到，而在女性身上没有。有可能需要较低的剂量来诱导兴奋反应，尽管还需要进一步的研究。微塑料对河摇蚊雌性和雄性发育的不同影响也被观察到[31]。</p><h2 id="大小和形状">大小和形状</h2><p>在自然界中，微塑料有各种各样的尺寸。这与实验室测试不同，实验室测试使用单一尺寸或几个指定尺寸的微塑料。塑料的大小也会随着环境的变化而变化。例如，可见光和紫外线照射可以减小MPS的尺寸，甚至可以生产纳米塑料。<br>如果昆虫可以主动从环境中摄取微塑料，它们自己的偏好也决定了它们摄取的MPS的大小。例如，河摇蚊可以摄取小于200毫米的颗粒，但通常更喜欢摄取38-61毫米的微塑料[31]。目前的数据表明，微塑料的尺寸越小，不良影响就越大。对于摇蚊来说，大颗粒似乎会造成短期毒性，而小颗粒则有更长期的毒性影响[31]。一项基于蜜蜂的研究表明，在长期暴露下，三种大小(0.5、5和50 mm)的PS毒性最大，其中0.5 mm的PS毒性最大，破坏中肠组织并转移到血淋巴等组织和器官，增加蜜蜂对以色列急性麻痹病毒的易感性[40]。另一项针对蜜蜂的研究考察了较小的体型[43]。<br>结果显示，摄入的粒径为1 um、10 um和100 um的聚苯乙烯(PS)颗粒毒性不同。100 nm的PS颗粒对蜜蜂的健康损害最大，显著减轻了体重，并大大增加了对病原菌哈夫尼亚的敏感性，导致死亡率增加5倍。<br>这些数据表明，NPs(&lt;1 mM)对昆虫的潜在毒性可能高于MPS(1 MM)。可能的原因是，较小的MPS更有可能进入细胞和组织，从而对生物体产生更广泛的影响[53]。这也表明，与大的MPS相比，小的MPS可能需要在较低的浓度下存在，以便在兴奋机制中显示对生物的有益影响。正如对摇蚊的研究表明，在自然环境中，大的MPS可能会破坏肠道上皮，造成机械损伤，并帮助小的MPS进入组织和细胞[26]。因此，不同尺寸的微塑料的协同效应会造成更大的损害。此外，自然界中微塑料的形状，可以是纤维、颗粒、碎片或珠子，也可能是影响微塑料对昆虫效果的一个因素。颗粒是盐生动物属物种的良好产卵地点[26]。对热带蟋蟀(Gryllodes Sigillatus)的实验表明，饮食中摄入的聚对苯二甲酸乙二醇酯微纤维(&lt;5 mm)可以减少体重和身长[54]。然而，聚乙烯微塑料微珠(75-105 Mm)没有观察到任何影响。</p><h2 id="聚合物类型">聚合物类型</h2><p>不同聚合物类型的MPS对其活性也可能有不同的影响。为了准确了解聚合物类型作为唯一因素对昆虫的影响，理想情况下，人们只需要测试相同大小和形状的不同聚合物，使用相同的昆虫，在相同的培养条件下，就可以得到答案。然而，不同的实验小组通常专注于特定的聚合物类型，选择特定的形状和大小，例如，在蜜蜂研究中，欧洲和美国使用聚酯微纤维和PE微球，而在中国的研究中，如前所述使用聚苯乙烯(PS)。在这里(表3e6)我们总结了聚苯乙烯(PS)、聚对苯二甲酸乙二酯(PET)、聚酰胺(PA)和聚丙烯(PP)类似尺寸(mm级)的微塑料小球对果蝇生理的影响[34-37，52]。<br>由于纯微塑料可以用于实验室测试，因此更有助于了解不同聚合物类型的MPS所造成的不同影响。</p><h2 id="存活率">存活率</h2><p>PS微塑料似乎比PET毒性更大。如表3和表4所示，PS和PET的大小都在2 mm左右，PS-MPS的所有3个浓度，0.005，0.05和0.5mgmL，显著降低了两性的存活率，男性的最大存活率为14天[52]。低浓度的PET-MPS显著增加雄性存活，高浓度的PET-MPS降低雄性存活，但程度较小；；在PET-MPS研究中，男性的最长寿命都超过60天[35]。考虑到PET-MPS的3个浓度分别为1、10和20 mg/mL，远高于PS-MPS的3个浓度，且毒性一般随着浓度的增加而增加，这表明PS的聚合物类型是造成其毒性的主要因素，对大小和浓度相似的不同聚合物类型的比较将提供更完整的信息。</p><h2 id="抗饥性">抗饥性</h2><p>饥饿生存的能力对生物体应对外界压力非常重要，反映了生命的活力。如表3所示，暴露于三种浓度的PS-MPS后，几乎所有雄性在饥饿24小时后死亡，而几乎所有雌性存活[52]。表4中暴露的三种浓度的PETMP对雌性也没有显著影响，对雄性有负面影响，但它们仍然可以存活长达6天[34]。同样，表3中PS-MPS的浓度远低于表4中的PET-MPS浓度。这再次表明PS材料本身对男性的毒性更大。在存活率和恢复力方面的性别差异可能是由于雌性和雄性之间的生理差异。微塑料对雌性和雄性发育的不同影响也在摇蚊中观察到[32]。</p><h2 id="食物摄入量">食物摄入量</h2><p>暴露于不同聚合物类型的MPS也会导致食物摄入量的不同变化。摄入PS减少了果蝇的食量(表3)。另一方面，PA表现出特定性别的变化，男性吃得更少，女性吃得更多(表5)。宠物和PP没有改变果蝇的摄食量(表4和表6)。饮食的变化直接影响能量的摄入，进而影响昆虫的其他生理指标，甚至繁殖。对蜜蜂的研究表明，含有聚酯微纤维的饲料不会改变蜜蜂对食物的偏好，但与没有MPS的对照组相比，10和100 mg MP/L组的摄入量较慢[41]。另一项研究比较了三种浓度(0.5、5和50 mg L-1)的聚乙烯(PE)MPS，结果显示，当暴露在较低浓度时，蜜蜂比对照组消耗更多的食物[42]。当然，昆虫也可能在自然界中的各种微塑环境中根据自己的喜好选择不同的微塑材料。</p><h2 id="24-h自发活动">24-H自发活动</h2><p>24小时自发活动可用于检测微塑料对昆虫行为的调控。所有浓度的PET都能增加雄性和雌性果蝇的自发活动(表4)。相同浓度的PP也显示出活动增加和24小时睡眠减少(表6)。然而，相同浓度的PA，仅在男性的最高浓度为20毫克/毫升时，会导致白天睡眠减少(表5)。这再次表明，微塑料的作用可能与材料有关。从上述数据来看，微塑料似乎可以刺激神经系统，影响行为激活。从兴奋反应的角度来看，低浓度的微塑料可以温和地刺激神经系统，增加昆虫的活力，而在高浓度时，太多的刺激会导致神经毒性，这可能会导致长期的健康损害。</p><h2 id="育性">育性</h2><p>PET、PA和PP的比较表明，PA即使在很低的浓度(0.1毫克/毫升)下，也会显著减少雌性的产卵量(表5)。相反，PET和PP(表4和表6)在高浓度时只影响雌性果蝇的生育力(20 mg/ml)。微塑料对卵子生产的影响可能是由于生殖系统受到损害，或者可能是调控卵子生产的机制中的信号通路，最终导致卵子产量减少。另一种可能性是，摄入微塑料会引起炎症反应和产生活性氧物种，导致昆虫机体内的一系列反应。而这些都需要能量消耗来维持生物体。在一定的资源总数下，分配给生殖的资源较少，以便优先维持生物体的运作和基本生理功能。这里的数据只显示生育率下降，可能是因为微塑料的浓度仍然很高。在低浓度的微塑料中，生育力可能会得到提高。这可能会在未来的研究中引起更大的兴趣。</p><h2 id="甘油三酯-蛋白质和血糖水平">甘油三酯、蛋白质和血糖水平</h2><p>PET-MPS对女性的甘油三酯、蛋白质和血糖水平无显著影响。然而，在男性中，所有浓度都会降低甘油三酯水平，而最高浓度会导致血糖水平下降(表4)。在女性中，PA只有在较高浓度时才会导致血糖水平下调。在男性中，较高浓度的PA会导致甘油三酯、蛋白质或血糖水平下降(表5)，而PP只会导致女性的甘油三酯水平下降(表6)。这些代谢指标的水平不仅因微塑料聚合物类型而异，而且还因性别而异。两性之间的这种差异是有意义的，因为它导致了人口中男性和女性之间的平衡。</p><h2 id="与添加剂-吸附剂的相互作用">与添加剂/吸附剂的相互作用</h2><p>塑料产品需要添加剂来稳定其性能。添加剂在环境因素的影响下释放。此外，全氟化合物(PFAS)、疏水性有机物(如多氯联苯和多环芳烃)、药品、重金属和细菌病毒很容易吸附在微塑料表面[56]。微塑料与自然环境中共存污染物的相互作用决定了微塑料的影响。例如，微塑料可以影响毒死蜱对两种陆生节肢动物的毒性，这两种节肢动物分别是赤霉病和念珠菌。毒死蜱显著降低AChE活性和诱导死亡率。相反，在低毒死蜱浓度下，轮胎颗粒的共存可以增加AChE活性，显示出兴奋效应[48]。</p><h1 id="结论与展望">结论与展望</h1><p>昆虫虽然体型较小，但实际上是多样的，在生态系统中扮演着不同的角色。近年来，世界范围内昆虫的数量和种类急剧减少。微塑料作为新的污染物对昆虫的影响的研究有限，而且很有兴趣。<br>兴奋效应广泛存在于生物学中。然而，目前的研究更多地关注微塑料的毒性，因此使用的浓度可能比环境中发现的浓度更高，甚至更极端。新的研究应该考虑模拟环境中常见的剂量以及从零到平均浓度的分数。因此，需要做出更多努力，使实验室测量适应实际环境条件，以获得更全面的知识。<br>微塑料对昆虫生理的影响是剂量效应。这其中有一些刺激作用的证据。未来的研究应该考虑几个方面。首先是微塑料本身的物理化学性质，包括浓度、大小和聚合物类型。其次，昆虫的特征，包括发育阶段和性别，以及健康状况，是重要的因素。第三，当微塑料与添加剂和环境污染物共存时，它们的效果可能会更加多样化和有趣。最后，重要的环境条件，如全球变暖，与微塑料行动的影响有关。</p><h1 id="总结和感想">总结和感想</h1><p>这篇文章主要讲了微塑料对昆虫生理的影响及兴奋作用的指征，并基于此引出性别差异，微塑料性质对健康的影响等多个论述角度。文章首先介绍了昆虫在生态系统中的重要角色和全球昆虫数量和种类的下降现象，然后分析了塑料的产量和污染问题，特别指出了新冠肺炎疫情对一次性塑料消费的推动。文章并没有直接分析肉眼可见的塑料，而是分析了生活中几乎被忽略的大小在 1 微米到 5 毫米之间，以纤维、颗粒、片状和球状等形态存在的微塑料，文中指出微塑料在陆地，海洋和大气环境中均有分布。微塑料分布广泛，不易被察觉，容易通过生物链富集到高等生物中，因此这篇文章分析的微塑料具有研究价值和一定的新颖性。<br>这篇文章是一篇综述类文章，文章在结构上为先总后分的形式，文章在综述部分分别从微塑料的来源、形态、分布、检测方法、生物效应和机制等方面进行了详细的阐述，其中来源方面这篇文章从水陆空三维度分析，对昆虫的影响这一节该文从水陆昆虫两维度分析，并分别从微塑料的形状和大小，浓度，聚合物类型等几个角度分析了微塑料本身性质对昆虫的影响，指出由于微塑料大小越小更容易进入细胞长期来看会对健康产生不利影响，微塑料浓度越大越会危害健康。另外，文章提到微塑料对昆虫的兴奋效应存在剂量依赖性和阈值，即微塑料的浓度越高，对昆虫的兴奋效应越强。文章还指出，微塑料对昆虫的兴奋效应可能与其化学成分、形态、大小和表面性质等因素有关，并得出该效应可能在促进生长和生殖、降低免疫反应、增强全球变暖下的耐热性、延长寿命和降低杀虫剂毒性方面发挥潜在作用。此外，此文章引用了多达56篇参考文献，且对关键数据配有图，表，不仅生动展示了研究领域的前沿进展，还增加了该文章的说服力和科学性。<br>综上，阅读完本篇文章我的感想是科学研究可以与当前社会发展息息相关，例如本文所述的大量塑料污染问题。塑料还会在自然环境中被分解为微塑料，特别是在海洋中存在大量被分解的微塑料，海洋生物容易把微塑料看作浮游生物吞食，从而引起连锁反应，这需要我们从点到面更深层的考虑问题。在分析问题的时候要从多维度考虑以增强论述的说服力和普适性，应该善于从多因子，强耦合，不确定性强的因素中控制变量，抓住主要矛盾。最后，自然界中常存在蝴蝶效应，我们可以从一个问题中发现更多问题的关联性，特别是要发现推动本方向研究的潜在因子，以便为后续研究带来更多可能和机遇。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>python数据分析</title>
      <link href="/posts/a9da3a59/"/>
      <url>/posts/a9da3a59/</url>
      
        <content type="html"><![CDATA[<h1 id="numpy">Numpy</h1><p>Numpy是一个模块</p><h2 id="序章：数组和矩阵的区别">序章：数组和矩阵的区别</h2><p>• matrix是array的分支，matrix和array在很多时候都是通用的，用哪一个都一样；<br>• 如果两个可以通用，那就选择array，因为array更灵活，速度更快，很多人把二维的array也翻译成矩阵。<br>• 相同点：索引方式相同，都可以使用a[i][j]，a[i,j]进行索引<br>• matrix（矩阵）：具有相对简单的运算符号，比如两个matrix相乘（求内积），就是用符号*<br>• array（数组）：两个一维数组相乘用*，对应元素相乘<br>由于Python:是先循环遍历再计算，Numpyi直接计算，计算数量越大越节省时间<br>一维数组相加：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">数组相加</span>(<span class="params">n</span>):</span><br><span class="line">    a=np.arange(<span class="number">1</span>,n+<span class="number">1</span>)**<span class="number">3</span></span><br><span class="line">    b=np.arange(<span class="number">1</span>,n+<span class="number">1</span>)**<span class="number">2</span></span><br><span class="line">    <span class="keyword">return</span> a+b</span><br><span class="line"><span class="built_in">print</span>(数组相加(<span class="number">3</span>))</span><br></pre></td></tr></table></figure><p>一维数组相乘，若用sum(a*b)则可以把内部元素相加</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">mport numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">数组相乘</span>(<span class="params">n</span>):</span><br><span class="line">    a=np.arange(<span class="number">1</span>,n+<span class="number">1</span>)**<span class="number">3</span></span><br><span class="line">    b=np.arange(<span class="number">1</span>,n+<span class="number">1</span>)**<span class="number">2</span></span><br><span class="line">    <span class="keyword">return</span> a*b</span><br><span class="line"><span class="built_in">print</span>(数组相乘(<span class="number">3</span>))</span><br></pre></td></tr></table></figure><p>多维数组也可以看成矩阵，如果进行矩阵相乘，则需要用到np.dot()，如np.dot(arr.T,arr) <a href="https://blog.csdn.net/yl_best/article/details/86702200">参考资料</a> <a href="https://blog.csdn.net/qq_34159047/article/details/107182849">Python/Numpy之矩阵/数组/列表转换</a></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;rand函数的作用就是从标准正态分布中返回一个或多个样本值，</span></span><br><span class="line"><span class="string">这里返回2行3列共6个数的数组。标准正态分布俗称高斯分布，均值为0，方差为1的正态分布。&#x27;&#x27;&#x27;</span></span><br><span class="line">arr=np.random.rand(<span class="number">2</span>,<span class="number">3</span>)</span><br><span class="line">b=np.dot(arr.T,arr)<span class="comment">#把数组当成矩阵，对应元素相乘求内积 arr.T为arr的转置</span></span><br><span class="line"><span class="comment">#将数组转化成矩阵</span></span><br><span class="line">arr_Matrix=np.mat(arr)<span class="comment">#等同于arr Matrix=matrix(arr),mat是natrix的缩写</span></span><br><span class="line">c=arr_Matrix.T*arr_Matrix<span class="comment">#矩阵直接相乘</span></span><br><span class="line"><span class="comment">#将结果输出</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;arr:\n&#123;&#125;\ntype(arr):&#123;&#125;&quot;</span>.<span class="built_in">format</span>(arr,<span class="built_in">type</span>(arr)))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;数组（矩阵）乘积：\n&quot;</span>,b)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;arr_Matrix:\n&#123;&#125;\ntype(arr_Matrix):&#123;&#125;&quot;</span>.<span class="built_in">format</span>(arr_Matrix,<span class="built_in">type</span>(arr_Matrix)))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;矩阵乘积：\n&quot;</span>,c)</span><br><span class="line"><span class="comment">#比较两者乘积是否相等</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;数组矩阵内积-矩阵乘积：\n&quot;</span>,b==c)</span><br></pre></td></tr></table></figure><h2 id="创建数组">创建数组</h2><p>1.1 创建数组的方法</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line">a = np.array([<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>])</span><br><span class="line">b = np.array(<span class="built_in">range</span>(<span class="number">1</span>,<span class="number">6</span>))</span><br><span class="line">c = np.arange(<span class="number">1</span>,<span class="number">6</span>)</span><br><span class="line"><span class="built_in">print</span>(a)</span><br><span class="line"><span class="built_in">print</span>(b)</span><br><span class="line"><span class="built_in">print</span>(c)</span><br><span class="line"><span class="built_in">print</span>(a.dtype) <span class="comment"># int32或int64</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">type</span>(a)) <span class="comment"># &lt;class &#x27;numpy.ndarray&#x27;&gt;</span></span><br></pre></td></tr></table></figure><p>以上三种方法结果是一样的，注意一下输入结果是数组<br>array：将输入数据（可以是列表、元组、数组以及其它序列）转换为ndarray(Numpy数组)，如不显示指明数据类型，将自动推断，默认复制所有输入数据。<br>arange：Python内建函数range的数组版，返回一个数组。<br>array的属性：<br>• shape：返回一个元组，表示 array的维度 [形状，几行几列] （2，3）两行三列，（2，2，3）两个两行三列<br>• ndim：返回一个数字，表示array的维度的数目<br>• size：返回一个数字，表示array中所有数据元素的数目<br>• dtype：返回array中元素的数据类型<br>使用arange创建数字序列：<br>np.arange([开始,]结束[,步长],dtype=None)<br>np.arange(5) 返回 array([0,1,2,3,4])<br>np.arange(1,10,2) 返回 array([1,3,5,7,9])<br>np.ones(shape,dtype=None,order='C')<br>a=np.ones(3) # 返回 array([1. 1. 1.])<br>b=np.ones((2,3))<br>b=np.ones((5,), dtype=np.int) # 返回 [1 1 1 1 1]<br>参数：<br>shape：整数或者整型元组定义返回数组的形状；可以是一个数（创建一维向量），也可以是一个元组（创建多维向量）<br>dtype : 数据类型，可选定义返回数组的类型。<br>order : {‘C’, ‘F’}, 可选规定返回数组元素在内存的存储顺序：C（C语言）-rowmajor；F（Fortran）column-major。<br>np.ones_like(a,dtype=float,order='C',subok=True)<br>返回：与a相同形状和数据类型的数组，并且数组中的值都为1<br>参数：<br>a：用a的形状和数据类型，来定义返回数组的属性<br>dtype ： 数据类型，可选<br>order顺序 ： {'C'，'F'，'A'或'K'}，可选,覆盖结果的内存布局。<br>subok ： bool，可选。True：使用a的内部数据类型，False：使用a数组的数据类型，默认为True</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">b=np.array([[<span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>],</span><br><span class="line"> [<span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>]])</span><br><span class="line"> <span class="built_in">print</span>(np.ones_like(b))</span><br></pre></td></tr></table></figure><p>full创建指定值的数组与one类似只是能只能参数了例：<br>np.full(3,520) 返回 [520 520 520]<br>np.full((2,4),520)<br>使用random模块生成随机数组<br>import random<br>np.random.randn(d0,d1,…..,dn)<br>传1个数就是一维，2个数就是二维，n个数就是n维<br>例如：<br>a = np.random.randn() # 一个随机数<br>b = np.random.randn(3) # 3个数<br>c = np.random.randn(3,2) # 3行2列<br>d = np.random.randn(3,2,4) # 3块，每块是2行4列<br>需要四舍五入：<br>np.round(a,2) # 变量a，保留两位小数点<br>dtype给数据指定数据类型:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line">a = np.array(<span class="built_in">range</span>(<span class="number">1</span>,<span class="number">8</span>),dtype=<span class="built_in">float</span>) <span class="comment"># 修改数据类型</span></span><br><span class="line">b = np.array(<span class="built_in">range</span>(<span class="number">1</span>,<span class="number">8</span>),dtype=<span class="string">&#x27;float32&#x27;</span>) <span class="comment"># 修改数据类型和位数</span></span><br><span class="line"><span class="built_in">print</span>(a)</span><br><span class="line"><span class="built_in">print</span>(b)</span><br><span class="line"><span class="built_in">print</span>(a.dtype)</span><br><span class="line"><span class="built_in">print</span>(b.dtype)</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">type</span>(a))</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">type</span>(b))</span><br></pre></td></tr></table></figure><h2 id="多维数组">多维数组</h2><p>一维数组的定义：当数组中每个元素都只带有一个下标时，称这样的数组为一维数组，一维数组实质上是一组相同类型数据的线性集合。<br>二维数组的定义：二维数组本质上是以数组作为数组元素的数组，即数组的数组<br>reshape不改值修改形状<br>能变成2行5列，就能变回1行10个元素，想让他变成一维就给它传一个数，这个数必需是这个数组所有<br>值的全部个数。<br>a.reshape(1,10) 绝不等于 a.reshape(10) a.reshape(1,10)输出值为[[1,2,3,4,5,6,7,8,9,10]] 形状为(1,10)二维；而a.reshape(10)输出为[1,2,3,4,5,6,7,8,9,10]形状为(10,)一维<br>但是如果我不清楚这个数组中有多少个数，但是仍然想转成一维<br>a.flatten()<br>作用：将一个多维数组展开变成一个一维数组<br>注意区别：<br>shape：返回数组的维度<br>reshape:不改变数组的值，修改形状</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> random</span><br><span class="line">a = np.arange(<span class="number">10</span>).reshape(<span class="number">2</span>,<span class="number">5</span>) <span class="comment"># 变成2行5列</span></span><br><span class="line">b = a.reshape(<span class="number">10</span>) <span class="comment"># 变回1行1列</span></span><br><span class="line">c = a.flatten() <span class="comment"># 不清楚对方什么阵型，直接转一维</span></span><br><span class="line"><span class="built_in">print</span>(c)</span><br></pre></td></tr></table></figure><h2 id="数组计算">数组计算</h2><p>凡是形状一样的数组，假设数组a和数组b，可以直接用a+b 或 a-b<br>a+b 对应位置的数字进行计算（加减乘除）也就是一维和多维数组是可以计算的，只要它们在某一维度上是一样的形状，仍然是按位置计算。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line">a = np.arange(<span class="number">6</span>)</span><br><span class="line">b = np.arange(<span class="number">24</span>).reshape(<span class="number">4</span>,<span class="number">6</span>)</span><br><span class="line"><span class="built_in">print</span>(a)</span><br><span class="line"><span class="built_in">print</span>(b)</span><br><span class="line"><span class="built_in">print</span>(b-a)</span><br></pre></td></tr></table></figure><p>结果为：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[<span class="number">0</span> <span class="number">1</span> <span class="number">2</span> <span class="number">3</span> <span class="number">4</span> <span class="number">5</span>]</span><br><span class="line">[[ <span class="number">0</span>  <span class="number">1</span>  <span class="number">2</span>  <span class="number">3</span>  <span class="number">4</span>  <span class="number">5</span>]</span><br><span class="line"> [ <span class="number">6</span>  <span class="number">7</span>  <span class="number">8</span>  <span class="number">9</span> <span class="number">10</span> <span class="number">11</span>]</span><br><span class="line"> [<span class="number">12</span> <span class="number">13</span> <span class="number">14</span> <span class="number">15</span> <span class="number">16</span> <span class="number">17</span>]</span><br><span class="line"> [<span class="number">18</span> <span class="number">19</span> <span class="number">20</span> <span class="number">21</span> <span class="number">22</span> <span class="number">23</span>]]</span><br><span class="line">[[ <span class="number">0</span>  <span class="number">0</span>  <span class="number">0</span>  <span class="number">0</span>  <span class="number">0</span>  <span class="number">0</span>]</span><br><span class="line"> [ <span class="number">6</span>  <span class="number">6</span>  <span class="number">6</span>  <span class="number">6</span>  <span class="number">6</span>  <span class="number">6</span>]</span><br><span class="line"> [<span class="number">12</span> <span class="number">12</span> <span class="number">12</span> <span class="number">12</span> <span class="number">12</span> <span class="number">12</span>]</span><br><span class="line"> [<span class="number">18</span> <span class="number">18</span> <span class="number">18</span> <span class="number">18</span> <span class="number">18</span> <span class="number">18</span>]]</span><br></pre></td></tr></table></figure><h2 id="广播规则">广播规则</h2><p>广播的原则:<br>如果两个数组的后缘维度（trailing dimension，即从末尾开始算起的维度）的轴长度相符，或其中的一方的长度为1，则认为它们是广播兼容的。广播会在缺失和（或）长度为1的维度上进行。<br>这句话乃是理解广播的核心。广播主要发生在两种情况，一种是两个数组的维数不相等，但是它们的后缘维度的轴长相符，另外一种是有一方的长度为1<br>上例中x的shape为（4,3），y的shape为（3，）。可以说x是二维的，而y是一维的。但是它们的后缘维度相等，x的第二维长度为3，和y的维度相同。x和y的shape并不一样，但是它们可以执行相加操作，这就是通过广播完成的。<br>从上面的图可以看到，（3,4,2）和（4,2）的维度是不相同的，前者为3维，后者为2维。但是它们后缘维度的轴长相同，都为（4,2）。同样，还有一些例<br>子：（4,2,3）和（2,3）是兼容的，（4,2,3）还和（3）是兼容的，后者需要在两个轴上面进行扩展。<br>这部分可以看pdf</p><h2 id="基础索引与切片">基础索引与切片</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy</span><br><span class="line">a = [<span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>]</span><br><span class="line"><span class="built_in">print</span>(a[<span class="number">3</span>],a[<span class="number">5</span>],a[-<span class="number">1</span>]) <span class="comment"># 返回 3 5 9</span></span><br><span class="line"><span class="built_in">print</span>(a[<span class="number">2</span>:<span class="number">4</span>]) <span class="comment"># 返回 array([2, 3])</span></span><br></pre></td></tr></table></figure><p>语法：序列[开始位置下标：结束位置下标：步长]<br>步长是选取间隔，正负整数均可，默认为1;不包结束位置下标对应的数据，正负整数均可<br>A[0,0] # 取数组A的0行0列，返回值0<br>A[-1,2] # 取最后一行的第2列，返回值17<br>A[2] # 取第2行所有的列，返回array([10, 11, 12, 13, 14])<br>A[-1] # 取最后1行<br>A[0:-1] # 取除了最后1行之外其它所有行<br>A[0:2,2:4] #取0和1行，2和3列<br>A[:,2] # 取所有行中的第2列<br>三、切片修改（注意：会修改原来的数组）<br>由于Numpy经常处理大数组，避免每次都复制，所以切片修改时直接修改了数组<br>a[4:6] = 520 # 返回array([ 0, 1, 2, 3, 520, 520, 6, 7, 8, 9])<br>A[:1,:2]=520 # 修改0行1列的两个值</p><h2 id="布尔索引">布尔索引</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line">数组 = np.arange(<span class="number">1</span>,<span class="number">21</span>).reshape(<span class="number">4</span>,<span class="number">5</span>)</span><br><span class="line"><span class="built_in">print</span>(数组)</span><br><span class="line">筛选 = 数组&gt;<span class="number">10</span></span><br><span class="line"><span class="built_in">print</span>(筛选) <span class="comment"># 返回一个布尔数组，即有行又有列</span></span><br><span class="line"><span class="built_in">print</span>(数组[筛选]) <span class="comment"># 返回所有为True的对应数字组成的数组，以一维数组展现</span></span><br></pre></td></tr></table></figure><p>在，<code>筛选 = 数组&gt;10 </code>中先把数组赋给筛选然后用比较运算符&gt;大于 - 返回x是否大于y(a &gt; b) 返回 False。</p><h2 id="神奇索引">神奇索引</h2><p>读取 = 数组[[1,5,7,2],[0,3,1,2]] # 取第1行第0列，第5行第3列，第7行第1列，第2行第2列<br>print(数组[:,[1,2]]) # 取所有行的，第1列和第2列<br>实例：获取数组中最大的前N个数字</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line">数组 = np.random.randint(<span class="number">1</span>,<span class="number">100</span>,<span class="number">10</span>)</span><br><span class="line"><span class="built_in">print</span>(数组)</span><br><span class="line"><span class="comment"># 数组.argsort()会返回排序后的下标</span></span><br><span class="line"><span class="comment"># 取最大值对应的3个下标，因为默认升序，所以要用-3,从倒数第3个到最后一个</span></span><br><span class="line">下标 = 数组.argsort()[-<span class="number">3</span>:]</span><br><span class="line"><span class="built_in">print</span>(下标) <span class="comment"># 返回的是最大3个数在数组中的下标</span></span><br><span class="line"><span class="comment"># 将下标传给数组</span></span><br><span class="line">最大 = 数组[下标]</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&#x27;最大的三个数是<span class="subst">&#123;最大&#125;</span>&#x27;</span>)</span><br></pre></td></tr></table></figure><p>代码中numpy.random.randint(low, high=None, size=None, dtype='l')<br>low: int<br>生成的数值最低要大于等于low。<br>（hign = None时，生成的数值要在[0, low)区间内）<br>high: int (可选)<br>如果使用这个值，则生成的数值在[low, high)区间。<br>size: int or tuple of ints(可选)<br>输出随机数的尺寸，比如size = n则输出总共n个随机数。默认是None的，仅仅返回满足要求的单一随机数。<br>dtype: dtype(可选)：想要输出的格式。如int64、int等等</p><h2 id="numpy的轴">Numpy的轴</h2><p>可以看到轴编号和shape元组的索引是对等的，所以这个编号可以理解为高维nd.array.shape产生的元组的索引<br>我们知道shape（4,3,2）表示数组的维度，既然shape的索引可以看做轴编号，那么一条轴其实就是一个维度<br>0轴对应的是最高维度3维，1轴对应2维，2轴对应的就是最低维度的1维<br>总结：凡是提到轴，先看数组的维度，有几维就有几个轴</p><h2 id="沿轴切片">沿轴切片</h2><p>以下是二维数组，数组的维度是（3，3），这个元组的索引是 [0,1]，表示这个2维数组有两条轴：0轴和1轴</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line">数组=np.array([ [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>] , [<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>] , [<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>] ])</span><br><span class="line"><span class="built_in">print</span>(数组)</span><br><span class="line"><span class="built_in">print</span>(数组.shape)</span><br></pre></td></tr></table></figure><p>print(数组[0:2])<br>这里有个很重要的概念， :2 是切片的第一个参数，约定俗成第一个参数就代表0轴 0轴表示2维，所以这个切片是在2维这个维度上切的，又叫“沿0轴切”。<br>这个2维数据是由3个1维数组组成的，这3个1维数组当然也有索引号也是[0,1,2]，[ :2 ] 就表示它要切取2维（0轴）上3个1维数组中的索引 [ 0 ] 和索引<br>[ 1 ] ，于是得到 ([ 1, 2, 3 ]) 和 ([ 4, 5, 6 ]) 这两个1维数组。<br>print(数组[:2,1:])<br>就是在两个维度（轴）上各切一刀，第1个参数就是2维（0轴）， :2 表示切取2维（0轴）上的索引 [ 0 ] 和索引 [ 1 ] ，即 ([ 1, 2, 3 ]) 和 ([ 4, 5, 6 ]) 这两个1维数组<br>第2个参数就是1维（1轴），1: 表示切取1维（1轴）上的索引 [ 1 ] 和索引 [ 2 ] ，即对数组 ([ 1, 2, 3 ]) 取 ([ 2,3 ]) ，对数组 ([ 4, 5, 6 ]) 取 ([ 5,6 ])<br>矩阵转置 transpose行列转置和swapaxes轴转置</p><h2 id="随机数">随机数</h2><p>seed 向随机数生成器传递随机状态种子：只要random.seed( * ) seed里面的值一样，那随机出来的结果就一样。所以说，seed的作用是让随机结果可重现。也就是说当我们设置相同的seed，每次生成的随机数相同。如果不设置seed，则每次会生成不同的随机数。使用同一个种子，每次生成的随机数序列都是相同的，也就是说重复运行程序生成的随机数仍然是相同的</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> random</span><br><span class="line">random.seed(<span class="number">10</span>)</span><br><span class="line"><span class="built_in">print</span>(random.random()) <span class="comment"># random.random()用来随机生成一个0到1之间的浮点数，包括零。</span></span><br><span class="line"><span class="built_in">print</span>(random.random())</span><br><span class="line"><span class="built_in">print</span>(random.random()) <span class="comment"># 这里没有设置种子，随机数就不一样了</span></span><br></pre></td></tr></table></figure><p>rand()返回[0,1]之间，从均匀分布中抽取样本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line">一维 = np.random.rand(<span class="number">3</span>)</span><br><span class="line"><span class="built_in">print</span>(一维)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;-&#x27;</span>*<span class="number">30</span>)</span><br><span class="line">二维 = np.random.rand(<span class="number">2</span>,<span class="number">3</span>)</span><br><span class="line"><span class="built_in">print</span>(二维)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;-&#x27;</span>*<span class="number">30</span>)</span><br><span class="line">三维 = np.random.rand(<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>)</span><br><span class="line"><span class="built_in">print</span>(三维)</span><br></pre></td></tr></table></figure><p>我们数据分析的三部曲：Numpy、Pandas、matplotlib，后期我们在使用matplotlib画图时会用到<a href="https://zhuanlan.zhihu.com/p/503555444">均匀分布</a><br>Numpy linspace函数依照定义间隔生成均匀分布的数值。我们使用start和stop参数指定间隔，这里我们设定为0和100，同时指定在范围内生产5个观测值，因此函数生成5个均匀分布的元素。第一个是0，最后一个100，其他三个分布在0和100之间<br>绘制函数时，最后一个参数时隔取点绘制函数，影响函数的平滑</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="comment"># 绘制正弦曲线</span></span><br><span class="line">x轴 = np.linspace(-<span class="number">10</span>,<span class="number">10</span>,<span class="number">10</span>) <span class="comment"># 在[-10,10]闭区间或半闭区间中，数量为100</span></span><br><span class="line">y轴 = np.sin(x轴) <span class="comment"># sin正弦、cos余弦</span></span><br><span class="line">plt.plot(x轴,y轴)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><p>加入噪声np.random.rand(len(x轴))</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="comment"># 绘制正弦曲线</span></span><br><span class="line">x轴 = np.linspace(-<span class="number">10</span>,<span class="number">10</span>,<span class="number">100</span>) <span class="comment"># 在[-10,10]闭区间中，数量为100</span></span><br><span class="line">y轴 = np.sin(x轴) + np.random.rand(<span class="built_in">len</span>(x轴)) <span class="comment"># 生成均匀分布，len(x轴)就是维度，相加就是定义元素的相加</span></span><br><span class="line">plt.plot(x轴,y轴)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><p>randn 返回标准正态分布随机数（浮点数）平均数0，方差1</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line">一维 = np.random.randn(<span class="number">3</span>)</span><br><span class="line"><span class="built_in">print</span>(一维)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;-&#x27;</span>*<span class="number">30</span>)</span><br><span class="line">二维 = np.random.randn(<span class="number">2</span>,<span class="number">3</span>)</span><br><span class="line"><span class="built_in">print</span>(二维)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;-&#x27;</span>*<span class="number">30</span>)</span><br><span class="line">三维 = np.random.randn(<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>)</span><br><span class="line"><span class="built_in">print</span>(三维)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;-&#x27;</span>*<span class="number">30</span>)</span><br></pre></td></tr></table></figure><p>choice 从一维数组中生成随机数</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="comment"># 第一参数是一个1维数组，如果只有一个数字那就看成range(5)</span></span><br><span class="line"><span class="comment"># 第二参数是维度和元素个数，一个数字是1维，数字是几就是几个元素</span></span><br><span class="line">a = np.random.choice(<span class="number">5</span>,<span class="number">3</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&#x27;从range(5)中拿随机数，生成只有3个元素的一维数组是：<span class="subst">&#123;a&#125;</span>&#x27;</span>)</span><br><span class="line">shuffle(数组)把一个数进行随机排列  </span><br><span class="line">使用Numpy数组可以使你利用简单的数组表达式完成多种数据操作任务，而无须写大量的循环，这种利用数组表达式来替代循环的方法，称向量化。</span><br><span class="line">通常，向量化的数组操作会比纯Python的等价实现在速度上快一到两个数量级（甚至更多）</span><br></pre></td></tr></table></figure><h2 id="数学和统计方法">数学和统计方法</h2><p>方法 描述<br>sum 沿着轴向计算所有元素的累和，0长度的数组累和为0<br>average 加权平均，参数可以指定weights<br>prod 所有元素的乘积<br>mean 数学平均，0长度的数组平均值为NaN<br>std,var 标准差和方差，可以选择自由度调整（默认分母是n）<br>min,max 最小和最大值<br>argmin,argmax 最小和最大值的位置<br>cumsum 从0开始元素累积和<br>cumprod 从1开始元素累积积<br>median 中位数<br>prercentile 0-100百分位数<br>quantile 0-1分位数</p><h3 id="一维数组">一维数组</h3><p>众数：出现次数最多的那个数<br>沿轴向进行计算，一维数组只有一个0轴<br>numpy.bincount函数是统计列表中元素出现的个数在机器学习中用到的很广泛，（机器学习和深度学习基本上以矩阵为主，尤其是K临近算法有时要添加权重改善分类或回归的精度）</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line">a = np.array([<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">3</span>,<span class="number">5</span>,<span class="number">3</span>,<span class="number">6</span>])</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&#x27;数组：<span class="subst">&#123;a&#125;</span>&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(np.<span class="built_in">sum</span>(a))</span><br><span class="line"><span class="built_in">print</span>(np.prod(a))</span><br><span class="line"><span class="built_in">print</span>(np.cumsum(a)) <span class="comment"># 从0开始元素的累积和</span></span><br><span class="line"><span class="built_in">print</span>(np.cumprod(a)) <span class="comment"># 从1开始元素的累积积</span></span><br><span class="line"><span class="built_in">print</span>(np.<span class="built_in">max</span>(a))</span><br><span class="line"><span class="built_in">print</span>(np.<span class="built_in">min</span>(a))</span><br><span class="line"><span class="built_in">print</span>(np.argmax(a)) <span class="comment"># 最大值所在的下标</span></span><br><span class="line"><span class="built_in">print</span>(np.argmin(a)) <span class="comment"># 最小值所在的下标</span></span><br><span class="line"><span class="built_in">print</span>(np.mean(a)) <span class="comment"># 平均数</span></span><br><span class="line"><span class="built_in">print</span>(np.median(a)) <span class="comment"># 中位数</span></span><br><span class="line"><span class="built_in">print</span>(np.average(a)) <span class="comment"># 加权平均</span></span><br><span class="line">counts = np.bincount(a) <span class="comment"># 统计元素出现的个数，不能统计浮点数</span></span><br><span class="line"><span class="built_in">print</span>(np.argmax(counts)) <span class="comment"># 返回众数,此方法不能用于二维数组</span></span><br></pre></td></tr></table></figure><h3 id="二维数组">二维数组</h3><p>关于numpy.cumsum()在官网中官方给了一个很好的例子。<br>在这里插入图片描述<br>cumsum的作用主要就是计算轴向的累加和。</p><p>里面最重要的参数就是axis</p><p>当里面的参数axis没有值时，默认是一个一维数组进行加和，即<br>a=np.array([[1,2,3],[4,5,6]])<br>np.cumsum()<br>输出1,3,6,10,15,21<br>即1,1+2,1+2+3,1+2+3+4,1+2+3+4+5,1+2+3+4+5+6</p><p>np.cumsum(axis=0)，按行累加<br>输出<br>array([[1, 2, 3],<br>[5, 7, 9]], dtype=int32)<br>5=1+4,7=2+5,9=3+6</p><p>np.cumsum(axis=1)，按列累加<br>输出<br>array([[ 1, 3, 6],<br>[ 4, 9, 15]], dtype=int32)<br>3=1+2，6=1+2+3<br>9=4+5，15=4+5+6</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">from</span> scipy <span class="keyword">import</span> stats</span><br><span class="line">a = np.array([[<span class="number">1</span>,<span class="number">3</span>,<span class="number">6</span>],[<span class="number">9</span>,<span class="number">2</span>,<span class="number">3</span>],[<span class="number">2</span>,<span class="number">3</span>,<span class="number">3</span>]])</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&#x27;数组：\n<span class="subst">&#123;a&#125;</span>&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;-&#x27;</span>*<span class="number">30</span>)</span><br><span class="line"><span class="built_in">print</span>(np.<span class="built_in">sum</span>(a))</span><br><span class="line"><span class="built_in">print</span>(np.prod(a))</span><br><span class="line"><span class="built_in">print</span>(np.cumsum(a)) <span class="comment"># 从0开始元素的累积和，返回一维数组</span></span><br><span class="line"><span class="built_in">print</span>(np.cumprod(a)) <span class="comment"># 从1开始元素的累积积，返回一维数组</span></span><br><span class="line"><span class="built_in">print</span>(np.<span class="built_in">max</span>(a))</span><br><span class="line"><span class="built_in">print</span>(np.<span class="built_in">min</span>(a))</span><br><span class="line"><span class="built_in">print</span>(np.argmax(a)) </span><br><span class="line"><span class="built_in">print</span>(np.argmin(a)) </span><br><span class="line"><span class="built_in">print</span>(np.mean(a)) </span><br><span class="line"><span class="built_in">print</span>(np.median(a)) </span><br><span class="line"><span class="built_in">print</span>(np.average(a))</span><br></pre></td></tr></table></figure><p>数组的众数不建议在Numpy里面计算，在Pandas里面计算更简单。将一维数组转成Pandas的Series,然后调用mode()方法，有待研究</p><h3 id="numpy的axis参数的用途">Numpy的axis参数的用途</h3><p>axis=0代表行，axis=1代表列<br>所有的数学和统计函数都有这个参数，都可以使用我们想按行或按列使用时使用这个参数</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line">a = np.array([[<span class="number">1</span>,<span class="number">3</span>,<span class="number">6</span>],[<span class="number">9</span>,<span class="number">3</span>,<span class="number">2</span>],[<span class="number">1</span>,<span class="number">4</span>,<span class="number">3</span>]])</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&#x27;数组:\n<span class="subst">&#123;a&#125;</span>&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;-&#x27;</span>*<span class="number">30</span>)</span><br><span class="line"><span class="built_in">print</span>(np.<span class="built_in">sum</span>(a,axis=<span class="number">0</span>)) <span class="comment"># 每行中的每个对应元素相加，返回一维数组</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;-&#x27;</span>*<span class="number">30</span>)</span><br><span class="line"><span class="built_in">print</span>(np.<span class="built_in">sum</span>(a,axis=<span class="number">1</span>)) <span class="comment"># 每列中的每个元素相加，返回一维数组</span></span><br></pre></td></tr></table></figure><p>其中思路正好是反的：axis=0 求每列的和。axis=1求每行的和。<br>数组对应到现实中的一种解释：</p><ol><li>行：每行对应一个样本数据</li><li>列：每列代表样本的一个特征<br>数据标准化：<br>• 对于机器学习、神经网络来说，不同列的量纲是相同的，收敛更快。<br>• 有两个特征，一个是商品单价1元至50元，另一个是销售数量3千个至1万个，这两个数字不可比，所以需要都做标准化。<br>• 比如在Excel里，单价一个列，销售数量一个列，不同列代表不同特征，所以用axis=0做计算<br>• 标准化一般使用：通过均值和方差实现<br>数组 = （数组 - mean(数组，axis=0)）/ std(数组, axis=0)</li></ol><h3 id="将条件逻辑作为数组操作">将条件逻辑作为数组操作</h3><p>numpy.where调用方式为numpy.where(condition,1,2)，满足条件的位置上返回结果赋值为1，不满足的位置上返回结果赋值为2</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line">a = np.array([[<span class="number">1</span>,<span class="number">3</span>,<span class="number">6</span>],[<span class="number">9</span>,<span class="number">3</span>,<span class="number">2</span>],[<span class="number">1</span>,<span class="number">4</span>,<span class="number">3</span>]])</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&#x27;数组:\n<span class="subst">&#123;a&#125;</span>&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;-&#x27;</span>*<span class="number">30</span>)</span><br><span class="line"><span class="built_in">print</span>(a&gt;<span class="number">3</span>)<span class="comment">#TURE OR FALSE</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;-&#x27;</span>*<span class="number">30</span>)</span><br><span class="line"><span class="built_in">print</span>(np.where(a&gt;<span class="number">3</span>,<span class="number">520</span>,<span class="number">1314</span>))</span><br></pre></td></tr></table></figure><h3 id="布尔值数组方法">布尔值数组方法</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line">a = np.array([[<span class="number">1</span>,<span class="number">3</span>,<span class="number">6</span>],[<span class="number">9</span>,<span class="number">3</span>,<span class="number">2</span>],[<span class="number">1</span>,<span class="number">4</span>,<span class="number">3</span>]])</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&#x27;数组:\n<span class="subst">&#123;a&#125;</span>&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;-&#x27;</span>*<span class="number">30</span>)</span><br><span class="line"><span class="built_in">print</span>((a&gt;<span class="number">3</span>).<span class="built_in">sum</span>()) <span class="comment"># 数组中大于3的数有多少个</span></span><br></pre></td></tr></table></figure><p>对于布尔值数组，有两个常用方法any和all。<br>any：检查数组中是否至少有一个True<br>all：检查是否每个值都是True</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line">a = np.array([<span class="literal">False</span>,<span class="literal">False</span>,<span class="literal">True</span>,<span class="literal">False</span>])</span><br><span class="line"><span class="built_in">print</span>(a.<span class="built_in">any</span>()) <span class="comment">#TRUE</span></span><br><span class="line"><span class="built_in">print</span>(a.<span class="built_in">all</span>()) <span class="comment">#FALSE</span></span><br></pre></td></tr></table></figure><h3 id="按值大小排序-sort">按值大小排序 sort</h3><p>ndarray.sort(axis=-1, kind='quicksort', order=None)<br>axis<br>排序沿数组的（轴）方向，0表示按行，1表示按列，N0表示展开来排序，默认值为-1，表示沿最后的轴排序<br>kind<br>排序的算法，提供了快排'quicksort'、混排'mergesort、堆排heapsort',默认为quicksort'<br>order<br>排序的字段名，可指定字段排序，默认为None<br>一维数组：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line">a = np.array([<span class="number">3</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">9</span>,<span class="number">2</span>,<span class="number">1</span>,<span class="number">8</span>,<span class="number">5</span>,<span class="number">4</span>]) <span class="comment">#默认升序</span></span><br><span class="line">a.sort()</span><br><span class="line"><span class="built_in">print</span>(a)</span><br></pre></td></tr></table></figure><p>二维数组：<br>二维数组按列排序就是按照1轴排序，对二维数组中的每一行一维数据而言默认升序</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line">a = np.array([[<span class="number">0</span>,<span class="number">12</span>,<span class="number">48</span>],[<span class="number">4</span>,<span class="number">18</span>,<span class="number">14</span>],[<span class="number">7</span>,<span class="number">1</span>,<span class="number">99</span>]])</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&#x27;数组：\n<span class="subst">&#123;a&#125;</span>&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;-&#x27;</span>*<span class="number">30</span>)</span><br><span class="line"><span class="built_in">print</span>(np.sort(a)) <span class="comment"># 默认按最后的轴排序，就是（行，列）（0，1）</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;-&#x27;</span>*<span class="number">30</span>)</span><br><span class="line"><span class="built_in">print</span>(np.sort(a,axis=<span class="number">0</span>)) <span class="comment"># 按行排序</span></span><br></pre></td></tr></table></figure><h3 id="从大到小的索引-argsort">从大到小的索引 argsort</h3><p>numpy.argsort(a, axis=-1, kind='quicksort', order=None)<br>对数组沿给定轴执行间接排序，并使用指定排序类型返回数据的索引数组。 这个索引数组用于构造排序后的数组。<br>参数类似于sort()<br>一维数组：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line">x = np.array([<span class="number">59</span>, <span class="number">29</span>, <span class="number">39</span>])</span><br><span class="line">a = np.argsort(x)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&#x27;索引升序：<span class="subst">&#123;a&#125;</span>&#x27;</span>) <span class="comment"># 升序</span></span><br><span class="line"><span class="comment"># argsort函数返回的是数组值从小到大的索引值,[3, 1, 2]从小到大为[1，2，3],期对应的索引为[1，2，0]</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&#x27;数组升序：<span class="subst">&#123;x[a]&#125;</span>&#x27;</span>) <span class="comment"># 以排序后的顺序重构原数组</span></span><br><span class="line">b = np.argsort(-x) <span class="comment"># 降序</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&#x27;索引降序：<span class="subst">&#123;b&#125;</span>&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&#x27;数组升序：<span class="subst">&#123;x[b]&#125;</span>&#x27;</span>)</span><br></pre></td></tr></table></figure><p>二维数组：<br><a href="https://geek-docs.com/numpy/python-numpy-indexing/numpy-take-python.html">np.take的用法</a></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line">x = np.array([[<span class="number">0</span>, <span class="number">12</span>, <span class="number">48</span>], [<span class="number">4</span>, <span class="number">18</span>, <span class="number">14</span>], [<span class="number">7</span>, <span class="number">1</span>, <span class="number">99</span>]])</span><br><span class="line">a1 = np.argsort(x)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&#x27;索引排序：\n<span class="subst">&#123;a1&#125;</span>&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;-&#x27;</span>*<span class="number">30</span>)</span><br><span class="line"><span class="comment"># 以排序后的顺序重构原数组，注意与一维数组的形式不一样</span></span><br><span class="line"><span class="built_in">print</span>(np.array([np.take(x[i], x[i].argsort()) <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">3</span>)]))</span><br></pre></td></tr></table></figure><p>由于对列的索引排序所以take中的第一个参数不变</p><h2 id="根据键值的字典序进行排序-lexsort">根据键值的字典序进行排序 lexsort</h2><p>lexsort(keys, axis=-1)<br>lexsort()根据键值的字典序进行排序，支持对数组按指定行或列的顺序排序，间接排序，不修改原数组，返回索引。一般对一维数组使用argsort()。<br>默认按最后一行元素有小到大排序, 返回最后一行元素排序后索引所在位置。</p><h2 id="唯一值与其它集合逻辑-unique和in1d">唯一值与其它集合逻辑 unique和in1d</h2><p>去重复：<br>unique(x) 计算x的唯一值，并排序</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line">姓名 = np.array([<span class="string">&#x27;孙悟空&#x27;</span>,<span class="string">&#x27;猪八戒&#x27;</span>,<span class="string">&#x27;孙悟空&#x27;</span>,<span class="string">&#x27;沙和尚&#x27;</span>,<span class="string">&#x27;孙悟空&#x27;</span>,<span class="string">&#x27;唐僧&#x27;</span>])</span><br><span class="line"><span class="built_in">print</span>(np.unique(姓名))</span><br><span class="line">数组 = np.array([<span class="number">1</span>,<span class="number">3</span>,<span class="number">1</span>,<span class="number">3</span>,<span class="number">5</span>,<span class="number">3</span>,<span class="number">1</span>,<span class="number">3</span>,<span class="number">7</span>,<span class="number">3</span>,<span class="number">5</span>,<span class="number">6</span>])</span><br><span class="line"><span class="built_in">print</span>(np.unique(数组))</span><br></pre></td></tr></table></figure><p>检查一个数组中的值是否在另外一个数组中，并返回一个布尔数组：<br>in1d(x,y) 计算x中的元素是否包含在y中，返回一个布尔值数组</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line">a = np.array([<span class="number">6</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">3</span>,<span class="number">2</span>,<span class="number">5</span>,<span class="number">6</span>])</span><br><span class="line"><span class="built_in">print</span>(np.in1d(a,[<span class="number">2</span>,<span class="number">3</span>,<span class="number">6</span>]))</span><br></pre></td></tr></table></figure><h2 id="浅拷贝与深拷贝">浅拷贝与深拷贝</h2><p>浅拷贝<br>a=b 不能这样赋值，因为a和b相互影响，在内存里a变了b也会发生变化<br>a=b[:] 视图操作，一种切片，会创建新的对象a，但是a的数据完全由b保管，他们两个的数据变化是一致的<br>深拷贝<br>a=b.copy() 复制，a和b互不影响，相当于是重新开辟了一个空间保存b的值，然后让a指向b.copy()</p><h1 id="pandas">Pandas</h1><p>RT</p><h2 id="数据类型与新建文件">数据类型与新建文件</h2><p>数据类型 说明 新建方法<br>csv、tsv、txt 用逗号分隔、tab分割的纯文本文件 pd.to_csv<br>excel xls或xlsx pd.to_excel<br>mysql 关系数据库表 pd.to_sq<br>一、新建空白Excel文件:<br>报错：ModuleNotFoundError: No module named 'openpyxl'使用pip list发现没有openpyxl包安装后无错误</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd </span><br><span class="line">路径 = <span class="string">&#x27;D:\python-learn\新建空白文件.xlsx&#x27;</span> </span><br><span class="line">数据=pd.DataFrame( ) </span><br><span class="line">数据.to_excel(路径) </span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;新建空白文件.xlsx成功&#x27;</span>)</span><br></pre></td></tr></table></figure><p>注意xlsx文件打开后不可写Permission denied: 'd:/python-learn/新建空白文件.xlsx'<br>二、新建文件同时写入数据：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line">路径 = <span class="string">&#x27;D:\python-learn\新建空白文件.xlsx&#x27;</span></span><br><span class="line">数据=pd.DataFrame(&#123;<span class="string">&#x27;id&#x27;</span>:[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>],<span class="string">&#x27;姓名&#x27;</span>:[<span class="string">&#x27;叶问&#x27;</span>,<span class="string">&#x27;李小龙&#x27;</span>,<span class="string">&#x27;孙兴华&#x27;</span>]&#125;)</span><br><span class="line">数据.to_excel(路径)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;新建空白文件.xlsx成功&#x27;</span>)</span><br></pre></td></tr></table></figure><p>三、将id设置为索引</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line">路径 = <span class="string">&#x27;D:\python-learn\新建空白文件.xlsx&#x27;</span></span><br><span class="line">数据=pd.DataFrame(&#123;<span class="string">&#x27;id&#x27;</span>:[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>],<span class="string">&#x27;姓名&#x27;</span>:[<span class="string">&#x27;叶问&#x27;</span>,<span class="string">&#x27;李小龙&#x27;</span>,<span class="string">&#x27;孙兴华&#x27;</span>]&#125;) <span class="comment"># 写入的数据</span></span><br><span class="line">数据=数据.set_index(<span class="string">&#x27;id&#x27;</span>) <span class="comment"># 将id设置为索引</span></span><br><span class="line">数据.to_excel(路径) <span class="comment"># 将数据写入Excel文件</span></span><br><span class="line"><span class="built_in">print</span>(数据)</span><br></pre></td></tr></table></figure><h2 id="读取数据">读取数据</h2><p>数据类型 说明 读取方法<br>csv、tsv、txt 默认英文逗号分隔 pd.read_csv<br>csv、tsv、txt 默认\t分隔 pd.read_table<br>excel xls或xlsx pd.read_excel<br>mysql 关系数据库表 pd.read_sql<br>体验两种方法的区别，与sep指定分隔符切记：如果分隔符不止一种，使用正则表达式sep='\s+'，一般使用CSV文件存储大数据，匹配空白字符(包括空格、换行符、制表符等)，也就是说既有空白字符又有\t分隔符可以用<code>pd.read_table(路径，sep='\s+')</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd </span><br><span class="line">路径 = <span class="string">&#x27;D:\python-learn\读取数据.txt&#x27;</span> </span><br><span class="line">读取数据 = pd.read_csv(路径) </span><br><span class="line"><span class="built_in">print</span>(读取数据)</span><br></pre></td></tr></table></figure><p>二、查看前几行数据<br>print(读取数据.head()) # 默认是5行，指定行数写小括号里<br>三、查看数据的形状，返回（行数、列数）<br>print(读取数据.shape)<br>四、 查看列名列表<br>print(读取数据.columns)<br>五、查看索引列<br>print(读取数据.index)<br>六、查看每一列数据类型<br>print(读取数据.dtypes)</p><h3 id="自己制定分隔符-列名-自定义表头">自己制定分隔符、列名,自定义表头</h3><p><code>读取数据 = pd.read_csv(路径,sep=',',header=None,names=['姓名','年龄','地址','电话','入职日期'],encoding='utf-8',index_col='入职日期')</code><br>sep参数：英文逗号或&quot;\t&quot;,从文件、url、文件型对象中加载带分隔符的数据，默认为'\t'。（read_csv默认分隔符是逗号）,可以通过制定sep 参数来修改默认分隔符<br>header参数：读取没有标题的文件时，默认为第一行作为列标题,设置header=None,意思就是没有表头，后面你自己写表头<br>names参数：通过names=['a','b','c']可以自己设置列标题。<br>参数 描述<br>sep 分隔符或正则表达式 sep='\s+' 注意如果数据中既有英文也有中文逗号可以sep='，'<br>header 列名的行号，默认0（第一行），如果没有列名应该为None<br>names 列名，与header=None一起使用，自定义表头名称<br>index_col 索引的列号或列名，可以是一个单一的名称或数字，也可以是一个分层索引<br>skiprows 从文件开始处，需要跳过的行数或行号列表<br>encoding 文本编码，例如utf-8<br>nrows 从文件开头处读入的行数 nrows=3</p><h3 id="txt文件转csv文件">txt文件转csv文件</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line">数据 = pd.read_csv(<span class="string">&#x27;D:\python-learn\读取数据.txt&#x27;</span>)</span><br><span class="line">数据.to_csv(<span class="string">&#x27;D:\python-learn\读取数据.csv&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(数据)</span><br></pre></td></tr></table></figure><h3 id="读取mysql数据库">读取MySQL数据库</h3><p>补充SQL in Python 之 PyMysql</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"><span class="keyword">import</span> pymysql</span><br><span class="line">连接对象 = pymysql.connect(host = <span class="string">&#x27;localhost&#x27;</span>,user = <span class="string">&#x27;root&#x27;</span>,password = <span class="string">&#x27;1234&#x27;</span>,database = <span class="string">&#x27;test&#x27;</span>,charset = <span class="string">&#x27;utf8&#x27;</span>)</span><br><span class="line">读取文件 = pd.read_sql(<span class="string">&quot;select * from 1班&quot;</span>,con=连接对象)<span class="comment">#第1个参数是SQL查询语句，第2参数是数据库连接</span></span><br><span class="line"><span class="built_in">print</span>(读取文件)</span><br></pre></td></tr></table></figure><h3 id="读取excel文件">读取Excel文件</h3><p>读取Excel并添加自定义表头</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line">路径 = <span class="string">&#x27;D:\python-learn\工作簿.xlsx&#x27;</span></span><br><span class="line">读取数据=pd.read_excel(路径,header=<span class="literal">None</span>,names=[<span class="string">&#x27;序号&#x27;</span>,<span class="string">&#x27;姓名&#x27;</span>,<span class="string">&#x27;年龄&#x27;</span>,<span class="string">&#x27;手机&#x27;</span>,<span class="string">&#x27;地址&#x27;</span>,<span class="string">&#x27;入职日期&#x27;</span>])</span><br><span class="line"><span class="built_in">print</span>(读取数据)</span><br></pre></td></tr></table></figure><p>to_excel可用于写入文件<code>xxx.to_excel(excel1.xlsx, sheet_name='Sheet1', index=False)</code>注意第一个参数别加引号,参数设置的不好会破坏原来的文件 # index false为不写入索引，关闭文档再调用否则没权限；index_col='序号'可用于添加序号</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line">路径 = <span class="string">&#x27;D:\python-learn\工作簿.xlsx&#x27;</span></span><br><span class="line">读取数据 = pd.read_excel(路径,header=<span class="number">0</span>,index_col=<span class="string">&#x27;序号&#x27;</span>)</span><br><span class="line">读取数据.columns=[<span class="string">&#x27;序号&#x27;</span>,<span class="string">&#x27;姓名&#x27;</span>,<span class="string">&#x27;年龄&#x27;</span>,<span class="string">&#x27;地址&#x27;</span>,<span class="string">&#x27;电话&#x27;</span>,<span class="string">&#x27;入职日期&#x27;</span>] <span class="comment"># 给每个列重复设置表头</span></span><br><span class="line">读取数据=读取数据.set_index(<span class="string">&#x27;序号&#x27;</span>,inplace=<span class="literal">True</span>) <span class="comment"># 只在index上面改,不要生成新的</span></span><br><span class="line"><span class="built_in">print</span>(读取数据.columns) <span class="comment"># 查看列名列表，index和columns是分开的</span></span><br><span class="line"><span class="built_in">print</span>(读取数据)</span><br><span class="line">读取数据.to_excel(<span class="string">&#x27;路径&#x27;</span>) <span class="comment"># 写入到Excel文件</span></span><br></pre></td></tr></table></figure><p>二、查看前几行数据<br>print(读取数据.head()) # 默认是5行，指定行数写小括号里<br>三、查看数据的形状，返回（行数、列数）<br>print(读取数据.shape)<br>四、 查看列名列表<br>print(读取数据.columns)<br>五、查看索引列<br>print(读取数据.index)<br>六、查看每一列数据类型<br>print(读取数据.dtypes)<br>七、自己设置并写入表头【第一种方法】<br>import pandas as pd<br>路径 = 'c:/pandas/读取文件.xlsx'<br>读取数据 = pd.read_excel(路径,header=None)<br>读取数据.columns=['序号','姓名','年龄','地址','电话','入职日期'] # 给每个列重复设置表头<br>读取数据=读取数据.set_index('序号') # 重新指定索引列<br>print(读取数据.columns) # 查看列名列表<br>读取数据.to_excel('路径') # 写入到Excel文件<br>八、自己设置并写入表头【第二种方法】<br>import pandas as pd<br>路径 = 'c:/pandas/读取文件.xlsx'<br>读取数据 = pd.read_excel(路径,header=None,index_col='序号')<br>读取数据.columns=['序号','姓名','年龄','地址','电话','入职日期'] # 给每个列重复设置表头<br>读取数据=读取数据.set_index('序号',inplace=True) # 只在index上面改,不要生成新的<br>print(读取数据.columns) # 查看列名列表，index和columns是分开的<br>读取数据.to_excel('路径') # 写入到Excel文件<br>孙兴华推荐方法：<br>import pandas as pd<br>路径 = 'c:/pandas/读取文件.xlsx'<br>读取数据 = pd.read_excel(路径,header=None,names=['序号','姓名','年龄','手机','地址','入职日期'],  index_col='序号')<br>默认第0行为标题行<br>如果自己设置表头，这里要设置无表头<br>指定哪列是index<br>2.3 读取Excel文件<br>2020年4月2日 23:13<br>分区 基础 的第 10 页<br>读取数据 = pd.read_excel(路径,header=None,names=['序号','姓名','年龄','手机','地址','入职日期'],  index_col='序号')<br>print(读取数据)<br>读取数据.to_excel(路径)</p><h2 id="pandas数据结构">pandas数据结构</h2><p>DataFrame：二维数据，整个表格，多行多列简称df<br>df.index：索引列<br>df.columns：列名<br>Series：一维数据，一行或一列<br>Series是一种类似于一维数组的对象，它由一组数据（不同数据类型）以及一组与之相关的数据标签（即索引）组成。</p><h3 id="仅有数据列表即可产生最简单的series">仅有数据列表即可产生最简单的Series</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line">数据= pd.Series([<span class="number">520</span>,<span class="string">&#x27;孙兴华&#x27;</span>,<span class="number">1314</span>,<span class="string">&#x27;2020-07-30&#x27;</span>]) <span class="comment"># 左侧是索引，右侧是数据</span></span><br><span class="line"><span class="built_in">print</span>(数据)</span><br><span class="line"><span class="built_in">print</span>(数据.index) <span class="comment"># 获取索引，返回索引的（起始值，结束值，步长）RangeIndex(start=0, stop=4, step=1)</span></span><br><span class="line"><span class="built_in">print</span>(数据.values) <span class="comment"># 获取数据，返回值序列，打印元素值的列表 [520 &#x27;孙兴华&#x27; 1314 &#x27;2020-07-30&#x27;]</span></span><br></pre></td></tr></table></figure><h3 id="我们指定series的索引">我们指定Series的索引</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line">数据= pd.Series([<span class="number">520</span>,<span class="string">&#x27;孙兴华&#x27;</span>,<span class="number">1314</span>,<span class="string">&#x27;2020-07-30&#x27;</span>],index=[<span class="string">&#x27;a&#x27;</span>,<span class="string">&#x27;b&#x27;</span>,<span class="string">&#x27;c&#x27;</span>,<span class="string">&#x27;d&#x27;</span>]) <span class="comment"># 指定索引</span></span><br><span class="line"><span class="built_in">print</span>(数据)</span><br><span class="line"><span class="built_in">print</span>(数据.index) <span class="comment"># 返回指定的索引 Index([&#x27;a&#x27;, &#x27;b&#x27;, &#x27;c&#x27;, &#x27;d&#x27;], dtype=&#x27;object&#x27;)</span></span><br></pre></td></tr></table></figure><h3 id="使用python字典创建series">使用Python字典创建Series</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line">字典=&#123;<span class="string">&#x27;姓名&#x27;</span>:<span class="string">&#x27;孙兴华&#x27;</span>,<span class="string">&#x27;性别&#x27;</span>:<span class="string">&#x27;男&#x27;</span>,<span class="string">&#x27;年龄&#x27;</span>:<span class="string">&#x27;20&#x27;</span>,<span class="string">&#x27;地址&#x27;</span>:<span class="string">&#x27;花果山水帘洞&#x27;</span>&#125; </span><br><span class="line">数据=pd.Series(字典)</span><br><span class="line"><span class="built_in">print</span>(数据)</span><br><span class="line"><span class="built_in">print</span>(数据.index) <span class="comment"># 返回key Index([&#x27;姓名&#x27;, &#x27;性别&#x27;, &#x27;年龄&#x27;, &#x27;地址&#x27;], dtype=&#x27;object&#x27;)</span></span><br></pre></td></tr></table></figure><p>print(数据) # 查询整个字典<br>print(数据['姓名']) # 通过key可以查对应的值<br>type(数据['年龄']) # 通过key可以查对应值的类型<br>print(数据[['姓名','年龄']]) # 通过多个key查对应的值 #姓名    孙兴华<br>年龄     20<br>type(数据[['姓名','年龄']]) # 注意：他不返回值的类型，而返回Series</p><h3 id="键和值存在两个列表中-创建series">键和值存在两个列表中，创建Series</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line">列表<span class="number">1</span> = [<span class="string">&#x27;姓名&#x27;</span>,<span class="string">&#x27;性别&#x27;</span>,<span class="string">&#x27;年龄&#x27;</span>]</span><br><span class="line">列表<span class="number">2</span> = [<span class="string">&#x27;孙兴华&#x27;</span>,<span class="string">&#x27;男&#x27;</span>,<span class="number">20</span>]</span><br><span class="line">数据 = pd.Series(列表<span class="number">2</span>,index=列表<span class="number">1</span>) <span class="comment"># 指定谁是索引</span></span><br><span class="line"><span class="built_in">print</span>(数据)</span><br></pre></td></tr></table></figure><p>Series只是一个序列，可能是一行，也可能是一列，现在无法确定用行的方法，把Series加入DataFrame，就是行，反之就是列。<br>常用方法<br>数据.index #查看索引<br>数据.values #查看数值<br>数据.isnull() #查看为空的，返回布尔型<br>数据.notnull()<br>数据.sort_index() #按索引排序<br>数据.sort_values() #按数值排序</p><h3 id="认识dataframe">认识DataFrame</h3><p>• 每列可以是不同的值类型（数值、字符串、布尔值等）<br>• 既有行索引index，也有列索引columns<br>• 可以被看做由Series组成的字典<br>DataFrame是一个表格型的数据结构<br>创建DataFrame最常用的方法，参考读取CSV、TXT、Excel、MySQL等<br>创建二维数组，列索引为a,b,c:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line">数据=pd.DataFrame([[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>],[<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>],[<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>]],columns=[<span class="string">&#x27;a&#x27;</span>,<span class="string">&#x27;b&#x27;</span>,<span class="string">&#x27;c&#x27;</span>])</span><br><span class="line"><span class="built_in">print</span>(数据)</span><br><span class="line"><span class="built_in">print</span>(数据[<span class="string">&#x27;a&#x27;</span>][<span class="number">0</span>] ) <span class="comment">#a列0行</span></span><br><span class="line"><span class="built_in">print</span>(数据.loc[<span class="number">0</span>][<span class="string">&#x27;a&#x27;</span>] ) <span class="comment">#0行a列</span></span><br><span class="line"><span class="built_in">print</span>(数据.iloc[<span class="number">0</span>][<span class="number">0</span>] ) <span class="comment">#0行0列的位置</span></span><br><span class="line"><span class="built_in">print</span>(数据[[<span class="string">&#x27;a&#x27;</span>,<span class="string">&#x27;b&#x27;</span>]]) <span class="comment">#a,b列上的数据</span></span><br></pre></td></tr></table></figure><p>loc就根据这个index来索引对应的行。iloc并不是根据index来索引，而是根据行号来索引，行号从0开始，逐次加1。<br>a. 数据.loc方法：根据行，列的标签值查询<br>b. 数据.iloc方法：根据行，列的数字位置查询</p><h4 id="dataframe-整个表格">DataFrame 整个表格</h4><p>DataFrame是一个表格型的数据结构：<br>每列可以是不同的值类型（数值、字符串、布尔值等）<br>既有行索引index，也有列索引columns<br>可以被看做由Series组成的字典<br>创建DataFrame最常用的方法，参考读取CSV、TXT、Excel、MySQL等<br>多个字典序列创建DataFrame:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line">字典 = &#123;</span><br><span class="line"> <span class="string">&#x27;姓名&#x27;</span>:[<span class="string">&#x27;孙兴华&#x27;</span>,<span class="string">&#x27;李小龙&#x27;</span>,<span class="string">&#x27;叶问&#x27;</span>],</span><br><span class="line"> <span class="string">&#x27;年龄&#x27;</span>:[<span class="number">20</span>,<span class="number">80</span>,<span class="number">127</span>],</span><br><span class="line"> <span class="string">&#x27;功夫&#x27;</span>:[<span class="string">&#x27;撸铁&#x27;</span>,<span class="string">&#x27;截拳道&#x27;</span>,<span class="string">&#x27;咏春&#x27;</span>]</span><br><span class="line"> &#125;</span><br><span class="line">数据 = pd.DataFrame(字典)</span><br><span class="line"><span class="built_in">print</span>(数据)</span><br><span class="line"><span class="built_in">print</span>(数据.dtypes) <span class="comment"># 返回每一列的类型</span></span><br><span class="line"><span class="built_in">print</span>(数据.columns) <span class="comment"># 返回列索引，以列表形式返回：[列名1，列名2，…]</span></span><br><span class="line"><span class="built_in">print</span>(数据.index) <span class="comment"># 返回行索引，（起始，结束，步长）</span></span><br></pre></td></tr></table></figure><p>从DataFrame中查询出Series<br>print(数据['姓名']) # 返回索引和这一列数据<br>• 如果只查询一行，返回的是pd.Series<br>type(数据['姓名']) # 类型返回Series<br>print(数据.loc[1]) # 这时，它的索引是列名<br>• 如果查询多列，返回的是pd.DataFrame<br>type(df.loc[1]) # 类型返回Series<br>print(数据[['姓名','年龄']]) # 返回索引和这两列数据<br>• 如果查询多行，返回的是pd.DataFrame<br>type(数据[['姓名','年龄']]) # 类型返回DataFrame<br>print(数据.loc[1:3]) # 返回前3行，包括结束值<br>type(数据.loc[1:3]) # 类型返回DataFrame<br>将多个Series加入DataFrame: index=[1,2,3]意思是索引名为1,2,3且3个数据的index他有对齐的功能，例如把数据3的index改成2，3，4，没有值的地方会显示nan</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line">数据<span class="number">1</span> = pd.Series([<span class="string">&#x27;叶问&#x27;</span>,<span class="string">&#x27;李小龙&#x27;</span>,<span class="string">&#x27;孙兴华&#x27;</span>],index=[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>],name=<span class="string">&#x27;姓名&#x27;</span>)</span><br><span class="line">数据<span class="number">2</span> = pd.Series([<span class="string">&#x27;男&#x27;</span>,<span class="string">&#x27;男&#x27;</span>,<span class="string">&#x27;男&#x27;</span>],index=[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>],name=<span class="string">&#x27;性别&#x27;</span>)</span><br><span class="line">数据<span class="number">3</span> = pd.Series([<span class="number">127</span>,<span class="number">80</span>,<span class="number">20</span>],index=[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>],name=<span class="string">&#x27;年龄&#x27;</span>)</span><br><span class="line">表<span class="number">1</span> = pd.DataFrame(&#123;数据<span class="number">1.</span>name:数据<span class="number">1</span>,数据<span class="number">2.</span>name:数据<span class="number">2</span>,数据<span class="number">3.</span>name:数据<span class="number">3</span>&#125;)</span><br><span class="line"><span class="built_in">print</span>(表<span class="number">1</span>)</span><br></pre></td></tr></table></figure><h4 id="dataframe常用方法">DataFrame常用方法</h4><p>常用方法<br>数据.head( 5 ) #查看前5行<br>数据.tail( 3 ) #查看后3行<br>数据.values #查看数值<br>数据shape #查看行数、列数<br>数据.fillna(0) #将空值填充0<br>数据.replace( 1, -1) #将1替换成-1<br>数据.isnull() #查找数据中出现的空值<br>数据.notnull() #非空值<br>数据.dropna() #删除空值<br>数据.unique() #查看唯一值<br>数据.reset_index() #修改、删除，原有索引，详见例1<br>数据.columns #查看数据的列名<br>数据.index #查看索引<br>数据.sort_index() #索引排序<br>数据.sort_values() #值排序<br>pd.merge(数据1,数据1) #合并<br>pd.concat([数据1,数据2]) #合并，与merge的区别，自查<br>pd.pivot_table( 数据 ) #用df做数据透视表（类似于Excel的数透）</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line">路径 = <span class="string">&#x27;d:/python-learn/分组2.xlsx&#x27;</span></span><br><span class="line">读取数据 = pd.read_excel(路径,header=<span class="literal">None</span>)</span><br><span class="line"><span class="built_in">print</span>(读取数据.reset_index(drop=<span class="literal">True</span>)) <span class="comment"># 索引被直接删除</span></span><br><span class="line"><span class="built_in">print</span>(读取数据.reset_index(drop=<span class="literal">False</span>)) <span class="comment"># 索引列会被还原为普通列</span></span><br></pre></td></tr></table></figure><h4 id="连接查询-数据合并与重塑">连接查询[数据合并与重塑]</h4><p>首先merge的操作非常类似sql里面的join，实现将两个Dataframe根据一些共有的列连接起来，当然，在实际场景中，这些共有列一般是Id，连接方式也丰富多样，可以选择inner(默认)，left,right,outer 这几种模式，分别对应的是内连接，左连接，右连接，全外连接</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line">数据<span class="number">1</span>=pd.DataFrame(&#123;<span class="string">&#x27;姓名&#x27;</span>:[<span class="string">&#x27;叶问&#x27;</span>,<span class="string">&#x27;李小龙&#x27;</span>,<span class="string">&#x27;孙兴华&#x27;</span>,<span class="string">&#x27;李小龙&#x27;</span>,<span class="string">&#x27;叶问&#x27;</span>,<span class="string">&#x27;叶问&#x27;</span>],<span class="string">&#x27;出手次数1&#x27;</span>:np.arange(<span class="number">6</span>)&#125;)</span><br><span class="line">数据<span class="number">2</span>=pd.DataFrame(&#123;<span class="string">&#x27;姓名&#x27;</span>:[<span class="string">&#x27;黄飞鸿&#x27;</span>,<span class="string">&#x27;孙兴华&#x27;</span>,<span class="string">&#x27;李小龙&#x27;</span>],<span class="string">&#x27;出手次数2&#x27;</span>:[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>]&#125;)</span><br><span class="line"><span class="built_in">print</span>(数据<span class="number">1</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="number">30</span>*<span class="string">&#x27;*&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(数据<span class="number">2</span>)</span><br><span class="line">数据三=pd.merge(数据<span class="number">1</span>,数据<span class="number">2</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="number">30</span>*<span class="string">&#x27;*&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(数据三)</span><br></pre></td></tr></table></figure><p><code>数据三=pd.merge(数据1,数据2)</code>相当于<code>数据3 = pd.merge(数据1,数据2,on='姓名',how='inner')</code><br>左连接：第一列为基准<br><code>数据3 = pd.merge(数据1,数据2,on='姓名',how='left')</code><br>OuterMerge (全连接)：<br><code>数据3 = pd.merge(数据1,数据2,on='姓名',how='outer')</code>全部数据取并集<br>MultipleKey Merge (基于多个key上的merge)：<br>刚才我们都是仅仅实现的在一个key上的merge，当然我们也可以实现基于多个keys的merge改变On=的参数可使得二维键值合并</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line">数据<span class="number">1</span> = pd.DataFrame(&#123;<span class="string">&#x27;姓名&#x27;</span>: [<span class="string">&#x27;张三&#x27;</span>, <span class="string">&#x27;张三&#x27;</span>, <span class="string">&#x27;王五&#x27;</span>],<span class="string">&#x27;班级&#x27;</span>: [<span class="string">&#x27;1班&#x27;</span>, <span class="string">&#x27;2班&#x27;</span>, <span class="string">&#x27;1班&#x27;</span>],<span class="string">&#x27;分数&#x27;</span>: [<span class="number">10</span>,<span class="number">20</span>,<span class="number">30</span>]&#125;)</span><br><span class="line"><span class="built_in">print</span>(数据<span class="number">1</span>)</span><br><span class="line">数据<span class="number">2</span> = pd.DataFrame(&#123;<span class="string">&#x27;姓名&#x27;</span>: [<span class="string">&#x27;张三&#x27;</span>, <span class="string">&#x27;张三&#x27;</span>, <span class="string">&#x27;王五&#x27;</span>,<span class="string">&#x27;王五&#x27;</span>],<span class="string">&#x27;班级&#x27;</span>: [<span class="string">&#x27;1班&#x27;</span>, <span class="string">&#x27;1班&#x27;</span>, <span class="string">&#x27;1班&#x27;</span>,<span class="string">&#x27;2班&#x27;</span>],<span class="string">&#x27;分数&#x27;</span>: [<span class="number">40</span>,<span class="number">50</span>,<span class="number">60</span>,<span class="number">70</span>]&#125;)</span><br><span class="line"><span class="built_in">print</span>(数据<span class="number">2</span>)</span><br><span class="line">数据<span class="number">3</span>= pd.merge(数据<span class="number">1</span>,数据<span class="number">2</span>,on=[<span class="string">&#x27;姓名&#x27;</span>,<span class="string">&#x27;班级&#x27;</span>]) <span class="comment"># 内连接（交集）的结果</span></span><br><span class="line"><span class="built_in">print</span>(数据<span class="number">3</span>)</span><br><span class="line">数据<span class="number">4</span>= pd.merge(数据<span class="number">1</span>,数据<span class="number">2</span>,on=[<span class="string">&#x27;姓名&#x27;</span>,<span class="string">&#x27;班级&#x27;</span>],how=<span class="string">&#x27;outer&#x27;</span>) <span class="comment"># 外连接（并集）的结果</span></span><br><span class="line"><span class="built_in">print</span>(数据<span class="number">4</span>)</span><br></pre></td></tr></table></figure><p>Merge on Index (基于index上的merge) :<br>我们还可以实现几个Dataframe基于Index的merge，还是老样子，先让我们创建两个Dataframe</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line">数据<span class="number">1</span> = pd.DataFrame(&#123;<span class="string">&#x27;姓名&#x27;</span>: [<span class="string">&#x27;张三&#x27;</span>,<span class="string">&#x27;李四&#x27;</span>,<span class="string">&#x27;王五&#x27;</span>,<span class="string">&#x27;张三&#x27;</span>,<span class="string">&#x27;李四&#x27;</span>],<span class="string">&#x27;次数&#x27;</span>:<span class="built_in">range</span>(<span class="number">5</span>)&#125;)</span><br><span class="line">数据<span class="number">2</span> = pd.DataFrame(&#123;<span class="string">&#x27;数据&#x27;</span>: [<span class="number">10</span>, <span class="number">20</span>]&#125;, index=[<span class="string">&#x27;张三&#x27;</span>,<span class="string">&#x27;李四&#x27;</span>])</span><br><span class="line">数据<span class="number">3</span>=pd.merge(数据<span class="number">1</span>,数据<span class="number">2</span>,left_on=<span class="string">&#x27;姓名&#x27;</span>,right_index=<span class="literal">True</span>)</span><br><span class="line"><span class="built_in">print</span>(数据<span class="number">1</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="number">30</span>*<span class="string">&#x27;*&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(数据<span class="number">2</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="number">30</span>*<span class="string">&#x27;*&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(数据<span class="number">3</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="number">30</span>*<span class="string">&#x27;*&#x27;</span>)</span><br><span class="line">数据<span class="number">4</span>=pd.merge(数据<span class="number">1</span>,数据<span class="number">2</span>,left_on=<span class="string">&#x27;姓名&#x27;</span>,right_index=<span class="literal">True</span>,how=<span class="string">&#x27;outer&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(数据<span class="number">4</span>)</span><br></pre></td></tr></table></figure><p>总结<br>（1）通过on指定数据合并对齐的列 （2）没有指定how的话默认使用inner方法，除了内连接，还包括左连接、右连接、全外连接</p><h3 id="分组聚合">分组聚合</h3><p>在pandas中，实现分组操作的代码很简单，仅需一行代码，在这里，将上面的数据集按照company字段进行划分：<code>group = data.groupby(&quot;company&quot;)</code><br>for groupy分组：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line">路径=<span class="string">&#x27;d:/python-learn/分组.xlsx&#x27;</span></span><br><span class="line">数据=pd.read_excel(路径)</span><br><span class="line"><span class="keyword">for</span> (i,j),group <span class="keyword">in</span> 数据.groupby([<span class="string">&#x27;城市&#x27;</span>,<span class="string">&#x27;区&#x27;</span>]): </span><br><span class="line">    <span class="built_in">print</span>(i) <span class="comment">#所有城市的分组遍历  </span></span><br><span class="line">    <span class="built_in">print</span>(j) <span class="comment">#所有区的分组遍历</span></span><br><span class="line">    <span class="built_in">print</span>(group) <span class="comment">#分组</span></span><br></pre></td></tr></table></figure><p>分组聚合：<code>数据2=数据.groupby(['城市'，'区'])[['人数']].sum()</code>按城市和区分组，再用人数聚合<br>to_excel(DIY路径)可以把分组聚合后的文件另存为！！！不要使用原路径防止误操作覆盖原来好的文件</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line">路径=<span class="string">&#x27;d:/python-learn/分组.xlsx&#x27;</span></span><br><span class="line">数据=pd.read_excel(路径)</span><br><span class="line">数据<span class="number">2</span>=数据.groupby([<span class="string">&#x27;城市&#x27;</span>,<span class="string">&#x27;区&#x27;</span>])[[<span class="string">&#x27;人数&#x27;</span>]].<span class="built_in">sum</span>()</span><br><span class="line"><span class="built_in">print</span>(数据<span class="number">2</span>)</span><br><span class="line">数据<span class="number">2.</span>to_excel(<span class="string">&#x27;d:/python-learn/分组聚合.xlsx&#x27;</span>)</span><br></pre></td></tr></table></figure><p>结果为</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">          人数</span><br><span class="line">城市  区</span><br><span class="line">北京市 东城区   <span class="number">88</span></span><br><span class="line">    西城区  <span class="number">112</span></span><br><span class="line">天津  南开区  <span class="number">108</span></span><br><span class="line">    和平区   <span class="number">97</span></span><br></pre></td></tr></table></figure><p>也可以将多个属性聚类，比如<code>数据2=数据.groupby(['城市','区'])[['人数','金额']].sum()</code><br>对各列分别进行函数运算：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line">路径 = <span class="string">&#x27;d:/python-learn/分组2.xlsx&#x27;</span></span><br><span class="line">数据 = pd.read_excel(路径)</span><br><span class="line"><span class="comment">#不同列的不同计算方法</span></span><br><span class="line">字典 = &#123;<span class="string">&#x27;1月&#x27;</span>:<span class="string">&#x27;count&#x27;</span>,<span class="string">&#x27;2月&#x27;</span>:<span class="built_in">sum</span>,<span class="string">&#x27;3月&#x27;</span>:<span class="built_in">max</span>,<span class="string">&#x27;4月&#x27;</span>:<span class="string">&#x27;mean&#x27;</span>&#125;</span><br><span class="line">数据<span class="number">2</span> = 数据.groupby(<span class="string">&#x27;店名&#x27;</span>).agg(字典)</span><br><span class="line"><span class="built_in">print</span>(数据<span class="number">2</span>)</span><br></pre></td></tr></table></figure><p>注意：<br>如果按一列聚合，只传列名字符串，如果多个就要传由列名组成的列表<br>聚合方法可以使用 Pandas 的数学统计函数 或者 Numpy 的统计函数<br>如果是 python 的内置统计函数，直接使用变量，不需要加引号<br>agg函数一般与groupby配合使用，agg是基于列的聚合操作，而groupby是基于行的<br>DataFrame.agg（func，axis = 0，* args，** kwargs ）<br>func : 函数，函数名称，函数列表，字典{‘行名/列名’，‘函数名’}<br>使用指定轴上的一个或多个操作进行聚合。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line">路径 = <span class="string">&#x27;d:/python-learn/分组2.xlsx&#x27;</span></span><br><span class="line">数据 = pd.read_excel(路径,index_col=<span class="string">&#x27;店名&#x27;</span>)  </span><br><span class="line"><span class="comment">#不同列的不同计算方法</span></span><br><span class="line">字典 = &#123;<span class="string">&#x27;1月&#x27;</span>:<span class="string">&#x27;一季度&#x27;</span>,<span class="string">&#x27;2月&#x27;</span>:<span class="string">&#x27;一季度&#x27;</span>,<span class="string">&#x27;3月&#x27;</span>:<span class="string">&#x27;一季度&#x27;</span>,<span class="string">&#x27;4月&#x27;</span>:<span class="string">&#x27;二季度&#x27;</span>&#125;</span><br><span class="line">数据<span class="number">2</span> = 数据.groupby(字典,axis=<span class="number">1</span>).<span class="built_in">sum</span>()</span><br><span class="line"><span class="built_in">print</span>(数据<span class="number">2</span>)</span><br></pre></td></tr></table></figure><p>在read_excel中添加索引，先设计字典在按列axis=1按照字典值求和sum()<br>默认是对索引聚类，例如对店名的长度聚类</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line">路径 = <span class="string">&#x27;d:/python-learn/分组2.xlsx&#x27;</span></span><br><span class="line">数据 = pd.read_excel(路径,index_col=<span class="string">&#x27;店名&#x27;</span>)  </span><br><span class="line">数据<span class="number">2</span> = 数据.groupby(<span class="built_in">len</span>).<span class="built_in">sum</span>()</span><br><span class="line"><span class="built_in">print</span>(数据<span class="number">2</span>)</span><br></pre></td></tr></table></figure><p>对索引的名称长度和所在城市聚合<br><code>S1=['北京','北京','北京','北京','天津天津']</code> <code>数据2=数据.groupby([len.S1]).sum()</code><br>统计数值类型数据先对文字设置索引<br>groupby详细用法：<br>DataFrame.groupby(by=None, axis=0, level=None, as_index=True, sort=True, group_keys=True, squeeze=False, **kwargs)<br>by:接收映射、函数、标签或标签列表；用于确定聚合的组。<br>axis:接收0/1；用于表示沿行(0)或列(1)分割。<br>level:接收int、级别名称或序列，默认为None;如果轴是一个多索引（层次化），则按一个或多个特定级别分组。<br>as_index:接收布尔值，默认Ture;Ture则返回以组标签为索引的对象，False则不以组标签为索引。<br>mean()函数功能：求取均值。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line">路径 = <span class="string">&#x27;d:/python-learn/分组3.xlsx&#x27;</span></span><br><span class="line">数据 = pd.read_excel(路径,index_col=[<span class="number">0</span>,<span class="number">1</span>])  <span class="comment">#按男，女索引</span></span><br><span class="line">数据<span class="number">2</span>=数据.groupby(level=<span class="string">&#x27;班级&#x27;</span>).mean()</span><br><span class="line"><span class="built_in">print</span>(数据<span class="number">2</span>)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>域名重定向js</title>
      <link href="/posts/a7247cbd/"/>
      <url>/posts/a7247cbd/</url>
      
        <content type="html"><![CDATA[<h1 id="rt">RT</h1><p>基于js以礼拜x为判定的域名重定向程序</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">&lt;script type=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><br><span class="line">  &lt;!--</span><br><span class="line">  <span class="keyword">function</span> <span class="title function_">Redirect</span>(<span class="params"></span>)</span><br><span class="line">  &#123;</span><br><span class="line">  <span class="keyword">var</span> random = <span class="title class_">Math</span>.<span class="title function_">round</span>(<span class="title class_">Math</span>.<span class="title function_">random</span>()*<span class="number">10</span>);</span><br><span class="line">  <span class="keyword">var</span> week = <span class="keyword">new</span> <span class="title class_">Date</span>().<span class="title function_">getDay</span>();  </span><br><span class="line">  <span class="keyword">if</span> (random == <span class="number">0</span>) &#123;</span><br><span class="line">  <span class="variable language_">window</span>.<span class="property">location</span>=<span class="string">&quot;https://www.cnhls.com/&quot;</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">else</span> <span class="keyword">if</span> (week == <span class="number">0</span>) &#123;  </span><br><span class="line">  <span class="variable language_">window</span>.<span class="property">location</span>=<span class="string">&quot;https://www.mcdonalds.com.cn/&quot;</span>; </span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (week == <span class="number">1</span>) &#123;  </span><br><span class="line">  <span class="variable language_">window</span>.<span class="property">location</span>=<span class="string">&quot;https://www.mcdonalds.com.cn/&quot;</span>; </span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (week == <span class="number">2</span>) &#123;  </span><br><span class="line">  <span class="variable language_">window</span>.<span class="property">location</span>=<span class="string">&quot;https://www.mcdonalds.com.cn/&quot;</span>; </span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (week == <span class="number">3</span>) &#123;  </span><br><span class="line">  <span class="variable language_">window</span>.<span class="property">location</span>=<span class="string">&quot;https://www.bkchina.cn/&quot;</span>;  </span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (week == <span class="number">4</span>) &#123;  </span><br><span class="line">  <span class="variable language_">window</span>.<span class="property">location</span>=<span class="string">&quot;https://m.kfc.com.cn/&quot;</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (week == <span class="number">5</span>) &#123;  </span><br><span class="line">  <span class="variable language_">window</span>.<span class="property">location</span>=<span class="string">&quot;https://www.mcdonalds.com.cn/&quot;</span>; </span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (week == <span class="number">6</span>) &#123;  </span><br><span class="line">  <span class="variable language_">window</span>.<span class="property">location</span>=<span class="string">&quot;https://www.mcdonalds.com.cn/&quot;</span>;  </span><br><span class="line">&#125; </span><br><span class="line">  &#125;</span><br><span class="line">  <span class="title class_">Redirect</span>();</span><br><span class="line">  <span class="comment">//--&gt;</span></span><br><span class="line">  &lt;/script&gt;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>关于本站视频404的说明</title>
      <link href="/posts/8ba2d86b/"/>
      <url>/posts/8ba2d86b/</url>
      
        <content type="html"><![CDATA[<h1 id="rt">RT</h1><p>对象存储到期，本来想用本地备份上传，但由于我的失误误删了文件，因此本站大部分视频失效，本站图床也将在近期陆续转移。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>miniconda使用</title>
      <link href="/posts/4f83b1e8/"/>
      <url>/posts/4f83b1e8/</url>
      
        <content type="html"><![CDATA[<h2 id="什么是conda">什么是CONDA</h2><p><a href="https://www.bilibili.com/video/BV1Yb4y1X7S5/?spm_id_from=333.337.search-card.all.click&amp;vd_source=ea78e03d02c651ab9a1849ee5454e98b">什么是CONDA</a></p><h2 id="常用命令">常用命令</h2><p><code>chdir /d D:\</code>切换盘符到D:</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>0406-至今Python学习日志</title>
      <link href="/posts/8a0d7eae/"/>
      <url>/posts/8a0d7eae/</url>
      
        <content type="html"><![CDATA[<h1 id="0406线性回归">0406线性回归</h1><p>线性回归就是根据已有的x1,x2,y数据，求出x1,x2前系数k1,k2的大致数值<br>y=k1x1+k2x2,可先转化成矩阵的形式并且通常会有个误差项。机器学习：机器学习已有数据，计算出最待合目标方程的参数。</p><h1 id="0409">0409</h1><h2 id="热水器耦合器和开水断电保修">热水器耦合器和开水断电保修</h2><p>已经向PDD联系，表示会补发耦合器</p><h2 id="python-pass语句">Python PASS语句</h2><p>pss语句，什么都不做，只是一个占位符，用到需要写语句的地方</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">answer=<span class="built_in">input</span>(<span class="string">&#x27;您是会员吗？y/n&#x27;</span>)</span><br><span class="line"><span class="comment">#判断是否是会员</span></span><br><span class="line"><span class="keyword">if</span> answer==’y’:</span><br><span class="line">  <span class="keyword">pass</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">  <span class="keyword">pass</span></span><br></pre></td></tr></table></figure><p>Python条件不需要加括号，内部语句使用2个空格也就是TAB</p><h2 id="0411">0411</h2><p>列表lst[]中的值序号从左到右从0到n-1，从右到左是-1到-N</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">lst=[<span class="string">&#x27;he11o&#x27;</span>,<span class="string">&#x27;world&#x27;</span>,<span class="number">98</span>]</span><br><span class="line"><span class="built_in">print</span> (lst)</span><br><span class="line"><span class="built_in">print</span>(lst[<span class="number">2</span>])</span><br><span class="line"><span class="built_in">print</span> (lst[-<span class="number">3</span>])</span><br></pre></td></tr></table></figure><p>in和not in用于判断在列表中是否存在返回值true,false</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">lst=[<span class="number">10</span>,<span class="number">20</span>,’python<span class="string">&#x27;,’he11o&#x27;</span>]</span><br><span class="line"><span class="built_in">print</span> (<span class="number">10</span> <span class="keyword">in</span> lst) <span class="comment">#True</span></span><br><span class="line"><span class="built_in">print</span> (<span class="number">100</span> <span class="keyword">in</span> lst) <span class="comment">#False</span></span><br><span class="line"><span class="built_in">print</span> (<span class="number">10</span> <span class="keyword">not</span> <span class="keyword">in</span> lst) <span class="comment">#False</span></span><br><span class="line"><span class="built_in">print</span>(<span class="number">100</span> <span class="keyword">not</span> <span class="keyword">in</span> lst) <span class="comment">#True</span></span><br></pre></td></tr></table></figure><p>append用于向列表的末尾添加一个元素,列表ID不变也就是不是新列表而是原列表</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">lst=[<span class="number">10</span>,<span class="number">20</span>,<span class="number">30</span>]</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;添加元素之前&#x27;</span>,lst,<span class="built_in">id</span>(lst))</span><br><span class="line">lst.append (<span class="number">100</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;添加元素之后&#x27;</span>,lst,<span class="built_in">id</span>(lst))</span><br></pre></td></tr></table></figure><p>lst.extend用于直接添加元素不保留数组格式，而append会保留</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">lst=[<span class="number">10</span>,<span class="number">20</span>,<span class="number">30</span>]</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;添加元素之前&#x27;</span>,lst,<span class="built_in">id</span>(lst))</span><br><span class="line">lst.append (<span class="number">100</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;添加元素之后&#x27;</span>,lst,<span class="built_in">id</span>(lst))</span><br><span class="line">lst2=[<span class="string">&#x27;hello&#x27;</span>,<span class="string">&#x27;ok&#x27;</span>]</span><br><span class="line">lst.append (lst2)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;添加元素之后1&#x27;</span>,lst,<span class="built_in">id</span>(lst))</span><br><span class="line">lst.extend(lst2)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;添加元素之后2&#x27;</span>,lst,<span class="built_in">id</span>(lst))</span><br></pre></td></tr></table></figure><p>结果如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">添加元素之前 [<span class="number">10</span>, <span class="number">20</span>, <span class="number">30</span>] <span class="number">2616022525760</span></span><br><span class="line">添加元素之后 [<span class="number">10</span>, <span class="number">20</span>, <span class="number">30</span>, <span class="number">100</span>] <span class="number">2616022525760</span></span><br><span class="line">添加元素之后<span class="number">1</span> [<span class="number">10</span>, <span class="number">20</span>, <span class="number">30</span>, <span class="number">100</span>, [<span class="string">&#x27;hello&#x27;</span>, <span class="string">&#x27;ok&#x27;</span>]] <span class="number">2616022525760</span></span><br><span class="line">添加元素之后<span class="number">2</span> [<span class="number">10</span>, <span class="number">20</span>, <span class="number">30</span>, <span class="number">100</span>, [<span class="string">&#x27;hello&#x27;</span>, <span class="string">&#x27;ok&#x27;</span>], <span class="string">&#x27;hello&#x27;</span>, <span class="string">&#x27;ok&#x27;</span>] <span class="number">2616022525760</span></span><br></pre></td></tr></table></figure><p>lst.insert#在任意位置上添加一个元素,第一个参数是位置</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#在任意位置上添加一个元素</span></span><br><span class="line">lst.insert(<span class="number">1</span>,<span class="number">90</span>)</span><br><span class="line"><span class="built_in">print</span> (lst)</span><br></pre></td></tr></table></figure><p>lst切片操作，第一个参数是位置序号，从该位置开始替换为lst3数组</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">lst=[<span class="string">&#x27;he11o&#x27;</span>,<span class="string">&#x27;world&#x27;</span>,<span class="number">98</span>]</span><br><span class="line">lst3=[<span class="string">&#x27;True&#x27;</span>,<span class="string">&#x27;False&#x27;</span>,<span class="string">&#x27;hello&#x27;</span>]</span><br><span class="line"><span class="comment">#在任意的位置上添加多个元素</span></span><br><span class="line">lst[<span class="number">1</span>:]=lst3</span><br><span class="line"><span class="built_in">print</span>(lst)</span><br></pre></td></tr></table></figure><p>lst.remove从列表中移除一个元素，如果有重复元素只移第一个元素</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">lst=[<span class="number">10</span>,<span class="number">20</span>,<span class="number">30</span>,<span class="number">40</span>,<span class="number">50</span>,<span class="number">60</span>,<span class="number">30</span>]</span><br><span class="line">lst.remove(<span class="number">30</span>) <span class="comment">#从列表中移除一个元素，如果有重复元素只移第一个元素</span></span><br><span class="line"><span class="built_in">print</span>(lst)</span><br><span class="line">lst.remove(<span class="number">100</span>）<span class="comment">#从列表中移除元素的序号超过阈值报错</span></span><br></pre></td></tr></table></figure><h2 id="0412">0412</h2><p>lst.pop()根据索引移除元素，pop中为所要移除的索引序号</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">lst=[<span class="number">10</span>,<span class="number">20</span>,<span class="number">30</span>,<span class="number">40</span>,<span class="number">50</span>,<span class="number">60</span>,<span class="number">30</span>]</span><br><span class="line">lst.pop (<span class="number">1</span>)</span><br><span class="line"><span class="built_in">print</span> (lst)</span><br></pre></td></tr></table></figure><p>结果为<code>[10, 30, 40, 50, 60, 30]</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">lst=[<span class="number">10</span>,<span class="number">20</span>,<span class="number">30</span>,<span class="number">40</span>]</span><br><span class="line"><span class="comment">#一次修改一个值</span></span><br><span class="line">lst[<span class="number">2</span>]=<span class="number">100</span></span><br><span class="line"><span class="built_in">print</span> (lst)</span><br><span class="line">lst[<span class="number">1</span>:<span class="number">3</span>]=[<span class="number">300</span>,<span class="number">400</span>,<span class="number">500</span>,<span class="number">600</span>]</span><br><span class="line"><span class="built_in">print</span> (lst)</span><br></pre></td></tr></table></figure><p>结果为：<br><code>[10, 20, 100, 40]</code><br><code>[10, 300, 400, 500, 600, 40]</code><br>lst.sort用于直接排序，默认升序</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">lst=[<span class="number">10</span>,<span class="number">20</span>,<span class="number">30</span>,<span class="number">40</span>,<span class="number">50</span>,<span class="number">60</span>,<span class="number">90</span>]</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;排序后的列表&#x27;</span>,lst,<span class="built_in">id</span>(lst))</span><br><span class="line"><span class="comment">#通过指定关键字参数，将列表中的元素进行降序排序</span></span><br><span class="line">lst.sort (reverse=<span class="literal">True</span>)</span><br><span class="line"><span class="comment">#reverse=Irue表示降序排序，reverse=False就是升序排序</span></span><br><span class="line"><span class="built_in">print</span> (lst)</span><br><span class="line">lst.sort (reverse=<span class="literal">False</span>)</span><br><span class="line"><span class="built_in">print</span>(lst)</span><br></pre></td></tr></table></figure><p>结果为<br><code>[90, 60, 50, 40, 30, 20, 10]</code><br><code>[10, 20, 30, 40, 50, 60, 90]</code><br>sorted函数排序会产生新的列表对象lst</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#开始排序</span></span><br><span class="line">lst=[<span class="number">10</span>,<span class="number">20</span>,<span class="number">30</span>,<span class="number">40</span>]</span><br><span class="line">new_list=<span class="built_in">sorted</span> (lst)</span><br><span class="line"><span class="built_in">print</span> (lst)</span><br><span class="line"><span class="built_in">print</span> (new_list)</span><br><span class="line"><span class="comment">#指定关键字参数，实现列表元素的降序排序</span></span><br><span class="line">desc_list=<span class="built_in">sorted</span>(lst,reverse=<span class="literal">True</span>)</span><br><span class="line"><span class="built_in">print</span> (desc_list)</span><br></pre></td></tr></table></figure><p>[i<em>i for i in range(1,10)]<br>i</em>i表示列表元素的表达式，i表示自定义变量，range(1,10)表示可迭代对象<br>结果为<code>[1, 4, 9, 16, 25, 36, 49, 64, 81]</code></p><h2 id="0417">0417</h2><p>字典Python内置的数据结构之一，与列表一样是一个可变序列【支持增删改查】<br>以键值对的方式存储数据，字典是一个无序的序列，第一个放进来的不一定在第一个位置上即为无序，因为位置是经过hash函数计算得来的<br>字典的创建 最常用的方式：使用花括号</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">scores=&#123;<span class="string">&#x27;张三&#x27;</span>:<span class="number">100</span>,<span class="string">&#x27;李四&#x27;</span>:<span class="number">98</span>,<span class="string">&#x27;王五&#x27;</span>:<span class="number">45</span>&#125;</span><br><span class="line"><span class="built_in">print</span> (scores)</span><br><span class="line"><span class="built_in">print</span> (<span class="built_in">type</span> (scores))</span><br></pre></td></tr></table></figure><p>dict()创建</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">student=<span class="built_in">dict</span> (name=<span class="string">&#x27;jack&#x27;</span>,age=<span class="number">20</span>)</span><br><span class="line"><span class="built_in">print</span> (student)</span><br></pre></td></tr></table></figure><p>[]取值或者get()取值，get()取值会好一点不会报错！</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">scores=&#123;<span class="string">&#x27;张三&#x27;</span>:<span class="number">100</span>,<span class="string">&#x27;李四&#x27;</span>:<span class="number">98</span>,<span class="string">&#x27;王五&#x27;</span>:<span class="number">45</span>&#125;</span><br><span class="line"><span class="built_in">print</span>(scores[<span class="string">&#x27;张三&#x27;</span>])</span><br><span class="line"><span class="built_in">print</span>(scores.get(<span class="string">&#x27;张三&#x27;</span>))</span><br><span class="line"><span class="built_in">print</span>(scores.get(<span class="string">&#x27;陈六&#x27;</span>))</span><br></pre></td></tr></table></figure><p>in和not in判断是否存在元素以下为删改查</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">scores=&#123;<span class="string">&#x27;张三&#x27;</span>:<span class="number">100</span>,<span class="string">&#x27;李四&#x27;</span>:<span class="number">98</span>,<span class="string">&#x27;王五&#x27;</span>:<span class="number">45</span>&#125;</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;张三&#x27;</span> <span class="keyword">in</span> scores)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;张三&#x27;</span> <span class="keyword">not</span> <span class="keyword">in</span> scores)</span><br><span class="line"><span class="keyword">del</span> scores[<span class="string">&#x27;张三&#x27;</span>]</span><br><span class="line"><span class="comment">#删除指定的key-value对</span></span><br><span class="line">scores.clear()</span><br><span class="line"><span class="comment">#清空字典的元素</span></span><br><span class="line"><span class="built_in">print</span> (scores)</span><br><span class="line">scores[<span class="string">&#x27;陈六&#x27;</span>]=<span class="number">98</span></span><br><span class="line"><span class="comment">#新增元素</span></span><br><span class="line"><span class="built_in">print</span> (scores)</span><br><span class="line">scores[<span class="string">&#x27;陈六&#x27;</span>]=<span class="number">100</span></span><br><span class="line"><span class="comment">#修改元素</span></span><br><span class="line"><span class="built_in">print</span> (scores)</span><br></pre></td></tr></table></figure><p>运行结果</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="literal">True</span></span><br><span class="line"><span class="literal">False</span></span><br><span class="line">&#123;&#125;</span><br><span class="line">&#123;<span class="string">&#x27;陈六&#x27;</span>: <span class="number">98</span>&#125;</span><br><span class="line">&#123;<span class="string">&#x27;陈六&#x27;</span>: <span class="number">100</span>&#125;</span><br><span class="line"></span><br><span class="line">进程已结束,退出代码<span class="number">0</span></span><br></pre></td></tr></table></figure><p>字典中有键key，值value，元组key-value三部分组成例如<code>&#123;'张三':100,'李四':98,'王五':45&#125;</code>中，'张三'为键key，100为值value，合起来叫元组。<br>获取值</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&#123;<span class="string">&#x27;陈六&#x27;</span>: <span class="number">100</span>&#125;</span><br><span class="line"><span class="comment">#获取所有的value</span></span><br><span class="line">values=scores.values()</span><br><span class="line"><span class="built_in">print</span> (values)</span><br><span class="line"><span class="built_in">print</span> (<span class="built_in">type</span>(values))</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">list</span> (values))</span><br><span class="line"><span class="comment">#获取所有的key-value对</span></span><br><span class="line">scores.items()</span><br></pre></td></tr></table></figure><p>结果：</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="title">dict_values</span><span class="params">([<span class="number">100</span>])</span></span></span><br><span class="line">&lt;class <span class="string">&#x27;dict_values&#x27;</span>&gt;</span><br><span class="line"><span class="selector-attr">[100]</span></span><br></pre></td></tr></table></figure><p>获取Key</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#获取所有的key</span></span><br><span class="line">keys=scores.keys()</span><br><span class="line"><span class="built_in">print</span> (keys)</span><br><span class="line"><span class="built_in">print</span> (<span class="built_in">type</span> (keys))</span><br><span class="line"><span class="built_in">print</span> (<span class="built_in">list</span> (keys))</span><br><span class="line"><span class="comment">#将所有的key组成的视图转成列表</span></span><br></pre></td></tr></table></figure><p>获取key-value</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">scores=&#123;<span class="string">&#x27;张三&#x27;</span>:<span class="number">100</span>,<span class="string">&#x27;李四&#x27;</span>:<span class="number">98</span>,<span class="string">&#x27;王五&#x27;</span>:<span class="number">45</span>&#125;</span><br><span class="line"><span class="comment">#获取所有的key-value对</span></span><br><span class="line">items=scores.items ()</span><br><span class="line"><span class="built_in">print</span> (items)</span><br><span class="line"><span class="built_in">print</span> (<span class="built_in">list</span> (items))</span><br><span class="line"><span class="comment">#转换之后的列表元素是由元组组成</span></span><br></pre></td></tr></table></figure><p>结果：</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="title">dict_items</span><span class="params">([(<span class="string">&#x27;张三&#x27;</span>, <span class="number">100</span>)</span></span>, (<span class="string">&#x27;李四&#x27;</span>, <span class="number">98</span>), (<span class="string">&#x27;王五&#x27;</span>, <span class="number">45</span>)])</span><br><span class="line"><span class="selector-attr">[(<span class="string">&#x27;张三&#x27;</span>, 100), (<span class="string">&#x27;李四&#x27;</span>, 98), (<span class="string">&#x27;王五&#x27;</span>, 45)]</span></span><br></pre></td></tr></table></figure><p>字典元素的遍历,获取字典元素的键</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">scores=&#123;<span class="string">&#x27;张三&#x27;</span>:<span class="number">100</span>,<span class="string">&#x27;李四&#x27;</span>:<span class="number">98</span>,<span class="string">&#x27;王五&#x27;</span>:<span class="number">45</span>&#125;</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> scores:</span><br><span class="line">  <span class="built_in">print</span>(i)</span><br><span class="line">  <span class="built_in">print</span> (i,scores[i],scores.get (i))</span><br></pre></td></tr></table></figure><p>结果:</p><figure class="highlight tap"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">张三</span><br><span class="line">张三<span class="number"> 100 </span>100</span><br><span class="line">李四</span><br><span class="line">李四<span class="number"> 98 </span>98</span><br><span class="line">王五</span><br><span class="line">王五<span class="number"> 45 </span>45</span><br><span class="line">进程已结束,退出代码0</span><br></pre></td></tr></table></figure><p>·字典的特点<br>字典中的所有元素都是一个key-value对，key不允许重复，value可以<br>重复<br>·字典中的元素是无序的<br>·字典中的key必须是不可变对象<br>字典也可以根据需要动态地伸缩<br>·字典会浪费较大的内存，是一种使用空间换时间的数据结构<br>两列表一个做键，另一个做值最后合并</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">items=[<span class="string">&#x27;Fruits&#x27;</span>,<span class="string">&#x27;Books&#x27;</span>,<span class="string">&#x27;Others&#x27;</span>]</span><br><span class="line">prices=[<span class="number">96</span>,<span class="number">78</span>,<span class="number">85</span>]</span><br><span class="line">d=&#123;item:price <span class="keyword">for</span> item,price <span class="keyword">in</span> <span class="built_in">zip</span>(items,prices)&#125;</span><br><span class="line"><span class="built_in">print</span> (d)</span><br></pre></td></tr></table></figure><p>{'Fruits': 96, 'Books': 78, 'Others': 85}<br>·元组<br>·Python内置的数据结构之一，是一个不可变序列<br>不可变序列与可变序列<br>不变可变序：字符串、元组<br>·不变可变序列：没有增、删，改的操作,或者操作后地址更改<br>·可变序列列表、字典<br>·可变序列：可以对序列执行增、删、改操作，对象地址不发生更改</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">t=(<span class="string">&#x27;Python&#x27;</span>,world<span class="string">&#x27;,98)</span></span><br><span class="line"><span class="string">print (t)</span></span><br><span class="line"><span class="string">print (type (t))</span></span><br><span class="line"><span class="string">t2=&#x27;</span>Python’,’world<span class="string">&#x27;,98#省略了小括号</span></span><br><span class="line"><span class="string">print (t2)</span></span><br><span class="line"><span class="string">print (type (t2))  </span></span><br></pre></td></tr></table></figure><p>元组数据用()表示也可以用tuple  #如果元组中只有一个元素，逗号不能省<br>以下为元组t</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">t=(<span class="number">10</span>,[<span class="number">20</span>,<span class="number">30</span>],<span class="number">9</span>)</span><br><span class="line"><span class="built_in">print</span> (t)</span><br><span class="line"><span class="built_in">print</span> (<span class="built_in">type</span> (t))</span><br><span class="line"><span class="built_in">print</span> (t[<span class="number">0</span>],<span class="built_in">type</span> (t[<span class="number">0</span>]),<span class="built_in">id</span>(t[<span class="number">0</span>]))</span><br><span class="line"><span class="built_in">print</span>(t[<span class="number">1</span>],<span class="built_in">type</span>(t[<span class="number">1</span>]),<span class="built_in">id</span>(t[<span class="number">1</span>]))</span><br><span class="line"><span class="built_in">print</span> (t[<span class="number">2</span>],<span class="built_in">type</span> (t[<span class="number">2</span>]),<span class="built_in">id</span> (t[<span class="number">2</span>]))  </span><br></pre></td></tr></table></figure><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">(<span class="number">10</span>, [<span class="number">20</span>, <span class="number">30</span>], <span class="number">9</span>)</span><br><span class="line">&lt;<span class="keyword">class</span> &#x27;<span class="symbol">tuple</span>&#x27;&gt;</span><br><span class="line"><span class="symbol">10</span> &lt;<span class="symbol">class</span> &#x27;<span class="symbol">int</span>&#x27;&gt; <span class="symbol">2269279683088</span></span><br><span class="line">[<span class="symbol">20, <span class="symbol">30</span></span>] &lt;<span class="symbol">class</span> &#x27;<span class="symbol">list</span>&#x27;&gt; <span class="symbol">2269281052480</span></span><br><span class="line"><span class="symbol">9</span> &lt;<span class="symbol">class</span> &#x27;<span class="symbol">int</span>&#x27;&gt; <span class="symbol">2269279683056</span></span><br></pre></td></tr></table></figure><p>尝试将t[1]修改为100若直接<code>t[1]=100</code>会报错因为元组是不允许修改元素的<br>又由于[20,30]列表，而列表是可变序列，所以可以向列中添加元素，而列表的内存地址不变<br><code>t[1].append(100)</code>#向列表中添加元素<code>print (t,id(t[1]))</code>结果为(10, [20, 30, 100], 9) 2420456023872<br>元组是可迭代对象，所以可以使用for.in进行遍历</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">t=(<span class="number">10</span>,[<span class="number">20</span>,<span class="number">30</span>],<span class="number">9</span>)</span><br><span class="line"><span class="keyword">for</span> item <span class="keyword">in</span> t:</span><br><span class="line">    <span class="built_in">print</span> (item)</span><br></pre></td></tr></table></figure><p>结果为</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">10</span></span><br><span class="line"><span class="string">[20, 30]</span></span><br><span class="line"><span class="number">9</span></span><br></pre></td></tr></table></figure><h2 id="集合">集合</h2><p>·集合Python语言提供的内置数据结构<br>·与列表、字典一样都属于可变类型的序列，集合是没有value的字典<br>集合的创建方式直接()例如s={'Python','hello'90}<br>·使用内置函数set()<br>集合会自动去重复</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">s=&#123;<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">7</span>&#125;</span><br><span class="line"><span class="built_in">print</span> (s)</span><br></pre></td></tr></table></figure><p>结果为{2, 3, 4, 5, 6, 7}<br>集合间的关系<br>两个集合是否相等<br>可以使用运算符==或！=进行判断<br>个集合是否是另一个集合的子集<br>可以调用方法issubset进行判断如<code>print(s2.issubset(s1)) </code>表示判断s2，s1是否为子集的关系<br>B是A的子集<br>个集合是否是另一个集合的超集<br>可以调用方法issuperset进行判断<br>A是B的超集<br>两个集合是否没有交集<br>可以调用方法isdisjoint进行判断</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">s1=&#123;<span class="number">10</span>,<span class="number">20</span>,<span class="number">30</span>,<span class="number">40</span>,<span class="number">50</span>,<span class="number">60</span>&#125;</span><br><span class="line">s2=&#123;<span class="number">10</span>,<span class="number">20</span>,<span class="number">30</span>,<span class="number">40</span>&#125;</span><br><span class="line">s3=&#123;<span class="number">10</span>,<span class="number">20</span>,<span class="number">90</span>&#125;</span><br><span class="line"><span class="built_in">print</span>(s2.issubset(s1))</span><br><span class="line"><span class="comment">#True</span></span><br><span class="line"><span class="built_in">print</span> (s3.issubset(s1))</span><br><span class="line"><span class="comment">#False</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#集合生成式</span></span><br><span class="line">s=&#123;i*i <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span> (<span class="number">10</span>)&#125;</span><br><span class="line"><span class="built_in">print</span> (s)</span><br></pre></td></tr></table></figure><h2 id="字符串">字符串</h2><p>字符串<br>·在Python中字符串是基本数据类型，是一个不可变的字符序列<br>·什么叫字符串驻留机制呢？<br>·仅保存一份相同且不可变字符串的方法，不同的值被存放在字符串的驻留池中，Python的驻留机制对相同的字符串只保留一份拷贝，后续创建相同字符串时，不会开辟新空间，而是把该字符串的地址赋给新创建的变量</p><h3 id="字符串的驻留机制">字符串的驻留机制</h3><p>字符串的驻留机制对标准的字符串而言对于有特殊字符如%(不符合命名规则)则不适用</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">a=<span class="string">&#x27;Python&#x27;</span></span><br><span class="line">b=<span class="string">&quot;Python&quot;</span></span><br><span class="line">c=<span class="string">&#x27;&#x27;&#x27;Python&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="built_in">print</span> (a,<span class="built_in">id</span> (a))</span><br><span class="line"><span class="built_in">print</span> (b,<span class="built_in">id</span>(b))</span><br><span class="line"><span class="built_in">print</span> (c,<span class="built_in">id</span>(c))</span><br></pre></td></tr></table></figure><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">Python</span> <span class="number">2947153397168</span></span><br><span class="line"><span class="attribute">Python</span> <span class="number">2947153397168</span></span><br><span class="line"><span class="attribute">Python</span> <span class="number">2947153397168</span></span><br></pre></td></tr></table></figure><p>·驻留机制的几种情况（交互模式）<br>·字符串的长度为0或1时<br>·符合标识符的字符串<br>字符串只在编译时进行驻留，而非运行时<br>·[-5,256]之间的整数数字<br>·字符串驻留机制的优缺点<br>·当需要值相同的字符串时，可以直接从字符串池里拿来使用，避免频繁<br>的创建和销毁，提升效率和节约内存，因此拼接字符串和修改字符串是<br>会比较影响性能的。<br>在需要进行字符串拼接时建议使用str类型的join方法，而非+，因为join()<br>方法是先计算出所有字符中的长度，然后再拷贝，只new一次对象，效率要比&quot;+&quot;效率高</p><h3 id="字符串的查询操作的方法">字符串的查询操作的方法</h3><p>index()查找子串substr第一次出现的位置，如果查找的子串不存在时，则抛出ValueError<br>rindex()查找子串substr.最后一次出现的位置，如果查找的子串不存在时，则抛出ValueError<br>find()查找子串substr?第一次出现的位置，如果查找的子串不存在时，则返回-1<br>rfind()查找子串substr最后一次出现的位置，如果查找的子串不存在时，则返回-1</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">s=<span class="string">&#x27;hello,hello&#x27;</span></span><br><span class="line"><span class="built_in">print</span> (s.index (<span class="string">&#x27;lo&#x27;</span>)) <span class="comment">#3</span></span><br><span class="line"><span class="built_in">print</span> (s.find(<span class="string">&#x27;lo&#x27;</span>))<span class="comment">#3</span></span><br><span class="line"><span class="built_in">print</span> (s.rindex(<span class="string">&#x27;lo&#x27;</span>))<span class="comment">#9</span></span><br><span class="line"><span class="built_in">print</span> (s.rfind (<span class="string">&#x27;lo&#x27;</span>)) <span class="comment">#9</span></span><br></pre></td></tr></table></figure><h3 id="字符串的大小写转换操作的方法">字符串的大小写转换操作的方法</h3><p>upper()把字符串中所有字符都转成大写字母<br>lower()把字符串中所有字符都转成小写字母<br>swapcase()把字符串中所有大写字母转成小写字母，把所有小写字母都转成大写字母<br>capitalize()把第一个字符转换为大写，把其余字符转换为小写<br>title()把每个单词的第一个字符转换为大写，把每个单词的剩余字符转换为小写</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">s=<span class="string">&#x27;hello,python&#x27;</span></span><br><span class="line">a=s.upper()<span class="comment">#转成大写之后，会产生一个新的字符串对象</span></span><br><span class="line"><span class="built_in">print</span> (a,<span class="built_in">id</span>(a))</span><br><span class="line"><span class="built_in">print</span>(s,<span class="built_in">id</span>(s))</span><br><span class="line">b=s.lower()<span class="comment">#转换之后，会产生一个新的字符串对象</span></span><br><span class="line"><span class="built_in">print</span> (b,<span class="built_in">id</span>(b))</span><br><span class="line"><span class="built_in">print</span>(s,<span class="built_in">id</span>(s))</span><br><span class="line"><span class="built_in">print</span> (b==s) <span class="comment">#内容相等</span></span><br><span class="line"><span class="built_in">print</span>(b <span class="keyword">is</span> s)<span class="comment">#False id不相等</span></span><br></pre></td></tr></table></figure><h3 id="字符串对齐">字符串对齐</h3><p>center()居中对齐，第1个参数指定宽度，第2个参数指定填充符，第2个参数是可选的，默认是空格，如果设置宽度小于实际宽度则则返回原字符串<br>ljust()左对齐，第1个参数指定宽度，第2个尽参数指定填充符，第2个参数是可选的，默认是空格如果设置宽度小于实际宽度则则返回原字符串<br>rjust()右对齐，第1个参数指定宽度，第2个参数指定填充符，第2个参数是可选的，默认是空格如果设置宽度小于实际宽度则则返回原字符串<br>zfill()右对齐，左边用0填充，该方法只接收一个参数，用于指定字符串的宽度，如果指定的宽度小于等于字符串的长度，返回字符串本身</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">s=<span class="string">&#x27;hello,Python&#x27;</span><span class="comment">#居中对齐’</span></span><br><span class="line"><span class="built_in">print</span> (s.center (<span class="number">20</span>,<span class="string">&#x27;*&#x27;</span>))</span><br><span class="line"><span class="comment">#左对齐’</span></span><br><span class="line"><span class="built_in">print</span> (s.ljust (<span class="number">20</span>,<span class="string">&#x27;*&#x27;</span>))</span><br><span class="line"><span class="built_in">print</span> (s.ljust (<span class="number">10</span>))</span><br><span class="line"><span class="built_in">print</span> (s.ljust (<span class="number">20</span>))</span><br><span class="line"><span class="comment">#右对齐’</span></span><br><span class="line"><span class="built_in">print</span> (s.rjust (<span class="number">20</span>,<span class="string">&#x27;*&#x27;</span>))</span><br><span class="line"><span class="built_in">print</span> (s.rjust (<span class="number">20</span>))</span><br><span class="line"><span class="built_in">print</span> (s.rjust (<span class="number">10</span>))</span><br><span class="line"><span class="comment">#右对齐，使用0进行填充’’</span></span><br><span class="line"><span class="built_in">print</span>(s.zfill(<span class="number">20</span>))</span><br><span class="line"><span class="built_in">print</span>(s.zfill(<span class="number">10</span>))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;-8910&#x27;</span>.zfill(<span class="number">8</span>))</span><br></pre></td></tr></table></figure><p>结果为</p><figure class="highlight autohotkey"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">****hello,Python****</span><br><span class="line"><span class="built_in">hello,</span>Python********</span><br><span class="line"><span class="built_in">hello,</span>Python</span><br><span class="line"><span class="built_in">hello,</span>Python        </span><br><span class="line">********hello,Python</span><br><span class="line"><span class="built_in">        hello,</span>Python</span><br><span class="line"><span class="built_in">hello,</span>Python</span><br><span class="line"><span class="number">00000000</span>hello,Python</span><br><span class="line"><span class="built_in">hello,</span>Python</span><br><span class="line">-<span class="number">0008910</span></span><br><span class="line">进程已结束,退出代码<span class="number">0</span></span><br></pre></td></tr></table></figure><h3 id="字符串对齐">字符串对齐</h3><p>split()从字符串的左边开始劈分，默认的劈分字符是空格字符串，返回的值都是一个列表，以通过参数sep指定劈分字符串是的劈分符<br>通过参数maxsplit指定劈分字符串时的最大劈分次数，在经过最大次劈分之后，剩余的子串会单独做为一部分</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">s=<span class="string">&#x27;hello world Python&#x27;</span></span><br><span class="line">lst=s.split()</span><br><span class="line"><span class="built_in">print</span>(lst)</span><br><span class="line">s1=<span class="string">&#x27;hello|world|Python&#x27;</span></span><br><span class="line"><span class="built_in">print</span> (s1.split(sep=<span class="string">&#x27;|&#x27;</span>))</span><br><span class="line"><span class="built_in">print</span> (s1.split (sep=<span class="string">&#x27;|&#x27;</span>,maxsplit=<span class="number">1</span>))</span><br><span class="line"><span class="comment"># ’,’rsplit()从右侧开始劈分’</span></span><br><span class="line"><span class="built_in">print</span>(s.rsplit())</span><br><span class="line"><span class="built_in">print</span> (s1.rsplit(<span class="string">&#x27;|&#x27;</span>))</span><br><span class="line"><span class="built_in">print</span> (s1.rsplit(sep=<span class="string">&#x27;|&#x27;</span>,maxsplit=<span class="number">1</span>))</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[&#x27;hello&#x27;, &#x27;world&#x27;, &#x27;Python&#x27;]</span><br><span class="line">[&#x27;hello&#x27;, &#x27;world&#x27;, &#x27;Python&#x27;]</span><br><span class="line">[&#x27;hello&#x27;, &#x27;world|Python&#x27;]</span><br><span class="line">[&#x27;hello&#x27;, &#x27;world&#x27;, &#x27;Python&#x27;]</span><br><span class="line">[&#x27;hello&#x27;, &#x27;world&#x27;, &#x27;Python&#x27;]</span><br><span class="line">[&#x27;hello|world&#x27;, &#x27;Python&#x27;]</span><br></pre></td></tr></table></figure><h3 id="判断字符串操作的方法">判断字符串操作的方法</h3><p>isidentifier()判断指定的字符串是不是合法的标识符，isspace()判断指定的字符串是否全部由空白字符组成（回车、换行，水平制表符）<br>isalpha()判断指定的字符串是否全部由字母组成，isdecimal()判断指定字符串是否全部由十进制的数字组成<br>isnumeric()判断指定的字符串是否全部由数字组成，isalnum()判断指定字符串是否全部由字母和数字组成</p><h3 id="字符串替换-合并">字符串替换/合并</h3><p>replace()第1个参数指定被替换的子串，第2个参数指定替换子串的字符串，该方法返回替换后得到字符串替换后的字符串，替换前的字符串不发生变化，调用该方法时可以通过第3个参数指定最大替换次数<br>join()字符串的合并将列表或元组中的字符串合并成一个字符串</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">s=<span class="string">&#x27;hello,Python&#x27;</span></span><br><span class="line"><span class="built_in">print</span> (s.replace(<span class="string">&#x27;Python&#x27;</span>,<span class="string">&#x27;Java&#x27;</span>))</span><br><span class="line">s1=<span class="string">&#x27;hello,Python,Python,Python&#x27;</span></span><br><span class="line"><span class="built_in">print</span> (s1.replace (<span class="string">&#x27;Python&#x27;</span>,<span class="string">&#x27;Java&#x27;</span>,<span class="number">2</span>))</span><br></pre></td></tr></table></figure><figure class="highlight autohotkey"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">hello,</span>Java</span><br><span class="line"><span class="built_in">hello,</span>Java,Java,Python</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">t=(<span class="string">&#x27;hello&#x27;</span>,<span class="string">&#x27;Java&#x27;</span>,<span class="string">&#x27;Python&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;|&#x27;</span>.join(t))</span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;*&#x27;</span>.join (<span class="string">&#x27;Python&#x27;</span>))</span><br></pre></td></tr></table></figure><figure class="highlight coq"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hello|<span class="type">Java</span>|<span class="type">Python</span></span><br><span class="line">P*y*t*h*o*n</span><br></pre></td></tr></table></figure><h3 id="字符串的比较操作">字符串的比较操作</h3><p>运算符&gt;，&gt;=，&lt;，&lt;=，==，!=<br>比较规则：首先比较两个字符串中的第一个字符，如果相等则继续比较下一个字符，依次比较下去，直到两个字符串中的字符不相等时，其比较结果就是两个字符串的比较结果，两个字符串中的所有后续字符将不再被比较<br>比较原理：两上字符进行比较时，比较的是其ordinal value(原始值)，调用内置函数ord可以得到指定字符的ordinal value。与内置函数ord对应的是内置函数chr,调用内置函数chr时指定ordinal value可以得到其对应的字符</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;apple&#x27;</span>&gt;<span class="string">&#x27;app&#x27;</span>) <span class="comment">#True</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;apple&#x27;</span>&gt;<span class="string">&#x27;banana&#x27;</span>) <span class="comment">#False,相当于97&gt;98&gt;False</span></span><br><span class="line"><span class="built_in">print</span> (<span class="built_in">ord</span>(<span class="string">&#x27;a&#x27;</span>),<span class="built_in">ord</span>(<span class="string">&#x27;b&#x27;</span>))</span><br><span class="line"><span class="built_in">print</span> (<span class="built_in">chr</span> (<span class="number">97</span>),<span class="built_in">chr</span> (<span class="number">98</span>))</span><br></pre></td></tr></table></figure><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="literal">True</span></span><br><span class="line"><span class="literal">False</span></span><br><span class="line"><span class="number">97</span> <span class="number">98</span></span><br><span class="line">a b</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">s=<span class="string">&#x27;hello,Python&#x27;</span></span><br><span class="line">s1=s[:<span class="number">5</span>]</span><br><span class="line"><span class="comment">#由于没有指定起始位置，所以从0开始切</span></span><br><span class="line">s2=s[<span class="number">6</span>:]<span class="comment">#由于没有指定结束位置，所以切到字符串的最后一个元素</span></span><br><span class="line"><span class="built_in">print</span>(s1)</span><br><span class="line"><span class="built_in">print</span>(s2)</span><br><span class="line"><span class="built_in">print</span>(s[<span class="number">1</span>:<span class="number">5</span>:<span class="number">1</span>])<span class="comment">#从1开始截到5（不包含5），步长为1</span></span><br><span class="line"><span class="built_in">print</span>(s[::<span class="number">2</span>])<span class="comment">#默认从0开始，没有写结束，默认到字符串的最后一个元素，步长为2，两个元素之间的索引间隔为2</span></span><br><span class="line"><span class="built_in">print</span>(s[::-<span class="number">1</span>])<span class="comment">#默认从字符串的最后一个元素开始，到字符串的第一个元素结束，因为步长为负数</span></span><br></pre></td></tr></table></figure><figure class="highlight autohotkey"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">hello</span><br><span class="line">Python</span><br><span class="line">ello</span><br><span class="line">hloPto</span><br><span class="line"><span class="built_in">nohtyP,</span>olleh</span><br><span class="line"></span><br><span class="line">进程已结束,退出代码<span class="number">0</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;apple&#x27;</span>&gt;<span class="string">&#x27;app&#x27;</span>)<span class="comment">#True</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;apple&#x27;</span>&gt;<span class="string">&#x27;banana&#x27;</span>)<span class="comment">#False,相当于97&gt;98&gt;False</span></span><br><span class="line"><span class="built_in">print</span> (<span class="built_in">ord</span>(<span class="string">&#x27;a&#x27;</span>),<span class="built_in">ord</span>(<span class="string">&#x27;b&#x27;</span>))</span><br><span class="line"><span class="built_in">print</span> (<span class="built_in">chr</span> (<span class="number">97</span>),<span class="built_in">chr</span> (<span class="number">98</span>))</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">True</span><br><span class="line">False</span><br><span class="line">97 98</span><br><span class="line">a b</span><br></pre></td></tr></table></figure><p>==与is的区别,==比较的是value,is比较的是id是否相等</p><h3 id="格式化字符串">格式化字符串</h3><p>%作占位符或{}作占位符,{序号}序号对应format数组里的值</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">name=<span class="string">&#x27;张三&#x27;</span></span><br><span class="line">age=<span class="number">20</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;我叫%s,今年%d岁&#x27;</span>%(name,age))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;我叫&#123;0&#125;，今年&#123;1&#125;岁&#x27;</span>.<span class="built_in">format</span>(name,age))  </span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;%10d&#x27;</span>% <span class="number">99</span>)</span><br><span class="line"><span class="comment">#10表示的是宽度</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;%.3f&#x27;</span> % <span class="number">3.1415926</span>) <span class="comment">#.3表示是小数点后三位</span></span><br><span class="line"><span class="comment">#同时表示宽度和精度</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;%10.3f&#x27;</span> %<span class="number">3.1415926</span>)<span class="comment">#一共总宽度为10，小数点后3位</span></span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;hellohello&#x27;</span>)</span><br></pre></td></tr></table></figure><h3 id="字符串的编码转换">字符串的编码转换</h3><p>编码：将字符串转换为二进制数据(bytes)  解码：将oytes类型的数据转换成字符串类型</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">s=<span class="string">&#x27;天涯共此时&#x27;</span></span><br><span class="line"><span class="comment">#编码</span></span><br><span class="line"><span class="built_in">print</span> (s.encode (encoding=<span class="string">&#x27;GBK&#x27;</span>))</span><br><span class="line"><span class="comment">#在GBK这种编码格中一个中文占两个字节</span></span><br><span class="line"><span class="built_in">print</span>(s.encode(encoding=<span class="string">&#x27;UTF-8&#x27;</span>))<span class="comment">#在UTF-8这种编辑格式中，一个中文占三个字节</span></span><br><span class="line"><span class="comment">#解码</span></span><br><span class="line"><span class="comment">#byte代表就是一个二进制数据（字节类型的数据）</span></span><br><span class="line">byte=s.encode (encoding=<span class="string">&#x27;GBK&#x27;</span>)</span><br><span class="line"><span class="comment">#编码</span></span><br><span class="line"><span class="built_in">print</span>(byte.decode(encoding=<span class="string">&#x27;GBK&#x27;</span>))<span class="comment">#解码</span></span><br><span class="line">byte=s.encode (encoding=<span class="string">&#x27;UTF-8&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span> (byte.decode (encoding=<span class="string">&#x27;UTF-8&#x27;</span>))</span><br></pre></td></tr></table></figure><p>解码和编码协议要对应</p><h2 id="函数">函数</h2><h3 id="函数的定义与调用">函数的定义与调用</h3><p>·什么是函数<br>·函数就是执行特定任和以完成特定功能的一段代码<br>·为什么需要函数<br>·复用代码<br>·隐藏实现细节<br>·提高可维护性<br>·提高可读性便于调试<br>·函数的创建<br>def<br>函数名([输入参数])：<br>函数体<br>[return xxx]</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">calc</span>(<span class="params">a,b</span>):<span class="comment">#a,b称为形式参数，简称形参，形参的位置是在函数的定义处</span></span><br><span class="line">    c=a+b</span><br><span class="line">    <span class="keyword">return</span> c</span><br><span class="line">result=calc(<span class="number">10</span>,<span class="number">20</span>)</span><br><span class="line"><span class="comment">#10,20称为实际参数的值，简称实参，实参的位置是函数的调用处</span></span><br><span class="line"><span class="built_in">print</span> (result)</span><br><span class="line">res=calc(b=<span class="number">10</span>,a=<span class="number">20</span>)</span><br><span class="line"><span class="comment">#=左侧的变量的名称称为</span></span><br><span class="line"><span class="built_in">print</span> (res)  </span><br></pre></td></tr></table></figure><p>函数的返回值<br>(1)如果函数没有返回值【函数执行完毕之后，不需要给调用处提供数据】return可以省略不写<br>(2)函数的返回值，如果是1个，直接返回类型<br>(3)函数的返回值，如果是多个，返回的结果为元组</p><h3 id="函数的参数定义">函数的参数定义</h3><p>函数定义默认值参数，函数定义时，给形参设置默认值，只有与默认值不符的时候才需要传递实参<br>def fun(a,b=10)只传一个<br>print (a,b)<br>b采用默认值函数的调用<br>fun(100)<br>30将默认<br>fun(20,30)<br>值10替换</p><h3 id="个数可变的位置参数">个数可变的位置参数</h3><p>定义函数时，可能无法事先确定传递的位置实参的个数时，使用可变的位置参数使用*定义个数可变的位置形参</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">fun</span>(<span class="params">*args</span>):<span class="comment">#函数定义时的可变的位图参数</span></span><br><span class="line">    <span class="built_in">print</span> (args)</span><br><span class="line">    <span class="built_in">print</span> (args[<span class="number">0</span>])</span><br><span class="line">fun(<span class="number">10</span>)</span><br><span class="line">fun(<span class="number">10</span>,<span class="number">30</span>)</span><br><span class="line">fun(<span class="number">30</span>,<span class="number">405</span>,<span class="number">50</span>)</span><br></pre></td></tr></table></figure><h3 id="个数可变的关键字形参">个数可变的关键字形参</h3><p>定义函数时，无法事先确定传递的关键字实参的个数时，使用可变的关键字形参<br>使用**定义个数可变的关键字形参</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">fun1</span> (**args):</span><br><span class="line">    <span class="built_in">print</span> (args)</span><br><span class="line">fun1(a=<span class="number">10</span>)</span><br><span class="line">fun1(a=<span class="number">20</span>,b=<span class="number">30</span>,c=<span class="number">40</span>)</span><br></pre></td></tr></table></figure><p>{'a': 10}<br>{'a': 20, 'b': 30, 'c': 40}<br>可变的位置参数或者关键字形参，只能是1个；在一个函数的定义过程中，既有个数可变的关键字形参，也有个数可变的位置形参，要求，个数可变的位置形参，放在个数可变的关键字形参之前。<code>def fun3 (**args1,*arg2):</code></p><h3 id="函数参数总结">函数参数总结</h3><p>在函数调用时，将列表中的每个元素都转换为位置实参传入*lst,字典则要**dic</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">fun</span>(<span class="params">a,b,c</span>):<span class="comment">#a,b,c在函数的定义处，所以是形式参数</span></span><br><span class="line">    <span class="built_in">print</span> (<span class="string">&#x27;a=&#x27;</span>,a)</span><br><span class="line">    <span class="built_in">print</span> (<span class="string">&#x27;b=&#x27;</span>,b)</span><br><span class="line">    <span class="built_in">print</span> (<span class="string">&#x27;c=&#x27;</span>,c)</span><br><span class="line"><span class="comment">#函数的调秀</span></span><br><span class="line">fun(<span class="number">10</span>,<span class="number">20</span>,<span class="number">30</span>)</span><br><span class="line"><span class="comment">#函数调用时的参数传递，称为位置传参</span></span><br><span class="line">lst=[<span class="number">11</span>,<span class="number">22</span>,<span class="number">33</span>]</span><br><span class="line">fun (*lst)</span><br><span class="line"><span class="comment">#在函数调用时，将列表中的每个元素都转换为位置实参传入</span></span><br><span class="line">fun(a=<span class="number">100</span>,c=<span class="number">300</span>,b=<span class="number">200</span>)<span class="comment">#函数的调用，所以是关键字实参</span></span><br><span class="line">dic=&#123;<span class="string">&#x27;a&#x27;</span>:<span class="number">112</span>,<span class="string">&#x27;b&#x27;</span>:<span class="number">221</span>,<span class="string">&#x27;c&#x27;</span>:<span class="number">334</span>&#125;</span><br><span class="line">fun (**dic)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">fun2</span>(<span class="params">*args</span>):<span class="comment">#个数可变的位置形参</span></span><br><span class="line">    <span class="built_in">print</span> (args)</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">fun3</span>(<span class="params">**args2</span>):<span class="comment">#个数可变的关键字形参</span></span><br><span class="line">    <span class="built_in">print</span> (args2)</span><br><span class="line">fun2(<span class="number">10</span>,<span class="number">20</span>,<span class="number">30</span>,<span class="number">40</span>)</span><br><span class="line">fun3(a=<span class="number">10</span>,b=<span class="number">20</span>,d=<span class="number">90</span>)</span><br></pre></td></tr></table></figure><p>结果为(10, 20, 30, 40) {'a': 10, 'b': 20, 'd': 90}<br><code>def fun4(a,b,*，c,d)：</code>#从*之后的参数，在函数调用时，只能采用关键字参数传递</p><h2 id="变量的作用域">变量的作用域</h2><p>·程序代码能访问该变量的区域<br>·根据变量的有效范围可分为局部变量:在函数内定义并使用的变量，只在函数内部有效。局部变量使用global声明，这个变量<br>就会就成全局变量。全局变量:函数体外定义的变量，可作用于函数内外</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">fun3</span>():</span><br><span class="line">    <span class="keyword">global</span> age</span><br><span class="line"><span class="comment">#函数内部定义的变量，局部变量，局部变量使用g1oba1声明，这个变量实际上就变成了全局变量</span></span><br><span class="line">    age=<span class="number">20</span></span><br><span class="line">    <span class="built_in">print</span> (age)</span><br><span class="line">fun3()</span><br><span class="line"><span class="built_in">print</span> (age)</span><br></pre></td></tr></table></figure><h2 id="递归">递归</h2><p>·什么是递归函数如果在一个函数的函数体内调用了该函数本身，这个函数就称为递归函数<br>·递归的组成部分，递归调用与递归终止条件<br>递归的调用过程：每递归调用一次函数，都会在栈内存分配一个栈帧，每执行完一次函数，都会释放相应的空间<br>递归的优缺点：缺点：占用内存多，效率低下；优点：思路和代码简单</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">fac</span> (n):</span><br><span class="line">    <span class="keyword">if</span> n==<span class="number">1</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> n*fac (n-<span class="number">1</span>)</span><br><span class="line"><span class="built_in">print</span> (fac (<span class="number">6</span>))</span><br></pre></td></tr></table></figure><p>return fib(n-2)+fib(n-1)中的n-2不能写成n</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">fib</span> (n):</span><br><span class="line">    <span class="keyword">if</span> n==<span class="number">1</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span></span><br><span class="line">    <span class="keyword">elif</span> n==<span class="number">2</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> fib(n-<span class="number">2</span>)+fib(n-<span class="number">1</span>)</span><br><span class="line"><span class="built_in">print</span> (fib (<span class="number">6</span>))</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">2</span>,<span class="number">7</span>):</span><br><span class="line">    <span class="built_in">print</span>(fib(i))</span><br></pre></td></tr></table></figure><h2 id="bug">BUG</h2><p>Bug的常见类型<br>粗心导致错误的自查宝典<br>1.漏了末尾的冒号，如if语句，循环语句，else子句等<br>2缩进错误，该缩进的没缩进，不该缩进的瞎缩进<br>3把英文符号写成中文符号，比如说：引号，冒号，括号<br>4.字符串拼接的时候，把字符串和数字拼在一起<br>5.没有定义变量，比如说while的循环条件的变量<br>6.“==”比较运算符和”=”赋值运算符的混用</p><h3 id="try-except">try-except</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    可能会</span><br><span class="line">    出异常</span><br><span class="line">    的代码</span><br><span class="line"><span class="keyword">except</span> Exception1:</span><br><span class="line">    异常处</span><br><span class="line">    理代码</span><br><span class="line"><span class="keyword">except</span> Exception2:</span><br><span class="line">    异常处</span><br><span class="line">    理代码</span><br><span class="line"><span class="keyword">except</span> BaseException:</span><br><span class="line">    异常处</span><br><span class="line">    理代码</span><br></pre></td></tr></table></figure><p>其中BaseException包含了所有的报错类型可用以下代码打印BUG类型，也可以直接<code>except:</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">except</span> BaseException <span class="keyword">as</span> e:</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;出错了&#x27;</span>,e)</span><br></pre></td></tr></table></figure><h3 id="try-except-else">try-except-else</h3><p>try-except..else结构<br>如果try块中没有抛出异常，则执行else块，如果try中抛出异常，则执行except块</p><h3 id="try-except-else-finally">try..except..else.finally</h3><p>finally块无论是否发生异常都会被执行，能常用来释放try块中申请的资源</p><h3 id="异常类型">异常类型</h3><p>ZeroDivisionError 除（或取模）零（所有数据类型）<br>IndexError 序列中没有此索引(index)<br>KeyError 映射中没有这个键<br>NameError 未声明/初始化对象（没有属性）<br>SyntaxError Python语法错误<br>ValueError 传入无效的参数</p><h3 id="断点">断点</h3><p>程序运行到此处，暂时挂起，停止执行。此时可以详细观察程序的运行情况，方便做出进一步的判断</p><h2 id="类与对象">类与对象</h2><p>·类:类别，分门别类，物以类聚，人类，鸟类，动物类，植物类…<br>·类是多个类似事物组成的群体的统称。能够帮助我们快速理解和判断事物的性质。<br>·数据类型不同的数据类型属于不同的类使用内置函数查看数据类型</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span> (<span class="built_in">type</span>(<span class="number">100</span>))</span><br><span class="line">&lt;<span class="keyword">class</span>’<span class="built_in">int</span><span class="string">&#x27;&gt;</span></span><br><span class="line"><span class="string">print (type(99))</span></span><br><span class="line"><span class="string">&lt;class’int&#x27;</span>&gt;</span><br><span class="line"><span class="built_in">print</span> (<span class="built_in">type</span>(<span class="number">520</span>))</span><br><span class="line">&lt;<span class="keyword">class</span> <span class="string">&#x27;int&#x27;</span>&gt;</span><br></pre></td></tr></table></figure><p>·对象:100、99、520都是int类之下包含的相似的不同个例，这个个例专业数语称为实例或对象</p><h3 id="创建类">创建类</h3><p>类命名：每个单词的首字母大写，其余小写</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Student</span>:<span class="comment">#Student为类的名称（类名）由一个或多个单词组成，每个单词的首字母大写，其余小写</span></span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"><span class="comment">#Python中一切皆对象Student是对象吗？内存有开空间吗？</span></span><br><span class="line"><span class="built_in">print</span> (<span class="built_in">id</span>(Student))<span class="comment">#2769050434400</span></span><br><span class="line"><span class="built_in">print</span> (<span class="built_in">type</span>(Student))<span class="comment">#&lt;class type&#x27;&gt;</span></span><br><span class="line"><span class="built_in">print</span> (Student)<span class="comment">#&lt;class&#x27;main_.Student&#x27;&gt;</span></span><br></pre></td></tr></table></figure><p>类的组成：类属性，实例方法，静态方法，类方法且默认参数不能修改</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Student</span>:<span class="comment">#Student为类的名称（类名）由一个或多个单词组成，每个单词的首字母大写，其余小写</span></span><br><span class="line">    native_pace=<span class="string">&#x27;吉林&#x27;</span></span><br><span class="line">    <span class="comment">#直接写在类里的变量，称为类属性</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self,name,age</span>):</span><br><span class="line">        self.name=name</span><br><span class="line">        <span class="comment">#self.name称为实体属性，进行了一个赋值的操作，将局部变量的name的值赋给实体属性</span></span><br><span class="line">        self.age=age</span><br><span class="line">        <span class="comment">#实例方法</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">eat</span> (self):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;学生在吃饭..&#x27;</span>)</span><br><span class="line">    <span class="comment">#静态方法</span></span><br><span class="line"><span class="meta">    @staticmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">method</span> ():</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;我是静态方法&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment">#类方法</span></span><br><span class="line"><span class="meta">    @classmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">cm</span>(<span class="params">cls</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;我是类方法&#x27;</span>)</span><br></pre></td></tr></table></figure><p>代码中def eat (self):的self代表自身，即必须传入Student对象</p><h3 id="对象的创建">对象的创建</h3><p>对象的创建<br>对象的创建又称为类的实例化，意义：有了实例，就可以调用类中的内容<br>语法：<br>实例名=类名 以类名Student为例，<code>stu1=Student('zhang',56)</code> 再调用类中的实例方法<code>stu1.eat()</code>也可表示为<code>Student.eat(stu1)</code>格式为：类名.方法名（类的对象名）--&gt;实际上就是方法定义处的self</p><h3 id="类属性">类属性</h3><p>类属性的使用方式：类.类属性名</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">stu1=Student(<span class="string">&#x27;zhang&#x27;</span>,<span class="number">56</span>)  <span class="comment">#创建对象</span></span><br><span class="line">stu2=Student(<span class="string">&#x27;zhang2&#x27;</span>,<span class="number">58</span>)</span><br><span class="line">Student.native_pace=<span class="string">&#x27;tianj&#x27;</span> <span class="comment">#修改类属性名</span></span><br><span class="line"><span class="built_in">print</span>(stu1.native_pace)</span><br><span class="line"><span class="built_in">print</span>(stu2.native_pace)</span><br><span class="line"><span class="built_in">print</span>(Student.native_pace)</span><br></pre></td></tr></table></figure><p>·类属性：类中方法外的变量称为类属性，被该类的听有对象所共享；类方法：使用@classmethod修饰的方法，使用类名直接访问的方法；静态方法：使用@staticmethod修饰的主法，使用类名直接访问的方法<br>类方法：如果方法需要该类的信息，用 @classmethod 对其进行装饰<br>定义：使用装饰器@classmethod。第一个参数必须是当前类对象，该参数名一般约定为“cls”，通过它来传递类的属性和方法（不能传实例的属性和方法）；<br>静态方法：静态方法并不是真正意义上的类方法，它只是一个被放到类里的函数而已。<br>定义：使用装饰器@staticmethod。参数随意，没有“self”和“cls”参数，但是方法中不能使用类或实例的任何属性和方法；<br><a href="https://www.jb51.net/article/254730.htm">参考</a><br>还有一种结构类似自定义函数，1. 实例方法<br>类中的所有方法，如果第一个参数是 self，就是 instance method， self 是创建的类实例，实例方法与实例即对象相关。，往往需要通过对象调用，<br>(self 可以改成别的名称，但使用 self 是convention，self 是类实例, )</p><h3 id="动态绑定属性和方法">动态绑定属性和方法</h3><p>Python:是动态语言，在创建对象之后，可以动态地绑定属性和方法。如果想给对象stu1添加性别属性为女而stu2保持不变，则可为stu2动态绑定性别属性。<code>stu1.gender='女'#动态绑定性别</code><br>动态绑定方法</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">show</span>():</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;我是一函数&#x27;</span>)</span><br><span class="line">stu1.show=show <span class="comment">#动态绑定方法 </span></span><br><span class="line">stu1.show()</span><br></pre></td></tr></table></figure><h2 id="面向对象的三大特征">面向对象的三大特征</h2><p>封装：提高程序的安全性<br>·将数据（属性）和行为（方法）<br>包装到类对象中。在方法内部对属性进行操作，在类对象的外部调用方法。这样，无需关心方法内部的具体实现细节，从而隔离了复杂度。<br>·在Pyho中没有专门的修饰符用于属性的私有，如果该属性不希望在类对象外部被访问，前边使用两个“”。<br>·继承：提高代码的复用性<br>·多态：提高程序的可扩展性和可维护性<br>在Python中没有专门的修饰符用于属性的私有，如果该属性不希望在类对象外部被访问，前边使用两个“__”。不能直接用stu1.__age访问，需要#在类的外部可以通过<code>_Student__age</code>进行访间,具体是由<code>print(dir(stu))</code>查看的</p><h2 id="继承">继承</h2><p>继承动物<br>语法格式：class子类类名（父类1，父类2..）：<br>如果一个类没有继承任何类，则默认继承object<br>Python支持多继承定义子类时，必须在其构造函数中调用父类的构造函数</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Person</span>(<span class="title class_ inherited__">object</span>): <span class="comment">#object默认无继承</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self,name,age</span>):</span><br><span class="line">        self.name=name</span><br><span class="line">        self.age=age</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">info</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;姓名：&#123;0&#125;，年龄：&#123;1&#125;&#x27;</span>.<span class="built_in">format</span>(self.name,self.age))</span><br><span class="line"><span class="comment">#定义子类</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Student</span> (<span class="title class_ inherited__">Person</span>):  <span class="comment">#继承Person类</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self,name,age,score</span>):</span><br><span class="line">        <span class="built_in">super</span>().__init__(name,age)  <span class="comment">#从Person类中调用方法</span></span><br><span class="line">        self.score=score</span><br><span class="line"><span class="comment">#测试</span></span><br><span class="line">stu=Student (<span class="string">&#x27;Jack&#x27;</span>,<span class="number">20</span>,<span class="string">&#x27;1001&#x27;</span>)</span><br><span class="line">stu.info() </span><br></pre></td></tr></table></figure><p>实例方法可直接继承<code>stu.info() </code>,可多继承如<code>class C(A,B):</code>同时继承A和B</p><h3 id="方法重写">方法重写</h3><p>如果子类对继承自父类的某个属性或方法不满意，可以在子类中对其(方法体)进行重新编写子类重写后的方法中可以通过super().xx调用父类中被重写的方法<br>如果在Student (Person)中添加和Person一样的方法,则对其中的实例可打印新的score</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Student</span> (<span class="title class_ inherited__">Person</span>):  <span class="comment">#继承Person类</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self,name,age,score</span>):</span><br><span class="line">        <span class="built_in">super</span>().__init__(name,age)  <span class="comment">#从Person类中调用方法</span></span><br><span class="line">        self.score=score</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">info</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">super</span>().info()  <span class="comment">#调用父类中被重写的方法  </span></span><br><span class="line">        <span class="built_in">print</span>(self.score)</span><br></pre></td></tr></table></figure><h3 id="object类">object类</h3><p>object类是所有类的父类，因此所有类都有object类的属性和方法，内置函数dir()可以查看指定对象所有属性<br>Object有一个__str__()方法，用于返回一个对于“对象的描述”，对应于内置函数str()经常用于print()方法，帮我们查看对象的信息，所以我们经常会对__str__()进行重写</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Student</span>():</span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line">stu=Student()</span><br><span class="line"><span class="built_in">print</span> (<span class="built_in">dir</span>(stu))</span><br><span class="line"><span class="built_in">print</span> (stu)</span><br></pre></td></tr></table></figure><p>Student类默认继承object类，而通过运行上述代码可得结果为</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#print (dir(stu))的结果如下  </span></span><br><span class="line">[<span class="string">&#x27;__class__&#x27;</span>, <span class="string">&#x27;__delattr__&#x27;</span>, <span class="string">&#x27;__dict__&#x27;</span>, <span class="string">&#x27;__dir__&#x27;</span>, <span class="string">&#x27;__doc__&#x27;</span>, <span class="string">&#x27;__eq__&#x27;</span>, <span class="string">&#x27;__format__&#x27;</span>, <span class="string">&#x27;__ge__&#x27;</span>, <span class="string">&#x27;__getattribute__&#x27;</span>, <span class="string">&#x27;__gt__&#x27;</span>, <span class="string">&#x27;__hash__&#x27;</span>, <span class="string">&#x27;__init__&#x27;</span>, <span class="string">&#x27;__init_subclass__&#x27;</span>, <span class="string">&#x27;__le__&#x27;</span>, <span class="string">&#x27;__lt__&#x27;</span>, <span class="string">&#x27;__module__&#x27;</span>, <span class="string">&#x27;__ne__&#x27;</span>, <span class="string">&#x27;__new__&#x27;</span>, <span class="string">&#x27;__reduce__&#x27;</span>, <span class="string">&#x27;__reduce_ex__&#x27;</span>, <span class="string">&#x27;__repr__&#x27;</span>, <span class="string">&#x27;__setattr__&#x27;</span>, <span class="string">&#x27;__sizeof__&#x27;</span>, <span class="string">&#x27;__str__&#x27;</span>, <span class="string">&#x27;__subclasshook__&#x27;</span>, <span class="string">&#x27;__weakref__&#x27;</span>]</span><br><span class="line"><span class="comment">#print (stu)的结果如下  </span></span><br><span class="line">&lt;__main__.Student <span class="built_in">object</span> at <span class="number">0x000002A892EC70D0</span>&gt;</span><br><span class="line"><span class="comment">#stu=Student时返回的结果：</span></span><br><span class="line">&lt;<span class="keyword">class</span> <span class="string">&#x27;__main__.Student&#x27;</span>&gt;  </span><br></pre></td></tr></table></figure><p>故可知object类中默认含有__str__()方法,默认返回对象的描述，可通过重写__str__()方法改变print (stu)的返回结果</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Student</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self,name,age</span>):</span><br><span class="line">        self.name=name</span><br><span class="line">        self.age=age</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__str__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;我的名字是&#123;0&#125;，今年&#123;1&#125;岁&#x27;</span>.<span class="built_in">format</span>(self.name, self.age)</span><br><span class="line">    <span class="comment"># pass</span></span><br><span class="line">stu=Student(<span class="string">&#x27;zhang&#x27;</span>,<span class="string">&#x27;3&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span> (<span class="built_in">dir</span>(stu))</span><br><span class="line"><span class="built_in">print</span> (stu)</span><br></pre></td></tr></table></figure><p>运行上述代码返回print (stu)结果<code>我的名字是zhang，今年3岁</code></p><h3 id="多态">多态</h3><p>简单地说，多态就是“具有多种形态”，它指的是：即便不知道一个变量所引用的对象到底是什么类型，仍然可以通过这个变量调用方法，在运行过程中根据变量所引用对象的类型，动态决定调用哪个对象中的方法</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Animal</span> (<span class="title class_ inherited__">object</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">eat</span> (self):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;动物会吃&#x27;</span>)</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Dog</span> (<span class="title class_ inherited__">Animal</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">eat</span> (self):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;狗吃骨头...&#x27;</span>)</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Cat</span> (<span class="title class_ inherited__">Animal</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">eat</span> (self):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;猫吃鱼...&#x27;</span>)</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Person</span>():</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">eat</span> (self):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;ren&#x27;</span>)</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">fun1</span>(<span class="params">abc</span>):</span><br><span class="line">    abc.eat()</span><br><span class="line">fun1(Person())</span><br><span class="line">fun1(Dog())</span><br><span class="line">fun1(Cat())</span><br><span class="line">fun1(Animal())</span><br></pre></td></tr></table></figure><p>fun1中传入哪个对象就调用该对象所在类中的方法。且eat()方法本身有Print输出所以不需要print(fun1(Dog()))<br>静态语言(Java)和动态语言(Python)关于多态的区别<br>静态语言实现多态的三个必要条件：继承，方法重写，父类引用指向子类对象<br>动态语言的多态崇尚“鸭子类型”当看到一只鸟走起来像鸭子、游泳起来像鸭子收起来也像鸭子，那么这只鸟就可以被称为鸭子。在鸭子类型中，不需要关心对象是什么类型，到底是不是鸭子，只关心对象的行为。<br>特殊属性:<br><strong>dict</strong>()获得类对象或实例对象所绑定的所有属性和方法的字典<br>特殊方法:<br><strong>len</strong>()通过重写1en方法，让内置函数1en的参数可以是自定义类型<br><strong>add</strong>()通过重写add方法，可使用自定义对象具有“+”功能<br><strong>new</strong>()用于创建对象<br><strong>init</strong>()对创建的对象进行初始化<br>dir()可以用来查看属性和方法</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">A</span>:</span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">B</span>:</span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">C</span>(A,B):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self,name</span>):</span><br><span class="line">        self.name=name</span><br><span class="line"><span class="comment">#创建C类的对象</span></span><br><span class="line">x=C(<span class="string">&#x27;Jack&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(x.__dict__)</span><br></pre></td></tr></table></figure><p>运行上述代码可输出#实例对象x的属性字典为<code>&#123;'name': 'Jack'&#125;</code><br><img src="https://files.catbox.moe/4spd4p.png" alt=""></p><h4 id="add-方法">__add__方法</h4><p>__add__方法可以用来表示+号</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">a=<span class="number">20</span></span><br><span class="line">b=<span class="number">100</span></span><br><span class="line">c=a+b</span><br><span class="line">d=a.__add__(b)</span><br><span class="line"><span class="built_in">print</span>(c) <span class="comment">#120</span></span><br><span class="line"><span class="built_in">print</span>(d) <span class="comment">#120</span></span><br></pre></td></tr></table></figure><p>也可以定义在类中使原本两个不能连接的属性相+</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Student</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self,name</span>):</span><br><span class="line">        self.name=name</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__add__</span>(<span class="params">self,other</span>):</span><br><span class="line">        <span class="keyword">return</span> self.name+other.name</span><br><span class="line">stu1=Student(<span class="string">&#x27;张三&#x27;</span>)</span><br><span class="line">stu2=Student(<span class="string">&#x27;李四&#x27;</span>)</span><br><span class="line">s=stu1+stu2</span><br><span class="line"><span class="comment">#实现了两个对象的加法运算（因为在Student类中编写add()特殊的方法）</span></span><br><span class="line"><span class="built_in">print</span> (s)</span><br><span class="line">s=stu1.__add__(stu2)</span><br><span class="line"><span class="built_in">print</span> (s)</span><br></pre></td></tr></table></figure><p>结果为<code>张三李四</code><br>len可以用于打印创建对象的长度</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">lst=[<span class="number">11</span>,<span class="number">22</span>,<span class="number">33</span>,<span class="number">44</span>]</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">len</span>(lst))<span class="comment">#1en是内容函数len 4</span></span><br><span class="line"><span class="built_in">print</span> (lst.__len__()) <span class="comment">#4</span></span><br><span class="line"><span class="built_in">print</span> (<span class="built_in">len</span>(stu1)) <span class="comment">#2</span></span><br></pre></td></tr></table></figure><h4 id="new-方法和-init"><strong>new__方法和__init</strong></h4><p>创建Person类的实例对象p1时会调用一次init方法和new方法，其中new方法的三个参数是默认规定的</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Person</span>(<span class="title class_ inherited__">object</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__new__</span>(<span class="params">cls,*args,**kwargs</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;new被调用执行了，cls的id值为&#123;0&#125;&#x27;</span>.<span class="built_in">format</span>(<span class="built_in">id</span>(cls))) <span class="comment">#id:9360</span></span><br><span class="line">        obj=<span class="built_in">super</span>().__new__(cls)</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;创建的对象的id为：&#123;0&#125;&#x27;</span>.<span class="built_in">format</span>(<span class="built_in">id</span>(obj))) <span class="comment">#id:7104</span></span><br><span class="line">        <span class="keyword">return</span> obj</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self,name,age</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;init被调用了，self的id值为：&#123;0&#125;&#x27;</span>.<span class="built_in">format</span>(<span class="built_in">id</span>(self))) <span class="comment">#id:7104</span></span><br><span class="line">        self.name=name </span><br><span class="line">        self.age=age</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;object这个类对象的id为：&#123;0&#125;&#x27;</span>.<span class="built_in">format</span>(<span class="built_in">id</span>(<span class="built_in">object</span>))) <span class="comment">#id:3232</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;Person这个类对象的id为：&#123;0&#125;&#x27;</span>.<span class="built_in">format</span>(<span class="built_in">id</span>(Person))) <span class="comment">#id:9360</span></span><br><span class="line"><span class="comment">#创建Person类的实例对象</span></span><br><span class="line">p1=Person(<span class="string">&#x27;张三&#x27;</span>,<span class="number">20</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;p1这个Person类的实例对象的id:&#123;0&#125;&#x27;</span>.<span class="built_in">format</span>(<span class="built_in">id</span>(p1))) <span class="comment">#id:7104</span></span><br></pre></td></tr></table></figure><p>执行<code>p1=Person('张三',20)</code>时相当于把Person传入了cls;创建新的对象obj有一个新的id然后返回传入到self，p1与self一致故三者id相同。</p><h2 id="类的浅拷贝与深拷贝">类的浅拷贝与深拷贝</h2><h3 id="变量的赋值操作">变量的赋值操作</h3><p>·只是形成两个变量，实际上还是指向同一个对象</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">CPU</span>:</span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Disk</span>:</span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Computer</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self,cpu,disk</span>):</span><br><span class="line">        self.cpu=cpu</span><br><span class="line">        self.disk=disk</span><br><span class="line">cpu1=CPU()</span><br><span class="line">cpu2=cpu1</span><br><span class="line"><span class="built_in">print</span> (cpu1)</span><br><span class="line"><span class="built_in">print</span> (cpu2)</span><br></pre></td></tr></table></figure><p>运行上述代码后输出地址相同</p><h3 id="浅拷贝">浅拷贝</h3><p>·Python:拷贝一般都是浅拷贝，拷贝时，对象包含的子对象内容不拷贝<br>因此，源对象与拷贝对象会引用同一个子对象</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">CPU</span>:</span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Disk</span>:</span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Computer</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self,cpu,disk</span>):</span><br><span class="line">        self.cpu=cpu</span><br><span class="line">        self.disk=disk</span><br><span class="line">cpu1=CPU()</span><br><span class="line">disk1=Disk()<span class="comment">#创建一个硬盘类的对象</span></span><br><span class="line">computer=Computer(cpu1,disk1)<span class="comment">#创建一个计算机类的对象</span></span><br><span class="line"><span class="comment">#浅拷贝</span></span><br><span class="line"><span class="keyword">import</span> copy</span><br><span class="line">computer2=copy.copy (computer)</span><br><span class="line"><span class="built_in">print</span> (computer,computer.cpu,computer.disk)</span><br><span class="line"><span class="built_in">print</span> (computer2,computer2.cpu,computer2.disk)</span><br></pre></td></tr></table></figure><p>以上代码中computer=Computer(cpu1,disk1)的cpu1和disk1都是实例对象，之前用的基本都是'cpu1'加了引号的字符串对象，调用两个子实例对象打印输出的地址不变（引用同一个子对象），而computer2和computer的地址会变；若用了'cpu1'加了引号的字符串对象则无法调用浅拷贝。且computer2.cpu与computer.cpu的输出地址不同</p><h3 id="深拷贝">深拷贝</h3><p>·使用copy模块的deepcopy函数，递归拷贝对象中包含的子对象，源对<br>和拷贝对象所有的子对象也不相同<br>将代码改为</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">CPU</span>:</span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Disk</span>:</span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Computer</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self,cpu,disk</span>):</span><br><span class="line">        self.cpu=cpu</span><br><span class="line">        self.disk=disk</span><br><span class="line">cpu1=CPU()</span><br><span class="line">disk1=Disk()<span class="comment">#创建一个硬盘类的对象</span></span><br><span class="line">computer=Computer(cpu1,disk1)<span class="comment">#创建一个计算机类的对象</span></span><br><span class="line"><span class="comment">#深拷贝</span></span><br><span class="line"><span class="keyword">import</span> copy</span><br><span class="line">computer3=copy.deepcopy (computer)</span><br><span class="line"><span class="built_in">print</span> (computer,computer.cpu,computer.disk)</span><br><span class="line"><span class="built_in">print</span> (computer3,computer3.cpu,computer3.disk)</span><br></pre></td></tr></table></figure><p>得到结果为<code>&lt;__main__.Computer object at 0x0000020C48847EB0&gt; &lt;__main__.CPU object at 0x0000020C48847FD0&gt; &lt;__main__.Disk object at 0x0000020C48847EE0&gt;&lt;__main__.Computer object at 0x0000020C48847D00&gt; &lt;__main__.CPU object at 0x0000020C48847700&gt; &lt;__main__.Disk object at 0x0000020C48875EA0&gt;</code>可以看到所有id都发生了变化，也就是深拷贝不仅仅只拷贝框架，还把实例对象也拷贝了，而每次拷贝ID都会变所以最后ID不相同</p><h1 id="模块">模块</h1><p>模块英文为Modules<br>·函数与模块的关系：一个模块中可以包含N多个函数<br>·在Python中一个扩展名为.py的文件就是一个模块<br>使用模块的好处：方便其它程序和脚本的导入并使用，避免函数名和变量名冲突，提高代码的可维护性，提高代码的可重用性<br>一个项目可以包含很多模块用import导入模块，以自带的math模块为例</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> math<span class="comment">#关于数学运算</span></span><br><span class="line"><span class="built_in">print</span> (<span class="built_in">id</span>(math))</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">type</span> (math))</span><br><span class="line"><span class="built_in">print</span> (math)</span><br><span class="line"><span class="built_in">print</span> (math.pi)</span><br><span class="line"><span class="built_in">print</span> (<span class="built_in">dir</span>(math))</span><br><span class="line"><span class="built_in">print</span> (math.<span class="built_in">pow</span> (<span class="number">2</span>,<span class="number">3</span>),<span class="built_in">type</span> (math.<span class="built_in">pow</span> (<span class="number">2</span>,<span class="number">3</span>)))</span><br><span class="line"><span class="built_in">print</span> (math.ceil(<span class="number">9.001</span>))</span><br><span class="line"><span class="built_in">print</span>(math.floor(<span class="number">9.9999</span>))</span><br></pre></td></tr></table></figure><p>结果为</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">2072650326608</span></span><br><span class="line">&lt;<span class="keyword">class</span> <span class="string">&#x27;module&#x27;</span>&gt;</span><br><span class="line">&lt;module <span class="string">&#x27;math&#x27;</span> (built-<span class="keyword">in</span>)&gt;</span><br><span class="line"><span class="number">3.141592653589793</span></span><br><span class="line">[<span class="string">&#x27;__doc__&#x27;</span>, <span class="string">&#x27;__loader__&#x27;</span>, <span class="string">&#x27;__name__&#x27;</span>, <span class="string">&#x27;__package__&#x27;</span>, <span class="string">&#x27;__spec__&#x27;</span>, <span class="string">&#x27;acos&#x27;</span>, <span class="string">&#x27;acosh&#x27;</span>, <span class="string">&#x27;asin&#x27;</span>, <span class="string">&#x27;asinh&#x27;</span>, <span class="string">&#x27;atan&#x27;</span>, <span class="string">&#x27;atan2&#x27;</span>, <span class="string">&#x27;atanh&#x27;</span>, <span class="string">&#x27;ceil&#x27;</span>, <span class="string">&#x27;comb&#x27;</span>, <span class="string">&#x27;copysign&#x27;</span>, <span class="string">&#x27;cos&#x27;</span>, <span class="string">&#x27;cosh&#x27;</span>, <span class="string">&#x27;degrees&#x27;</span>, <span class="string">&#x27;dist&#x27;</span>, <span class="string">&#x27;e&#x27;</span>, <span class="string">&#x27;erf&#x27;</span>, <span class="string">&#x27;erfc&#x27;</span>, <span class="string">&#x27;exp&#x27;</span>, <span class="string">&#x27;expm1&#x27;</span>, <span class="string">&#x27;fabs&#x27;</span>, <span class="string">&#x27;factorial&#x27;</span>, <span class="string">&#x27;floor&#x27;</span>, <span class="string">&#x27;fmod&#x27;</span>, <span class="string">&#x27;frexp&#x27;</span>, <span class="string">&#x27;fsum&#x27;</span>, <span class="string">&#x27;gamma&#x27;</span>, <span class="string">&#x27;gcd&#x27;</span>, <span class="string">&#x27;hypot&#x27;</span>, <span class="string">&#x27;inf&#x27;</span>, <span class="string">&#x27;isclose&#x27;</span>, <span class="string">&#x27;isfinite&#x27;</span>, <span class="string">&#x27;isinf&#x27;</span>, <span class="string">&#x27;isnan&#x27;</span>, <span class="string">&#x27;isqrt&#x27;</span>, <span class="string">&#x27;lcm&#x27;</span>, <span class="string">&#x27;ldexp&#x27;</span>, <span class="string">&#x27;lgamma&#x27;</span>, <span class="string">&#x27;log&#x27;</span>, <span class="string">&#x27;log10&#x27;</span>, <span class="string">&#x27;log1p&#x27;</span>, <span class="string">&#x27;log2&#x27;</span>, <span class="string">&#x27;modf&#x27;</span>, <span class="string">&#x27;nan&#x27;</span>, <span class="string">&#x27;nextafter&#x27;</span>, <span class="string">&#x27;perm&#x27;</span>, <span class="string">&#x27;pi&#x27;</span>, <span class="string">&#x27;pow&#x27;</span>, <span class="string">&#x27;prod&#x27;</span>, <span class="string">&#x27;radians&#x27;</span>, <span class="string">&#x27;remainder&#x27;</span>, <span class="string">&#x27;sin&#x27;</span>, <span class="string">&#x27;sinh&#x27;</span>, <span class="string">&#x27;sqrt&#x27;</span>, <span class="string">&#x27;tan&#x27;</span>, <span class="string">&#x27;tanh&#x27;</span>, <span class="string">&#x27;tau&#x27;</span>, <span class="string">&#x27;trunc&#x27;</span>, <span class="string">&#x27;ulp&#x27;</span>]</span><br><span class="line"><span class="number">8.0</span> &lt;<span class="keyword">class</span> <span class="string">&#x27;float&#x27;</span>&gt;</span><br><span class="line"><span class="number">10</span></span><br><span class="line"><span class="number">9</span></span><br></pre></td></tr></table></figure><p>也可以只导入math中的一个方法比如pi方法，用<code>from math import pi</code>此时单独导入了pi没有导入math所以只能使用print (pi)而不能用print(math.pi)<br>再比如新建py命名为calc如下</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">add</span> (a,b):</span><br><span class="line">    <span class="keyword">return</span> a+b</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">div</span> (a,b):</span><br><span class="line">    <span class="keyword">return</span> a/b</span><br></pre></td></tr></table></figure><p>则可使用调用加法运算</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> caluc </span><br><span class="line"><span class="built_in">print</span>(caluc.add(<span class="number">10</span>,<span class="number">5</span>))</span><br></pre></td></tr></table></figure><h2 id="以主程序方式运行">以主程序方式运行</h2><p>·以主程序形式运行，在每个模块的定义中都包括一个记录模块名称的变量name,程序可以检查该变量，以确定他们在哪个模块中执行。如果一个模块不是被导入到其它程序中执行，那么它可能在解释器的顶级模块中行。顶级模块的__name__变量的值为__main__</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> __name__==<span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;只有运行模块主体Py程序才会显示&#x27;</span>)</span><br></pre></td></tr></table></figure><p>在其他py文件中调用模块则不会显示</p><h2 id="python中的包">Python中的包</h2><p>·Python中的包：包是一个分层次的目录结构，它将一组功能相近的模块组织在一个目录<br>下<br>作用：<br>·代码规范<br>·避免模块名称冲突<br>·包与目录的区别<br>·包含_init_py文件的目录称为包<br>·目录里通常不包含_init_py文件<br>·包的导入<br>import包名.模块名<br>注意包名不要用纯数字，例如包名p1下有ma.py和mb.py,ma.py下存在<code>a=10</code>则可以先引入<code>import p1.ma</code>然后<code>print(p1.ma.a)</code>或<code>import p1.ma as ma</code>这样就可以精简包名下面模块的名称<code>print(ma.a)</code><br>使用import导入只能导入包名和模块名。使用from....import可以导入包，模块，函数，变量<br>Python中常用的内置模块<br>sys：与Python解释器及其环境操作相关的标准库<br>time：提供与时间相关的各种函数的标准库<br>os：提供了访问操作系统服务功能的标准库<br>calendar：提供与日期相关的各种函数的标准库<br>urllib：用于读取来自网上（服务器）的数据标准库<br>json：用于使用JS0N序列化和反序列化对象<br>re：用于在字符串中执行正则表达式匹配和替换<br>math：提供标准算术运算函数的标准库<br>decimal：用于进行精确控制运算精度、有效数位和四舍五入操作的十进制运算<br>logging：提供了灵活的记录事件、错误、警告和调试信息等目志信息的功能</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> urllib.request <span class="comment">#调用urllib下面的request模块常用于爬虫</span></span><br><span class="line"><span class="built_in">print</span>(urllib.request.urlopen(<span class="string">&#x27;http://www.baidu.com&#x27;</span>).read())</span><br></pre></td></tr></table></figure><p>跳转到urllib发现跳转到了__init.py__因此可以判断这个是包而不是模块，以上程序可以读取百度返回的值</p><h2 id="第三方模块应用">第三方模块应用</h2><p><code>pip install 模块名</code>执行后发现报错<code>Fatal error in launcher: Unable to create process using '&quot;D:\python\python.exe&quot;  &quot;E:\python\Scripts\pip.exe&quot; install schedule': ???????????</code>使用<code>python -m pip install -U pip</code>解决！比如安装完schedule后即可调用；run_pending：运行所有可以运行的任务</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> schedule</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">job</span>():</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;哈哈&#x27;</span>)</span><br><span class="line">schedule.every(<span class="number">3</span>).seconds.do(job)</span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    schedule.run_pending()</span><br><span class="line">    time.sleep(<span class="number">1</span>)</span><br></pre></td></tr></table></figure><p>会每隔三秒执行一次哈哈</p><h1 id="常见的字符编码格式">常见的字符编码格式</h1><p>·Python的解释器使用的是Unicode（内存）<br>·.py文件在磁盘上使用UTF-8存储（外存）<br>用encoding=xxx可更改编码格式<br>pcharm新建文件.txt默认编码格式为UTF-8<br>新建文件a.txt并在py中加入以下代码</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">file=<span class="built_in">open</span>(<span class="string">&#x27;a.txt&#x27;</span>, <span class="string">&#x27;r&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(file.readlines())</span><br><span class="line">file.close()  <span class="comment">#关闭资源</span></span><br></pre></td></tr></table></figure><p>发现报错<code>UnicodeDecodeError: 'gbk' codec can't decode byte 0xad in position 2: illegal multibyte sequence</code><br>文件解码不对，默认用gbk解码实际文件UTF-8，将第一行代码调整为<code>file=open('a.txt', 'r',encoding='utf-8')</code>即可<br>r以只读模式打开文件，文件的指针将会放在文件的开头<br>W以只写模式打开文件，如果文件不存在则创建，如果文件存在，则覆盖原有内容，文件指针在文件的开头<br>a以追加模式打开文件，如果文件不存在则创建，文件指针在文件开头，如果文件存在，则在文件末尾<br>b以二进制方式打开文件，不能单独使用，需要与共它模式一起使用,rb,或者wb<br>+以读写方式打开文件，不能单独使用，需要与其它模式一起使用，a+，不写加可能会是只读只写<br>创建文件示例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">file=<span class="built_in">open</span> (<span class="string">&#x27;b.txt&#x27;</span>,<span class="string">&#x27;w&#x27;</span>)</span><br><span class="line">file.write(<span class="string">&#x27;Python&#x27;</span>)</span><br><span class="line">file.close()</span><br></pre></td></tr></table></figure><p>使用追加模式在b.txt文件中写另外两个Python</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">file=<span class="built_in">open</span> (<span class="string">&#x27;b.txt&#x27;</span>,<span class="string">&#x27;a&#x27;</span>)</span><br><span class="line">file.write(<span class="string">&#x27;Pythonzhuijia&#x27;</span>)</span><br><span class="line">file.close()</span><br></pre></td></tr></table></figure><p>此时b.txt变为PythonPythonzhuijia</p><h2 id="with">with</h2><p>with语句可以自动管理上下文资源，不论什么原因跳出with块，都能确保文件正确的关闭，以此来达到释放资源的目的,就不用写close了</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;b.txt&#x27;</span>,<span class="string">&#x27;r&#x27;</span>) <span class="keyword">as</span> file:</span><br><span class="line">    <span class="built_in">print</span>(file.read())</span><br></pre></td></tr></table></figure><p>遵守了上下文管理协议,实现了进入时调用__enter__方法，退出时调用__exit__方法</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">MyContentMgr</span> (<span class="title class_ inherited__">object</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__enter__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;enter方法被调用执行了&#x27;</span>)</span><br><span class="line">        <span class="keyword">return</span> self</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__exit__</span>(<span class="params">self,exc_type,exc_val,exc_tb</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;exit方法被调用执行了&#x27;</span>)</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">show</span> (self):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;show方法被调用执行了&#x27;</span>)</span><br><span class="line"><span class="keyword">with</span> MyContentMgr() <span class="keyword">as</span> file:</span><br><span class="line">    file.show()</span><br></pre></td></tr></table></figure><p>结果：<br>enter方法被调用执行了<br>show方法被调用执行了<br>exit方法被调用执行了<br>文件复制方法</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">with</span> <span class="built_in">open</span> (<span class="string">&#x27;logo.png&#x27;</span>,<span class="string">&#x27;rb&#x27;</span>) <span class="keyword">as</span> src_file:</span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span> (<span class="string">&#x27;copy2logo.png&#x27;</span>,<span class="string">&#x27;wb&#x27;</span>) <span class="keyword">as</span> target_file:</span><br><span class="line">target_file.write(src_file.read())</span><br></pre></td></tr></table></figure><h2 id="os模块">os模块</h2><p>os模块是Python内置的与操作系统功能和文件系统相关的模块<br>该模块中的语句的执行结果通常与操作系统有关，在不同的操作系统上运行，得到的结果可能不一样。<br>os模块与os.path模块用于对目录或文件进行操作</p><h3 id="os模块操作目录">os模块操作目录</h3><p>getcwd()返回当前的工作目录<br>listdir(path)返回指定路径下的文件和目录信息<br>mkdir(path[,mode])创建目录<br>makedirs(path1/path2...[,mode])创建多级目录<br>rmdir(path)删除目录<br>removedirs(path1/path2......)删除多级目录<br>chdir(path)将path设置为当前工作目录<br>其中listdir(path)用于找当前目录，<code>../</code>上级目录</p><h3 id="ospath模块操作目录">ospath模块操作目录</h3><p>abspath(path) 用于获取文件或目录的绝对路径<br>exists(path) 用于判断文件或目录是否存在，如果存在返回True否则返回False<br>join(path,name)将目录与目录或者文件名拼接起来<br>splitext()分离文件名和扩展名<br>basename(path)从一个目录中提取文件名<br>dirname(path)从一个路径中提取文件路径，不包括文件名<br>isdir(path)用于判断是否为路径<br>打印当前目录下<code>.x</code>结尾的文件</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line">path=os.getcwd()</span><br><span class="line">lst=os.listdir(path)</span><br><span class="line"><span class="keyword">for</span> file <span class="keyword">in</span> lst:</span><br><span class="line">    <span class="keyword">if</span> file.endswith(<span class="string">&#x27;.txt&#x27;</span>):</span><br><span class="line">        <span class="built_in">print</span>(file)</span><br></pre></td></tr></table></figure><p>使用目录树生成器os.walk()遍历当前目录</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line">path=os.getcwd()</span><br><span class="line">lst_files=os.walk(path)</span><br><span class="line"><span class="keyword">for</span> dirpath, dirnames, filenames <span class="keyword">in</span> lst_files:</span><br><span class="line">    <span class="built_in">print</span>(dirpath) <span class="comment">#打印当前路径</span></span><br><span class="line">    <span class="built_in">print</span>(dirnames) <span class="comment">#打印当前路径下存在的文件名</span></span><br><span class="line">    <span class="built_in">print</span>(filenames) <span class="comment">#打印当前路径下所有文件</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;------------&#x27;</span>)</span><br></pre></td></tr></table></figure><h2 id="学生信息管理系统">学生信息管理系统</h2><p>遇到continue报错的情况是因为continue没有放在while True:下面，缩进一下即可<br>'\n' 的意思是：回车换行，调用save()函数要与while True:同级，因为continue语句的作用是跳过本次循环体中余下尚未执行的语句，立即进行下一次的循环条件判定，可以理解为仅结束本次循环。<br>eval函数是Python中内置的一个函数，用于将字符串作为Python代码进行执行，并返回执行后的结果。eval函数主要有以下作用：</p><ol><li>计算字符串表达式<br>eval函数可以计算字符串类型的数学表达式。例如，将字符串&quot;1+2&quot;作为参数传入eval函数，会返回3。</li><li>执行动态的Python代码<br>eval函数可以执行动态的Python代码，例如动态生成一段Python代码并执行。这对于需要在运行时根据不同条件进行代码逻辑分支的应用场景非常有用。</li><li>提供交互式控制台<br>eval函数可以将用户输入的字符串作为Python代码进行执行，从而实现一个简单的交互式控制台。这对于一些较为简单的应用场景非常有用，例如一个简单的计算器程序。<br>需要注意的是，由于eval函数会执行任意字符串作为Python代码，因此在使用时需要非常谨慎，确保不会执行恶意代码。为了避免安全问题，建议在不确定字符串来源的情况下，不要使用eval函数。<br>python里 {0:<sup>30}是什么意思？{0:</sup>30}中的0是一个序号，表示格式化输出的第0个字符，依次累加；{0:<sup>30}中的30表示输出宽度约束为30个字符；{0:</sup>30}中的^表示输出时居中对齐，若宽度小于字符串的实际宽度，以实际宽度输出；<br>以下为代码，代码中的数据显示还可以优化一下</li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br></pre></td><td class="code"><pre><span class="line">filename=<span class="string">&#x27;student.txt&#x27;</span></span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">menm</span>():</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;====学生信息管理====&#x27;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;--功能菜单--&#x27;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;\t\t\t\t\t\t1.录入学生信息&#x27;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;\t\t\t\t\t\t2.查找学生信息&#x27;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;\t\t\t\t\t\t3.删除学生信息&#x27;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;\t\t\t\t\t\t4.修改学生信息&#x27;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;\t\t\t\t\t\t5.排序&#x27;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;\t\t\t\t\t\t6.统计学生总人数&#x27;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;\t\t\t\t\t\t7.显示所有学生信息&#x27;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;\t\t\t\t\t\t0.退出&#x27;</span>)</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>():</span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        menm()</span><br><span class="line">        choice = <span class="built_in">int</span>(<span class="built_in">input</span>(<span class="string">&#x27;请选择&#x27;</span>))</span><br><span class="line">        <span class="keyword">if</span> choice <span class="keyword">in</span> [<span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>]:</span><br><span class="line">            <span class="keyword">if</span> choice == <span class="number">0</span>:</span><br><span class="line">                answer = <span class="built_in">input</span>(<span class="string">&#x27;您确定要退出系统吗？y/n&#x27;</span>)</span><br><span class="line">                <span class="keyword">if</span> answer == <span class="string">&#x27;y&#x27;</span> <span class="keyword">or</span> answer == <span class="string">&#x27;Y&#x27;</span>:</span><br><span class="line">                    <span class="built_in">print</span>(<span class="string">&#x27;谢谢您的使用！！&#x27;</span>)</span><br><span class="line">                    <span class="keyword">break</span>  <span class="comment"># 退出系统</span></span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    <span class="keyword">continue</span></span><br><span class="line">            <span class="keyword">elif</span> choice==<span class="number">1</span>:</span><br><span class="line">                insert()</span><br><span class="line">            <span class="keyword">elif</span> choice == <span class="number">2</span>:</span><br><span class="line">                search()</span><br><span class="line">            <span class="keyword">elif</span> choice==<span class="number">3</span>:</span><br><span class="line">                delete()</span><br><span class="line">            <span class="keyword">elif</span> choice==<span class="number">4</span>:</span><br><span class="line">                modify()</span><br><span class="line">            <span class="keyword">elif</span> choice==<span class="number">5</span>:</span><br><span class="line">                sort()</span><br><span class="line">            <span class="keyword">elif</span> choice==<span class="number">6</span>:</span><br><span class="line">                total()</span><br><span class="line">            <span class="keyword">elif</span> choice==<span class="number">7</span>:</span><br><span class="line">                show()</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">insert</span>():</span><br><span class="line">    student_list=[]</span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        <span class="built_in">id</span>=<span class="built_in">int</span>(<span class="built_in">input</span>(<span class="string">&#x27;请输入ID如1001&#x27;</span>))</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> <span class="built_in">id</span>:</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        name=<span class="built_in">input</span>(<span class="string">&#x27;请输入姓名&#x27;</span>)</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> name:</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            englist = <span class="built_in">int</span>(<span class="built_in">input</span>(<span class="string">&#x27;请输入英语成绩:&#x27;</span>))</span><br><span class="line">            python = <span class="built_in">int</span>(<span class="built_in">input</span>(<span class="string">&#x27;请输入Python成绩:&#x27;</span>))</span><br><span class="line">            java = <span class="built_in">int</span>(<span class="built_in">input</span>(<span class="string">&#x27;请输入Java成绩:&#x27;</span>))</span><br><span class="line">        <span class="keyword">except</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&#x27;输入无效，不是整数类型，请重新输入&#x27;</span>)</span><br><span class="line">            <span class="keyword">continue</span></span><br><span class="line">    <span class="comment"># 将录入的学生信息保存到字典中</span></span><br><span class="line">        student = &#123;<span class="string">&#x27;id&#x27;</span>: <span class="built_in">id</span>, <span class="string">&#x27;name&#x27;</span>:name,<span class="string">&#x27;english&#x27;</span>:englist,<span class="string">&#x27;python&#x27;</span>:python, <span class="string">&#x27;java&#x27;</span>:java&#125;</span><br><span class="line">    <span class="comment"># 将学生信息添加到列表中</span></span><br><span class="line">        student_list.append(student)</span><br><span class="line">        answer = <span class="built_in">input</span>(<span class="string">&#x27;是否继续添加？y/n\n&#x27;</span>)</span><br><span class="line">        <span class="keyword">if</span> answer == <span class="string">&#x27;y&#x27;</span>:</span><br><span class="line">            <span class="keyword">continue</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        <span class="comment"># 调用save()函数</span></span><br><span class="line">    save(student_list)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;学生信息录入完毕！！&#x27;</span>)</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">save</span>(<span class="params">lst</span>):</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        stu_txt=<span class="built_in">open</span>(filename,<span class="string">&#x27;a&#x27;</span>,encoding=<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        stu_txt = <span class="built_in">open</span>(filename,<span class="string">&#x27;w&#x27;</span>, encoding=<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line">    <span class="keyword">for</span> item <span class="keyword">in</span> lst:</span><br><span class="line">        stu_txt.write(<span class="built_in">str</span>(item)+<span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line">    stu_txt.close()</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">search</span>():</span><br><span class="line">    <span class="comment"># student_query=[]</span></span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        <span class="keyword">if</span> os.path.exists(filename):</span><br><span class="line">            mode=<span class="built_in">input</span>(<span class="string">&#x27;请输入查询方式1为ID，2为姓名&#x27;</span>)</span><br><span class="line">            <span class="keyword">if</span> mode==<span class="string">&#x27;1&#x27;</span>:</span><br><span class="line">                <span class="built_in">id</span>=<span class="built_in">int</span>(<span class="built_in">input</span>(<span class="string">&#x27;请输入学生ID&#x27;</span>))</span><br><span class="line">            <span class="keyword">elif</span> mode==<span class="string">&#x27;2&#x27;</span>:</span><br><span class="line">                name=<span class="built_in">input</span>(<span class="string">&#x27;请输入学生name&#x27;</span>)</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">&#x27;输入错误重新输入&#x27;</span>)</span><br><span class="line">                <span class="keyword">continue</span></span><br><span class="line">            <span class="keyword">with</span> <span class="built_in">open</span>(filename, <span class="string">&#x27;r&#x27;</span>, encoding=<span class="string">&#x27;utf-8&#x27;</span>) <span class="keyword">as</span> rfile:</span><br><span class="line">                student = rfile.readlines()</span><br><span class="line">                <span class="keyword">for</span> item <span class="keyword">in</span> student:</span><br><span class="line">                    d = <span class="built_in">dict</span>(<span class="built_in">eval</span>(item))</span><br><span class="line">                    <span class="keyword">if</span> <span class="built_in">id</span> != <span class="string">&#x27;&#x27;</span>:</span><br><span class="line">                        <span class="keyword">if</span> d[<span class="string">&#x27;id&#x27;</span>] == <span class="built_in">id</span>:</span><br><span class="line">                            <span class="built_in">print</span>(d)</span><br><span class="line">                    <span class="keyword">elif</span> name != <span class="string">&#x27;&#x27;</span>:</span><br><span class="line">                        <span class="keyword">if</span> d[<span class="string">&#x27;name&#x27;</span>] == name:</span><br><span class="line">                            <span class="built_in">print</span>(d)</span><br><span class="line">            answer=<span class="built_in">input</span>(<span class="string">&#x27;是否继续查询y/n&#x27;</span>)</span><br><span class="line">            <span class="keyword">if</span> answer==<span class="string">&#x27;y&#x27;</span>:</span><br><span class="line">                <span class="keyword">continue</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&#x27;暂未查到学生信息&#x27;</span>)</span><br><span class="line">            <span class="keyword">return</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">delete</span>():</span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        student_id=<span class="built_in">int</span>(<span class="built_in">input</span>(<span class="string">&#x27;请输入要删除的ID:&#x27;</span>))</span><br><span class="line">        <span class="keyword">if</span> student_id!=<span class="string">&#x27;&#x27;</span>:</span><br><span class="line">            <span class="keyword">if</span> os.path.exists(filename):</span><br><span class="line">                <span class="keyword">with</span> <span class="built_in">open</span>(filename,<span class="string">&#x27;r&#x27;</span>,encoding=<span class="string">&#x27;utf-8&#x27;</span>) <span class="keyword">as</span> file:</span><br><span class="line">                    student_old=file.readlines()</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                student_old=[]</span><br><span class="line">            flag = <span class="literal">False</span> <span class="comment"># 标记是否刷除</span></span><br><span class="line">            <span class="keyword">if</span> student_old:</span><br><span class="line">                <span class="keyword">with</span> <span class="built_in">open</span>(filename,<span class="string">&#x27;w&#x27;</span>,encoding=<span class="string">&#x27;utf-8&#x27;</span>) <span class="keyword">as</span> wfile:</span><br><span class="line">                    d=&#123;&#125;</span><br><span class="line">                    <span class="keyword">for</span> item <span class="keyword">in</span> student_old:</span><br><span class="line">                        d=<span class="built_in">dict</span>(<span class="built_in">eval</span>(item))</span><br><span class="line">                        <span class="keyword">if</span> d[<span class="string">&#x27;id&#x27;</span>]!=student_id:</span><br><span class="line">                            wfile.write(<span class="built_in">str</span>(d)+<span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line">                        <span class="keyword">else</span>:</span><br><span class="line">                            flag=<span class="literal">True</span></span><br><span class="line">                    <span class="keyword">if</span> flag:</span><br><span class="line">                        <span class="built_in">print</span>(<span class="string">f&#x27;<span class="subst">&#123;student_id&#125;</span>学生信息已被删除&#x27;</span>)</span><br><span class="line">                    <span class="keyword">else</span>:</span><br><span class="line">                        <span class="built_in">print</span>(<span class="string">f&#x27;没有找到<span class="subst">&#123;student_id&#125;</span>&#x27;</span>)</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">&#x27;无学生信息&#x27;</span>)</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">            show()</span><br><span class="line">            answer=<span class="built_in">input</span>(<span class="string">&#x27;是否继续删除？y/n\n&#x27;</span>)</span><br><span class="line">            <span class="keyword">if</span> answer==<span class="string">&#x27;y&#x27;</span>:</span><br><span class="line">                <span class="keyword">continue</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">modify</span>():</span><br><span class="line">    show()</span><br><span class="line">    <span class="keyword">if</span> os.path.exists(filename):</span><br><span class="line">        <span class="keyword">with</span> <span class="built_in">open</span>(filename,<span class="string">&#x27;r&#x27;</span>,encoding=<span class="string">&#x27;utf-8&#x27;</span>) <span class="keyword">as</span> rfile:</span><br><span class="line">            student_old=rfile.readlines()</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="comment">#退出If</span></span><br><span class="line">    student_id=<span class="built_in">int</span>(<span class="built_in">input</span>(<span class="string">&#x27;请输入要修改的学员ID：&#x27;</span>))</span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(filename,<span class="string">&#x27;w&#x27;</span>,encoding=<span class="string">&#x27;utf-8&#x27;</span>) <span class="keyword">as</span> wfile:</span><br><span class="line">        d=&#123;&#125;</span><br><span class="line">        <span class="keyword">for</span> item <span class="keyword">in</span> student_old:</span><br><span class="line">            d=<span class="built_in">dict</span>(<span class="built_in">eval</span>(item))</span><br><span class="line">            <span class="keyword">if</span> d[<span class="string">&#x27;id&#x27;</span>]==student_id:</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">&#x27;找到需要修改的学生了&#x27;</span>)</span><br><span class="line">                <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">                    <span class="keyword">try</span>:</span><br><span class="line">                        d[<span class="string">&#x27;name&#x27;</span>] =<span class="built_in">input</span>(<span class="string">&#x27;请输入姓名：&#x27;</span>)</span><br><span class="line">                        d[<span class="string">&#x27;english&#x27;</span>] = <span class="built_in">input</span>(<span class="string">&#x27;请输入英语成绩：&#x27;</span>)</span><br><span class="line">                        d[<span class="string">&#x27;python&#x27;</span>] = <span class="built_in">input</span>(<span class="string">&#x27;请输入Python成绩：&#x27;</span>)</span><br><span class="line">                        d[<span class="string">&#x27;java&#x27;</span>] = <span class="built_in">input</span>(<span class="string">&#x27;请输入Java成绩：&#x27;</span>)</span><br><span class="line">                        <span class="keyword">break</span></span><br><span class="line">                    <span class="keyword">except</span>:</span><br><span class="line">                        <span class="built_in">print</span>(<span class="string">&#x27;输入有误&#x27;</span>)</span><br><span class="line">                wfile.write(<span class="built_in">str</span>(d) + <span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">&#x27;已修改&#x27;</span>)</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                wfile.write(<span class="built_in">str</span>(d) + <span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line">            answer = <span class="built_in">input</span>(<span class="string">&#x27;是否继续修改其它学生信息？y/n\n&#x27;</span>)</span><br><span class="line">            <span class="keyword">if</span> answer ==<span class="string">&#x27;y&#x27;</span>:</span><br><span class="line">                modify()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">sort</span>():</span><br><span class="line">    show()</span><br><span class="line">    <span class="keyword">if</span> os.path.exists(filename):</span><br><span class="line">        <span class="keyword">with</span> <span class="built_in">open</span>(filename,<span class="string">&#x27;r&#x27;</span>,encoding=<span class="string">&#x27;utf-8&#x27;</span>) <span class="keyword">as</span> rfile:</span><br><span class="line">            student_list=rfile.readlines()</span><br><span class="line">            student_new=[]</span><br><span class="line">            <span class="keyword">for</span> item <span class="keyword">in</span> student_list:</span><br><span class="line">                d=<span class="built_in">dict</span>(<span class="built_in">eval</span>(item))</span><br><span class="line">                student_new.append(d)</span><br><span class="line">        asc_or_desc = <span class="built_in">input</span>(<span class="string">&#x27;请选择0.升序1.降序：&#x27;</span>)</span><br><span class="line">        <span class="keyword">if</span> asc_or_desc == <span class="string">&#x27;0&#x27;</span>:</span><br><span class="line">            asc_or_desc_bool = <span class="literal">False</span></span><br><span class="line">        <span class="keyword">elif</span> asc_or_desc == <span class="string">&#x27;1&#x27;</span>:</span><br><span class="line">            asc_or_desc_bool = <span class="literal">True</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&#x27;您的输入有误，请重新输入&#x27;</span>)</span><br><span class="line">            sort()</span><br><span class="line">        mode = <span class="built_in">input</span>(<span class="string">&#x27;请选择排序方式(1.按英语成绩排序2.按Python成绩排序3.按Java成绩排序0.按总成绩排序&#x27;</span>)</span><br><span class="line">        <span class="keyword">if</span> mode ==<span class="string">&#x27;1&#x27;</span>:</span><br><span class="line">            student_new.sort(key=<span class="keyword">lambda</span> x:<span class="built_in">int</span>(x[<span class="string">&#x27;english&#x27;</span>]), reverse=asc_or_desc_bool)</span><br><span class="line">        <span class="keyword">elif</span> mode ==<span class="string">&#x27;2&#x27;</span>:</span><br><span class="line">            student_new.sort(key=<span class="keyword">lambda</span> x: <span class="built_in">int</span>(x[<span class="string">&#x27;python&#x27;</span>]), reverse=asc_or_desc_bool)</span><br><span class="line">        <span class="keyword">elif</span> mode == <span class="string">&#x27;3&#x27;</span>:</span><br><span class="line">            student_new.sort(key=<span class="keyword">lambda</span> x: <span class="built_in">int</span>(x[<span class="string">&#x27;java&#x27;</span>]), reverse=asc_or_desc_bool)</span><br><span class="line">        <span class="keyword">elif</span> mode == <span class="string">&#x27;0&#x27;</span>:</span><br><span class="line">            student_new.sort(key=<span class="keyword">lambda</span> x: <span class="built_in">int</span>(x[<span class="string">&#x27;english&#x27;</span>])+<span class="built_in">int</span>(x[<span class="string">&#x27;python&#x27;</span>])+<span class="built_in">int</span>(x[<span class="string">&#x27;java&#x27;</span>]), reverse=asc_or_desc_bool)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&#x27;输入有误请重新输入&#x27;</span>)</span><br><span class="line">            sort()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;学生信息不存在&#x27;</span>)</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> student_new:</span><br><span class="line">        <span class="built_in">print</span>(<span class="built_in">str</span>(i)+<span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">total</span>():</span><br><span class="line">    <span class="keyword">if</span> os.path.exists(filename):</span><br><span class="line">        <span class="keyword">with</span> <span class="built_in">open</span>(filename,<span class="string">&#x27;r&#x27;</span>,encoding=<span class="string">&#x27;utf-8&#x27;</span>) <span class="keyword">as</span> rfile:</span><br><span class="line">            students=rfile.readlines()</span><br><span class="line">            <span class="keyword">if</span> students:</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">f&#x27;共有<span class="subst">&#123;<span class="built_in">len</span>(students)&#125;</span>人&#x27;</span>)</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">&#x27;还未保存学生信息&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;暂未保存学生信息&#x27;</span>)</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">show</span>():</span><br><span class="line">    <span class="keyword">if</span> os.path.exists(filename):</span><br><span class="line">        <span class="keyword">with</span> <span class="built_in">open</span>(filename,<span class="string">&#x27;r&#x27;</span>,encoding=<span class="string">&#x27;utf-8&#x27;</span>) <span class="keyword">as</span> rfile:</span><br><span class="line">            student=rfile.readlines()</span><br><span class="line">            <span class="keyword">for</span> item <span class="keyword">in</span> student:</span><br><span class="line">                <span class="built_in">print</span>(item)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;暂未保存过数据&#x27;</span>)</span><br><span class="line"><span class="keyword">if</span> __name__==<span class="string">&#x27;__main__&#x27;</span>:  <span class="comment">#表示仅能在本模块中调用</span></span><br><span class="line">    main()</span><br></pre></td></tr></table></figure><h2 id="pyinstaller模块打包exe">Pyinstaller模块打包exe</h2><p>安装<code>pip install Pylnstaller</code>，然后<code>pyinstaller -F 路径</code>，日志中能查看生成的exe文件目录</p><h2 id="其他项目中用到的方法">其他项目中用到的方法</h2><h3 id="pythonqt">pythonQT</h3><h3 id="strip-方法">strip()方法</h3><p>Python strip() 方法用于移除字符串头尾指定的字符（默认为空格或换行符）或字符序列。str.strip( '0' );  # 去除首尾字符 0<br>注意：该方法只能删除开头或是结尾的字符，不能删除中间部分的字符。</p><h3 id="splitlines-方法">splitlines()方法</h3><p>Python splitlines() 按照行('\r', '\r\n', \n')分隔，返回一个<strong>包含各行</strong>作为元素的列表，如果参数 keepends 为 False，不包含换行符，如果为 True，则保留换行符。<br><code>str1 = 'ab c\n\nde fg\rkl\r\n'</code>输出<code>['ab c', '', 'de fg', 'kl']</code><br>'\r' 回车，回到当前行的行首，而不会换到下一行，如果接着输出的话，本行以前的内容会被逐一覆盖；<br>'\n' 换行，换到当前位置的下一行，而不会回到行首；<br>通常多行使用</p><h3 id="split-方法">split()方法</h3><p>Python split() 通过指定分隔符对字符串进行切片，如果参数 num 有指定值，则分隔 num+1 个子字符串<br>语法<br>split() 方法语法通常单行使用：<br><code>str.split(str=&quot;&quot;, num=string.count(str)).</code></p><h3 id="if-xxx-strip-函数的使用">if xxx.strip()函数的使用</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">a = <span class="string">&#x27;            \n this is a test file  \t &#x27;</span>  <span class="comment">#句子有空格和换行以及回车</span></span><br><span class="line">b = <span class="string">&#x27;   \t \n&#x27;</span>                           <span class="comment">#句子除了换行空格和回车外没有其他字符    </span></span><br><span class="line"><span class="keyword">if</span> a.strip():                           <span class="comment">#如果a.strip()的值为真，打印a,否则为假不打印。          </span></span><br><span class="line">    <span class="built_in">print</span>(a)</span><br><span class="line"><span class="keyword">if</span> b.strip():                           <span class="comment">#如果b.strip()的值为真打印b,为假不打印          </span></span><br><span class="line">    <span class="built_in">print</span>(b)</span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>this <span class="keyword">is</span> a test file </span><br></pre></td></tr></table></figure><p><a href="https://blog.csdn.net/Mr_Cat123/article/details/80671597">参考</a></p><h3 id="for循环break-continue">for循环break、continue</h3><p><a href="https://blog.csdn.net/weixin_44966900/article/details/102596190">参考</a><br>continue在for循环中的作用是跳出本次循环,进行下一次循环;break会跳出循环,不会执行break后面的一切代码</p><h3 id="session">.Session()</h3><p>requests.session的作用：自动处理cookie，即 下一次请求会带上前一次的cookie</p><h3 id="自定义函数的注意">自定义函数的注意</h3><p>python函数中带具体值的形参放函数定义的最后面</p><h3 id="python暂停语句">python暂停语句</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pdb</span><br><span class="line">pdb.set_trace()</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>0405日志</title>
      <link href="/posts/fca3ee6b/"/>
      <url>/posts/fca3ee6b/</url>
      
        <content type="html"><![CDATA[<h2 id="0404早">0404早</h2><p>完成了本科的专业实习报告全部内容，效率有待进一步提高</p><h2 id="修电脑">修电脑</h2><p>我爸的电脑开机一直显示选择启动项，不知道什么情况<br>第一步先检查启动文件是否损坏</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>0403STM32学习日志</title>
      <link href="/posts/da18fe5f/"/>
      <url>/posts/da18fe5f/</url>
      
        <content type="html"><![CDATA[<h2 id="点灯项目">点灯项目</h2><h3 id="寄存器法">寄存器法</h3><p>灯在PC13口，因此需要配置APB2 外设时钟使能寄存器(RCC_APB2ENR)，查阅STM32F10x手册（中文）得出位4 IOPC<br>EN可用于IO口C时钟的使能，具体到代码为<code>RCC-&gt;APB2ENR=0x00000010;</code><br>然后用端口配置高寄存器(GPIOx_CRH)对PC13配置推挽输出，根据手册在输出模式(MODE13[1:0]&gt;00)下该位赋值为11，而MODE13[1:0]口也应配置为11。<br>概括地说，IO的功能模式大致可以分为输入、输出以及输入输出双向三大类。其中作为基本输入IO，相对比较简单，主要涉及的知识点就是高阻态；作为输出IO，相比于输入复杂一些，工作模式主要有开漏（Open Drain）模式和推挽（Push-Pull）模式，这一部分涉及的知识点比较多；对于输入输出IO，容易产生疑惑的地方是准双向和双向端口的区别。<br>推挽输出（Push-Pull Output）<br>推挽输出的结构是由两个三极管或者MOS管受到互补信号的控制，两个管子始终保持一个处于截止，另一个处于导通的状态。如图 10所示。<br>推挽输出的最大特点是可以真正能真正的输出高电平和低电平，在两种电平下都具有驱动能力。<br>开漏输出（Open Drain Output）<br>常说的与推挽输出相对的就是开漏输出，对于开漏输出和推挽输出的区别最普遍的说法就是开漏输出无法真正输出高电平，即高电平时没有驱动能力，需要借助外部上拉电阻完成对外驱动。下面就从内部结构和原理上说明为什么开漏输出输出高电平时没有驱动能力，以及进一步比较与推挽输出的区别。<br>具体到代码为<code>GPIOC-&gt;CRH = 0x00300000;</code><br>最后用端口输出数据寄存器(GPIOx_ODR) (x=A..E)，配置13号口为高电平也就是灯熄灭，配置低电平电路导通灯点亮。<br><code>GPIOC-&gt;ODR = 0x00000000;</code></p><h3 id="库函数用法">库函数用法</h3><p>将以上步骤写成库函数的形式如下</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOC,ENABLE);</span><br><span class="line">GPIO_InitTypeDef GPIO_InitStructure;</span><br><span class="line">GPIO_InitStructure.<span class="attribute">GPIO_Mode</span>=GPIO_Mode_Out_PP;</span><br><span class="line">GPIO_InitStructure.<span class="attribute">GPIO_Pin</span>=GPIO_Pin_13;</span><br><span class="line">GPIO_InitStructure.<span class="attribute">GPIO_Speed</span>=GPIO_Speed_50MHz;</span><br><span class="line">GPIO_Init(GPIOC,&amp;GPIO_InitStructure);</span><br><span class="line">   GPIO_ResetBits(GPIOC,GPIO_Pin_13);  </span><br></pre></td></tr></table></figure><h2 id="打算打板32开发板配套学习pcb">打算打板32开发板配套学习PCB</h2><p>使用嘉立创EDA <a href="https://blog.csdn.net/anlog/article/details/122754867">嘉立创EDA常用快捷键</a><br>FR-4和铝基板一般选前者就行。</p><h2 id="c">C++</h2><p>上次学到构造函数和析构函数的P109，有点忘了这次复习一下，复习了基本该概念构造函数是初始化时候类中的值，析构函数是程序结束后类中的值。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>0326日志</title>
      <link href="/posts/eb0f9e42/"/>
      <url>/posts/eb0f9e42/</url>
      
        <content type="html"><![CDATA[<h1 id="三要素法下当初始条件t-0改成t-t0时e的幂也由t变成t-t0">三要素法下当初始条件t=0改成t=t0时e的幂也由t变成t-t0</h1><div class="video"><video controls preload><source src='https://yun.hgez6.top/api/raw/?path=/picbed/video/t%3Dt0%E4%B8%89%E8%A6%81%E7%B4%A0_x264.mp4' type='video/mp4'>Your browser does not support the video tag.</video></div> ]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>0323日志</title>
      <link href="/posts/b937b1e5/"/>
      <url>/posts/b937b1e5/</url>
      
        <content type="html"><![CDATA[<h1 id="0323">0323</h1><h2 id="修复bug">修复BUG</h2><p>修复一级标题无法跳转的问题，由于<code>hexo-renderer-markdown-it</code>的缘故,该渲染器默认配置anchor的等级level为2所以无法对leve 1的1级标题跳转。<br>此处换成<code>@upupming/hexo-renderer-markdown-it-plus</code>渲染器，<a href="https://blog.csdn.net/qq_36667170/article/details/105846999">配置文档</a>,实测不怎么样，某些插件无法渲染，又大稳定性又差<br>就用<code>hexo-renderer-markdown-it</code><br>并在配置文件中加入</p><figure class="highlight nestedtext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Markdown config</span></span><br><span class="line"><span class="attribute">markdown</span><span class="punctuation">:</span></span><br><span class="line">  <span class="attribute">render</span><span class="punctuation">:</span></span><br><span class="line">    <span class="attribute">html</span><span class="punctuation">:</span> <span class="string">true</span></span><br><span class="line">    <span class="attribute">xhtmlOut</span><span class="punctuation">:</span> <span class="string">false</span></span><br><span class="line">    <span class="attribute">breaks</span><span class="punctuation">:</span> <span class="string">true</span></span><br><span class="line">    <span class="attribute">linkify</span><span class="punctuation">:</span> <span class="string">false</span></span><br><span class="line">    <span class="attribute">typographer</span><span class="punctuation">:</span> <span class="string">false</span></span><br><span class="line">    <span class="attribute">quotes</span><span class="punctuation">:</span> <span class="string">&#x27;“”‘’&#x27;</span></span><br><span class="line">  <span class="attribute">plugins</span><span class="punctuation">:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">markdown-it-abbr</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">markdown-it-footnote</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">markdown-it-sub</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">markdown-it-sup</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">markdown-it-ins</span></span><br><span class="line">  <span class="attribute">anchors</span><span class="punctuation">:</span></span><br><span class="line">    <span class="attribute">level</span><span class="punctuation">:</span> <span class="string">1</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>一定要<code>hexo clean</code>不然无效！！！<br>其中<code>linkify: false</code>如果为<code>true</code>会对所有类似网址的文字渲染成网页故为<code>false</code><br>并且支持<code>X^2^</code>为X<sup>2</sup>  引用<code>[^1]</code>显示为引用<sup class="footnote-ref"><a href="#fn1" id="fnref1">[1]</a></sup> 只需再加上  <code>[^1]: basic footnote content</code><br>遇到<code> npm ERR! Unexpected token in JSON at position 1 while parsing near</code>是网速原因，换成国内源就行。</p><h2 id="jurry">JURRY</h2><div class="video"><video controls preload><source src='https://yun.hgez6.top/api/raw/?path=/picbed/video/JURRY_x264.mp4' type='video/mp4'>Your browser does not support the video tag.</video></div> <h2 id="离散法留数传函">离散法留数传函</h2><div class="video"><video controls preload><source src='https://yun.hgez6.top/api/raw/?path=/picbed/video/%E7%95%99%E6%95%B0%E6%B3%95%E7%A6%BB%E6%95%A3%E4%BC%A0%E5%87%BD.mp4' type='video/mp4'>Your browser does not support the video tag.</video></div> <h2 id="状态方程的解-x264">状态方程的解_x264</h2><div class="video"><video controls preload><source src='https://yun.hgez6.top/api/raw/?path=/picbed/video/%E7%8A%B6%E6%80%81%E6%96%B9%E7%A8%8B%E7%9A%84%E8%A7%A3_x264.mp4' type='video/mp4'>Your browser does not support the video tag.</video></div> <h2 id="修复vue组件图标不显示问题">修复VUE组件图标不显示问题</h2><p>发现VUE notice图标不显示，根据<a href="https://www.fomal.cc/posts/2d7ac914.html">文档VUE弹窗</a>发现，VUE弹窗仅需引入两个js和一个css，这也就排除了因代码错误导致的无法显示问题<br>对三个js分析，经排查css与图标显示有关，本地化的css/js路径在<code>E:\GItBK-UI2\themes\butterfly\source\js\</code>，故统一改为cdn引用，通过测试。</p><hr class="footnotes-sep"><section class="footnotes"><ol class="footnotes-list"><li id="fn1" class="footnote-item"><p>basic footnote content <a href="#fnref1" class="footnote-backref">↩︎</a></p></li></ol></section>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>0322日志</title>
      <link href="/posts/1f40ba51/"/>
      <url>/posts/1f40ba51/</url>
      
        <content type="html"><![CDATA[<h1 id="手机端屏蔽鼠标圆圈">手机端屏蔽鼠标圆圈</h1><p>js中发现cursor元素与鼠标有关，按<kbd>F12</kbd>再用<kbd>CTRL</kbd> + <kbd>F</kbd>查找源代码中的所有cursor元素<br>发现鼠标引用的url如下<code>.amap-container&#123;cursor:url(https://webapi.amap.com/theme/v1.3/openhand.cur),default;&#125;.amap-drag&#123;cursor:url(https://webapi.amap.com/theme/v1.3/closedhand.cur),default;&#125;</code>,继续查找，发现语句<code>&lt;div id=&quot;cursor&quot; class=&quot;hover&quot; style=&quot;left: 1078px; top: 757px;&quot;&gt;&lt;/div&gt;</code>对应蓝色圆圈<br><img src="https://files.catbox.moe/sd00z6.png" alt="如图"><br>id=&quot;cursor&quot;那么在CSS中屏蔽代码如下：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">  <span class="comment">/*鼠标蓝色圆圈手机端消失*/</span></span><br><span class="line"><span class="keyword">@media</span> screen <span class="keyword">and</span> (<span class="attribute">max-width</span>: <span class="number">768px</span>) &#123;</span><br><span class="line">  <span class="selector-id">#cursor</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>: none <span class="meta">!important</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>如果遇到BUG则使用<code>display: none</code>即可，或者JS中也可屏蔽不多说了。经测试成功屏蔽！</p><h2 id="打印扫描件">打印扫描件</h2><p>今天用小米相机文档模式中的黑白模式打印了各类证书的扫描件，真的好用啊。拍完在WPS中插入，选择图片点击图片工具，可以设置长和宽，任意设置一个长和宽另一参数会按比例自动调整。如果遇到色彩比较浅的情况，去PS转换一下色阶就行了。<br>虽然打印了那么多次，但我总是觉得没有利用好A4纸的大小。找到原因了，是因为页面边距参数过大，导致实际可打印的范围被缩小。在页面布局中缩小各个参数即可。</p><h3 id="差分转传函-x264">差分转传函_x264</h3><div class="video"><video controls preload><source src='https://yun.hgez6.top/api/raw/?path=/picbed/video/%E5%B7%AE%E5%88%86%E8%BD%AC%E4%BC%A0%E5%87%BD_x264.mp4' type='video/mp4'>Your browser does not support the video tag.</video></div>  <h3 id="状态空间转传函-x264">状态空间转传函_x264</h3><div class="video"><video controls preload><source src='https://yun.hgez6.top/api/raw/?path=/picbed/video/%E7%8A%B6%E6%80%81%E7%A9%BA%E9%97%B4%E8%BD%AC%E4%BC%A0%E5%87%BD_x264.mp4' type='video/mp4'>Your browser does not support the video tag.</video></div>  <h3 id="频率特性输出">频率特性输出</h3><div class="video"><video controls preload><source src='https://yun.hgez6.top/api/raw/?path=/picbed/video/%E9%A2%91%E7%8E%87%E7%89%B9%E6%80%A7%E8%BE%93%E5%87%BA_x264.mp4' type='video/mp4'>Your browser does not support the video tag.</video></div>  <h3 id="劳斯判据两特">劳斯判据两特</h3><div class="video"><video controls preload><source src='https://yun.hgez6.top/api/raw/?path=/picbed/video/%E5%8A%B3%E6%96%AF%E5%88%A4%E6%8D%AE%E4%B8%A4%E7%89%B9_x264.mp4' type='video/mp4'>Your browser does not support the video tag.</video></div> <h3 id="开环传函和闭环传函与特征方程的零极点对应关系">开环传函和闭环传函与特征方程的零极点对应关系</h3><p><img src="https://www.hualigs.cn/image/641af6166219e.jpg" alt=""><br><a href="https://www.bilibili.com/video/BV1yg4y1B7JM/?spm_id_from=333.880.my_history.page.click&amp;vd_source=ea78e03d02c651ab9a1849ee5454e98b">3分10秒处</a></p><h3 id="非线性自振点-x264">非线性自振点_x264</h3><div class="video"><video controls preload><source src='https://yun.hgez6.top/api/raw/?path=/picbed/video/%E9%9D%9E%E7%BA%BF%E6%80%A7%E8%87%AA%E6%8C%AF%E7%82%B9_x264.mp4' type='video/mp4'>Your browser does not support the video tag.</video></div> ]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>别忘了早上涂疤痕灵戴帽子！</title>
      <link href="/posts/65d9a22/"/>
      <url>/posts/65d9a22/</url>
      
        <content type="html"><![CDATA[<h1 id="东西买完最好别退-买东西时候别纠结很浪费时间-退了的话学校菜鸟那边会帮你原路退回">东西买完最好别退，买东西时候别纠结很浪费时间，退了的话学校菜鸟那边会帮你原路退回</h1><p>东西买完就别纠结了</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>0321日志</title>
      <link href="/posts/2ea8a0cc/"/>
      <url>/posts/2ea8a0cc/</url>
      
        <content type="html"><![CDATA[<h1 id="传函求可控标准型李二法">传函求可控标准型李二法</h1><div class="video"><video controls preload><source src='https://yun.hgez6.top/api/raw/?path=/picbed/video/%E4%BC%A0%E5%87%BD%E6%B1%82%E5%8F%AF%E6%8E%A7%E6%A0%87%E5%87%86%E5%9E%8B%E6%9D%8E%E4%BA%8C%E6%B3%95_x264.mp4' type='video/mp4'>Your browser does not support the video tag.</video></div>  <h3 id="mad路由器搞了快一天">mad路由器搞了快一天</h3><p>本来以为160mhz开不了149以上信道是bug就用<a href="https://www.right.com.cn/forum/thread-8236039-1-1.html">ax6 ax3600刷uboot后恢复官方系统方法</a>这篇文章刷回去了，其实就是恢复官方分区和官方引导再用小米救砖<br>恢复分区，例如恢复mdt1分区代码如下，其中mdt1控制分区表,mdt7为引导分区：</p><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">mtd erase <span class="regexp">/dev/m</span>td1</span><br><span class="line">mtd <span class="keyword">write</span> <span class="regexp">/tmp/mi</span>bib.bin <span class="regexp">/dev/m</span>td1</span><br><span class="line">mtd erase <span class="regexp">/dev/m</span>td7  </span><br><span class="line">mtd <span class="keyword">write</span> <span class="regexp">/tmp/</span>appsbl.bin <span class="regexp">/dev/m</span>td7</span><br></pre></td></tr></table></figure><p>有种说法是uboot支持官方固件引导，只恢复mdt1然后用uboot刷应该也行，具体我没试<br>好了，恢复完了，傻眼了，提示160mhz频段本身就是不支持149以上信道，而且速度很慢，无论是64信道还是80Mhz的149信道都只有200Mbps左右<br>只能再刷回去。虚拟机里配置Op,配置时要配置网关为同一网段，然后网络选择桥接解锁ssh，其中需要关闭IPv4。<br>解锁完ssh，就要刷一个临时OP固件，就在这出问题了，由于UP提供的包为36MB正好超过了分区限制，所以无法刷入，路由器自动重启到另一个分区，另一个分区仍然为小米系统需要重新解锁SSH我一开始没发现这个问题，以为SSH只要解锁一次就行，没想到小米的stoke是每次启动都变化的，因此需要重新解锁。然后我就怀疑是不是临时OP固件超过大小了，果然如此。<br>建议首先检查当前启动系统（1.0.18/16）所在分区；<br><code>nvram get flag_last_success</code>,如果为0则为mdt12分区，1为mdt13分区。在未启动的分区刷固件，如果当前在mdt13则使用：</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">ubiformat /dev/mtd12 -y -f /tmp/你上传的固件文件名</span><br><span class="line">nvram <span class="built_in">set</span> <span class="attribute">flag_last_success</span>=0</span><br><span class="line">nvram <span class="built_in">set</span> <span class="attribute">flag_boot_rootfs</span>=0</span><br><span class="line">nvram commit</span><br><span class="line">reboot</span><br></pre></td></tr></table></figure><p>后面几句的作用是切换下次启动的分区，并使用命令重启。<br>接着在OP系统内修改分区表刷入uboot和扩容分区表即可。注意修改分区表必须断电重启！！！</p><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">mtd erase <span class="regexp">/dev/m</span>td1</span><br><span class="line">mtd <span class="keyword">write</span> <span class="regexp">/tmp/</span>ax6-uboot-mibib.bin <span class="regexp">/dev/m</span>td1</span><br><span class="line">mtd erase <span class="regexp">/dev/m</span>td7</span><br><span class="line">mtd <span class="keyword">write</span> <span class="regexp">/tmp/u</span>boot-ax6.bin <span class="regexp">/dev/m</span>td7</span><br></pre></td></tr></table></figure><p>然后配置电脑网为198.168.1.2，按住reset并接通路由器电源，待黄灯停止闪烁，进入198.168.1.1开始 WEB刷入底层固件，注意是底层固件通常带有factory字样！<br>结束。其实无论是逻辑还是操作都是挺简单的，为什么搞那么久，我觉得是思路不清楚，判断不够果断，反复在犯同一错误，而没有在其他角度思考问题，过于迷信教程，完全就是傻瓜式操作是不行的，要理解原理，况且这原理很好理解啊！<br>刷完速度提升至400Mbps左右，80mhz下149信道测试正常，就是开5Gwifi有20秒的延迟，不过在接受范围内，官方有1分钟延迟也太离谱了！<br>使用的包为<a href="https://e5.hgez6.top/zh-CN/Android/openwrt/QSDK/QSDK_5.4_AX6_0219.zip">QSDK_5.4_AX6_0219.zip</a><br>其余资源均在<a href="https://e5.hgez6.top/zh-CN/Android/openwrt/QSDK/">QSDK_AX6资源包</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>0320日志</title>
      <link href="/posts/88dfab78/"/>
      <url>/posts/88dfab78/</url>
      
        <content type="html"><![CDATA[<h1 id="0320">0320</h1><p>基尔霍夫第二定律又称基尔霍夫电压定律，简记为KVL</p><h2 id="开发日志">开发日志</h2><p>要想在type=radio类型的圆圈里实现圆圈颜色的对应，需要对特定id加入css代码支持，这里要注意类似的css代码在gulp压缩时会被合并导致有Bug，使用<code>！</code>排除<br>id对应css中的#,class对应.xxx<br>博客全部开发结束</p><h2 id="今天去学校学生证忘注册了-做事情能不能严谨一点">今天去学校学生证忘注册了，做事情能不能严谨一点！</h2>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>0319复试</title>
      <link href="/posts/3a4f3e4f/"/>
      <url>/posts/3a4f3e4f/</url>
      
        <content type="html"><![CDATA[<h2 id="其他">其他</h2><p><code>href=&quot;javascript:randomPost()&quot;</code>应该是随机文章的跳转<br>其实电脑上的AX201因为信号不好的原因，一直没发挥作用，应该是信号线没连好，只能用小米妙想一键热点连手机，曲线救国。<br>不是信号线没接好而是AX201在ax和ac模式，工作在160MHZ的36-48信道会出现断流。切换为64信道完美解决！<a href="https://www.wyr.me/post/683">参考文章</a><br><img src="https://files.catbox.moe/7ugg1q.png" alt=""><br>这个故事告诉我们，排查问题应该搜集足够多的资料多方面了解，建议先从简单的方向入手，再排查困难的方向。<br>如果自以为是没找对方向，只能是反向努力，白费功夫！<br>小米互传可以用设备互联里的文件管理代替。文件管理中直接打开的图片路径为<code>C:\Users\hge666\AppData\Roaming\MI\MiScreenShare\Edit</code>其余也是一样，建议定期清理垃圾。<br>其实我这手机照片质量真的非常清晰，有时间顺路的话可以多拍几张，定期备份到移动云盘。<br>能骑车尽量骑车，过好每一天</p><h2 id="复试">复试</h2><p>箭头方向即为w增大的方向，因为Nyquist曲线关于实轴对称，箭头方向相反，所以一般只绘制w从 0 变化至 +∞ 的Nyquist曲线，每次做完可用<code>matlab</code>验证<br>注意，同一个一阶电路中所有的电压或电流具有相同的时间常数。<br>1法拉(F) = 1×10^6微法(μF)=1000000微法(μF)<br>1微法(μF)=1X10^3纳法(nF)<br>1微法(μF)= 1×10^6皮法(pF)=1000000皮法(pF)法拉是一种国际单位制导出单位。<br>1ma=0.001a</p><h2 id="并联谐振和串联谐振及导纳">并联谐振和串联谐振及导纳</h2><p><img src="https://files.catbox.moe/ervflp.png" alt=""><br><img src="https://files.catbox.moe/lforcj.png" alt=""><br><a href="https://www.hxedu.com.cn/hxedu/w/inputVideo.do?qid=5a79a0187ba1a095017ba454141038be">RLC串并联谐振综合分析-6分20秒处</a></p><div class="video"><video controls preload><source src='https://yun.hgez6.top/api/raw/?path=/picbed/video/%E8%B0%90%E6%8C%AF%E7%BB%BC%E5%90%88_x264.mp4' type='video/mp4'>Your browser does not support the video tag.</video></div>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>专业课笔试0318整理</title>
      <link href="/posts/21e80f5c/"/>
      <url>/posts/21e80f5c/</url>
      
        <content type="html"><![CDATA[<h1 id="0318">0318</h1><p>博客UI 2.0版本基本更新完毕，接下来几天全力准备复试！</p><h2 id="p27正弦稳态-x264-mp4">P27正弦稳态_X264.mp4</h2><div class="video"><video controls preload><source src='https://yun.hgez6.top/api/raw/?path=/picbed/video/P27%E6%AD%A3%E5%BC%A6%E7%A8%B3%E6%80%81_x264.mp4' type='video/mp4'>Your browser does not support the video tag.</video></div>  <h2 id="功率计补充-264-mp4">功率计补充_×264.mp4</h2><div class="video"><video controls preload><source src='https://yun.hgez6.top/api/raw/?path=/picbed/video/%E5%8A%9F%E7%8E%87%E8%AE%A1%E8%A1%A5%E5%85%85_x264.mp4' type='video/mp4'>Your browser does not support the video tag.</video></div>  <h2 id="p35二-x264-mp4">P35二_x264.mp4</h2><div class="video"><video controls preload><source src='https://yun.hgez6.top/api/raw/?path=/picbed/video/P35%E4%BA%8C_x264.mp4' type='video/mp4'>Your browser does not support the video tag.</video></div>  <h2 id="功率因数-264-mp4">功率因数_×264.mp4</h2><div class="video"><video controls preload><source src='https://yun.hgez6.top/api/raw/?path=/picbed/video/%E5%8A%9F%E7%8E%87%E5%9B%A0%E6%95%B0_x264.mp4' type='video/mp4'>Your browser does not support the video tag.</video></div>  <h2 id="p32三-x264-mp4">P32三_x264.mp4</h2><div class="video"><video controls preload><source src='https://yun.hgez6.top/api/raw/?path=/picbed/video/P35%E4%BA%8C_x264.mp4' type='video/mp4'>Your browser does not support the video tag.</video></div>  ]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>网孔电流法和节点电压法的标准形式</title>
      <link href="/posts/770a6e80/"/>
      <url>/posts/770a6e80/</url>
      
        <content type="html"><![CDATA[<h1 id="网孔电流法">网孔电流法</h1><p>网孔电流法建议使用书上P56的标准形式做，用自电阻，互电阻的方法形成规范。</p><img src="/posts/770a6e80/1.jpg" class="">  <h2 id="视频分析">视频分析</h2><div class="video"><video controls preload><source src='https://yun.hgez6.top/api/raw/?path=/picbed/video/%E7%BD%91%E5%AD%94%E7%94%B5%E6%B5%81%E6%B3%95_x264.mp4' type='video/mp4'>Your browser does not support the video tag.</video></div> <h1 id="节点电压法">节点电压法</h1><img src="/posts/770a6e80/3.jpg" class="">  <img src="/posts/770a6e80/4.jpg" class="">  <h2 id="视频分析">视频分析</h2><div class="video"><video controls preload><source src='https://yun.hgez6.top/api/raw/?path=/picbed/video/%E8%8A%82%E7%82%B9%E7%94%B5%E5%8E%8B%E6%B3%95_x264.mp4' type='video/mp4'>Your browser does not support the video tag.</video></div> ]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>MNlocationD注意事项</title>
      <link href="/posts/809d28e0/"/>
      <url>/posts/809d28e0/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请再试试!" data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="b42370c5e153710923461330561c67bdf551f0c76acc2710469efc4d3f343190">34ce82c53332a8e46cda4bfc06ea3c7ebc1e1b251bf771480651869fea07ed3c0505d29f6224a77a76e29b1ce51e0a1cfaf34306ed5284398c21bc225b267db22b5344c9483b35804f4d126ae719f67658bc05b922889d5d6cc104df05c1882302c112c5bd276bf205a104b8d40b395f599e2168643bbf42efa2d0c39326ce5803361a4106e57b65537b84ba5e047039da97828daa1fc3cae0bcb1098d085a86ee4e3ae781f95d43932761b4801619719e024fb0ee91f5de79fa9e35a8cab9ee0ec2611af33bb206e1a4629a3fdcd58f2db337d45cb94f6b5f41bdc4cfcaa3c3ca06083a1d334f33431e737f4a45ea0d53f7b884849a6c5b62fc7e0b87b7229a48093a75f6291db430071c63454cd9c2d105ed8b240dad7f4fc6ab3d9c405540fa5d4da779af6118b7aa35b08339d145b084809c488c6483efb54254fc7acc3a2eac958df9c96b4ca92c054a3fd91503f8a334231226544f36b60af8f003ef66ea3b9a594e5e6bea6a4e07cb1323661231935cf2a96cf2b19512081d7fa56650f6336d15b2327c1b9d6ce951ba8de02dd8f8e300f09358110dfd097b8b6e43ecbe069aaeb18cf5dcf06534e0a9b1402b622e23e6fb57f3181b1756988a137c884a23af8f74f43b8a03bb73fadbf1c37865915694fb0db9c9ea65b6c0b48a777714e8ac716e71631ab60fdfdb4604846993d56c82b6e150498fa4d67701d14b9b9cae2794bbe781a7f4f18fe3aa9c3a56a6c2a147012dd57607495e5cc65da42afaacf2bce1d18fee2e0da0b1bd2a8217d78d9cd13bba2e8a245caf01d018b9cd958cc26a8fa8317e38d5ac44d50bd4d5b1d894002c7f762611616e47e83bc788a45620d6f4d278e998126e06739d203e79b1355cabac1d626d48ab8f44c615711c529aafd8e99173a9580bf600df815e6396748c85c3e9e916381d9b97a9273fa56d2dc473be2d8b550896d94e97080df2b7d19ccc0011f45561908865a50ac9fe7c3cc9e570a862f31afefc797c4608ebe26983899e0d753d9fd0f04623eb95227f66dc9377c97b7cc202db3b33110dadced2169a09729b99f493089e4f4bba0870dc069ed6e90a80af2e2bd85ae5fd94533c475fdcfc36341afa33d86836d98fd94ea95c9e95a90f9a83771435999ed41468e9c8ec1b011c61d48d27ed4b7dcb1f12edf1bdd2e707743df94c5e73a85ef502784b1d09394ca46f56047d9b6763986d693146c2d476a512b4ef6f2eba318e5bddc2bf4bfb00c36d8badde6d9f4207361e826eaf9c1951b653e1fe6a2542bb957ad37dcba7fff8371bde8082f4e6782695f48ef40a36b2652a284c5544891b892087762f774ed7ba144bd556d7cba34b27c48e5d1dff92e508ee5b4aee1219b168f6cbc4c31c2d24514eb582b87b50d878872802d1e2149d26dd5ce31d78c984cd960386d069698389f93a2ae5a9d9427bce9a926caba41ecbf9fd452f68a6ed9bb6cc9880e0071c08141abf6ca952855b098d80e0a218cdc5c946e64edbcb6a49c52492efcbc7cc3569bf9dd9245846f15a8162843a391d3566781f71c102215dbe43ce1348b97783995cba9977c8b1785f448683d50ebbc2e73aabb33059916fc4d5aac4c015b3ae89ec2e98dee28b4fa080b1a53fff8164b435f18f57fe79a9fa7b46d0d7748d401e00ea6e7f81f8825708dfce05eedba66d5d38af3c724a88501083bfb0a4e2aff72b95569de72e52cfb991d5b4ae965c6182580cb234af8fe61509540a20b3348fce701055c9def6f90e085307ba68573ff27851bf5d6552331e23b8a029bcae669c8e57b36645ce147a23b9b649bc7b7951228a388c6d5e106788c21159d47a29c2c1d4b2fe3e9b5eabbf063ae843519c956c54d980bf0c17010fe3b8e3a7d1cb61ed92950d1b4dc4330c9991fad0d92c03dd863d0d87bb95309bf8b31762adfb3ae13d7ed32157d0af5ac0619d1e3939aece62bffff347e0a6c1ed1c6eb54fd2b30ed0ca570d55cbe23f651cbcc747c7b5360674ef25c2fc1c56889352bbccf87b2f1246ef730be41a44acc66b9b2466a850e33280c2b726a39ece8205a5c6748cf8a9e4a99a91b72e9e308d123fa3b6ffced4f6dac52f955e6f773fa880a0819c9eef199061ee51e51cbf6cc7459ea4095e14945d2c990bcf271bc2bd3b7e50d7126a</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-blink">      <input class="hbe hbe-input-field hbe-input-field-blink" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-blink" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-blink" data-content="涉及个人信息，需要密码才能进入!">涉及个人信息，需要密码才能进入!</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>0315专业课题目</title>
      <link href="/posts/c193c6e1/"/>
      <url>/posts/c193c6e1/</url>
      
        <content type="html"><![CDATA[<h1 id="复试往年笔试p15">复试往年笔试P15</h1><div class="video"><video controls preload><source src='https://yun.hgez6.top/api/raw/?path=/picbed/video/%E5%A4%8D%E8%AF%95P15%E4%B8%891_x264.mp4' type='video/mp4'>Your browser does not support the video tag.</video></div>  <h2 id="勘误">勘误</h2><p>第一道题电流表出的有逻辑错误，不要再看！</p><h1 id="p17三道经典问题">P17三道经典问题</h1><div class="video"><video controls preload><source src='https://yun.hgez6.top/api/raw/?path=/picbed/video/%E5%A4%8D%E8%AF%95P17%E4%B8%89_x264.mp4' type='video/mp4'>Your browser does not support the video tag.</video></div>  <h1 id="p21第三道选择">P21第三道选择</h1><p>RLC串联电路中，R=4Ω，，感抗XL=6Ω，容抗X C=3Ω，电源电压u=70.7sin(314t+60°)V。求电路的复数阻抗Z，电流i，电压UR,UL,UC,功率因数cosφ，功率P.Q.S；<br>Z=R+j(XL-Xc)=4+j(6-3)=(4+j3)欧姆<br>I=U/|Z|=50/5=10A<br>UR=IR=10X4=40V<br>UL=IXL=10X6=60V<br>Uc=IXc=10X3=30V<br>cosφ=R/|z|=4/5=0.8<br>P=UIcosφ=50X10X0.8=400W<br>Q=UIsinφ=50X10X0.6=300Var<br>s=UI=50X10=500VA</p><h1 id="p16大题1">P16大题1</h1><p>对数幅频特性渐近线横坐标lgw中的w具体值可根据斜率求出。</p><h1 id="p26一">P26一</h1><div class="video"><video controls preload><source src='https://yun.hgez6.top/api/raw/?path=/picbed/video/P26-1.mp4' type='video/mp4'>Your browser does not support the video tag.</video></div> ]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>一阶环节典型题</title>
      <link href="/posts/ecbe53cd/"/>
      <url>/posts/ecbe53cd/</url>
      
        <content type="html"><![CDATA[<h1 id="rt">RT</h1><p>一阶系统温度计的经典题</p><div class="video"><video controls preload><source src='https://yun.hgez6.top/api/raw/?path=/picbed/video/%E4%B8%80%E9%98%B6%E7%B3%BB%E7%BB%9F%E5%85%B8%E5%9E%8B%E9%A2%98_x264.mp4' type='video/mp4'>Your browser does not support the video tag.</video></div>  ]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>0311日志</title>
      <link href="/posts/a027a72f/"/>
      <url>/posts/a027a72f/</url>
      
        <content type="html"><![CDATA[<h1 id="0311">0311</h1><p>今天电脑睡眠后按键鼠不亮屏幕，主机正常运转，按机箱上的重启键仍然不亮，后来重新插拔显卡DP线解决。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>自行车清洁剂</title>
      <link href="/posts/e8cddf9b/"/>
      <url>/posts/e8cddf9b/</url>
      
        <content type="html"><![CDATA[<h1 id="pdd买的清洁剂到了">PDD买的清洁剂到了</h1><p>用的时候建议把后轮拆下用，拆后轮时先拉起快拆杆，然后拧松快拆杆螺母，抬起后变把链条放下后轮即可自动脱落<br>把后轮靠在树旁，垂直方向喷清洁剂，清洁剂会脱落污垢，不要用刷子刷，刷子反而刷不干净。<br>污垢的黑水会随着重力脱落，所以最好是在竖直方向操作，不然白搞</p><h1 id="关于快拆杆">关于快拆杆</h1><p>快拆杆安装的时候一头螺丝不要拧太紧，如果拧太紧扭矩过大，杆子就不好拉，下次就难拆了<br>可以拉的杆子在-180°角才算完全放松，完全放松时，拉的杆子和杆子向左呈现90°，不要没完全放松就去放松螺丝</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>自行车内外胎更换及其修补</title>
      <link href="/posts/44e28e46/"/>
      <url>/posts/44e28e46/</url>
      
        <content type="html"><![CDATA[<h2 id="起因">起因</h2><p>最近三天内胎破了三次，而且位置接近。所以今天买了条内胎打算自己换。<br>结果发现送的黑色翘胎棒子太软，翘外胎容易断，于是让专业修车师傅更换。<br>这个修车师傅非常专业，与前两个把车放倒后直接翘外胎不同，他做了如下步骤值得我学习：</p><h1 id="换内胎步骤">换内胎步骤</h1><ol><li><div class='checkbox plus green checked'><input type="checkbox" checked="checked"/>            <p>首先拉卡活拆杆转动一下，然后拆下活拆杆对面的螺丝，拿下杆子和自带的弹簧，顺着变速器卸下后轮，在户外建议先拍照片以免忘记了后变速器理线情况</p>            </div></li><li>卸下后轮后，检查外胎，外胎有多处被铁屑和类似钉子的物体扎进去。</li></ol><img src="/posts/44e28e46/1.jpg" class=""><ol start="3"><li><div class="tip key"><p>依次拔出外胎扎进去的所有不明物体！</p></div></li><li>把新的内胎放进去有个气嘴可以固定，或者修补旧的内胎。</li><li>装后轮，后轮齿轮挡位可以先不卡的很准确，提起后轮前向转动变速器会自动卡位。</li></ol><h1 id="补内胎步骤">补内胎步骤</h1><p>前三步相同，不同的是把内胎取出后，先用迷你打气筒打满气，听声音或者用排空气法再阳光下观察。<br>找到小洞，用手按住，如果不继续漏气则只有一个破洞。</p><img src="/posts/44e28e46/2.jpg" class=""> <img src="/posts/44e28e46/3.jpg" class="">  <p>准备修补，<br>2. 如何拆卸内胎<br>放气，并将气嘴向上推入轮胎内部，如果需要更换内胎的话，则拧下气嘴上的固定环（美嘴可以忽略这步）。<br>使用两根撬胎棒，间距大约10-15cm，以便把胎珠从轮框钩里拉出<br>在和气嘴相对应的车轮侧面，用撬胎棒插入轮胎和轮框之间并固定，间隔大约5cm插入第二根。让轮胎的边缘从轮框上脱落。然后继续以上动作并最终让整个外胎都从轮框上脱离，之后把内胎拉出来。<br>抓住胎边，用力向下拉扯一般就可以拆下外胎<br>如果你要把外胎拆卸下来的话，在完成上边的工作后，大部分只需要用手就可以完成，除非真的非常紧。<br>3. 如何在内胎上找到漏洞<br>用你的嘴唇靠近内胎感受气流<br>在内台上听漏气的位置。如果你已经很努力的听依然听不到，那么可以试着用嘴唇靠近内胎顶部，逐步寻找。<br>如果依然找不到，那么你需要一盆水，把内胎逐步侵入水中，直到找到漏气的位置。在继续下一步之前，无比让内胎保持干燥。<br>4. 如何对内胎上的漏洞进行修补<br>选择一个大小合适的补胎片，如果不确定用多大合适，那么应该选择相对大一些的补胎片。<br>在破损周围打磨以帮助粘附<br>用砂纸打磨破洞周围的胎面，并内胎上的成型痕迹比如合模线线等都完全变平，至少不要那么尖锐，因为这些有可能会导致粘贴出现问题。最后把打磨的橡胶碎末等全部清理干净，确保表面干净。<br>如果你使用的是免胶补胎片，就可以在清洁破损周围后进行粘合了<br>如果你使用的是免胶水的补胎片，那么你就可以开始贴上补胎片了。让补胎片和内胎完全接触，并按压一会。<br>如果你使用的是胶水+补胎片的组合，首先将适量的胶水涂抹在漏洞的位置上，然后以漏洞为中心，想周围涂抹开来，面积比你的补胎片稍微大一些。然后等待胶水变干。当胶水干燥时，表面会从闪亮变成无光泽。这需要一点耐心，不要过于着急进行下一步。<br>5. 如何修补内胎<br>让胶水干燥到亚光色的时候再进行补胎片的粘合<br>取下补胎片背部的锡箔纸，也可能是别的什么，让后把补胎片牢固的按压到位。<br>确保整个补胎片都和内胎完全接触<br>整个过程，修补面的清洁都是很重要的。如果补胎片上有一层薄薄的玻璃纸，可以把它留在上边，或者等胶水彻底干燥后把它撕掉也可以。最好用滑石粉或者粉末什么的涂抹在补胎片周围一些，以防和外胎内部粘合在一起。<br>6. 检查轮胎内部和胎垫<br>彻底检查外胎的内外还有没有其他导致扎胎的异物存在<br>再重新安装内胎之前，你应该彻底的再对外胎的内部进行再三的检查，没有什么比刚补好的胎只用了几分钟就又被遗漏的异物再次刺穿更让人郁闷了。<br>确保胎垫完全覆盖了辐条孔，并且没有出现破损<br>检查胎垫也是一种好习惯。如果硬质的塑料胎垫被撕裂，就会留下锋利的边缘，可以轻易的割破内胎。同样，如果你的胎垫偏移，则可能让辐条楼露出，也可能会导致内胎再次被挤破或者扎破。<br>如果你的内胎经常在内侧出现问题，那么就请尝试换一卷更好的比如织物类的胎垫来用。</p><ol start="7"><li>如何安装外胎</li></ol><p>在彻底的维修好内胎以后，就把外胎重新固定在轮框上了。</p><p>用拇指把轮胎推回到轮框内，注意不要压到内胎</p><p>在把内胎安装上之前，你应该先把气嘴插入到轮框的气嘴孔上，然后再把整条内胎塞入到外胎里，这一步可以给内胎稍微打一点气，可以让内胎更容易贴服，也不容易造成拗劲。</p><p>从轮框的另一侧开始逐步把轮胎压入到轮框内，直到最后剩下一小段。</p><p>把最起向上推入外胎内部，然后用拇指或者手掌的指关节处向上继续把轮胎推入到轮框。</p><p>如果你的轮胎特别的紧，也尽力避免去用撬胎棒把最后部分的外胎推到轮框上，因为这会有非常大的几率会夹到内胎。</p><p>如果遇到这种情况，你可以给两边的轮胎放松一下，并往没有安装上的那部分位置移动一下，并找一副手套，可以是骑行手套，用指关节末端把轮胎往上推，这可能会需要一些练习，不过即使是最顽固的轮胎，也可以用这种方法把它安装上。</p><ol start="8"><li>做最后的检查</li></ol><p>把轮胎安装到位后，再次确认外胎没有夹到内胎</p><p>通过围绕轮胎边缘来检查，在安装外胎时，内胎是否被夹在了轮胎和轮框之间。</p><p>如果被夹住，试着“按摩”揉搓一下外胎让它回到正确的位置。少量的充气并放气也能帮助它回到应该的位置。</p><p>给轮胎充气，却确认胎线已经全部安装到位</p><p>在达到建议胎压的情况下，再次检查轮胎的边缘是否均匀，胎线是否完全被顶起。</p><p>修复内胎的一些小技巧：</p><p>把内胎从外胎中取出时，注意内胎在车轮的上的方向。一旦找到被刺异物在外胎上的位置后，这将有助于你快速找到内胎上的漏洞。<br>一旦你找到了内胎上的漏洞，用笔或者其他很么做个记号，这样你就能在以后准确的找到它。<br>如果你没有砂纸，可以尝试用石头或者在路面上摩擦来稍微使内胎变得粗糙。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>WPS空行无法删除的问题</title>
      <link href="/posts/28a2607c/"/>
      <url>/posts/28a2607c/</url>
      
        <content type="html"><![CDATA[<p>写论文的时候发现有几行莫名奇妙的空行，而且无法删除。引用那里显示格式为尾注/脚注文本。<br>这种情况是论文引用格式问题，删除当前论文引用的上标，对应的空行会自动删除。<br>论文引用先打<code>[1]</code>再使用 <kbd>CTRL</kbd> + <kbd>D</kbd>快捷键调出对话框，选择上标，就不会有空行的问题。<br>论文章节下面空两行，要用五号宋体；写论文专用名词要统一。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>考研复试准备</title>
      <link href="/posts/add1dbe7/"/>
      <url>/posts/add1dbe7/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="仅大鸟本人可访问!" data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="ff6f5f616e85567c9100df6aaf0cde3d70297849edc77fef51ab5422f1bdad0d">469f4c5c3423a3923ee7c30fed0dae65ab8778079e6a2dc8d53f7e1fe1a4c4af52216f91f3bae6222d33148f903f354983e0d0c22bbd997f9c4e16c2a97b8b214b3d8159f4440fa7addd8362dc447cd4cdfb861064bac6b705dafcf131499585818101e6bcd7f927d13ae483f4f2317767ab750669cad2369572dc362382e683309a39b0d12f9270dceefba68811cf34325eaf4c96f49e65068e8ff9702807fff8ac0bbc690ada107ad832834001703f315d24afa4a3ef19723e10fd810ce8775cad90bdbc45ac919774189b9ce36acfd18cc82a67c46d83beed6b193b59c952c85e157da20299019501a82acc1eea0e4fa05f16eaa33c3f27317af9abd791a9756e85fd13f6be35c2754f120b67d8c340ddafb112933ec5c295e2bdaae57a72019e3dae15455ea516a5fe174c69d10119a367b6ceb6dc19ba485943dedb535fb7adf3cfdb2d3525ca515227b35f017751b352e47553fb330802cf201507800da11846bbab27f61426c963600fb4d312b850e703555b061f4466a7b617bcf0688183b386460c632b027793201348547d92cad4b636af1239d9f3d2d7521ae9362f223672b0ccd58f29764876a6ecb26d1e2a882dea315ec2d9bb8b1463fb1c168af995750f30ef84b99338064091ffde5d41bb5455137d529e9645336c62a8dbe4b5d9b337ef7800d97343333a69e1b877e9ac269fbe5ed59bdd331e881325f9d56f46b0c25ad60f81dd2739d779b057ef28d5675f3dcb486cca4f0bcd9d8040556206adee2485085ecda99e90d5b4013a14f534da9ca7bc60fa87d36de91eeb782dba3d84567e4f28d463612abf45a7c58809c61e70d59ca302cdf30793fb916fd73893d3e1af9b830e8aaa43458a7ea6d9d5f59417e0fce3e23afa4cfc1d79a7704719f8a9ac5e48b3ae8d148ada10a64e6e9f6167a0f53a51f28718bd3958d39ee093d57fae7a6d64f8976fb9e6d82d8471750c914f365d7a799886b2ba2c8e9930468844eee88e04c076efc6f17a482c39029659a12e0b15846baab6384d2b558ba9a0637817969f2513cd3bbefc7de1b0f63651f5a4a71b0b52532eaba559493a6290b9c5a258805d10d6d991f897efc53490c8c71c353062d68246279efea3f4dce882ba4004b34f29a784d8e9749f6acfd5c211324b2a4e9e135c1734da6f9be48f220cc721e105d7bf84270aa4ea7ca9bce91e31971bf567756b4e5cd3658495fef4a4cd5e4c7ba7cf2ef2b670fa4f4e87c14b5f2952812e0fb7917397561e4060dc5c4ecd1cf1325afc0f429cbc53fd38a411f7bad5ff01fb1454f440dbd27111fa250be5da252020b799e8e7355ebad9a0b9299f313c324804b01afb6e6782e91d31ad397925ca340e5ba96b1f6d930443e2b4d9787fd9d7da961626d1a08e8ba1eb9665e36e72e5be2dceeb94df15544f49c4dd2cdd49131555109dc730193428bbf29d4d5c1ada1b091e8ff395835def8e097c569b2a18e3076430b3c880c737cb5cef9268f317d02bf2a91e11ac775a0caa21a5f3efe9a49d7b92e86278dc7b753b97d5e4e6426a2094b79875c656399a1507280c7ba853031e267e0ba3d97b5bd7f8d3517d5c07909d0135e538c919455f24c0139ec7fad11cbe08c41e6599446f054794edb287ad1139ef07f463ae490f04319f28c1f19dc7e3c51d039b60cdaed9295a2fa7fd28b38293184735b06006505a1d1a8202c4fb28674d22088e68d6860d2a06fbd59a2f45193388a1cad0d7c3550614d77e022d2da1f9849f0b7cec8e72f1d73892e408fa166b65b23ad5975010bfe25903d00db7099f737c55346ef6daef40197a0af2b81a39c30d8e166cb637fb7cb4780c42f99c1349c025875e426b1de779e8533f11e7a1aa4d7b2305510f981e2a3cef174ebb510e90f0cf8a7228def67ec1d58f12d36ff6a098fd392d03483a8b4ef62213c4a29401008207a6a94d321347bbe92c47e93aca53dd9d7e4742d925e8fbd55e5e396ea19ffed45b64a419d321bd3c78cd5c7f803223b20d370ce3509c429abc02849792fbe672f2c50bc48c5f86e87d3cc0cd6e07c996ded06b3c694ef71aad0c3c318eafd9929af314f454862ccc4db3fc2b498df01117ec1f89442fd729d227d0afa968d323161249df1f7d6b7c8468b88c083b4da64983eed9f8ec6900ee7b39e7ae1218a036900b7373df303040e7cc85190abe22c167ca70e0d7baf96aeaf907bb7881d697e0df71f109b98b3260518cb0ea295ceaa5886c2316b417acf4e0c4ef9b4349eac3a80060bedd55dc6128cc7d8b63d539c1f9fdceb0e7947178c8db652cabc56262626d7381ef81dc28e87602e74531ceda4d0d992a8651302f0c2be34280c71e4c684dfe2b40240f32e2be0b8148b4217c56868e4d697fca4c26d13c06e1528007cee7bde5e02528635f135b463dc6bd55a99437912c3e62bee3e8b84c1abba32eda910b3bc56fa065ee70ffaa076784321320971256d48fc2259275951682a6e5c967444dc5d584329b9a639552f843dbb8980b13312a63ce296b319287458e5f426f92faeb9f0305ecf18e9a0ebc7ae0c5637380a06ed86eb370f5c4b0833dba83bc380b5ef98edc49470a87bf6ec934f2519bb6bbd9b9bccfe610a4e84d2b1c260ebf1188d682fef43115405c06b444549c9bb444683fc4379a563b4df5bfcb401ff7ad556159d29391c6340edb77f06fed35360b25cc162c537ba0917429ea4924b6275f6c152878b8a18549b91f1813d281abd14ccfe4359ecb01f943cf1d86364d099c5a59ad8d5b87272f1ec742c36ca1ee13a80163e364ead98cf168dff8a4e7d0a666a4781ed2221ac6e0440a9bda2834c7dc0e6a8805ace1d3d75ff605912128a0eaa282da0e52a49e0d64c7f0e88c2d65530c2187e9ff20286b0d37684d83084d4026784b0c294123d2b87183b50323d2769f93886cc34fdb92bad7260e9ff53d25b949e1aad8d32eac00f151885ad7166a3262e704f877251951d1640f73ea62d66a04dea5d46ecc039c944482482c4697674b4e74df355345f4228f0162f78eafd911a159a88669a6659e59b516c9bb095b7c5ef44e4c28535be5e2b4112f9e37217f252de6435655585322653c2194fd102d97a446fa2fe783f79d6abb2bbcf3f9f1201c2be4bae24b48c42861e4a13344b452b398d40d3eb03512126b6915663b47486a5393a322c6988536fa5336d8f225a091f6a0fc66120612bf20c065c639046c80119b3aa70baab7ee85257492acaeda48f77c85999fedb5e6ebbbecb99eebf720569297c580774eba289c076bb53be407c73f53811fe43e63399d321cee6a7e093879c2642ab28a26bc7559a912a47b9e178856f7507aae6dfd1f0f7f42b9fce03b68623f63e71093f15c1a85759976a36fad37e549e1e8652efaa2923a16528ea609a8e6472dd5a9e752202bac0671e429df9fc8629329d2842833ac320880ef414e228eeb206d3d396bc3303898825404005c6a69481f2eca9febbbe49f31aeb5dfd17f406f4cc658bd06390008957dec3585179eea0e01113b9b68ae18874910288e4e846c95fb2159ad0c1ea96c2a5dd88a65e9f28fe3316a8476105fc6f1c4238debcaad65a92ce1fcb0b20449f7fd8b5f062a6cf9161ccffd8a870d96029ccad2c2542bcb007d2979bb40f51fa08dab8c7d7d6bcdc3c9009e9dc7c65f75383a7e065f330717217d042cf74aa1c5124f94fca538f46184e6da0ddaba9563ecf937e43d6c6ec718272f1cbca4d8995e64546ce6ddcc43f99667ed938c191c235779f61b54e3d3400a1c79bfe410f0841dd8ed18961098e0d075896bd037e8e763404e545825665545cfe1c4930e1063d41440e090560b9b6c2778b091c1d0f9eebc2366e5d2b9d81e458282203a42615f833d05acc28e14a8fdd0f1a26cb08b8721a50bcf6974b0f6f68dc13e679af19803d870c971235a89985ea92218779ca9cc2f13b4a41377c81230dd3e79fe7b01d84cfa213a491dd8e8027ae7986ef2bd616a02353300c861fe69d70d08b46f6dbbc2a6a54d0d73c6d4f34e5a5092eb6c42b59e2e91656a27502c5b18cc743fed6d2b5e58c16b18134844ac1a5f5b78942e70fca3c02f453e766837e97e68960337e464a995403e7d83329b41409da2f750f7014889b655b60147a77af938f69ef75963f372e2ba339f3d760077d61d9c57818c0c83d754ddfdea4769b19c6987e51accc40d191604bc7e646c9e51e60ba05f47c67115ca8dba730e875a800fd586105226071747f15de48b24b20fa4a5f8382bb1b3d79aae0e6c00d604804ad2271001989a94c4b5442fdbe6a5d045dc673e0d5db55e01580115d8519d66316742186b2e8a2dadd52ac1a94d9977584a41379fef5124ea5f8646999e5ae520f228f29c01802fe00d24c19f8a7c300ea62cb530a7f1d87e50e6d36891baeb4cfe737a45b6629822969cf636a3fce938e53350789d32571e4cd929f128332c28c4dcf9c2caf1492eed24166b3230e5fe1ebc494dd6742ae51cb0f83f51081cf575cbe899abd9b61229db58cd694f2401e89f59a7c48d0e8823894b5faf5e5d3cc53cbf0b3eb4fb460b257dc9deae3779de6ddf2b1413012cb73f9a930a7f0c3134a821fb6dbadcadbe07f8bb2e29c361d7de9c2ff4d5481db1b012a1b37a1e71f24a90c636da0e52eac1cb1b9363256e819f2145c1fd1b1bc0039e06e80ad389c4f01fe11e06059d171ffd5c5e9d273c91edcc35923c9b4fbc2154328ef4367412b2461f72ca4939ab055d153db33a5b4508d7b24f68d68ceffe917fc1c2f0d00612dae2fa446e2d9f7edbc73da823274c6625abe4dfe708d6cfb5bfe02880b155692dd9ba6b95dfe88a7252a24c75744d8f744e20325ddfff2c24129833fdb98d5beab47c726d10c4798414d86e06d7480da60c4ebcfef4cdddddd69248a8fce2ddb05463b002b3de419e4f3d7db898bbe92a955e84a23dbd5029e1407f12e1066ba8b62100d7dd2df40aed6a8b20497b84ffc0b99ff094e53f8ac0813550f8c31328d3397d912d37730d31669fb6251a5d52ab326e33b6ff6ee7760bddd3f68c057302a1c9dc1f20f1755af8cd4bbb9e36f37e6bece3146fb6846f5ee10d867e17221707421d46ec8f2b893ac7a59baca10040353938a17e9fe911d81f3c70d6cf91f84ebdbed5a96d16a65ed3c6244ec1ed6e3c5eea88b8d275fc6705e0c84a14b697bd9128c44a1b7b7bdd420eccc4721b7edbe10d9c88f222a598d775a3401ca8d1cadd6e57ac69dcbbfdb7bddbba594a5dee4288733960f11769dbcc89d5a05853316a12a90798d47b42de52f01d9c675949abdfe4fc732db08e4f0d212cf761d56ee3eb6be0e16cccd796ef8e372e8c13aec9fa90e6ea53a4d04282cff3a147e72bdbb5fd33a8cab2c0d34c9fa06b073987206751e417814a9fd848e0f1a36c63fd86f17c2b993ce7c1f8de53d3023f1d0d9c09d0cb3cbb851f1e7dda64176433754efbd86767bf55b13397805105e8476a7c7bf5a245656715d84d4ad228e4d3b55e211c4b1073c28de01c0790bfde8ade401e4cdb0259eae170eb98d3dfef5ec39b31ae16270b436ea995f8ef4a18559f3db3fec35cfbd77b2f5067d4b871b8b9cec695c011fe6b1dc25df748a88fec58014ac046abaa815d2ed27e9160bd44b7d73204087a278579947fc0a2a3f1161cb16c191e24b10986d931b95b948d3f38a80b79df6c13aed05ac772b860bde453e78931d8d6c177d14e91cac5fd7975960d672a334daa991df475f935d4d0361ba87159d48c25d45a9e98b9510448fdc6c4dcbcb83e47fc2393d2822ddd959eb788949e899c3a9ca0137f75d15b4c06acf6e46e7f1f61313536f857546c05ba51bc83d33a51515b5effbf4de1a59368e456f7dbeab2a374779f43d1bccf61bbe02830ebd14ebe1df74b5c0147829be30a55c79d4991ef18ccb3d965fa5171541217ec290627d3e56d660628a928daabd2740b0e8ea421f3fe7ab4bd981749a28dc19914ea95bc5324dd40792ddefcb1916ede92878288675c556e8f1fb2e334bd61f2cacdee020429b37e8cf39a3c3b5571acc8a8c9fe5a568ab78870a4b5fd6e0ade022bfb11c53ff21f003a135592c4d57228b1f4e986bd96e000cdf74115b8624df67cc61be80c1e77cfd0098da1e25ef9105544efa0b2dd844a930e53e323e464cd4e5944e947ef0f4fd10976e95cef9be6fa0f2c425113e7b5b3ef72828875480e0c5c7e0109bcef7d92f90006550120bb08ef3a49e4c6878529e0f4220772302546f900ca9d3d956100d4b1959880534b2c69db2b90972c67e454483681469d3440d75fbe40589484a987e90af4aa05e593e33e5904b8f1d4100c337ad88159da723bc15f0274079f127755f8b43ba905641b57a8f6fd463a2ea34cff625fd754f9f0118f1f20fa4449d0d9b746ccd7497f87bc90c011541150e50d447c75205a0280e85449a514699ac04025d77324015b6470ab08da0253732e993a299344be6eae69a762a94a553da9cbf65754c4b03d3a5f7e93fd60c3da83dbfb985a59444c8a10bf85fbe063f556952943b822a072560d5f83a08c264ae801fa65b35a68d91c1939cf3be6691f81ee10253a58c8de74fec63307b195327e0f8d13680845d33b3ca0ced0f09e1df2e8f805d21b1108a513319cad3a8626b923fd2f1aeb91de8acf1a4a815cd9699c26c335d3e9901aa5356e89ef0d78a1286f4b58dcf706878fec59cb51b5e3d28da32a41a0d212682b6e39914fb335b392dc7ee00aab5a62cd6f9e9605d1c8593b409c42dbead2f0677144b5b149434e1df9ea502fcc0722b90f9b34bac561dbbbd3b57e35e998f9e3ce574b60cf20b6a070db9b68e5894421cd4f00cd7505dfb63fb16e3b8054ab91abab00a427599a4895f964d62d11c0db7f68f458fdbb16274bd38b78723ef6561bd9699b4aa2a37cd1d75ade809d85a9098add27b943958b361ea2539e248b3ea76263562ef96a5f986ce39a8934e850715703b9ab92482280eeced339614162be9e3cf3466f9c894fe1fe5ebc43daeb3a239fd5935e0109420124fb76d6598de8b7873551baea0540030753e816e6098499cd2d110d6c18a6d14bd58beb8788b5a03d5f7fa3bb138e7d1b3040239c390ff944e05804fa2ff0aa79b8daacc959d2b872c28328f9c7c2b7cc260cbb5faa7799da3c06d6ada135905b4883440a21d79ee6179f2491e8e841095ab2d171d65bdf6a0ac05ca58aeca1fa3205b897098c8c32f7929259f5ac057028de8d324590a0b68e3a01648ec443cf272d8ef28f3007ad7eaefcda0bc82c7a57159e45847b59560fbfe2efe0abad652e80618b4812ea05b5d2b54bd75897b79f3e0c50e1e361c4caaa026cb88051a83296282c1fe01c60974a275e28bada6172634a7459b2912bb8e7f1c7811d9a0032c216202c011ba5b55f8a0f4f99eac7e106aeb5263497c25f5dbd95078e116f24b818a9827913375142bc1d7cbb589b0880ca9de45e935ae7ac22f9d21dbe960cee91dacd8ad2dc405b14edf457e79210bc4640101de0cf6e5bc18223f0e871306edd13d32856286258a5851fc23022a1bfb65265dfa3a3d1d2ee075ac484eb50361fb8b3452c2722bd491c89f16971adba519927c5924c82cb7cd35e47cb8bbd3d66e40673824fbdbf9319d690e521dafaf8b441f0d9859714bcac28eb938a59e0366140d3de11a2c9513c00751307a53eee9bbde316b83333ff3ad55f1a8753adfbe9e5e9fb3d38a68f903a989baeb6781e2cc606e1c90ffaf5ff6c78a5eb036a67fb1cb951e08ce9055af41e6c699fac5049b4731a83de1fddb531cc5de8ef7f5bb857094972f1d0b7d30c22f0390afc97edaac0695fad18083c53d0cfd6c8570d7f533d83418dc4be832a0ee1bc3d17d79c4c9d7ca031c6d7f2ab82a1eb99781aaa2329d61bd285ad5aecbb812cb2ff384e9251cfde30df9c6bce1fd9c0458035180c62933b93319f52479ed907ac3d0cb54171cf656864b34391d01be445e639e7a4e97837910abe87875fe3171f4280b2dd73de12a8c42c92aab6bf09c887ed380503432944e5c1cf2e28397b49015f51ee557b9ef42c1b253e5b4251254e7538a29cf960abc1a3bfda7e0c82c1110b627f98cdeb78b88339bb3c8ae9d6a1409b0138eb47d54fd7ed3ede9d57dcfd34e6f195f3761763b614b1f6ec55e4cd23b7abc190750aa22251e9b30beb9b6b4d0bc5fac0617b62698ab789d60c3464e8d08d3a844173ee2d40152477180a71e89d7caae491e8aa1cdc8a391f5a42927420e80930b2cf16cf4d44c3425d16071ac0621e1f338f201a5c9a48713476f06fd4137c948a2c5d45c329f3c8e261d31d8dbc305c8aed6bf4e981d5fd1f1272ee9fe7195cadf422303fc65759a1aa40e54169c2c24499c2f96f1c796741634c4888a6b07f02dc6ebb05a83e494f6a5a502bfc9f2a21c19322740d19b5c7cb275943983fc817a125d5335003a7fbea32f19f32b83285e8c08698fa6037a2802e8d3601ea05e99b1af10dfd6ffe92afcef92bf283fe422c53232f81dc2e0d0b976e9c3995f09ef98fde645f5cf89b26dc89f867436593226875f445d48cfb534797bcb4249e105082974c1689dd7b53fee738a97a804cd5dcc97aeb4e7758eb5f3e3cfabc56baa1b5bfb9bc453da1dc37535166def865371a0f39bd98cad129b6ffd055b0ade2167b461dbd9b195a62fd07d40ac3775001a6798c274a24b618bfec3bb2ddb24050e47cc941a0f0c193e6ced802d365f5f1104cb0950ad57aae17a6dde104c4da47cf51da653ac24a0e42a819b4cef23cf910deef4558e9abd4aa84b7ea3ee10b5ab553721c291a2f54f9d0cad5de2e86b3102d70840ee5578fccc56740f5acbdecd9eae34705702558b89e2c22ef26f925108b487209204826a17df46d2f4ed7cb39d4e0d60313e7e6b13b5fd397eae796537c53abe9ddbb2626a86315d318a918d383b5f187898f41b852fee1c537cba2a659918bf0b1e2c1e532ee3bb815429fe08dcf47fa086027a38e0e0fce8416bca2a406ed98987b9c3287e755ec0ad9e4e6393dafbd32e5f7e5ffcb43b93b2134cf1aafe99446128ec5e20271ec0cad56472277bf5eb12fc670be202ac91e5a0d614ab8b40fda0ef70a656a43490f4f4a9a9538413edc8e031e8b2d3c4e485999a734b30c018a4f6f9a4c56dc6524c8ed8ea3d8b5a3d126f6b4458da81a4bf0bc624e4215d88e335f9b9e8ae277c8356957428fb82003a5b72fbac320980e42d918e01e4b12c1e69ca984746b0ed692e9d046d43c90a87c757a7ab7756beb135235d351fd6ce4dfdeea0344a4b7df4a4a8f66bafde1a8af69e5cff6e5b00fe1403b103dbbcbfc2a8e0bcfe9303b6859e8b29140e4560a402b3f4067753fb8598dc0dea020c34a41461221b182961231bc1c65cd6e5584aea5cc7a6b4e9cd67b3b12a62d6ee38917a51f0447fb7c01f2297e1e1ff8eef5fef12d254a597ef872ef32f28cb2bc24f10fd1b5dc62433468d0c7658e4c0588c15410bae82431d07c1ac7910097000ada7d858cfd5b309cd47c3f1cd8f13886541b2159f64200d96e8446281713de182eb0eff02cbd45e9ed85712e31f8bab5689c5e77c58923e451a2c3243b6d226ed3cf1e29c3df12956f08d512e2ff43abd09800f3376825c7a61a0ded477e2fab5770d48efec267ba95b7b5a1ae90b348538006a44930da84e4f4620cf1d6ce2ea912ccdc1ff103d3805bbd1b5efa4ffc00c9b5d716d27c860d0559bf37e3b5525e7ffecbe9fd38d560390bd3010f10829bac3209c28598fcdda5d942d577fec559530cd1ace16b019cf9b6125354079ad94498428e42c11802460c7aeddf97593a663205934cabc4636eb0bb3131a3866cb2dee04c370a968099afa6b885ae03258db47cdd0f43592ec499a3efa9ca99db07ce986c72533bbb21f8ca01d256d411de19ed30402a7ae055ad8c2ab6085e6f3a2ccd51b2ef200843ed8d7b40adee188b2b43fed72afb351dd6677da9e7dc9595f3e64709bdd9ebdd9d4b941eab78eacf585e031603f4bc494dae1dd36cc93ea93fe5e6da1db9969ad2cdde92a46a53c0381084c885a02ba828faec53f9388316c954da80fc0fc6e09203b7455a9de4f7f961b817d3c31389c8c148b0620f1bea9aa2ae05431859f9871f1b6da9284efebc4aa2ee7151f019b4dd914c0a93be7a1024fec5417cceca65111218d2ceac4630577224edddbb8d53422f030e2f93140ea4fe1800d9cc4dbbf934006fd2a20bf19cd66218708b4ef2201e959adf74ae09d762bf52a6810df9f7fef0c2df526a34b3421798741040939e09219c2fde1e3dca23ac3dd76c776dee925088f410e6cfee668fe905d5a8c1b818b3f55ed0d50b5c6c4cd6ef17eb3338aa5bb4aebe5bc0fcd37406d3d315d3ff2b4c24b3071e7469ca0a6e4bf23597c5ebc8be0dce2b69d2293c1b6cb29118acde5e6ffe2f47e349ac3e552beb9d40ba8f58ce3045ff3aee9bed88a514a911dfbfb204e1714d80682661d16474b83e2f6c8accdb324482804376957c05bc80889bf71bc2e26bb33d5a332fe299b8b568678e02090035349df53d5f42fcee2f127ee07a46526e9c2cc4361325a10fcec5058077e00bf4cd1e3f3708815af3f3890d97940ac9f256e175c3c33d68dd7c65dc4b87cffd32952efca2a07e4905f81b23b0d65c4a5c176c962b7ed411c31914b1528938e1bebab8280deeeea5deb19d98bdc5c7c98d97ae5ab9bff45e510204f8079dc665c00abd9f12af354b48d418a0f401ccfd5183eac036402c82c71f21115ff612ca7dd779a74902a89199cf9da3177ca56a43a7d185f04b2fa563150b7dda0df306e9fd31709a12a5b636231d9d1b06fc149e58178019b43a50b74a0b8dad3349775354ce143e1f14093fa8c50c04c87792b1c0ca87bb197df295d6ede11f84665dc725d9c0e36ab3fc6dbb0df495c99e73fee41bae6ddaf36bc7c7b9e2daad6f14b248dcf06673352953eb25b508a0cb655f28cbf8d72c92538ebc14091bb15cdc0710a7fb268e3330f282a11e8cde6220fdadb46edc97dc6eb823b6718a362abce12afcebbbe0dd003222cc098642bb91acdbcf3fe908e6f5ab8787712b381426e4ed8a384885d28de8ba79272e5ccbac096588c9291d4fa4b634237709a2fbf59bcafdd19945c587644030c489a691acec8b3116ef283ec0f8bdc8599cacf0a055017849471bf4b08c808709529744d2297caa11018af2dc71be298ada3d986113783026df9199809c97c67ce4bf83e5ac2db8841f550f1865152102375c5caa0b99e1e253850e927798d10d5a052fefb55fb91844813c1551553137b62b71e34009e61ae98961cdd002d49bc45bf926dcada6a05bbce8864a8691c97c93ea3f0b83a6ab83c1cbc06d0c59bd9e5c0018605c79aecb7402b5cb44f897c444793f76d99af5ac3aa700abada6706bf20e32f87c467bbad562e90473da718b8e59cd0939219381f4a69260bfe9801ac235e4db6da723a62a24efa0f0a0939b1867eb820b7d0bddd963c30714f73f08e7d6f82794869f12725a0847178904b4f226d6951a824b5eccb79bc5e5b06701f2f674d5350be786e5f44ad49e1f68b807ea8923a251979397b74cb18922a7ed93e031f830626abb0338e43074ccf8de8080124d65820e3f96dd623a24d3436f68f2ddc1c54ca12315f86a0c6bd3b8242c64f204738a9f5eb649b0be80760eee8043ad0007fe3804da767e504fb81347865419c316419ff859e0162efdbc5365adf61f51aab690f43b83c36894c44a974c8aba7bb9f34820a091d6db48d8d9a7a82d7e7653d5c8e027fcccf703a59a2a523606d2ad1d487ffee81c1ba52224e8aa6a6d2a76f041b779a8ce5bfdccbf84dfd6986d8bf9b678ec0d24195005325f15400b73190daa8a4492873cd8ff84249ca183b05eb4ebc473f3a591d65507114708a6cf508357b398d26b5c5adea5b86f2496e0046dbb433308cbb64844b9288b737638fdf8ff6090d4f5d223b5871c2600a6ffe25a2e73eb4a51e9d94e7b97cfce630262080588b69c2f0c165bb831945d5ffcc9fec207019c9dcb7e4f9fd310e0e3a11193ea13805fe2aa8d7e3353ba29b192716533ea97a042ebad65e9b2d775b2439e9b2a7b8d6162dc29ccbcb7ea4e7a8e10dc0552937d85f05e651899be959f99c324f18fdaaa4c52b01216b80d10e8ba43f0a6a1895859b9ceb2135b1495eb936dd9cc9ea80564cd0cec8d874aaa60c5be4ee5fa79f7213217d7734e72443be36aa8253f66394ac385ec9cc14646735b930bbffec8fd452519209b2393a4ffaebf24f407f8e6970de88126f439cd1899ccd80090044a8cc63f36616b7da99ca169902afd6d546bdf81ab536a350164483f57b053668694b49ed043de7dd6fcb292ae3411fcf3a00f03ce695b05c02f7badc3a80130b751905ff402725a6482ef13365f9bfa7a8abc49db10f98bf323e5c992fdb147499bfc588ac497ac31726324af3ee9867588134fee6cdc9197dfd37410b889891d4d596c00538cca8024f7e4bd647af994888d3f7f11c80000bbfbb37eb3c675af13ea0fd11e67fe78d08898d16cb66facf8978259cd654aee0e7c2a24288c73e122e497b3c28f5836250b53fdd548664a507dc3ea6676c79ce200146a0441c2262f5f496eff5bf3b966d562b47df0df0aaab39c497af91fab0dc35257cc7b4efdb8006c1c898fad5eae2f22f2db11d5aae294745a36db30c5380a5ad9d5d1fce1c42b16de4e054f052a989efc33e300126d10f44b66539f6dacfa939d29f1946f40b6bc31eaf794e3dfef865a2b9bbb8d9cd5419ae9cc2a255e1b7d37c021933c6c3d1ceaf354ad8aa85a5ce11f12ad1e7359c4573eb056c80e9136a920422270c2c9021835ffe432902260a99594bd86ee4ef187cf7f0ef38ea85d066df5e8f852b551fbdd67ef83963bd01e5bd262e15a5234b52b131bb421c4fb983f9ecc373857b6e5957e9b38382f47f25e37b1abd4fc81150abbe993dd94d48a0a13cc7f2e9e9f5d586f2ef445287922095b377344a62b75f140ea5b19916da7aaf27984eab97a370f6cc3c067c601a52b7a79e1e60300f2ad546e3815e58f8301e8de15fe8aed7b06c7dbd822138806cb8612afc8ed1fe06eb69a90f8db529a0507b566f02d665b1e920fc2293891829026f8279e2c34651230aa8c2f8aeadfe7dc4563ad2b90e89d7805991a9effdb520a7dfb814969f31db71585a585453790d4c4c75b7f68312acd4f46dba615a51f4841b0841ae427da410e225a68d351edbdb1efb93bcee887ab314bdb4e1bf360e55a39840ed5b604fee08f980082d4e2f675378ed6cbca216642141c56d68976c2d09d0659263837c20ebb6c5f47d0caf1ff2a4f2a14e4e6145704c4412654bab71d7aee10479603769b220aa62e4ce7bfca9a18eb956044d7fb3dd18b4cee44ba880c515709b0e35552f765af0a63062c489a4001c37c3518710c824820ef374067a404e8a9525d70f5e35f7e5434d74ed2ffe33ad7c4fd40497f4b2e600519fc397451a3edf1de574eb7466620836e232393afd2f7e7e4b2996d635afe2e1b2f3cd717cfb35d03db2fd6cd5faf4bbc09d4a9d466633004f0523bb6a929557d006c1729501dce0786c1f1e0eb32fdfdebfa73054a66f72d183c9db788da585119a5056740dc5bd7dc3ee3e9663265799112f337432fd7bcc0410be66f0b8f4bbf6b5881cb7b854b4a85f9800760af2f4f32c39a1a964c197ac41ccd05f2c4b248caebbce331f1744d0876eff9b6dbd62743d2af757b0177a025263bcb0175d039e65e91255f2c4bf321cf1e8fedac2e768863691a4a63ea0ddd6855b6f5d5187e92e28dda9ad8107c50cd82e927af75728c79752446352c6a48af26a5f503214c0deb801747184792764fa7899e694c1d3111611837c0c1e3c2fcaa8fdad41574ca4a75eb03e462311dd49f6caef96e13e6d59e690e482d0251b68fd5b920e9b9dc6d7c1c9a9065c6f44096dce83204655acfe50c3539a2f0b75edd3cf3a8f65b172bb1fbcb10739013b9be49e43b82f05c547df0c9eb1e46f738ab1fa537dfc42eb30c44464381aae9b8fb9a27fef5209f0f836544f36b21779ec9e3d1d3c9dd1b09a8ed5cf7cacacc29382ca790230cceaaf06a39f3783f9ead40a4b98a67e418916d88aa91057576a3394717f771f88888984a9d309983efe3f57ad1e792c1977520b4db87113bebaec32f035ce2d57b510e7bcdcab24363c54ebb722e04564f7075328264f7650aed6193e852c357baee0e26201ccd841b7f598342330ad47744990f5701f74aa48ff1a564eeef4ebc221a34c0eec658d2a3dbfaf63deab181870d5dc723b7b4f0a08de3f104a74fa499ae60b69ee603d480ba60b8272d1086cfe98412e63a5251377e7b2143d8d1cc2d296b9fd411e330d25a468b3aed364588927ce0ef91d292fd0278b87a9a287a1a2a2c409fe90563a426734a93def12e2a043c570dea0289861c73274bc2a136069a6a610e2135621d17f420a52a4f7fa8ebf9cf9d633ed7fde2e1f92b07d4d9085f27710105f2b9cfc69786c64c6d6d4bb9c6dd59ed56543ac6b31b7b94b37c08075608fdf921a5ca172840ff89c8dc94ae1b71cbfc79da498d0839b6d3cb0809a2b116833415dbe3cb3b35528a521a680684240297881bfb016ea21ecd490b578cb7e40d65b04b5fabe7fa03a5a98a476ea3586227be26e8b0569045b9d6e3e4e43c68ed86af6f0c49aae26b1225cd482d2b08b9f85064d4213d2394364c9a1333b8f82d8c0a4a5d68dc952998cc3b022227ac51b53f64a1a058250fcbeb5747e053a7e76ac1ae96280af027f2eba30820fc3e9c1c34de95c41ba5068588b642c4f2d9c80654c0c2b6cf3e95bba9ab7e31d226f9d29d1d06a0cd177d5d07d2e994204f0d8b1de95faf7fc1d45784fa603e37ae7b4693def14bbb5788bf5deec888fd567fda4464a3aa2781bc1e9b859c47f045a73d044c8000a2a35d406fabfe63d4ce8cb54abb1870bafbd52be1b8108ccdc7cc65108a4d12b63e428f66b5e0dd6a698b24ebd761676f5004efaf65d3c27c5058e2bd4a7b9aae21a615290416df04a738c8321363c30837bd7af213db06143ccfd697a01d71b1412945b0081f7a354cba61444038553a674675a4d7bb491fec16804455d9f17c40cff945c529eb812b0078761b54b5433ad231af0a71f05d49575d627e2a2caaa6244079a544041c171e9e4876431ede003ed575ce0928d5165db13cdd0fcec59d5e663bedc1e1f66dd3124fde75da9981682d6ece5170d3e84ac5a1c542c20570a33611df14457ec17504cd09283d6ea18828d5e524d3c052dff045a00d91aa32bc681b70ea9c1f4783883177733d8fdae89998eb01f57dabc65bf3b1f53bece67702e1405c88cece7cfcf02cd8c0587769e0b9a9b7be922d5040a2f081da060449f5d5dfd77d5b53127c17af1548ab5544be4aa72cfefcb68441f215174445c5c1607a37467938b2bdb35e0bcf947c5ec71671f818aaeab0378ac29bbc6b874186e1d7d46ae3153e3d27c2c45aa404d90b0925330c3765d63b0a29046b565bc6f6fe7cc53a30b69c428667793c04014420751ecb08583f8dedbeb446e3c02f23d01d057f7958a62a9c3a95a7c11d83aa6cb2c742cf4dc5e5bbf710fb6ed9adb9ee4cdd3b46b21e67420c8c34a936947147d5a583e8399f9c56c486c86927bf3b581b2b3e1de3178798ee8009dee874088f7bfe2836b4c4832fb26fb35918086cde5e43125b5dc375ef5166b2962bb74906e09e2ef4f177fc5ca5155189c31fa20cca332360e4fbe370bc45a1944e984907bcb1e7750c6a1c4037c95a6b879d788ee236c1cb9a078120075e403207362425fc3ebb4ce449d831d0f7a04aee9f5f33c3f4929f988b4edfaeb9936ce282f16f0eb753e1305c06ab27f3d9d285717fbbe76b20e827492c4111f228a9173a9bbd298b6117d34908da81463af00438dd471339b25e8b90beb8e7057e1cd7c28a29b8ccc14ed52ce4904d3a51a0e45a03fc8bd7455acadf54c4628714770feedc4b9417eb1e04848abf79c37f2932ff9064789b0f7bf17c8905f115e14bda42bc5655a19a9b72c0ff9c29fb429f038bcb2feebe29bc0bf359cc10f670e5a15983df88ea7e97e4f2bdc349d8223a4d81dbc4c661738d8117653f751f40fe093cc92942e49450236476ed35c8fca32b41f7ff17663e80bbd38e722751da555ad7433522b714eed74f1179b94553da44ca31faf99a4799b91310053b57101f80f6f69b4688fe2ab3b3cb7288341a6f66502f85661eb46ddd5b174d4151bb70677c48902c28755ddcf757ed6f92a8852e0477d8ed58ac6632a8db5135ccffa9d66ce9ed48a4b19dfc762d99050268ec3f03144d7ca373d581cee41fc2904d89d0ea5875bb6a50c91cbf5c96c1d5f1b872d9773912c39916e83388b9de628e43d5fb214cc6371cd5eca1b041c15cff2c7e62c103df7d22077e7aee65a3f0ac4140314cefc660d0041337b7d134ad106ccc77b2ca485ac22402c9836b2759453d4cdbcde42f4dac8513939f8b05154bd8b062c5cfa1bf2a59b0f85d4a8cd3401b3851ecd1da577c43f5396f0bd1f93722834294c60161918392270c5ec33d7712ca2df9a91cc09c00a3a077f300c791a2cf6510703c3fbf2e6b3191c20e4326ff9da99e8419668695c5b39a2b5a298974a3a8f2d9575d00dd3d82b660e6a0bb5a95bacdc5fd920b075b7ec4a995a6656531450b9b013aa2d47d3f8caf1a539ac459644ecc16ff242f0d6df2f704fd023cf516037ac5d20fea8474d05958adb516dfda5bf8671a326e3a2f22f7b0829f5a79660545d02e10a00a8f5a9fb6e730e9ba8c82122e242bb942efb2573d87966a8e7c8e1df6b36cabf9187e7fecfe36b6501b34fffb5bd303edbc9714b843106ef4a9e4e5194e71d48cd8c700129eae7512191a7dff94d17cc758e6a3dae4ffce4f2a8e5600983d6c508fe7dd3002255dde92353f7e548721c363beff1d19de4bedb32f778d735ea83afe12b327194ce1045e6862e3c68354d1fba885b755730b3304d28166de52d3f18b0f671834bb20a2949beef60f5d8c72f650988b880c5dd239098a70ebb97cf2205210e3dab997db86cb9a9d66e5e9f2b79edac8802bd92321dd2a67f8abd17f47cc1a5c7fccb79e4fea34921d3eb20570c88c1ace142ffcf32601fc06e6e2e14a1bd467a223a26febd508ceb2fd9d759f9a71f31dd8013fea294d5ca203bbf7728e2a53e93e9cf159f93a874fc719dfa7940bce72f415724b429145069a167efb3b95bce2f35dec9cc427f486e88935c04a5b49061597c829a640c880640adbe5f9c2c1859e70035d13b777537813f6a45f2fa399f8eaa382a2feab990fdec50838962b0c4d131b6bdca4dd468a2206d042392134cac56e5bfec26d3478a877172bf1170f2bc2c0997b689ee2b9f4c6665c033fba658980ca4a49a0b4dd7ad7539df51dcdc02424c1465e099e143d6af2840af8de32708aa495444539b0ae2bde62bac950ef21868ff3aca0b066dfa09801ff8ba013b865f94fa0fb879f035d8220575f1a809d9b43e3c9722ade5d73bf2bc79301021f7b55ecb129b12db2d8b110c84fdaf12b3c3a52bad0ac4da44ddd40a0f2e1fff5237aa4a3bf3bffc0981485e308ad08595b0cb2de750156583b3f08d1be4e91b9dd6e5fc0695cf63c9ee73df38af8d699d5d56c5a7c65b6a8133a3ac2185bcce4a8c369d119c990da80b32b9fdca34386f2b37ebc43faa74819bc7d3fd881e0af2a2a371039e68e734f6298ad999c40d28cfaa5508308381caef4819aaf1ff67ed9a78134ae25759f3b43ad771def124e0ac0ad1977df017a27fe71cb4f981de53bf2c13757853c0d92009641381f0e3f4e5e531e2d2b4dccf7c461c19665f95abdd18a7b61dc53b4091b8ae1928ce17310f2e6b1188d44fa7a06d92ceb845abe5fc5d83d1ab004eea1f259d3d8c589c981f46e3f047186d82f326a26976e18faafcf2d52b80f65463c66a8d7b4cdd6dbf0407aa868b4c0c002d52811a617b74b90e817f2cd2d39b7b7dd49c7459408987959e77d6287786b6090b5d3984c07d2b22acfb0ce50450377444d081b375571a520c47c91ffe7022f935a1423451daacec64a6369f1d5c3309cd1eb3823e21263ce4c3c823634484dfdc71df959d65b246e1c9c217b00f423d67dabafd345f7efae5a1894f966b5119ea74467c7e9e9d8624969f51f9396c5ae1df591db7d2dfa0baa9370ca4d374f522a7affe07710497e0148dfef5496711e0589ec3e325d2f86e2e1c613a4c67cf7edd476d7f10683a395af9e9c8ddb46b0f6adeaf694e4f4df0d34f9d6d073bb8996ff5a49fc334c8c27152901750466c5da52e0d35ff275af12ca568a199704b81064e3e0b53aad42feb1fc671bd93767b5b303e3cea1473f3e8bdba8012322b3b01fde0f59aa30a77aedb10b1c03d7452f9c58c8bdb9a5e773ecf2e7d3befbb13b738e444f3c65a8a9c7109cde01852bab7388395ec299daaaef37d2ae27b8a29cdc9e1e1381f42f4743e58f8ee44f5e03757f7e2e0b307df293b541f4701d7b1194feb2a2bbf8790c856afc01b755da7959052764244397cedf3aee3f1824f9479ad3cc30870f1a8e6ab52820e109b3653193804800c0574c3c35a2ea932914ffea2ab26340fa13f1f2e08d1cd91c9e19a0b502243155c40b5e9af0cf08319c58cd6fcd1a89d9c537c6baa6162359b4958ef1a23d147beff3ecddd3a8ed659072ba49f1dbdd1f920e81ebf9bf071b3b2e35a2970d9f0b4a6827af01a454619a0df4db5e23fbafda6701bf13128de1d0cf878b99764dad499ae0b7297518097e1a1679ed07d6765fc6d1637fe886c4dc857ff40e16be4359810b3c0bd85706022a8c1c9f845e7e9f669f509696424bc76b7f279a765e5b1686d9665d2f5b17a2cc96c75e2111fd27ef74707296e965a218c0d802dd890d159520ebcafdb126eb0fb42bd7f9317af67727bdd1ac1a8645575f540ec4e84c08f4d271979b2e986d006c8e4455b11f4786efd6103351ddda7cf5290e84eab2410d580e850a9694ad99125c2377e796669c0fe2f5dec22c9ebadcdf6c3b2596adc619aaf602778dbaaa79e5062aea2c01ead738374c963461489e32b64d30f6aa832bcb084d7c9c88eb672c8fc571bdd6311f7079903e2621772b728c83aca85effd7e3703dac99699416fa78b8434d67b6f6748edb853b516d213e2048dfd5e7be42ff7ac8e8984bb737f31395cc06812723248d44fd42243690615c5ff3bf5d0ccdd320e4bb7b074e284874e97f3d3257bc31d6b81912cb71bf02dfd6f9e8ad94ba4a0266c2e9f1f274f7dd4f8889325688d03ca546213f6d45b61f09d0956f7be7f21ffd8dbaaa7395866148cffad212c16e0655b617d44560ad4473b231d85db33205f0445692bee3a57830c2de89e1904e94596b754fc35bb34f41e4ccaf20966341e092fa7745ed9154b4d96b00457ca4c31f88d7314406e877c5b27d81fc1b320a54299f6c01305f7aaabf7aa8f5aa3b44a64fa08e23bc845337347522cee00864d3e511b63b932a925aa6b1afdaa890fff51d2d7b3174d802e8e679e7940c2206fb82d35f91565a2648cc0d01cb2cfa72f03370980b9f546296240e0807484eb8f4aad6ff4dd4da85efa98d9d46c61dedf6d01dbfb2cc8c7aed7b682a714a04c75550170cadd286cf82246745533d70ea154d1c423ef2600e6a1720cfb52efa69b9e60e6a1566ceee059fc9e50b53c62c0450b6b00987b6608ffa990dc72246ff96d344886ed9dc3b8076731a5bd6d02d72aac0f74acfe65b1eb5c38a4086b54d5d9f3cb845c1bdf7d15df284f2fd1e92814c0cd88bc62a5dbd1201226d5e7f5fc8eab51d49de47d29232bf8d8f74691851e2522d225daee65251042184718f0d98fdfbd267de329bf09174caee14e8a1f9b792b615db8c6c96d1b12fddb994298fcefc103a8c691c85994becc68c6212e66b7ba73863b8a0682de0c42dec322cbbbb5321531508d676c0fc8f37e38bd8d92fbcf7fffcbd9b2abffc8dc40c190a665cd5392c11dce34bd2b593c6f5b30ed601fff1a98e1c24fdc139387cf21009c73743d35e3b6d06df0cdac4c040e69e331c7ed07c498ba21da7fee0005852beabde036df0afce32d62584881766d1717427c211ad9503beb67a205b108b01a8726a046cdf2a33cdcf137d2b7ee8c366b17a66d5ab872022552d8ce69dc3073a30cda3b0850a9a657024141fdd24d7610142bb302b665bc09aa2185199abf243c74c76d0cc17573f0b40e4b7b4fd57858b7388e912453ae6fd56f67f27ee1f4a85de86451a9dfd3819df25ee3daf798276144d3e0116106839cc03df8e33b55b4ae8a51a33a628a305ce10e9e021cf6c83556678349bdd5e611ef2e3d6d986e007e36f5f2edca9bdbde8e44b4fd8d84ffa52434c3d6b794cb94d26b1e19ffbf1fa0a20eb6f15ab670a4198b0b317be5a67f157cdfcaa6b96c1ed73b0c8bb10f359699ab20c948955672664af2ed3604d5c3d8aeb8047262c6b0f0228cf38f14ab7fabf9a15359e3ef2ec4849db65dc5b3159d1bd0ccbb54aebabc54940459d9dba0b7376929e6a9f3af940fa78cdf13126bd87a3a360023a8142d76d37eb5c3a422044f87cb8a02304543483cf02578158f5295e3af817150e14075da4a87bd42276c5779b6a1a2e0f1f7b3d488ad0a1e98d557db224566d4ed8b158eb74c1e329bf07f05020e2979b9703c1a21617c78ee20568c5cd140f205db7d349505de60973a666afea2babdc3024afd4ff947f0c4d95412ed9badf6c07452f19472e25881f3119cbd234b8f87fde736523acac0847797ad2e8e759f3d03526dbdbb5dba4b28e5412f33310af712f44829c25897bfead7534f116970c5580b9f20ed117a3bb6c1951e6bda120494f74e013d5c8c77d071ce6b59b5b2ed3154d532b5c46f1da355a0e73517432ccaeecdeda9a8c53f96504d097b9af6d47650b891ebff312366a3cc56e52ad025167cf3102c9d34803853abf6e78b50a46e4e053ec1febbe198792113db8a5cdee9ff0c161cc27e6515104d8d9be5503e3dd12d8c378e86a5ce657ef7dbab21b872d662b97d2e88a9a2420fa3771e61c5a151549ba8755e7e896e7a777be348ce702779fd14aeeefaa143ce340d3a7f56aae29a65cca338c48456bdec46863497fdf63df490f86a33a210563678edaa29fe937af7a3a8043dc19708eb1cc0c813b1b5071bde715d75ee2fbcac079aded3ab8fdfd002bb833f5550d2a3a8b3b128c006f3df8c34258c9b6b085f8304dc2d17f5acc9b1583afc61ac3f83827e3ec3e6bcefc216ceb312e62aef1e79a01873864e1fb9f8a024e6ec97fa8ccbf09408faf241352bca9384e1616fa1a80249d8cc0392ef96eb2a95d87bbd1b2cb29f77766a5b87e728058492b17c14bf7adaab2eae87a9532da827fa082c7aebd3bbf19a373e796d71a58174d83034eb790e8d3ded3dd869931b1443470cd5b00fc7f02dc816ed480e646f2d99030d7cb082e99c8cb1a6df9b84b0fe7dc73cfcef8bc2ea956031b9788417e5958826c403252cd71c72ed2958952d7e9d17fa1305c91484a05b7a894c7a0c7ddd293f4e9d4b3bc8cdc7960f92738f1cd944509a416c70170b442b6b2178c9a16c4a68c270741e89bb2d97244eb3f6c06382c7b179f688c1f83f754eeaf3b314c1420df4501bbfb3f66a889c153b141556a658c8b1f30726798a77deb552cbdbfa769a12f552e4545d632d9a9ab5e5c3b462c196092bb8b10ec6db6ebe55b2b0ec9a15d55f8ba4d2dda398d42ac248160e6f4da8940779c05b36073175c513bd77158774b277360ee29829f9d6994922e4274a7750cfcaaf42f00cea4351fbc562322af25889b7a0b75906d6499772247f6cf24d91efd8965dfa4702b485433fe5d4beba4976edfdbd598bb8890bc2c0253f4b4159fcc0ba2053c1a33359512cc56a8436394fadc4e957a074bd90029cc2d93b710665d9d74782b337a400feb4b5f1f662baf96a6ab716de1acd1ceb673bf49571dfccfdd49c40dad631b05b0238fe34033d646f71659c1b59eb631a9d43411408a1f9091bc7092acfe09ef2ccd4817c223b00fc30703f6775868d360319d3ee74a9bc99a7ee374e9e16968627258c55f5c06cf20db00a1517f09dc208fe06560ab3711a87a229ff3b33ea340fef508bbb9dd6af1c0ac09b6a2d5af1b0cec96d9426b4f625fe6354a7755221716d5d4242e6229d1ea061e17327065a0bd42ada7a86929b4dcc7271f22c569458961327524f5fba34b8bfebfb3bf476c62bac0cbd16eab357f1c357c1f018295b7c4246d8d797915ff11a9bf8804c593552a1badf367cf39cd07552f32954ca23ecb2fda3353c5150d99f18b4d41c0f70701908fbabb73b6bbf4fb1c410b4491c198e30aa1ff022208a63f5fa34d6540806b85b8d2d2ff3045e7e1a5c12b51c1f3d481f726bd88d25fb70101c139c2cf77609be8d9596ef56d37597d076ae86606aab8ac5d4581f59edb4ccb02b17c071dfbf83acde7f32992964565d262fcfc897c34e20e93ff84c4f53f837fd4a0b161e688eafd080f9ab0d1dff3590ff90e562c7f2b22c066f57e39623022f43b12e1563fed04f4dddd6da8470f65bbf11d9e0589e4aca0d3de2b91cab373c31a70d5ae20fd25d335bb077faeaa831b569dc633b20f17a44a74ccc3e2a661660e79fa9a69afb8f5c8f628dafb895c7f154b01e880978bedfd7c8b16d935da7122143ce67ef3043ba1fbd80fbc7db1b9e9aba3858190847d43a857f26b19239b2881fc29ffc5bcf1e455c226af8d12944cf5208316c0a084e1b4447825830b76a0c4f72c9df13d378105459b7ca0baf68d46ae8256f780e03f7e4827b7e14e0af6dd60f500dbd835717ac98feb6afe51849ae8e3c9f0f92d9c5b140dc38acda619907e6b75dc45cee57f06509ec7519db028f47639c4f534e1ef444accc448a354004c35bdf08a764005464cb93eef5f7c56559264d6b9179103e0240f94d47b77c847ee4712db0401dfbe451360dac8263435e8dc43cc4e4449b1f8aaa929f26277119be6e95c04d2a9b1ee987005f60ee39719fd4acbac41dad0b1532fab2e99e6d9f920c04b9558958c529622334b8d932b788440820952f7be1afff2c6cd7da8848a742b8879e36fa5416d9819878c0b8e415772cf8123f1c6c8bfac7793c6224954f511e2333211e5c68cf181c1584388822d0722213d43eadaae98e1775ac1c6e319358e3d5ab3ed13851e9e7ab345dddb0ba55bea76b6a6bc8a054659362eec05595e0b4deb93771b6ef09f535da957efe59d2e3ee32296a93f9dca046bff1449c927433916807e3b654f737a4768cc9a5c408f5ba1707298da052caf3924a0ef14759a95c74635792bfbaf9a1fc1ef25d14884078c1d94a67b32d69f211a821509235025472a958a5d02a1ff54d95ac1af9fd69cc11f9086b6f287f7d6fdf48afae45cb5bfd8b7b142b5d1227320030e55f99f4b3bb581870503b41b014827261a2c4512a7d991d2a453ca87cd64596ddd9bda1c7d0736669c3f8ca5ef703d52e9460f669da96a33cd6ec67fc6a0c1a30fc86711521bac5513b3b5429d070f29b842044acfda98013173ccec4091e5a8c170d266e37478ede6be99836bb56cf1e2c0050fb2f8d73f4f66713ec1cee44e337a297ac3c6e1d7cb76e7dd6d32e5af75e5b271b2ab072d14afbb27e786167da17b077b3e6ea3f855f8ebc5e18ce86fd15dac01fb1093b4c68dc244933baff6e37d1728d9fd064d5cecd3a63c6c2de266b1f8d0ee10039dfc0d75a0a6ef3c9fe12abec2bbd5411438df21167942803285fc5b6da9fe880ae540890ebc1fc8324edf7029bdcd1226a5ce473c4008c69f44d940026dc1a9788508274d9fd5c32840c355ed69f97160b153d3016df39793bc7c46dbbaeac81a377aa659147f0e2704ed238c7d46aa0ce540a66aeb388980a27128666cf215be6f356e824a937c735cde74f0c3a254aa2567bb8a0a433ce4ddbad280d7232b06f83842000fee31a56a8cfc00624e59c6746c746865c7c36e10b0b1c18ac8f277aafece0c12f2aec848f7e6a46af5c28046ab98541c8669fd807d411bc8d57d4d340489c51beb360eb69334533d31ad9518f0642400f7fbd23dcbe8d2a5575316dc433929872efd63874503552360556b976973abac228d283692f6a4554d94991eb2ba3f259f09701bbe4253c3ab69856d468aea773493eafe81fd50fd9684f93461505714fc2ce4557a7e261854bad99284e6b21a53f262370e0bf3be9c2c28f65788371021b84ea02a6e8b797b9adb6720775116370b303dfc47e56e496827f2b2696047d567c48b9aa06d655e26a9309c538235eea075ecac8012d8595d89720f1199dfaaadc1f6b498488d328394de8291a55392b71637ec0e70dc2e82cffc356b2dd502c9feb61a12c3e0ff6c099e65593bdb43ce17094baf80ba51678906fcbb9c8c22f239822ee644388b486b8a3842efb765fef51b87963437a8ed6cd2d35e6b594bdf1ff4f6a93a44f5eee9da8e4f860ee839945983efd51a00eb2f5c79642a1c6c578499a7fe5276cd12b28762f140cf2818b516068f869ed514fab7b7363d0619b85fd517975a88ea42b5a103f5c97d35a5f29c4df6541037a10b7b43a08ca8a63e6581e5f528bf440bee5b74793ec9219b1b3aa847f24ff676b05da3aa86f84e38d05438d05d6ad0f6145f81651bd70d6985234e2cb49f15d6653b9b6869b5f4ae1c17596d60077632ed8d285e11a76fddd1bf46a942897b69d2ca158de0fa9020b13a92aa3d55b58cb51a4f1fd28fca0e1bee66add0425447bb7961cfca10785fbf6330b475e58ac64401b4b75f3a41debeee7d643bed3eacdf01650b98aa8eeaf600b4337d873313c0451b4bb1d520d4cda9df0bce85c2e47f664559d5c7814fd55c11b8e73b7a4e424d40db7c9fa8af26e32edc8a480f235765d907ba8fbd73aed1a2cb67f27556713c42c3ba19fd971251fe827c0a98a8cf43e2162872d9ff399737cf258c9042a7052d1a94f0bafd7eecfe480e8ead7e4ab1117f299d8408f4c897af561506bd43b58e6fdfd448de4d5d0bf4fb609beb7b26c3456096f676e4982ab22617814ff450d2b0cc5ed43a6d42148e63fe485bb8d7072a42718eb77d8377f32b2445a2160e89dd3bb2d5be1160eab575773ac8383b626fc77df42e18d57f13f8d57714ca9c39aac2850671e62cb082281ed4500d05c910bb09071147add50ee1af4d80da820ad841b8cc8b3e2af380c9746ad8c374c6d89728cdce7ed7fe0d5032425099a623711679abb84bfd056dd12da43df61224ed212fc39111817c210cae3af4b8c3983ef85dd6d48d531e2e83d216ab093491a101d049af1093cd8e52b3dfd80f828b6279624e8347b79e2e0dbd35d404f201163f5d98288064157e33983c0ca413eb28fada2a5fb57ea4806f7a3fb8e3a8f41aec844c22947ca508b1140e35c9411deea7331b88758905bafea8c8e6664a548ce3b071d8a8d2935c3a994b83f996750922754d34afa705aa964517f49f49e60be3a3b617530e5b8e89e9e818e84c1b8c745022132600c04d82f42cd1abcfa6756a4026b050fce4831447dfc0999e74adce5e02cef9df2cc0ea7c14bb72e44e3a1ba84305b2f1ded415fcfd1eeed96f6cbd285b6a8c3f0b8de2f57f75e427dda8a869acfb2c5d0ed83c441b2bd9b9566d11e824059e8531dc6a1cdb0cb5a2475892f8c44c2e62bd745957cd30d84f39af76169d8c886e093dee40eec2f3123eb049fef6436543403f44a67c3874d301196ed4ee2e5eac5e5cb9f423d8cf50b18d6605034050e2ae9f73dceaef5c17bdb56be60ee55dd008a2caa1127db473f626249e9f8618d9fb529e1a76ac15687f972bf108ce0c230a82e4f452c91441da3c7f7b6f03ee54775409a9999707c26a78336bfa383b14c5f0d016c5ab1a88922cef32bb246109858bd94d4429dc4a67785d667589d01d36a7e087c7cab9374abdd02cf2afbe1cda819386d8d38d226e90549f5f0167731c7fa2df7494aae3eeb0601de63dfbb3787a3292cd84bdd977fc4aeb58f7c494af3f93d725938942d38d41d727ff775bf5169ad25df84acc4653823aa46b336c3d30894e3c4071a7bb96a132686f1d0edeeabf13c44e4f948a7b0833b357378c06b1bfb2e66fe85da52e4d920d7193fc45ffa9e4d49f2855745eadf8384118e90a60118e87b4d3512f64de02819e59e1348e3aabebfda3d20f0f31b9afb559497af75a68dc557507c322e8f33e54cccd63d4e8c1e3477c4a226bbb9af7c61f827ab24726fac6b7a06ab20f852dd5c14f483ef191ca07089b3755409ae0513bc3323e811636434f42c440b45860e78a634633072788b8c7b6ac5a611bb43e6979276c7e402a15a1eccc281da2fff0e9be97529c228ee743b7f9848873d55a2ba551bcca13a671e0589b480f64b7218d3a1c279ccb9f78a3cad18d03491ff732065fa50dece8fba72f3ad4262c6afd25f862784df60f3d488949bee9d96f2aee7a7451ae116d6f71357d62bd8b53ae3d7a6f36f485718ce04965dd708c023cd7d78478a80042bb08605a23a95c433e238fd348a09c42b563372096123938a3ea1c4406dbcc765a7ff177d032848d99da265b3010ae61963b6c5dbdd36120800e3e8a362ab10c595950fd9e31557fc13ea336a37d069565d33ad039cdbfa9834ebb86dc9bab6b5ab309bddedc5328514c1e2a2a1a3709a7b9a2600138ecdcca545f199639457013c7d043cf66648957fa2c2a3b6546a2d2a3f762efee38d7103017468936db02e97286d69e65cc7e04f2460b1c0209aedd6e6a2e6ce9f10a344b4f3ed80193256a20d679ba82ea403e65a77090ca22cf7f05409cba4327dc57169b6ae73ee632b9d3876b147b0d66ac05d7ad6679341c352ca2fdc7ef779319ef85ca0a9ff4177e4c6f05c3d7617bf0e373b43960464871ca57ea5550782b28324160c71f1338a0a7b8c03f1f6ccc4ba0019e96d24af038023ba697fb79f1d91286148ff176b3522b905afb4f948bfdacc0fdeba28448734b52ca58aeded05b40e6e0329ba0156c80db814c0843854e69f33c4fce89ee8477cf9f3f2a6a6630c1e0822bac166ee179866e50bc2babe5874aa5576feaf74c33d09a17d4b65d63969936061dd7df5299faf193c640120505dffb8748ddc1d1191f44966907ee147f07049da1f123798d74fa26783e2bac1452b043a3064fbb162503a8a7d54726df268234b51f6ed5813d8a8580cda7ec7c62d472d9f0b446b33ba98cc2ce210552c6aa249af99752e6672d269d6fc723b9b7202ead8a51fd23a5584cdff789ebaa0680839924453e81c7ef7ea372cd8bdf6d0a6300d35f6e463c7bf15f1c496ca79f52f2b2ea57326df53ce00ae3f5b1b814b0cc91c49bbebaf2db076dcea6be5fa0f79c1925f999cecd1c4fdfa21e68c100e480d56919898483d3b055b9e854c8bfabf026387702002ff2b7c34abfb57b3a8d754892b6ba70cb71cd859a3d0ecc9cd3ef6cd74a8af246da44a7b2f1ba7ec9189bb23018d9c5379301b72a58aaa690348233c73acc1306764ff65a90603a905d27b0c4584e06c1b0ba0690cb3f3e7070ff8165904fc01d972f0af5142e25a25c57992bccf996472eedc8aff2603c06ddd28933795debd4f63b178e379ef12299da59f706c5159bc356c3efe007753cfb86d295ce210ba43ad87a21981f09791e9e362fd7e7eb7cfc2c4f1b079989330740d1df676a887da7c6df155506c29f7d83f355f88e1807f5e245cc67aec726fd80d4e8fa8343cbf604d378bed875a07336e32c1a13126af7d64b63afe320b8f809fa4db98e8029861eb8e2f3f84fd675c8b4b0dac6b47eb496025b9ddda401891a939c5ca3ba5585f783125bb7c43cc7d76f9270fabec2ccd27180ea59a82035ec3e2a7c6dba9918d33def51a786776179eb68aeb8ee357a04b210a65cc2d82423f04bfa9edc3ed879876be22413ada089b259a672194b8910d5f3dc7a80e222ac416d6bd9686c8b316d9f79c27f0851c099eee1cc52983c197da93459630f1a96a1bd76be55fa1057ecc8d8c86ccb969259678ae4a0b0d73602cc7a46a34553781d4bed425c2a64666383ca7c45e734766d3c81386dfe5c2a127625a663e34d2c873396654ea5acbaf22021ab3facb63e73c5d4dbce722bf19d314f86f3edf73549b6594d6a59ee7825112c0d35926e490139c4109448c23aa481e73d1c4a7247301293c395e39d3f6e542b3934585cb444657748dc06061bd6a6c2629b6ff93e0b567c7f7d2f00e0fc5cba800f2796a1df4bcd451746aacd3b40b7dc9131709cec90454dca893a180b52e735be73f3698f37925ce82a6bdf6c61073301c227311835359f480a83f3c878ce9c6607a4fd861b55a763cbe56be207c96c59a579b44e2a255d9c2123661627a13cf81d1dd16be37b360e13cd419a6da9c3c3fea845b916d51a77eefc0074db0a6665d0ccd308d7c986c8abde209a027810913ba69fb8a51325fe128001d2d37cf0850cc30045a48c1f42f8833134395eb87e669ac478292b3abe47a5c4514820257695120a2341fcabf4e548f0409ea666443c4fce72ab6983b93a976b2ae01ae779f8ba93c9a7ff4146cdbfc3e87e114080b9e1f6138c6ba0e795cb28bca2618a21aac8dbe5f439346b0d456a3acad354ffb20d4ee4ccbad95e1e37e8f4bb57e47a153deacf5cc7528bfcd9051c85fe93a6993fca8b152c6b3ce11c49820d65ffa1f572addc9226ad2b32b39e2fbfabea98a0da0f0487cfacf0f7c5c7843376872d94118730443a2487429ffc14cef7f9bfc61b919214a7573ef816325ad080ce1aa4aec1dc99a89befba6eee4df7d0d365b8b8343587dbc91e2021ca398c178f74ab7302b858a656d33562dca27585d296276bd3fd24ca02aeb84c82e87360049078bcb2c1b98e9244d04e9c90604144a0dd2a9c806c2ea6575663dffe0a1576fad6aebba4318e8fc4144c8ca9ad6b7619a53846c2ffa3eeb3a1175e9eaff0c1dea97563cb2d4312e33e45d86f744c6c94a662f48217d3f7456576cf0879620b8f50210f841ea9e529d20e7e7eb4f87e1ba46686953e92addf8c09819f4a76e76752209006666406a21908ba35db091fed982c664e7cce59b70177eb23c38f41842c266930e10b4f2eefbd7576af547d3e01c6ae4968ed10df74e7c5eb6bd5c20834507d0edf712d79b41196a6e9930a8317d4b7493455749c2d623d153340310a17d013c0990bc7a7fe5e6ee0e76365b29ab9715844f187398acc7c7f384e002613402e174b550ab3dd2a264b9c2e7ab2cc88b4fe9c227acfa875154909a520bc8a60413d18add6e75408e7a3da3b0b8806e88afedc903fe8960ebbaf071a73560a3cb6d1df6da41bd1e1857943335c7646add2a36899932c43ee05b5b5b120f64350f9841e6fd648d7e32134d2d4f52693ef3d8e4fec7e0148d33a8aefba0a06a01a2442b1597d48b04eaf4e9028c991779f490993d443d225e15b96dfcb661395b9745363d07e4ccb6a07a64e6229196084971998aa4204f7868acb60324943af073374f6d94d014379ea1a4492063f6bff8cd6e94a532ff32fffe6705f180bb859fb030681e4fdbae4669e6ac96073e0aee57544e53692ac1129715ff81e7b58ebf3f563660c8a1972954ddfabd1acf830b603b5941686609a3eedb2da70e706bc61983b4015daece1b629235d39a0d546752925a32f8c237e6c128a6cc918ed0381fb44bf89eb79b07c6c5fac99137bfbff8822cdb9d6eb03507d098ba7d0563374f8c3bf0e8148d06c32969262686701c1dc407eb0f0e54a9f90dd217feb801174a18d76f8d221573e42b52ab7b081026d4d153aa3c346fbedb1e410a31fca13f242720dc6c0426731b623cab1d3ec607495e962179f104363aeb8f96b55af35374303c0fd4723bedb931c34f12de437322c0362475ba8164b2752bada80e7a310e44fa9b2cc953f67c186300359111d9112cf2da5d1dad51ebe24f0bc58bf908012393bd1651f89d6f2a86528063b02800a4d3eb0743321d4abe734f4f2b5099ddf1900cf68a7c55ee6e23432e7df44484adbee6f043d65e16dd81f6b1e9e9d0f0db27a4390ac87f7d21ac0ef7d11a453e8073acc0e7ad246b77ab4d76f2b8a89f6826cf1af8eccaca136d5edd4176a35401a04a45cfc458034f7f2df303adf057b4cca27bb2fae31c186a6afd0a7031349536cf826f1cf284f45cf69d50ed92140074086a7fa834703d4a78e995a29244a6a4ed7d48d2747cea0b36b0f516e966aad2556593bd3c6253de138693f872c8d05774cb33add962c110960be166ae3fd3e62cd42e08d629b56e99edc41f608378b309977ef5a8bd0f21920c35afd2d5e07a5e29a11d0236a05f87ca40bf6cd46d29f14129d5f4bbb20f0d30b0f98ec1fb8c36f5727100644748be029e4d2db8a030532afe51d260e86b54de730f11720cf96129b25769baca64dd14e07eeef8629e84e542ec0b1b58d9c61b39b37e510c0f4247b17f3d4b40bda036ac9670a74b3f032b4c76599a4c93ee03ddfbc8a666493055fd4ebb893b2a959c2f90de587c501c9f06a59a45b351f5442e770cd43f9e6a03867a5124ed75754e908d010525a08f5f07c1fc49162d8ecb2d3bebf704328f61cc4615e3f365c786c6e751eb6b488ad346f67516d42948db7732b148e75f4d00b10c406051e5311f40b1146c973ce4548d5c87c6e8851e1a5c13449d77e15e70ceab121282f8401e74dfa00473143bef85c27957c2930fcc7c359b27d9e50a48c38418927a63a52fe8671e4453573db0b34c1288318579810040092cdf0f3c862964d0d5316475eb951ac454a23a3c56a4a0ba5a9d0a2c3cb0b56f70f20df736332bff7e8234f370a83fab5411910aca2610eac6d0161a747c742d03e42dc04b9b10c4db25dfac80b4b64b8d021ed8567fcf5e3a09d3d5b8a3cb640b951ec09d4e46f8d47f785f00943d12c9267f51c0c2a150b435813f85dd1e86323613b030e42287172d0ed15afe47fd107e878f0c527852edc8099ceccb37f5e4a9aab0720405fe150e67a04835be7cff66fad0ecf37602d6e60ef0c53d39db169a3d0956cc54be0cb63a09f0cbf80aafad4666807f98cfd30a2a06df37f826b16eadeee9b3aecf1a1976c877e4242c5fbe03a394f3e0e19d7117d90d94538ca9eb02d24591c0acff2c74d02913c2e6b943069d7ad427c5ed0582b222df5919a163c9bf515f16927397e61a1863c96f89322ef7581377c7599d6607a9155a9e1442cbcd2b4029a3db2a012e56c0bdc97462138b4c99159587a896bdc5b9b7e83836e1087f118d6befe86be986586569d603a5e922ec43f3c28e519603122ccae7b71547550c197e29ad749e2a5864f73cca7e3abe86b69ce5283001b1d72023557339f41cd8b5487414c0ee1203f37120f2f13c1adf6a3b7269b8ec1a3f91579d00a35bbc08427f4336700c3086674c8db67cbe8edfcd990491a556c7e21251aa1a6479082d4b9f6365992dcf59c4dfe7b0f5e48e20861a7ad86155b8c0a61b04b14b0dc5cfb1893f1758e3cdf4e9b120c4f0bccf92a44930b79232f694f10b721f1fb6cfe8f20edefdd61df74a69c6e3b2b3188ba1a6a8b435f7c5c3e683a03bcb276317861fdff871b82b59d4ac81ceab140c994e4488cad500cceb8eb63a59a5de9b53028351aa2b61cf83f98cb9aade0887de240f852342aba619cc2337789f417fef7ee72060a4a151d3a6bc99fbc8115548944bc5c6581aad5c02dad421effd310c2bb2cddd1693ac72261a960b4e2acc8fc42fab708c1afb669eac272c098a6d6b5fbafd13ee29a12fbb3fd91a9b7a213c689a3a80cc9f342a033d3060459411b44cd96bdb309de07d86524552c0a49971c975daf70a50bc4e54363482cc7022eefb53ca4b0e926fa0170f2e6bd743c1b55ed0fc4ea47aadc11a4653ed5922ff68dcd94ca15fe0174a3780f8d80f9468dbf40165d6a914e93537117111ee15505d49e090efef15abf10703ae59e890781de11f8c00f9b663f770260d6616461908ed6eaadab7be45e714fae5658a73485499b5c27c61f5c3836d9812da04a1766998cebd334c85b46ab9f7a79b55f68619152e419b92a8bfc2af2fc151134646b15b9342978525c13c4b7c523483747676d2ba2208e04e45bd93802b6630a89f51048c2278412e984774597a3d545aad48dc713dcb3cfa62058864691a019b5f202e88d6256a4c353ab2ed357cf5042198c5b48c6fdd005e664e7a51bf8e867d6e6848fd05f0ee4001063fcfae5fc775532a72dd71b4091eace3e5f559ccd198af9c25701fb6f12d3b308c9c5a9beca3c2d4d1af7f7c026591c35f4f0d8a0cc03a9e1814f854e97bc3325a7e852814b3da73d576544acfb646bd49667315e49e649ec0e43a6e775e2ad7aa1fe99933b73919f84afdde5fa9566a6dc3dffa21035d048b35f9bc31d0f74be2c2b30b162e05a7978d340e3dd1b42aaf35a106e0beca4cd2850c6cd345bb5bc1178fb43460b7d49b03ae4a9e4bea465ce635ae026658199b6e2680cf7a621153380f897e6acf2215eedc4a178eae56ecaa92f7f51f33bdc647136e59600025f20012503413dfbf1ca1a1804aceb13726c966025f55531cdd18ed2e42de3a2aec2b992be07ebcde45ee5aae796b50d69d93518f286b3857a00144c80e240deecb8822d7969dffcbd4a4f658078520142adf6c3b6bf7bdd23dd36476ca60fb01bd695a64430bba709088e7a8ed4c8d2036f68d3ac542b70536cb88585c31dcf3612ea8f2973f02bd84ec8995eb22b3b6efb10aebbf414cb96e4225b483d75b9c78e6bdb765f8684f229b14d1579687cd1f0419a94bb115ec4261f0061b10594b3fc5ab5b72b80c239d512a6f275aa71a765d397d0b0af828a2eeb133ffcde79c4af14e58a5ef712e497d76a6b94e9540a6a04c27cd00501a84bcaaa15aef8eed589c2e80a3a8efbec7d12ab0df82a68d9872bbccb297f63c7b61ea0603f5fdbf9066ba3cfa4b5413398665b97ec736580454e4c6f2f0d9d26da54eca27389711dce532f82684396b5c03c3f9a464a4bd2f4d5b034f0bb78c1de1bdc0514155589742fec9535d2a51a0fc10444eb9190b9310db1f290c0e47e93e3665e0caa968d6b62b2f1155d4756cb5758ebdf5731f3193d74be9e48125efdebab3cfff15671f6e54ecc6c763bdb514241f7c3db219a1386190d2a80a21c34426c88f948cb5aa2b8cf183b2f70d54147c9ad37a1559565cd9eec40f009750d0125f411da53e67f9d6ea465b63d29da182ce62a07dfb99c2e07d39eacaa82da801ed3c8b170f3c5cfe1e04172f3f57c88a26b15cd9893c4e86be14e07f8b8d07d9efe4046d327c47828fe56b60c7b26d68528b265d9e9b3a8121d87d7f39c911749fdbf89d1ccddc3f7515e254cf1aec597cf84814370adbc463dc82fb1db8ee2acff72fe01bda0fb58cc066f477f51b8cf3f94849688da1924cdd5b9fad954a2821defd0e9939c63cc22bb1683d9d75f05cdc5ba34e82073e4a97bddb76fdc360e10a940692e89a51b182774932d2383e8586d9a572d980deffdc62b6a357255fa945b899b7a35dff66c84da1ec72f2c59fa30f918ef4f62aca32799d460ab80da914ec6d349319e76b1e1342cbf4e1729058ac90033ec38994b44554f379d67cd48a0000931547db7a2c9c91bf3e7c3e2377f4030aa1751586ddfa8ac0be581a1ac734b3062bd7bc5a8a54514bcd1be55ae2d2f71e22763e3003b0ea8a1a10aedde76f5f04a7681079a7446ce17d4200f237c107fc27b5cb35720dc1a0386bd3818d52144675e6983bbb953386bb58d226a8da6e7e9f0cda1aeccae7879e3e05e96ad3f207f96819f0bba9a14624f0a132c42cd6c13c3978079671f65e56815db30290f958a8f268f1bb223a9594090ec477ae16f9af9973b9e58b2e6869ffad021381fe14396c725dadb19d6084cadcc7b02ad01b541754cf3a18c4b253210d6758e0e25dd6929a174e2dcce659d521977f3449ab7921058c36fb86033463a2074cdabbe8e056dd4a3b184e52e7d8df1aca1f1ebd02bb0c9e12b0e4dc10164b8d36802c3f0faf010a916e124f34842e20a225790aac1e71ec322526169970f70f805c24accfbb96d9eb7f44a049e456590eec5117acc42543694fc2a4c69bd79245316ea272c09207a1b9bc3ca5301746acd9f2d62a9f60adfac7ecdf82314d5922498de17bf98201e7fc19becbce7c220b2eef0ee2ed2b50c7358252fbd1c9840c78c9946333fe9a7497af36c36c405e451952d40e2f8cd2a833eea122bd136310eb8a9d625e8db10d1cf9bbf26544892eb0cfcb5bd67e4d1d54e1582e3fa7024ba186da9455d95f8722f0cb795a90bce7db448c9cdf5a64066d710368df1e1ae28d7bafd747648d66c4fda57ee65a92c9cf6e518bc9153d44e971b23c022659d2a40783496ab9376d4be340e3ae73807ef3a8bffaac7d20d952e2c3c0b4590be9e9cfef9111305208ffd42361bd06c3bc3500bc0210fe6ef05fb03898d6c412c9b7ec80da07beded22775f2cdf1ce833c36ec85355edab00bc4a8181dbef1684956e7a35ec21574b0983c2b701ac55860bc043a0fdfb6836c1445c72a8f418fb7c18b92dfbffc9550b6e2f04a8b6f40c4ac4c03b2fd04ae696b3435eabcdaeee95af85c55fcd1bbb1241edff543972536d4069005e870d43583a5642d759a3b9f0724521a263e189fed603e38fd596297596f6ca0544359bd6d134b8d1371309a9a1d552e89134e41b79011be04e9e378ea11a87c965ab39189867cbe86f64d4f16fba0a43bcde31a0d0fa44e5e28b10bef8d4c64cc5c6ec56ac6e82255e9d586f041f8876df857fb9ae2f79a8c29002d990f8b0d671c3001f648b766f18e0c4766c6da23ef2b4dba04994f0b62f2404a1ceac6473f46eb80168cb749d4bb2d30f1367e8277142f979f5714fc71c8bdefec306e3e29d16c8f6fd05c38b15dc6be6480e5b07adf2d6bea7a9dcfafb44c9a01278032c57cc326319cb583ddae1ab25fa84cb691cfba983dc0129ea99dc7216849af649cfd65095b2840371fcacf30945aa54eb91b6e543fb0028aac737cb641268cac2d07709f31c272828f09a1fb65776b358da7affa591e62e55ef2b5a60138f906e207bf968ac83dcc551e537189c72ff8abfb70c9022262a1865ab277c3b6f3619641f5c519af5c2d87cb3ca8cf75ca767d5530dd07c22921c82e777fcfcada02452a1695edc70d4ee7c0a7ff8973adafc85c7066d0f895d7bf98a368b2fbb61684816aaaf6667caafd32a70eed0d81c06ecb1d835d177e5b37613e1b7f6835bf459fe148506e0ef240ce53604f14c1791a4b6b7d8445072f56d777786d79e7430476c074d29ba514a4337381745585bf18ac97720aadbf02164427b92f6764212815c5c278de0d3fc15caf58fc4d090ad275443dea2392b3585673ad3de522ce3173549a5a7c0554ab5c5064d23276d691d25f142920947072ddd8a299e69176eac958b22877bd0f7d5a324d60a83b1c663148d3cad17b9bbabff2e4cc2a42ccf78ebcc06c23131bc36632ca91dcf9e6f992f7b1e1d630e2ed537077f1f536a8a6837d4d97350c58c8ae0a25794efe86b59dee0e49ab4993058bf21f7573838684c711233c8128a73ab8765829053ad17a41a74a0cb669bbaca8a4503329c89f22a110ec57e7077651df25f56e51e6e9676ac33098c0ded51773b97be1ad1cbc4d612c383086205ea91d42499e67040712dc3199392b2eff186ce044883c522b31c3053bd0a1aa26daae36bf76bd7f5cd56d377e9dd153612df2b1aac2e9edc9158feeccdf5c3ebeff5b039ff32fa4def3aa11369f7b737523be151f0ded121e921bed7edf8985a4da263dc4e56b1ef10a8df19bbcef25c3ef9f30b0b5b453c96fa8d380937a0ba52d7febcf6a80d2e82362fd147186326bf4f14f8c74c05411f53250e6cb3955c1b3f748f8e482bd7b43a3b4aa5a502569488f7ec39035f5070f69f6e7029cd5e54cb7fcd152e97b0e982ad212108f8db5051e7e778d8a59fda80688821dc34217000e522b86cff4547967830461b62ee93ab7dfa87227fdf9e34c9d4c3ebfebbc881062697c11efd7e71124872dd151b9196b8b46d74ac18240b9ea758d47615bf76a4f191b800fbc38ec8f0fe62172cc22a169c8ce35f57476a1fd658a41f720e5c0ecec5b36fb288521c8725ababca7f8a4aa8e93a4fdcd41ec93e1b059322af1780d01644c9781ac095226bc98bef87a41a509c81bef8fdb4a8d2759f94bb8343afd904ed881aca82a5e36ab4532ca3a8dcbf63d5d353a47f4e61c320eb0dc9a08c2c5c4e3df2012bd8b23c9cd64a3d8bd023cf2efacf934e3d7f4ac0c08fff43126547b423b0719b3e577e819ab048904a48c20a0eec55c94ab0d41e0e8301e51752971dfe3ece5725774776f8f3258018d518a0ba69738f11a09cab27d0978f4bbc4fa46b8e26c20c9e28655f5efde70814862690b3543845b14d947e089e7698af818848951a680113d89b3b8fb2b578568dbfd470d228ef823659959a08af37a282d1b4f7860940b143181527e8e6ba005ea24539d197e9d645561a581f5e280b44d80a4fcfa549e8c5c61ad8886412eb8b3f4699424149592fb5b7e35f481caf60964d0ae0b6d8c747c1016b0a0ff6d9fb983eeb7e560bbdefa6171b01048d089652709d6a1a985985c9ef59bc2b5a91fccc1a8226c6373ec6cee1c344bb0de26c062b84d89818845965a49d9b22c0b58a52b188b41478b144df4a6c61f4bcf7407135783088e02e4daa0acba02fd7c858008b1c19ec3a1e8a71be91e65110b37a39934a3323b86032725870cf66737d0c01a93ba3244f8b77cd9849590cc4c69fb136f87ecc6b30cc12868197c425e0336033011a32edd93d13592da4d9d94d2efb8e7d664a362d31aee45c69b040bd93c8038ed905094df9c6d5ca7f260baf0ca23b0990a83ee6b82e4f4efc24ae5d05c12711cdf740f96a027226b5f446fe3ee75f9380c9cc7b68ae8388b2e7368673f3781a8180241c5c167abee4eb5c24f1023d3424e7bfe6539d21e27aeae0419e57c97376916a756b9a5b647c6f1b4a1dea5225734c339204e85eb1360e11a8d76b0ea2521388ada1de8ca71121067005d077d895a06f1a2abe0ee05eec2b96c303f0d651ea10cb064c93fe89433f9ee2f2f43190cb0c1fdc6b8376f3f5b9044e63302871ca4ba05cab140b1889537ecc812e8f73bb8458bf664166a0ec676a2ef0f6b78cd4a6e696947dac23b5c894f5954fa99b79d35ce16189b91392537db223c315d6df9ed1c2e31f492ef7490d77d326b8f93ccc2faccd212c775c5e36018303a570bc9d32430f3de75e8d90693a5e2ae2827ded57dda1f679586e7ac3066c37e5cf438aeb9edd17106caf468ad696ceb192fc4f68d8b9b2670990a9299ab2051b483086238cee5d77b59a2f3cff08f0d1529e33601117b6e5a0633e1afc45bdd473534592eb5aae78a876b1af72ad5a195b79a2332932af42a64f344fa57d0ee1c14687c6d6d6c262f9ce3cd9f5b4b3168a0c2bfe6f6c32287e128b861959c3b851501a15bec55584118d9ca5f9a70d4c5589749b06493a28dee936f6a7e05438715129dde4c06484eba78a6bc7201f5da5731fc218ab74d2a41cb0e21d1cc2f142b2d86f7a0ccadaa4e236fc7d67ad53e05121a6759bf0fb1d3a82d26a9ab501fc332c3df943f6401c405f23d414839489920870605b9c3eeb1ed42398ea88439bbd7d6d7fef559444a836831c9daf4b85016253b666f699cfd983fb7e56947a8a1c4ea7aed77809b3cd4947b38779fa23fec27f948fe7caac27190034e7f2931f1a3322a99067103370b8a67db97989c530686c3583e6f2068dbdb74b14d8bdd1b56a3d072b1f8960482c9e9dcb4b9106de638d4e63666668bed4713a466ce034ad9519b49bf2b1872d5ece11d3b1c41fb91a562ad45f53c17af6e4a8207903ff1651e682fd66e560806595ad23594abc4f64d1fda172851679f0f0abbef9489035111f9ac741f345366f748a0fb972d5aaf078b598b9b5c7ebffc20756c698762e7f5d81f941a0594c28f2d4525658253d6773d8afa418f1c3fccaa760d1e448e718f02193840c03b362b5c2456a3799da5e0dfb75344e5844f03312e979c1401367bd623073a8c68f1aaf2c472b545d3c01ad2e66d65b9c515c65f44a2da7df73b40abd175ecca767598d4ad87c29ca1f6f0477073580106682df274b57d6136322d617e6b760f029a63e2771fe51c45f310c1b4ff9afda2ca0e391afa731e33f2c0a893b74fd8dd7a45ca8b9f97c18f6a7d83a5911d39a3ccb1ae6481f6d7dd70139f48b4a70b2118e27aaeda962fa29665798bb589b33b3d4473c63ce7e748c25f1adf94c7019e6bff0aabc61aaf89f8c97e40f647356213bf9b12bba2db17c25f2cafcbe8c8d3caf6ec547077ca5f0c9649d446e9268f8193ee52530efc433ed0b6b1d68e8cacd47e96fa28f77abe9068d71b29ba4fa47b12143b96fc2924710064ffad839322f801d720143536c47f1eff87a8be1b4f2454f12cba8a915f3e0067327dfd9698e2945a2c7f231a3be09a9ef1ae80bfb068ceead73ceee92107248e40d2ed0c98e0a3ce08486c7c3065869687fac02c82f88a09fb2c71819295b8d4bccc03709d53873ee3323529ba4b288817263fbb09609e76bd18e7c4f63d9b3dc3941fd7137f2dde07d915aeae9dc8d1971d8571140c74a8ad17aa0924b3ff555bc58c9d19f96b12d84a5f8b3422e783f493e981639da832ecfde27687d1de0aaf5816f43c5d90b5f821a956079e6c9fefb64fb3c0a9ff875f8a8fce264df4ccad827edd1783a6d7147c2f036d1955b07492a7acd95ac3bf06c029b5cc908ade2683ddf8ca258ba820d3a6530035b094a43a38eb8b5903d4c876ec738a511116d221b2a402e1c106a8c0525ab7838063fd9a2db792a2fde7c62536c3ed196956637644697d9599fddc598fbf4b8c9aac14494d3d478267a6a4261d1567b189ad295b83f5e4c673e7d510a94e55f6ddc4c013904bb6a3ef2181fdd68aa85fda4fd2466bef6ecb5b07edc771f7a01cf4ab02ce4eda712146ca28aa4e0ad3d04f9cc16d1439b617f40ce7e5fcb43dd44c522bb602441285cefd466c9cf401a5fb9a4a071598cb079ea02253fead318f62d517ac36dbe54439e065684df9e59e7129a2ffb21d1f51d45607b6be394ac7d4615ebd718ad286e44c0be2abd0130f53f64c45a455800ddf3dd0acf9fbfab1361a611440ddab2a9a72e5e8f9b2937a92b8c2bb7fce09bc76a0b3c8139becfb8d89e073d40ae268ebe4ecd2399a3251401aec891e0a563cc586b421ffa34ff40bc8836afa617ac2f4306e4e15a1dbf658d0637d93d91e0e2fad053feb7f46406ecb7c1a91c45df1d1834b2b49a697a5db12b8e6b720193e22e231040f2a0813d3fd4a1804ff106443c0d485e924ee005e51258732e6e788e87f9f4d734d6fefb0f843718670af1a7bc64d2b4c8d641b949e492fedf504ae0f993cf5f78b9db52195d02bb3603b7d0516350aab0b80d2a7824f6b8441ebe614afdb58bd6b39cbd006c2967b3632fcb6ec934b019a8a44820c07a69e3638dd182ad3bd763c9dbeb9ab50a2da362c79db014af341d2fbadf49bd9597a47a475ed0f02554d5157079e7fffdbee5395dd042a6f40935faa7c6d154d336c8296371f52f09a5877a81aa54823ff8d5c0c1455a9b669c9aece1de4269595b906ed9bdbce0a3bb80b0ba3ad9fb00acb5a931991e32f07560f47bb06b42fb2c74e0eda26b1db36e833442c73b1aebd681ccca9628bd40db2e73c1350cb0529d74e00e713436d8bef59965c391b22a1185e250f77a521d29e1fc8c07b190238084e21da116cb64ef150f8e9283f2c9ad44418846dfdea4a3f26ac95b1bc9ce722595755dab887046678533ea6cd2c6d368dac7f47cccf78545f1d778f9690e0abceeb49c584cf180f877e25f56a47d525fedd89bcadd4a4790f335edc333bb9ec765b0570dadb33b04a47d67b292ffc411e9d7376af84b8aeb377758c4459f5149b6f93ffa7d01b81b71fdf71af3b73939767477a6ffadb03f89494e26d048a38f3dbba928ece8c565500a4348b639a05a0b71fd91c8421b48d947dc3c8d3b65caec4c741a0f28c8ca444a28405183b4039f1c35e615662baa9961e77ae97ad0c987c72c13ffe76c64aacf12d12d57d71f63a2fc25abacd90c10ec6b40d773912c4d69fd1229d4b3f8b740e4616fb421892c87c3e1718c6668de5f0586b57a1ec7ebd8369aa9c061fae9612ded734ab9b0b0735ebb7e4fda6b201e2c19833be5dba1ea3f76469123e62683cdc989e6f963f770a76194118d660a6da731ab6baeaff6a7de69f12f959c49efebfc42641f4eff434d2e2e1b5f82bbc0542cd15de3bcf14afd2b48b713068a2db1041d2cd804f3f20ed83d3e8f60f15a4f23d9d958d24434a61da4f96e2050510b43a9770ce0da4dcab0c5ffb32c463a5af17d2a7541221bb24f9603b9fb0a2c00a42332d03891164b979d01a1db93761b84cae82bd82a7ca77482c2d769154aa5fada091706d2e94ccf8e63eccc3569286d7ddb43028d18e41d6509acc4c642b88231d4d2935339fe78b6c2fff3287296925f540b85d316deaf7c3e14dc4f07a86b7174e7e259e29eb3cb9d3bf12777ecf9488980520436bca6b66ca62f1d8a6bed81f05676300f4c730c4d0c1f524a44eaa741499bfcc61a84ed42a1ca958345860266a271d9e12feff39a898bf871121d6ae4b90d144be814f585826c42b491772beaa87fcce94d59d69dfd19e0ae6367fcac6bb594d265ab6485aa750dcb3e8b187d27d61d5f7773823dbecc97c4c05b0e062134f67e562de3d2251e27ad5aed4c7cfe33ca344c4fd94509f62c4e783e3c2a6a2bd2fa17fa06e149c04ef37cd8865a82dcbedd8f676ce783d00d8df01e0746a0f1e41b52e57a15f1e1a7d4f9bcaf21420385723278734f5e4cf90c8845a6c707d20d8bf91eca4eea3dd1b1e3b00e374a8197f980a5a6fe4cf9e97d6e74341c459b3f84e8dff98be612376470d1a0fc2cd9be581ab34eae116e67f98de9ed2e0882960f96e06a26f679e4a1d62df4341dcff2def3b32c80ade0293d09f542444e58ed686d15e924c86d435d052347a9db1edec6187d05afd82ad84a84f54463c170d87a6c6f1cd5de9e5d1d3381f5945bb82466ab2bef1d1e37fc93eedff7afef6eb82509f5e1150bffc6fc6b30b3a307192987820119b4d10eb66b21267a6d446857dbb05eef7e6067eb315299bc9540499d7b74e4559b044f154bd52ca79fd0d657205dcaf039c7d9532578a0fcf28df62138fb5473c5683056001883a53001f920b1b391ad718df0f53f148fd212b445afbba79c80fc3c1f60c05953d9683f17700c5474ae06403d319751a6662bb05785c103777ed14d6e8e4d54e8a70e132c1f2d149cf6ea5ff5b2e022c65a535f02fc07bebd85c9475df9a95f520ae219ad560bfd5a394b0427f1b0a3efb00ea448b7d6cadcf7e75c72588dab8584e1a0ce8f9730b986be2470a285d6223c001b6ef850d821eaba113b7872f72c0997216e3f31a5b1e733daadd7f56192994a3b6dd6913a35c7cdcbe844e8898ef0d89a3d0de05dccf4b26fe983d64e731e0ef1e471adf1314038e9923a65f15acae5d14738cffc0c5da1445b4b68fe35d0d5c2c8a86b35e9536a4b6ef87fe40be7e1bc1c2da7cda2ac97e35dbf3dd7da393f2d5ed5399397dcef8824a2105f01d2cfb624cb9b6e841dde7b8305f7b4d7914021ea39d388ec958737303c97f7754a7936a8e676405f4bd2b5250214fcee6e60c703f0247396844d8fe92010e9ab5cb2bb975e4834383972bd1c0736252217e91968b8a1dfd9e130ff6b3d0d1391e7265379b90d2988b847c11b6c6fe91c644ddf926109a6fac610c3153461caa538ad0c4c22a2d04d783d9709b1a0e9eb48e2393185613dae193e3e3a1773b3b651a3ea61d6081ae7183af1b893c27bbc21a8afab2d3c582f3b178f0d6651573e2ea820c67f4cdf8554bc5d3ac8fb809db452f8b2b583a41b06835bf006a8b72c8bd28636e083cd8a85283662b342f9c8f39f671625b71cbe3c923420e2ea96c925a6c04a9f1e0d103885002e3a31c3d3349afcbd00c4be7fde86c3fb5dc61c0e24ab410315890d1ddd25a89dba9f2fccb900d6c1d232d70416159bcb21396fb72b5dbd32110cd0afdd662f33596e09c129b1a65976d0f5f3c0fad828447e8defce8612353502813e41c23f7b0fd82fd5e93d42409d13a2e92cc56908b5e3e573b77ab9f1268198a091f1bc122a79bb449a1af36b691000a211f12da96a763fb5e9e2991e6fd67297b598131cb7ad5200dec4480d5695d4df2ceb91787df58da5c81700b1de0d7fb8e081f164608c3bdfc55d855f6a7d29ba039b2f96ce2321a99b3f1e4e61ca0cf0614d4681cb79630fd03b013646ca1ad764bf8caff324e84da66db1f51062feaf029a129a380cdc34096a958d061723871b3909c20b3bd112228218beeead1a210e10056e0150c3f3286cc15207969310564afbc0f0d0aa0d79f7ba0392cc9629268a877ec4d60d806e3a5f47f067a58abc7d3895be183a0788fac09ea342080c9a484b0fa038b72fc305505f47fc85a38e63ebae42dcfc5391117cb6cc93dc3ade67b77d89650656228f2f9c831914c37cb02904cfa8877bc3eaf9d2aed2a3cbdd9fa3ad21851437ffa05331ec63abd3f9ec9be3cfb6ecfbb49545510691d06aa2a0a9475b01032489ab029468d37c0371590974f868207d93a94f0cf59666f88a680ca19adc715f3ef86822c7e1f029ce67cae1799fe0a8533a5074ad886d65d27349bcf0967b79924379f3c0d4856c3b146b4c1cf82daaff2d21c9616977b9cc413c7ed7aba94ee40b2a824ffcc9cd12f725cb57314a455267f9435c6702a276a0807d0015d58a7a1e6768f75146fa48906797ce364fb9f55abf3ab0d74a644a451b738b3801c908a7f3aaa42509190b696d1be566818fac01b88073a52ecd6f8b8e8ff84ba2c5f85fd42d9d3a468c2aa855f4635f4426d618aa37f055c972dc358363bf14bf56a990fed4a5443db90c07f4fdb20e2daf151ee4e1d9d425a57f5d7ce86751ff53d9e1c3d5234afa7e44d1dfc2eff5c49236cef85d695245358e2cbc68e393d2ab07cf9102c0912d286692f12e1b800e5085e6d6ca9a7b0de7ee408f0050e7cd265a325e59c0ba16c2243f6ac1aab2d009137a7817e89f97e04ebecf4cbf05136cc452137af5f6e7abfe51fedbc42c5608d7cf10be29c3ec51de7bf186ad10fdb89ce7e93bb7bdbedf0c43f9aa0c9b37d4f024b5231736e43583cbac994ab7ba85ac97a62a4359462f5db3d69f195df87e0ed8e818b9d5b5d45e376b7f99ba875910b4114b37e5f99df80d5bb0fd21a1a412bcd000e6040a73e1e6a48929c68fbc7b20589bce7bf311d7643b0e9708ddcdeb221bf0c585a978d8e2861cc341ba93cd805ca4e9b513262b784eb8110390bb73544ef6b2dd9205bcd5b7759338d5678e037ad37288a1caa3b5476cac98b90e35fac7b8f442aa8e8296ea5881dc9fac36066c036811f968ebce4269a59466cb8c672296c192cc7fa309d18cfa4cd6a6e28bcea6239477f781805c45093725f07afd588180c8efc84037a5cf4220cb91a4bce79cf55045024f7aa14afaa044ace5a66504e586e695604b8d2b1941d224d958cd056ce2d8a0bb592fae66fd5fcdb8690533e59589f71ee39f38187e62ede0c615430ad87715dec3ba271c045646fa68a3738c50780942280a760144b62c912665bf9364573739e622f711c8bb62451c3e9d1c7887f2375895d1c9a8e30e68aa19f40ec72d1a95b16d1039bacdb347936fb6b1e814f4d592abff0d67849e2b018e72d3da876685fef691b7bc2e602fd4579efeee180f0b5c2fc08c9ddc9015a2a67b8780c210c2a4e566672effb3810ed0f5f21e2324419796f7e8a670f0c04c6136125e40a1cf0f83c99f010fc82370c17a4d9c27d33b4142b5a363b26da8f541ff485051243117a287233465768018d9b1ec5eae28dc5c7bc7e9b6178d64c603bee6bd90e405b4b1f49db6bf5f42de0b2389c6458c9ca182491de68ab82145251ae8802bcfb05fdf3bceacffdbe0f788e410e5e8b83755681a35b8e2678086adf36919b7fdfb7fce0fd93dbb65dcda3340289405c029daf8cb56bcd182c7e352e0617d8af6bb8db25b6cae6befeeb2fa9520a8ad18c64d969931c6f69bd6b66352d9e952fea8584e4d434fbe961e356979f7b20f0ff52e190b68858e774e44c053e0be5189df7b61a492679fc75c84347f2c8ce7469e7f4515e11642239d8e482fecc98650217eb629bf3e37e4e45e56cdf071c06ad12c759b58ed49ca8d339be9da6076a137258ab850524fa060531ef593855430d6d7be69116d3757e5b4bf81cb239915385438510794ebeb96b3e5e303ff4e982de241158c196cc0d1d1542fe486984afc7819c40539f3200c35568998ddb527a9ee9fdc78ad7e78f8241231020f523aeffdb2a2a504ab64e14faf6a89d90557f6228193aa5f5c9222559b994d43151d6bf3cc9fae6cfc5f7ecd0aea9f133427b53f7cb5cc521e0e9f7b3104f7258e0ef21a3af003f0c73dbeff16085b0acdcbb56c831ac64d0c008ae4d3e07a6e6b6cf3a65bf129c08c1f17c5b3d9c7cff1bdfc188ebb0c5d57b2e79b0af8c22a94c14d2d9c4c453aff738495ef8502f4a70f13fafe11c28e62918f24ea1cf0c757edc67f8e12c9ff1c2dbdd4628af566d4d811eb820a64a3cbc69d93293d213e54db097917ae38c35b90ed34f31065d1fab478361559c3f1ccb82e5f7eac74392dd7d498f0380689e0f279f2da9f29a2f494927b73bdc9531147d4a3324ffdfc1332de0325f0de95d60176de3dff89dc96825c4d88b96ba714b49d67f2f828a8b82431d87dc2b68c604c4de40e4b0d7fe1e0a04bc4318e5f32b7def3e150ec804255ed65a4f990f693559a5c4e9423043ad6010735d2760b27b31a9fd23e5560ac0472a92fe526d841674a559a8d4684bb67ec019d5dded8797cfc66f442f3339574d6dae767da7cf74e53e42fd507c815f2bcf873916434dd8f69a271b47318328fcb0305bf9d17d17af92c046acb9281579c25fd18af4a937eeb5a04e89c2e613cdfeee02abfefb5f82d47f309405f09b76807eff132d7819cdae17b58e3a8edbbde05f3b17486f3a6ba706718ce2e828026368347877d91252d68bcba58a33621cb2dc3848a0ce88ce8fdd4e5af617073b99f0038514355feac82ac073c4927c5514ab8a60232e48b42c384b200ac1f25ed377a0333f1749917de5f03048218b94eae52abab8db78296615108063b9c66b8568caa232a2f038105770af8b0d729acb0c05966748e9d4e934a2cd009683cbb21378a17dc8e0a39248e53b994c8a98a52e7af51bd6148846b4bdd21fb208a3aff01843b0283b8f2872e0bdae0db0657ea96258d9e5d1022e93df96d112e6ff97d36d544f1e840f4610e21fa6af38f4b78b77af7ce7f1c65d76e57572914efd758f2c2348dc46e2ad05dfb3be9c5468d630a5568032690cf867efb3d2fa7f29f04fd6c20475506d02bd002886b548102ebf660e11b73e0178831715eb2e6b0d0e7625d561eeee46e36b916b3ebd3a08d20c5f9a0f1289f4d24f92cc14cd5c1cbec719c15632908526dfba29ad74b6919b997a6f1c6375c4c0dc9bf5f61b53a2f5db40abd2b4bca119ca030166a24bcc043a94da47767771b05c3af0997ed9ef591e13463a4d462e27a80d4443ebd88f71ca92bc58645b701315a15bfb6495885fb36c61ef141ae6aab4362e9955f52e3f15cd8f694f49d5aa9dcaf0d65ce99b47615b92317c5d5243fe21efde5ee8d5ca948efefb936057e66da5a5a3ffedc1f2eef7849c459fbaf4d0dc9642cbefd8260115fa14214d012b610941b7109a9ad9f021a5a0883600a5efdb6b909428f8f7e7fc059167bac509e5facbd15cc0119dd0262c0339d520a44ce175216ded868040d9935cc9f227b3d137c3608645fa3bceb4a8c29cb488a8949537fa8c3aa65207c7c2b7fa462b438d9bd3ed231c45222dfdc51755aa506edbd123668fb8192a8124be2c05bc80efd2a589cc2d39dbc83c4bfbb54221c59dc2fe1e950cc718e6ca1ef97ce5502cb4e9364ceda4123bebe5728c3a6ab925ed1f247c9d3ee12d520123462e6dca7f1384c0ba8bad29c9267849f602d0679ede1d1449dc59074b2fd0b17c96f1e7725eca481228f21849d92cfa0aa83db7f8937af40d59be38f8eb40b47fbdedfdd42fd9944c3e0ed7e7d9396d9245262a54f2ff5360def63822338ae3671aefbe3d6e18ee4fb2f263059cf9f8bcbc08a252443d8ed6fc014f485d01df44a3dcf05cb7eee3891e436da5bddb827f9324f7b2670eee6522339f8f95ea8bf9e2d4c42e06d97b620154be70bf5c258b4c52a09531e5092c4dc0da2aab7a55ed5f9b10535f97d50b6088ab62268cb6bf9460cd39d244968dca0b9bec6a15e006d3fab2fb6d7fa0badc9d4c21f43ea3338bb61a6116817f398b2f7ad548cc945d4038ff17c2bb0e02483b52095bb86c5303318f72cdf3b2148b60f9f04f888e84a3a8147b42d1b395c26b7662ce95605115f5df07b6b8511ff9adb4049bab55a42e8800914d932379c3049585f25a21ef9ab00b9e717a19d78699c815bbff9a1a9858d5ec42252f1f160a94ac47a8f36f8dcd9a024e7aa23ba1401c2a140e7e647bb86d454f9bac2911304fd97f823a7252b81f93170c3a30ac2bf8c7f5e70a09e8505607ec07f6c7029bcf6d6397fc11ea2250b1363dd172814b74cec38a903524e3444c2fca2b0c26ea297fe77bbfcdb6bda3c8f75d041bc27e8bfce23919b08c05b7cb91a55952f766d5c9cfb1cd7c8283c37379da60d9101a27cbe5bb394bf4c324c939b5031c9d051e00563993ed9fa2786e7f1f0110f0949b846d2df84bdad514071854854680614854e7a5dfea5ec937b07ffe5bc316307dc0e78235905c410b0894e89d5a50a4ad0c3bd9c7bc6a31ddd1752f8c44b826639bfd2121eb8fa00a9137d22e833eb98ffef9dba6940648b06469f2281d865938618dc464809923bf4ab527d6440d07e50f361b6ea582162076e6d198e4adb225b8db760ac57119a6c5b0dd1f401d66d01548406733fbd9e4e01dd8d1795d15051d7565c74beffbbb687fa14fcf3aba9ca4ba43dd83fc591355d1b0ae7b9d02cfac41bbb994344c733f8bbb20d6a63f0a8c477b2497dca2059c4c875ba08a8e1db9da7f2d4ae905e4312d77cd261613269414ca1b3ba0a2ce03408e9c96973a133ab902e762b98fd17545858c426301b70ea14dc2fcfb920184b39949459d8f105fae76e954cfc35774139136a832cb21aa626c1e99a182e895ac827b4150ac6950d5381ca6361cef7dae8229cb44f6ab7a8e64bfc5065a7ad2b260cd2eb5a080718509257c690994864296b9754186997ac304c25288608fea38f01b2bc8882841ca827d975ae256c328b06ee87c18cf41a8a2633596c48a8e22ac0d39143031e6ac535487e69e9c2e4c10f07dd7e5365ac2a3747770667881f0f0db721f3278cc7432781e3b8f108f775d02c6faed8a0c67c2a73d08c5e3ca0a64a21efe37fde3304a2b3638e119199eae861612280974efdc8a2602961e82d6c204efe446553b94f06f4e33d4aca09fe8277567fd45b1a7a9ccde7e7ea6c93c3cc80353eb5bd009d9b574c300d9659ee02fc843d4667c1d82b2069da2cdde36a64e7cb88615a11faf3ed096009c7fb937c4b08db236e85e803d6eae1be0921f4481121e3106bbda01ce208a272c10650adeaeb34fa9bc41160c2f2b6a1141d604ccfbc8389393f3a83a33a079897fb2919302d3955ed2dcaff78236b3610a6446dda004d97878a55749d536d5195f42a8fa061e077f4eb5f168777c1346dfc1639f84dad48e377895f0015ac81b43c440c298f28b058974844c9f1db26ec62abd36f191d35d1a29bf035c369546850528e1823ff969d893839440ba1602286c68928ff7b71ee423a2606c80d28ed3e8800f20d17a2172950976a236fe5a11a09fa5b115b28b3c9cd991b7838728043932306672026bd2274823ef5ed25e9b792b49f927ba1a74d2259891747d456d0f2a01aed92eb1f0a423fca1e193384200d8c3dc5977a177ea7593b8c4b890fb30eca9047dc01b4df7a0ef3fc8bee480f4bfd23cfebfa3d06fb1f7ea6382ffbc40620c3c14ec9d3150e324d2b06ac0db349d51084787c8b7e72efc56680ea5192a4c1e43de82420f661c70e59d02853a10898679e3f7e022884801837aa492fd2b8b527758afebf5c725f9324be918d1632d8b638ce912125abc0fbe5aa4e466e7d191dd1955640b65cbe16658506fe9e38fac9d1c5248f4a4a7c520e0012ef7f5a884e229901993cef3967a9f6943d12b690e74207988f3231658d0e34e165452fc9ee188360d7304424949b2817a03e128855e455bf2afbe0abee77bd3578f17412ebbc17a0395103b5ad60bd62b19aefa258342c51ad5ccff7d1b0ef76b6bdd0689f74a4de84127b141de6794d913f3759a44b4223a3dfecb33f5087afd60d71090edce5e8e04571f809e7d1fd5a45d6c01ea653207d090c5193b8d5d2c4712b195e7c3f60702b5925579a56451c116769f1889a65bbc6a25dc52967ef16cd7a3ab09f846b7f06da60d64ca7f9e3396f9ce7b787ae98a773eafa4e1eb1297097f79fd968d7eeb16bc43f41d5739489386e2efffde6842975389e27e5788f5eceefb54766774165786887c0dd2f92f04c6c9659cb95da60b0616f5bfb844a92fa19666f2980120250a5faf85e2a9941a9a6a1d63a9a06a86dea36f95cc9677b0bd71ff7db301eaa631a8209bb0046c96a6a2be7cf7b4132a5157f462f3e298f503e28ed3aac81186e676a2a1a29274bac2b92cd047a32f7e6f6c645065d587753b1158d83299477f99e7f19fb742cb08d2687a1de3dec58e89e6e0951ed4ca9ab15217b455f106ef7706f0be668301204d03b31d5215d8c6e0a88e6d324fa7230102dc720b36aa15f32c78d9b6931e33c14f2f2ab471210751e63db82937d0fe9afabebdd4d57da52aa91d842b942708d2def59b032b8fb29186958346618ddc334bfe5154ba926b4d00b7cf39943f7dbd3ff35ae5e905c82c59f2b94982bf052b04e8800368ccdec1dba22955bf52e4f14fffc988c7196fbe15ef8b3ba87b081649d979ad5ff79443911bee2f1531f61c1f5eb4ac82b13a9bb95be4ff0619e4bfefebcb4ca0d1f055c16445e38bf84efb3b0a4a1f30b9663eba7aad81f2d92a0af9998015281bc60872f559d5b2f61f64992eedf6d7df497bf8b7a024f043480f4a16f4ff6240927268b053e848b8bdda57d1c5958599f4805c34b1b118210bc803aa14c380295716a058e02259a71ff4e1664f1f123b667632aad1f5f0b849954545f1a4f40f312cf7158b921b0332ff7c7f634b22aa67023d595cc47ab59503c90154c1f8bbce905b2bbbad83f593bdb732b75f492568426ee8a6a396b739992b4959d617e7dbd1b7d6b5dbdb29dcc07a371334c94f6c2d6bb439c96548555b850262b8f9cc647d316198551b7dc289a9feca47d20928441aac9ea82f4d99abfc79532171089f847e9e59b5a30a53747c9ee01db57c08ca6904c0bf6eabf86a1e807fc9e92283647bfd22a78be7ab0c9f56321698a51fc046f778a6c63469f2e56050656d7e533b2ea6fcd23cfe319dd4543df5d63a06daa7f7a85770c2ae63f498c34a4712a5c8669a63340c8cb13147b215254c49d63a3c1cf7b9b4b345dd2dfbfd10a3a432690e1413a178c774cf0d53ee9282db06a56f86f7e61b82c226113a17c2f0525585880bda9721848a4dfce17d0e62259ac1779e7806349d5fbadee9981f8301e1ae4157bf553b8cea340051bef61eda656bf91dcefb3955bfe0c05e73f9dd0f3019ffeae3823f1a087f69057da7fc26e2978fe9aea717565f2940d7eefa3139909bc6ef5be41159b7440a008c8464fccbe347e5a2fbcd85f679791d1913420124d54c70d108f9f8b44455481ef25de60f751955a05c860e6cd87ca566c99d19a09b93a4dff43cdad5b1167c6eb31ed02a27bfdd149991fc9fc2a271b74229a2c1b1fe0843c2d491f4649c4e29c6730415aab8cbb7d3cf0ef6f75171cd7e69474f9f01b26720ddbacec7053e1b6ef87bea5f8d397dffd2b445bdd2e5398e4ec7044fcc25620a240724b7969d38cd3a524b66517a6361da305bc20af29bdba4183247810fafebbd4d27581e0f2d0d0eb6bb247bca0471eb50a9e28568dfe7ec544aa39defd86e721f9e53810d457c7a0e3bce7649232182fe89b659456b3c308ded29e7ab27c138cb741ad6875c30130609ad53cb72eda9e826ed04218a2bd48035712f3ac5ae1132b1901c4a15dc067bb7300c2acfa1eec1bb132532f9b08ed1f0ad70316ef940881bc82a1984f838cf52bcb7251ce847f74c0fd774e3e3023ab78c121b7e2ec52e001e620d29eb786c1aa29c5969dcc5b1a222e03a4bcca68198e0bd6caaf12427cc4c056ab7cfc4f4f8994601c54768cb5bf4daa202a8ddd869249da211043802572e2e199b7752b47b64df31f7b2652325e9e2d7d8949ffd57b8aa548ce74d8489d7a70ec951390867e8fef9dc29b686f61f6454105d9a4dc659da4fb501045d0430292204018f3f977c9b8fe06a78ceef4799fa00791de295666ac2cfa759e92ee93658b61c95a1544aff1e40aa34100d45380ddedbbb5161101b8aceddedfb97c1b1a361afd644562b98f26a8daf4bb13114c99da9210a62738f97e42e19901c893baa7de1b93790863637cb01c01cc33a76c760e7261b6b103227c288eca3937a612fead683d1418b3150e3203ff7c967172a0b6b1fae1a13a849408645dca4d93df136861010f36ca4a55e80ea0192cf51081b2f343a6acaecf9a015d20680807615bb1f7dfe59cd7084c7f9f87886616d0344ff302cfb0cb1ef43c6ae1561d4b90fdbcee7e3e68b848a0f3073d12087fb55cd81f3b3b9ea9be63ca65891717b3da079052815d5bd612ae2a7fb7b9067689d25c8834c16f2d826575d9539c99bb63f510216fcff85813b366fa0467545776bb830fcf41e9b417f32694915c8b21016be990560addd4b98185c94d0d54abdb262fe0c3b9883dad98327b784559825193e0c2e74defadf0fb14f73a73404afdede459ecc8ab8ce39073f707e1f3b534ba1b60e5171416feb4bf46a4c3fb6a9aade63c3c0c29990aaaf4bea38097513464879ca4e23772c9471a818415e4ae4a4af2708e3abae129a798cbaf22a4ce5d360f148b1f11595c46a05283e4a4698349ce4827c1a945fd58a227a67209850f315683946aa7daafb09193caa3bffd981698aed9bddfe2f86241a7587bcf3a9d9399eda98c3a08c4fb411595468f0de99e5d39a900da44d13b31d70037759a1d1c4b6922cc3d4970bfa8ec8cca9b16306ce8c59cc7e2b7e5b33c819d4319aa275fc18a66d7be795e316263f799df2e812b61e2919937dd171e527351ba4ff15b2f2708c0946d61e03e454e2d648fe0d973fa51aac16711788ff8c926279f4b1f083e00761267e082fea35748978e674696c67fe81e640dd3c12daa7e69e7de555135f02b466507f974d605a53564804abd5a1a2d020274455388b0b39028beca746f55d8033d1e728d76e2b83eb45ec74a9ffb542a4433b42dd80ad661972d89b88644a05e94d35826696e59a7b2b70ebb0eb20991f8054f6355d700e282c1865c45b054c44a9be9a7b6e48cc9b9d7d018c69f473ee5a8953e881358553c717f0c3e94afb1665b429c187e7d25d67272143d2c64d864027f71bbe12c2769490498eab97401e92a8a43729f66b8209cb54196fa3efd230530ee55ffcf18eee44478cf294ab7e356f24a55cd42d3bbe9597d88bb11bb4d73c3f742d1687423580aba230b859a4202721d714c0635ab4f8f93d2bc32543481ba2b2a85353a876b7c0d1a4a81936d9e07afdd18d6a102140e98dfa8a2acaa7437692e44b04d8ee48ea5701a0cddb176221915e1611402be1f7a327afeac4d2f3c359a31acdcd17c9fa7731d0ee8b50c911f9263ce74ae2e03718aaad0d03042457d32e63a676d9ed33fb8740ee2fbec4773e7bc25ddd15a38233edceab1f68ca21d639173a43a608eaa3f30651021ce6cf25f0447474f09cb2a7c6184c055304710bab3a36b72a7f845384d523fb322bdbddda5c5986e3e43fd41e1eebef8ae8ecd5c3b176a51c8eda6709756e81c198f24af63f09554078687eef4c2e8f7a4f53be706e8485d01cabf96f35a3b67c43b45e75ebe3fb80d7ad63db418d27cb2cb296eb8584f23bbf7dc6a11aab7748323e68bd56d8f8ac673bf4c9148446104c9bdf8dc41b3bbcac3218f2acd6f0d3e09a98ec75b6bbb48a0d9e476760928ee0f94d960b32aab777d61abd559acd8de8b3686b267dfb5ef7d971b7c82f4e54c48953b29fd93671e8ec0f59d630cca7af6d82161532547799e8346e5be302fd1613f9c627a61227344273bcd9126f4f81285be06d955bf9a342144611e2cce00c81420036baa13c533ca507bfb7851da91e8aa2462bcf9f1f49e3ffb5d603a2829df9ceeb0f5f2bdfb434d3ddd860db0a2849eb6608ec0890fc60ad26d5e19ab135eb56dd0053a9d610a6e8e5d94b3be7b9135d0f78803e2d2e6c659b109034f1da86ad5a5ff1421a74ee9c5c897365e8c3e3b4e132bb991110ea0d61bf57101e6b315d5cb0d3e106365a7f8c3e74da8e48fe7cca3770c72f96e95d9f148d8f43ab2a29ebe44671dedaf51fb677c6c5b83e940d13b63d7f0743974ceed0a71dd05fba8bde8692c8b3a95ed5dd8a3a080d5ff615ec76720c7de8fad73a994b6cbb03e8713ea5d3a70fe233b1b77416888d9f83fddf6ab07ae576e4c102570afd28d6248b9ba1d27bacf63416e49d3995307058452c36b4f50b7e48435f8423f7c945be66673d96e629b018dcbe801b485d99c9d48379a82710d777f8c0d5c55dcb229369b872c2fb0d42a24c799f024b2510f93d5c4179b18d557250c92d8d1e4638881c03e390e3717c529932ed0537967f6402e84d8edc4912afe79fa1b7132f6d7ddccc285ce524a9e20da00b48c16ba1a9da65e8a14d54b2ef76c12cf8103283684ef6e4b206578faca0810282d99eed55a159c9e8e66ab69903b6c2a548f743c4b4e88b02d86bcc7fd4b172bebe6a67af57ff57adc6779485256b38390c778dabedfb79b1f33fe1a973b5f5b269c7776f0aab4def3a5ab9094885e8c22f2f4bfcebbc98872bf1c1d830c9c24947aee97cc881bd783d5e7a7e951c6bd577ba7de314615a50abc553971b0844f4b322cabcf6b580fea5a04fe9eaecbf03d3dca5674e7e02d5430e849ef7e28f9d3949d8882495e2e2a4e6b26f9eab494b80013166b3b02770e02ebb06acc2c5eede2ffc1eb8f90e8c810265b75fb5b1f5d8e81ef544a6c8b4d1ab6767eedf4f2ab8aaaac2c5c41fe12458745cbb1529a16dab52415ba57c9034323f5baec6a86a8a447a576d4d6e9b24c864762b26921399610778ad2fc9d4fdf3e1010549b837c4ea699d60a3d26f5ad0dd4987e19dd20c120852e32c40beabce7c25332455fbefadc14c5a84223ecacbb210d3f04e0899e1c7176af9c76a6c95be22647bd0865e4e266a91ee99bed29b6d5723c851298a9acfe7236f6f1db49df07cc5dcdc402777637dd97d01ca87707df48395b4f283b61212d0e39aff8e33054237facf091f42f2d1e2ff06ef69801f30c79224e6b5b000649d2ba3a41053c93238df3f1a2d93a791b94c2964636acec58fbf6b0980352c08be9ff46c38d67dd2f7dc2b3dd67c13c906a8c2dd59078f42490fc68e40a8efc2f553fc92f2dfe901b39d8c864c10b3b490efc504b90a24ec0f24ba108f7d58212dc4054de8cda2434379d2786b342408d32b79cc176a5dd0b9285ad67935ad4619474c0dbe425820536397e93cfff7b5f9d80e7d447089335c05fcdf7e14a2a5bad10e7b4a8799730fac922aded0df62379d6c4746645c3eb45950001fd597f1b5c33f21b379442481e7a5133c3b3f9150b8f711689ceec8b856b03a423f42d395a417af56a060adf8920e37b59f24c4975e16761e870d4df2f15564fec498acf620e338355aaa6255da592e9f4d91db8dff5c476cdff9fd5f3ee3d71d28a03b81461f82ca58b043245f536857c641a0db812305707bf0d359360b9e1924c11b8284a5409f992f4c2065fd0d4965f09fd9baf00e8784bbbc1ac2b538908e9339123a387252abc904c53925e3860e1c1d161044537587ba72da683fdb3fdd59f3b7799229346729452115810edba7806e745cdd19b8e25fc882e52a84027773a6ea7354e0de70bc7fe22c4f23559fa784a75da3345304d7e5dec7af26b7e5e6b2d1c5390dfdef098b5fcc72ccf3480434b110faa53dfc7020245de625429dc0c1f1d63bdb06bede1d424c54dadc09ef58e9e26e80d695cd78000c8ae88df62c060d577cdf00f4b90e148c1c017e0506b6eb79e6e25cc6e4408f6a47b78bc99380387f06d5807d32ef7bd1713e93c2e16fa9121928eb3305531ee70e4d3f4d570c5433c3e640edd2284499930a79600bcd62913777dbcb9d8c24600c6255c7bcc700f2dc0f6732419e7f0390663aad84502107fcf0ff01ad166cfc5d170572ad7ca87ab5bb5fbaf464718a68db9798d038950debf9304ce5bf120907ad855c4b161f9e451ffa74ce66c18cb428cbd8e312dee7ea3940a7cbe70865880267292aecebecc32cc8a6e528b0596a30b94bed8f576dd80fb0f4078b788daf680fe23d6125376876b50761ea409f6be77c5c481d788237bec81e547e78469138d5590cd26500f31a479920c9823165ecdad425239dc459f380e64723899b667fe5bff4f68d5f245051684ef8794889781337b19e9692eaa56a59761942155d082b7e07ed93d72d69113c32ac3dfb8e122f361c00868253b88e50dbaaaf3313cc5e753660f1fc77b4f109dfa25a653e31780b7550502e2481ab5908e4530cdfcb04243192a7267082ef308cf78e01a4fb127949c67af827a316f630e332a5fc865c62c2efdea030fe669433960358dd8b704887fff19a776d2f756cbc60df1496b6f4e207a8f42f59d57d3507aa61e39843312cd2c83715645688d61ee8cfb8590cb0880bdb234f98778d6face51b8c14dc7c7e2d5e828644701d42efe3f9bac26f3dea4bd91cb16d407259ddcba4906671ccba1802b697af0a57b9b0e6af8baf8dc664560bf0482c745ce767b2520e55e9fcde53f7e1a3fb26f0d2c609a4abd0e5d0011aa4d88a92f1138b6baf72c8dc412c98cbf891e89e38ede19f44020559e7d0ca835e75d036a6421a002a3b232760f5ff1b79cabdcdb4593b19654c1f74bc3f78860fa95b5681d45f70b0753be6ab02518472f3b6879f58d2f6be5172b9eed998b063fa13e40c2f6e79a464fb8bb8c95bff0681584a988eab55acb06f26b81f9410f1c3948afde023c2d41acee3ee015f4a626df585cf6272deda1f2d0356866bb3dfd3149061c21b66a2729de461e347e9d38c16bf28eb543f62df44cd60c6c124a23cebdf44ec55ed578e8450ef9608f0571b1f4f3409b1a555566f32f18df911b42d5a4f2a397009091e43c0d96a446d6e0620470204511f60cc2bf67f01fea2030437bf95bc2461dd91abff435e808e3228e0971008098d5a7433ee5d74e3d044fd04a9a3e22f6921af5447071adaaea2682cf5afa77b338cfe392411c3bf0153731429303d21d722b2c3f3f9aff6d3ffaa2808f8bf4158c79189535871883be3716aa825270e2120a028f57480ecad69e271548992b6ab6b3efc1328bd1643003c001edd619ccf0a475935b030c0b98261f00f857df292f46c9abc4c8e083c083d0f6dadafe2b110d8a481d1f09bdc5701c754752dd64dadcb1c8d279461efb8d013162a95e3da01bf28546374fafa7492c779e383748183ae5c6e2f28db6247fc6ab110bb2d101b4cdc025a3c43b48f42b58ede87902d449dcadd2186b3a7244e84fa0bd2a707f1aaf5260d957d58dd838b4fef55c5a2a9245870e994efc28c4137c2e161b60b5c6107a4a920b78fdbcfc6bff89fced59345f1e8ca8c3f95e345b63d873af4e233639b6bbb0b19e4baa24873189aa83e6141c9380bb0345a066c4cacd9209e645b05c149e1073a271d65a056be3b8a525bfabb8c94f37878d29f99e5685853dc58efcddea85c615a0022587eb0abf33e3be9689072c363125364741818976bfc1add7c4dfaebc0bb078a0da38e6b8809b23e76f37c0e2dda1d21274c2c424706cb1a3221f143eb50e15d7984bcfd28adfbbf0236f2bb1b66f9af04a0a02afb90897dac7a628da64400309ec94744bd1280a9b683fe012d0477bd44b159743570f44d214e7dd6531c1cfec74e0965b1eb5a9f92a0f166518dfdbdeafaddfc11e5255f6f0dcd3072556a9bb7dcdb5f07e169fff1db53596a3f42461dc48e837c891bb2fad4fa6b5e8c495d35af1e81c7852e5324b95db6d45301740157f5c156431eb6bb8078dff5dcdf0f0f4745d234a4502c6b8e9d70e5c3196dacb93e7a177c8e9571b4d80579b5a894cdac1efc8f0e8261fac53482d9afef08159301d11d5ccf0b1414baff08fec1cddf80a5962d739e26185ea50f22ee52b095116601a51cd2ffc7ca089e9ae2e7bf2cc1bd8dd04e7db091c3f45b50904563c1aebb67cef8915d263c40fba62bf3cd8ac00908256ba83d75436cfe6b53b61bb8b9214195b3567968608414866e9d809bd283674d59230c63562c5134faf4199139412a95e6f6509b07337ebd56db776c24fd9d377c2c50d504b1bab2a883741837b63d01cb66cb44ac7db0ed3a0c12004560232168fd11ecf0e6e2e6de4e5fb9409c57a3046c79bf2a7d1a36cb87f95db177fb40984f4d4494c9454a983ce708c26dcad9bf289a0dc63f4fd6f3d0d3a33ec5b42b8345dea2609f23ea44e43436701d4777710e29498dcee69f6dd21f4ab4141515e90e86d2be6a450c031d707b339376e482a865e94fddc51830dac3b754d85e7d4fff752eafa60f3e11786345f98d3e153184c9b824eb3ba393b1ca0dd5d2ea059687333ea0d32ca852af0c562e734417faa3a0712370a9acb0471a2e00d50bbcb6e47a91b64d13f6f757290beb5365f61c0367f542983c08f828d679f857c17519f6ea3f895f3fc0950b17c5b9243dce7ca36b5b243736d5c10cff382ac90223a510b314f6c9d3b2245af5818d39b4dd248559efa380255df40df63492eb81e58b271c1b64dcffd1fc877121c6430e821661b8b07ad085ec5f9cf68e725c2a54582e7ae6c98e36ca7f34ea2ff6ab1cd209bb240a106a5eb46fb8e4427237bd3443c4de2f6cdb0fabd280d71704ab1769c8adf87a1933f21318f701a847e34bf9d46e09ae267cd2afacef146fb4353da779f4e365e4a8fe444cca98a3412965f7c6f9f9efb98ecb6b73266de713adc382acf0d9028c019b70891239f8dbdb51e03fe16cbdad43ae4a2fcc1f14051035cf057ddb9a83282c7a9e0a6a6c7a60f89afe182727f650718ac150236105d86bd6dcab0ab852f6d813db7879d0175860248237547ed72e044b55cd8c7ca53eb348d272f405f72fe276d78cd06bd1cd094705a50b6c5060278a2d61c5d4ba61f168b7e2d1652ad15b30220dec6bc31d2f53bce3f8dd0ffc8aca556a4e1c26f4de38c346174ab235c5f600c3706a3c2e11419177dcebbe55ec27cb015079985f750772c8bafc85c407d46131eb3fdaade0aad1d24fe515b45f45c43d48b98e6be51d5221b193bf16014c29ea607cf562a5776ff721a7dd449fbcbed46a55dc9cab7ea88bbe72a4fb9b4af849f4c8c1d86d744e38686a934d74859e9394ea04c3dd2afe64e6449f8341f21b3bc8688b317acd7d9a180ce7412019b81785b9270b306331e56824317dc3f66b3430af164311be7b9f8f75119cb92571de8d624fa73ff386370a333e32ebc032b1a550b5339c6cfdf9956a00f205b9403b06cdf612dd20ff1875fb6c5f79026a347d1813d6114a6fafccc2ceaa04bf84c7bb9156a49fe764a1a02542202e85f180f113c8f9bb37296a50a6e273828a89cb871f027363db32a86469a6689d9f69fd57195e5cd5ccc9751f8b6021c1e790275740c3304e286554539a1183d818324f2b68108c68224b3867488b78eee853b063d72e0625caee6e6e0540eb23791c034d146b149219b4199cc52d68ea03f8860040a27dab03bbad88da71ba693255ea76fe1930c6010e0c87ed2365234a74bda932b91870dc7ad71de7d7c889d65ecdae4308b8d5378a57dcd3b95fba52798971958beb256d670dc19c9c762b63fb78935877baf7283906b01ecb053db58dd497f30d73d9d9880a03dc7f4e1f682d5287758fc47c5da87a81abf26da348d77e9a85d898d2d234ed100245c758e4d557217b91a36e370c0abc96fd0e037f8d7c472aa5d606f50e969e70fb1d806c8afacc7b7e1d41b6513c61726910228da35cb4c043270b1cc4c669f5f09c8e56f0fb6c009971ba42beb09d9c89509886adce4a94f9771c4baba3f34d0d7f31d6558e45f9d538810fe1fe949db42c26f7429c504ddb9ccfb7364bc2bb16cce5f58b298d711978252c5b42ec752aaae8d339f140c53fca115dc281d8c9fe2434effb82d67f743e1d6be40795619a206f9747d5d12ddfd55b1511549eb99c9606314dfa3c6d1f1713bb57d2a8a04ef27c1defcd4706371fc3ebaa9aa737f7488b1b577bdb0a87d22c8ac8bfa1a950aa271b8b36cd6de00143bc0c1b5b1a938a639d8916fc1172a3baf6e241edaebe349ea95869f74f2d88fa028b90bfa672d00cd7837cde4d2b27e93455326da10a1d3f90dc7c55517b2a44f5cbc68d2e2f1eabf9a43746d9f24a2df770c28c0abda4f97392fcec8409eb274d7d3ae41febc82acf08a97722fbafc6819e0638c095911aeeb4a6a91dc775be02783ad98c42d73b019511cab23c8c3ebea987ad6e7145569a5d078ba8a46319dedf861216571b278d2c15d723192f4c4aef3211d8ed34fedaa4adc9eed392ff6011d35e9567863feef59382ca79338384359a059ca00ee8d5ce452a1ad032e8d2fb669d18155f88574038c9a0d71e212a8bafc469f66028f8d6de411aa6e452a93411b7331e6bff5292d48a26219acb4daba4a2d5f308e6b5ef44f5e52945870c5cebaca41a1de8ca1de664b1d115d4482f42c94f3e853c40a6be1bc4bcc47b0a944885ee9755bf13c07b3cf7110e5c5e5479a8befb81eb3082699ef3551aae0b5b809ce914f489f6a745139b2c5ff4c14cfa3f9ce47da0afeb7eb0051a47552a1a7de60e21a9bb54244a88b410d23970271f39bc068cc5f80198912a2d8eabf7c1661a8c3fa02575bbc10a06319ef39fbef7f1e8b30a066e33b32c2d9efe1afc745ec04ef2270de2772a78e68e28b820a17e0cd9a896db42faa41b75d49e30c4dd244fa006d5e71a08490f2943bca957ab3427265a33f6001366c054f5f1294347a9617b3c22f11a7b97baaf37d568cdf4e04ac32055060ebbc515d0b44b97f07bdf10ec9a67b8d115744f8547ec036121668c50c477af349fa1cf0a11db9fa1c9d2740850b669e2ce93bbcf8741b8bf39b896114469b7611ff8bd885b95e20b813c80383f8c05549999d73f7866b5cbedce75aeba5d95504e1c84bbdc443a9fabb4619f4c90c4cb1135c315e9c4e028e874101294f25db294566420d4d458390e407db46b2c6ab98631dce942dc71fb4cd4937c4581253941c47724f221a71149cae07075fe5af428fe3e158c1425d09f707617f3c622efe7964323f7b359a976084b736f2390896bf869568e68b251e63af47446b3ffa3a7611074fd7c654ab6418dbf2e443e422c07fa189b1336d748441f7713f3336b16ced119c8abe01ed78ca9bc4c817804bdf93fe773346c2171f7fe8e7ecfe3384d28e83bb1cdf86d0d96c87d6a010d4434fe366043f21ac7b9bb826fbb81234a87095f6acba622e32190736986d4779e63c18bbf0b05d2583635b538db51d4db1e75d09bf053e49a2f0b4d9a26aeea214f61f4382450561f0c9d8289143a306b41be9df9ce740448af6ff07adb096589c562392949a0053376d5ca6c579455e48fe296d2aa126094655671ad84eb018507d44f400d261030f24efaebfbdc19d027b882f3477a49d4e18351b5401f2beeb57b9cee225062e6375408fbeb0f88a5fdbe84832ac95230f95db955edfe545406959088e4208914ae0ada67765f56a293cd43e040d5050dfee0b5e50258f4fe977c319a5b10d95e262b4182bea6386cbff8930be9e972452c35aeb960e084a82b175638503ac4a8479380c985c4a795fc28c42b8bab20b10ef404c0d90cb8649f8a1fdf5d75a0002fbd0955d8c66177c939f88f4b23896c514d81aa100ac1e59566b7c2dff2ba6bb57f2a51db90c30efef2b8ac63abc440be727723b8cd817da694dffcecb4526959242537768455322a0114da6e8f85efaab0eb1f13f44c1e79c7af6c82b270fe9aa3e49c48e456238c9a0bbd5c8d6efba74758a49277cf628e060921bff707ead1e14c1256e6e550472f9239985db1a0af24f6267d745d4e37e99c70dd3e96bdcdf78c74a8a0cc56cc92e9f485f6c66c52aad0b97f555ad6a97dc62c14d0d2e6a2640f50089a2a376d01401de11cf88afffa2d659c6388a2035bbd3582b98c563ba4f53ee2fb8a47c4b1c1f2599430d7905767e26725ca984bca8cdd0cc261ee4b58fb5b44434d5fda23cea20a66437fb93d2c959ce79a198b65da4279e64c7d4021330b6c302e879faa2d4a1865914119e994aee2a711d37fba7c2a1491c49bef86c2f8a73d1a610d181441c11cd75a3839241eec6afc0cfd726312942a3f1205620a6f9f4bc8bdbb6020543ec8b829ca2c284325a2068dfb5ae890a3cb3e7f18dd54ac2e42124684b81712401fd13cf71599980accb60404cad8f0c7cff50b41061d903bfbac523cbafd501cc666ed53b968ccb0ebc96916e1e404101ca3d74618d3dfa9015eae899776d32de0eda82d0003204b895cca1353294a484afa16a4d6aabe5574f282ae489b06d423b41512972039fbc7741c1bd883c49d991e3adb503ffb81ccd4569b73a4d34358ec9cade234055b0567e9a3a9ba7a62815b2ec7c1eb514fa0cd1160e420bf104d6c1712400de6cb3f513db6546d582563460a8fd0032a882b67d4853e2782731a68394a37b7607d2ff9c7134c070affff78e9d29c2eee68f24c5063c7f66a029aa52e3752768d4918ef2d0734689607f670da0632a6d1fada35e239b232091aa25aafeab440a5e3afa99660040c8ece1e9c6a72389c4d4de3dbf2406b665e9cb2e2be333578f27b18f6293938cddb749f1937cc8ffe416c08eb2b348ef0a6b05b304e78a368cfd8ffcc11497a88fe5c0a1bc7d4ccbf5e993616ea3963791ff5cd9ebc4c8ce4ed57750e177d48f650a182f2ecfa9514511b92ef74f43a6bc14f4b84471101edeb8e1ae3754e2a7a17035f56b4dc4c5e8edbb661573719dee4cd27abfb2013eb0b66285f378eacf5f3235d542e581bcca1f06aaa149d255bee6ec390d22905f8a977797791e3dfdfd579bb96a88c96cc6fe2e3b81645d5405491de57bf18e3bd0d97d714ffabecd639caccf6171da765fb3d574f83f83cef1896e7f55124aa0b82c4cf53c5741eca77563c85be4b1b28380f1fdb32a7392b0d41db7a32c7657f946324ded8cf3950ef44431a93291f390ea2e16dcd94c1fb902329989f02a286d9e875f61a3b765f2fdc59b878d6be56c8a5372f1fa2c3389e29ef202b3250f8098a88b3d9cee5571d3a7ee3cfb92819e553b11dc2a858890a367f65d67764a840107ee9a913f594a052bab2112dd0b0c59b124a42e5a60e986392b76c7b67434494cf240c8263dba4e0a88ec2f62f61fd66ee308b4471762a5219a281d39d6ab96c3716b893c24ef406834ebacb21bb0e3808a2876fd79e6cb8b0114217b00acfd619973997c5a11f64328991ea721240da95d5124c2d50168841dbd9059ae9119edccfe64274e3097d60353f304d5dbb6ce721d944688ea14362d1e0354e8a603416e97375e6f9ff7109807d90ade5ff9c231ae3418e02d13a292c44e0c1dcf14adb23d57e669423b710934180d578b57a674abe5b77e7504440adc6c01a4bb51828aff582c8382d414cfee14534457a3553dea01fac0daf10ccc9e93f75d8cb30a4eb18a826b5094be03796a7aeb04025b1e76da25378f55c9747ee94204a31298fff580f4d5ea75b25b27e9f45633f92e5f22984cc844a7e9dbac3c8cbc5f14a2de74dd7412a3f4270e50a514cbef7003894b0086fe89967603c0cdc2077b1b2d0e70bf62b52066f5310e4f808415c9c7f926eae886f1ae43ac6afad2328284a04501e4fa552a0b1be6d3fccf5b860308131a477871f6ba0c773dccb71540f2b0dbe9194a04ea1aa17be7adc113acbeec0bbe91cb7a9550db18b89c18d2ae7e8bfee7b26a9e37f9b4f378399be1396c46e656d5fe8ebc41e63598c1766118586117e5cbaaf5f6c3fad5765322192bb05b851e02ee383c5620161e91d395a92c406034cfa000a7b76e5668263b72662323bfa58739cc4928b369adcf1d7e6eba1b0220c0d4326ddb85f8b7120cf415193ed5e50cca85d7bec856e7ceb96197b406aeed495b5611cc90b7691fda4e036ca273ed9a8abc3178c9a45ba5c2786149e8a92c25277ac2085a8c9a77415912269946ef9645491b4552791a69d557383423fbb6b7f1d628ce6173d190e38dde910dd5c857625254f2bc2a668f085b19a56a43e4b818033bcc97fb75618545902648e056b4ef4e334be5c4c526db1b30031f4b6742ebe96889ae26a1e48934c9a5b168a1b459aae5ea58c58ad7517ff399a902e694385dac9541ed84d74ee82b2c7aa575fe27a06440036bce6850853def6a9717147ef3f0ef70381a0b6b36297ae3b37c3ac885556f4f4b3c6a4d9e9b8254db11225ebd653b12d0a6151bc787fd16cabd43ef10de6eeedb01d0066179ffaba338226334b73b0ae6f97bb4374255b49c82c6b7024680a511b4830d90d6d07e8d476ff7c79fd8b40281c339624a3f45440452fc5ea4f7a44445c60776e7f4415081814ed853d22ceccb5a2f8a9194029595a367b905a76673344d002b87035d79898c4033a411424034b18c8beaea792b9db2d4789b24bac924dc34734c3f13f3eaee017652804bae5af6ff3ac2857117bf2804e2622ecf327426fe7535f783e84ad7082e674bf902cbde5634888985363754a45f3f02a35dd437a588178554f2953fc6ec7300ef27da47d6bad9d7e74783d98fc581eddd2af672a4266cdd90761039a3959bada1774c71d74ef4ca2b4c340fb8aeea74c3d45935f9abd7edd96dd91617c1bc00c0b4f89c2f23f4777284b68d8d421f8d8e84d94ae2ad17746d867d7ad79e3aac224eef3ff85fed5828848e722aecfaff6e313c21b7a99215e4df179b80dd87f82fc6892117c858215b80b08f26e3890e1e328149c1f6e18a9b93146171f944e1db62f7faf015d2de40a0d1ce0b0e61ec0afa5d03d4b4fce92bb9e014b7e5af2c948807fdaf4e7f7467d77d91cb21bf036ad9c4570d2fb08dc073897c2783c8d334fcc476e9c654d0639cdf03dbc0a28bd1b2a5f794bd428155e4fb8aa3be7fe25ac81636d1dacd46c87fb8780879fec06ae48bfcc555c64394088933544abb5d5b9480ade0406eeca2c96e33b3fe743372ab2a009ee8d1ab7287fd460bdf4c36bbf196bd5dbd3236b3bf62462b7b0490755427294dec24c1d5d6550868cd97c2d840d202ca962dbeee9a8abaa3bed84293ac86952a2f8469c1f35318e1ad78aec611d2077f9e7041647380b9a73907909d3139146c087d59272b775ca77e84e5be46e4f5f3c1562c3b31ec7e6b6a7865bbd700bb0193088c6f00b387efa881f7206df683bfac816daf1f506f30a26fabb00abac47226f66e808c8d078443b6519bae7ea001d469d2f0b4b4462527005831de340cba45483cf1f21b8680bedc70e71875949da31db8c1d09305792ca1b9582dd8784a9d9e228358732d20712c904f79ec2154211da4025eaa60cc3540e146470666cdfe2902967567a27202d9192631de35cc958536d073134a152fdafd6f5a15d8a2875e5326266c2d79902550574fea280aae92cef597dc29756b96516617b95303e6b8d3346c2a40317061dcad6e1535577b7bd6772438a01cf3a4fa7056228aa5a9e9a7fb7835279c5667b777d0a2bd9446e0ac7e02fb6fc7b98d933ddb153b13b110480cde56beb4e7968566ac12b81b52570ca053f2716ef3222f7eff9dc0d3382824901025f0566cbca01bcc715e8e4000a01bc54e153793ab286b86146289bc572a41323b49070287f3eca0b60beb691346f8860d0434f3c7a3ea4464307bc489d15bc26cf29a7013f0c0c0a72d1f92eef03438166728b8ee240378118ae2f77c20320cff737431149b45d89f135de76d6b6643295c229fa554bcdd4728966bc4ba4baaf920a5b3395d61908885afc576b70688e9e85eda58d58b218a8d9e3ef16372d18500fd1f97f5d534343d846faee8a6bcf5af830d74967a2dcfdaac4a0aad92ba24f14f65cbe2bbaadbcc09e0ff74e5ad1ef24c63a4578eeae5c36fc592a8a49d5b6dce77d0e56eac358aceedd1a4ef8a391e8c05bcd84ce1d4551106d7f8b1b0d777033eda4491e674287fbdd569d81c459dabd9b625bc298bc37122a236fefd6e9182ec85efc3a3d5292461289313c5e799b58f4d4774fb9ca97c402d99f04a422f9799af37053e6fa388a2309048f793df0444762d035fc24b20c9614418e92c70ef1e71b3e89400b082c43c153baaf5ade46e6102d1de6916b036b625a0790a8c9cb018aa6c11ceae907132fc7ef4967cea888aa5a245bc292d5ffc995a725ab795fc9de818decb3b593a9ea0c90eed6ea59f008dfda498f2de807b2b800c9d9fd018aa6f401eb462f0bd2f</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-up">      <input class="hbe hbe-input-field hbe-input-field-up" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-up" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-up">考研上岸，复试成功，加油!</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>0216日志</title>
      <link href="/posts/72fb8de2/"/>
      <url>/posts/72fb8de2/</url>
      
        <content type="html"><![CDATA[<h2 id="关于0215的淘宝退货问题">关于0215的淘宝退货问题</h2><p>那个单片机有质量问题卖家却不让以质量问题退货，但是如果按照我不想要退货需要自行支付运费，而且淘宝推荐的上门取件服务不会上门取件，还没补贴这不纯纯耍猴。<br>以后卖家要是不让以质量问题退货，申请平台介入即可。</p><h2 id="0216嘉立创eda的问题">0216嘉立创EDA的问题</h2><p>还是关于平衡小车，原有的主控电源端子是XH2.54，不符合电机的PH2.0端口，而且原作者一条PCB底线画成了90°不符合电气设计规则，将对其进行改进，拟定在PCB上增加一个二维码扫描。</p><h3 id="立创eda布线网络问题">立创EDA布线网络问题</h3><p>有些线的圆点是连起来了，但是选择的时候不显示全部的线，这是因为后面连接的线与原来的线虽然已经是同一条但是不是一个网络，将其设置为一个网络后即可正确显示。<br>布线时候按住<code>W</code>会有奇效，立创EDA专业版默认是覆铜的按<code>shift+m</code>隐藏覆铜,如果遇到无法添加泪滴的情况一定是焊盘上的网络标识和导线上的不对应，要注意焊盘不仅有序号也有网络标识。<br>焊盘与焊盘之间的网络标识可以方便定位。<br>如果遇到没有添加上泪滴的焊盘可能是该处的焊盘与导线的连接违反了DRC规则，需要重新调整位置，一般调整位置后布线死区会消除！<br>两条导线一直连接不上显示违反DRC规则且死区范围特别大，请将两条改成同一网络名称！<br>红色虚线是顶层的铺铜范围，蓝色虚线是底层的铺铜范围，有时候该铺铜的区域没铺上铜，要看下附近焊盘的连线，如果连线正确再添加过孔。<br>找不到虚线用工具-》铺铜管理器重新铺铜查看。铺铜的作用是使得地线不用引出，这也是GND的焊盘不用连接GND IO口的原因<br>DRC两处报错我居然没当回事操了，过孔与导线的距离最好是要调整一下</p><h2 id="修复了加载动画不支持28寸4k屏的bug">修复了加载动画不支持28寸4K屏的BUG</h2><p>调整了<code>gear.styl</code>中有关蒙版横向的px值大小</p><figure class="highlight styl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">  <span class="selector-class">.gear-loader_overlay</span></span><br><span class="line">    <span class="attribute">width</span> <span class="number">150px</span></span><br><span class="line">    <span class="attribute">height</span> <span class="number">150px</span></span><br><span class="line">    <span class="attribute">background</span> transparent</span><br><span class="line">-   <span class="attribute">box-shadow</span> <span class="number">0px</span> <span class="number">0px</span> <span class="number">0px</span> <span class="number">1000px</span> <span class="built_in">rgba</span>(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>, <span class="number">0.67</span>), <span class="number">0px</span> <span class="number">0px</span> <span class="number">19px</span> <span class="number">0px</span> <span class="built_in">rgba</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0.16</span>) inset</span><br><span class="line">+   <span class="attribute">box-shadow</span> <span class="number">0px</span> <span class="number">0px</span> <span class="number">0px</span> <span class="number">2000px</span> <span class="built_in">rgba</span>(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>, <span class="number">0.67</span>), <span class="number">0px</span> <span class="number">0px</span> <span class="number">19px</span> <span class="number">0px</span> <span class="built_in">rgba</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0.16</span>) inset</span><br></pre></td></tr></table></figure><p><code>z-index -/+1000</code>1000改为2000</p><h2 id="备份vscode的插件">备份VSCODE的插件</h2><p><code>code-translate</code> <code>Dracula Official</code> <code>Live Server</code><br><img src="https://files.catbox.moe/a82m6x.png" alt=""></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>自行车清理和维护</title>
      <link href="/posts/933c95db/"/>
      <url>/posts/933c95db/</url>
      
        <content type="html"><![CDATA[<h1 id="日记">日记</h1><p>今天下坡的路上3档换2档可能当时车速过快路面不平，再加上尾勾齿轮严重积累淤泥，导致链条卡在了前变速器的银色部分，本以为要背回去了还好用力搞定真是大力出奇迹。<br>其实20码一下的速度不用频繁变速。2-6档稳定即可，频繁无意义的变速在中长途可能会出现不稳定的情况。</p><h2 id="尾勾齿轮清理">尾勾齿轮清理</h2><p>尾勾齿轮清理时候要注意不要用力移动尾勾位置，尾勾两片齿轮与大齿轮位置应该成垂直对应，如果暴力清理导致位置移动只能调节后拨，该举动可能会扩大后拨死区。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>毕设遇到的一些坑记录</title>
      <link href="/posts/7823a927/"/>
      <url>/posts/7823a927/</url>
      
        <content type="html"><![CDATA[<h1 id="遇到的一些问题">遇到的一些问题</h1><h2 id="焊接">焊接</h2><p>焊接有排针原件黑色正方形小塑料应该与排母贴合的一面焊接才是对的。由于干活之前没有统筹没有观察，导致排针焊接反向，要取下来比较不容易，实测如果焊反会导致排针长度不够与排母接触不够等于模块没插上排母，焊接时注意烙铁头有效的一面焊接，尤其是电源要检测是否有短路的情况。焊接时间不宜过长，在烙铁接触焊盘后，焊锡丝接触烙铁3秒左右为好，有些焊锡丝比较垃圾有种金属的感觉建议不要使用。锡焊器要对准但不要暴力除焊锡以防排针受力加上高温使其折断；使用吸锡线要加上充分焊油，粘合度不宜过大防止产生PCB焊盘被沾下来脱落。<br>焊接PCB一般仅有下方排母有效，对于一端有端子一端无端子的线材需要剥线后给线镀锡增加硬度方面焊接和维护更建议替换成两头端口的方式。一般有XH2.54和PH2.0两种，两种形状一致，PH2.0 6P端口长度为12.4MM左右，XH2.54明显更长一定注意区分遇到参数方面的事情要问一下不要自以为是，目前因焊接原因已经损坏一块PCB板，一块单片机，因电源连焊导致两块32突然断电损坏PCB永久损坏。一块单片机损坏的情况下首先要做的是排查分析错误而不是把另一块直接插上去，一次严重的损坏必然会有线索提示。</p><h2 id="电源">电源</h2><p>使用STLINK供电时不要打开外置18650电源，会导致单片机输出的5V与电池的5V叠加到DRV8833的VM输入端口，从而使DRV8833输出电压过大，电机电压过大及其危险。<br>注意降压模块的电压值。<br><img src="https://files.catbox.moe/et5trx.png" alt=""></p><h2 id="原理图">原理图</h2><p><a href="https://lceda.cn/editor#id=35f3bd4a6b1e46d3b87d13bd7b61d21b">230101</a></p><h2 id="0212开发日志">0212开发日志</h2><p>深圳的STM32到了能正常初始化MPU6050，在不插10V转5V降压模块和电机驱动模块的情况下 屏蔽<code>CAR_APP/CAR_TASK</code>中<code>Set_PWM(Motor1,Motor2);</code>代码，下午14点39分测试 MPU,OLED工作正常，蓝牙模块灯闪烁。</p><h3 id="删除冗余代码">删除冗余代码</h3><p>STM32 freeRTOS.c中</p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">void <span class="built_in">Start_sw_1Task</span>(void const * argument)</span><br><span class="line">&#123;</span><br><span class="line">  <span class="comment">/* USER CODE BEGIN Start_sw_1Task */</span></span><br><span class="line">    <span class="comment">/* Infinite loop */</span></span><br><span class="line">    <span class="built_in">for</span>(;;)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">HAL_GPIO_WritePin</span>(GPIOC,GPIO_PIN_13,GPIO_PIN_SET);</span><br><span class="line">        <span class="built_in">osDelay</span>(<span class="number">200</span>);</span><br><span class="line">        <span class="built_in">HAL_GPIO_WritePin</span>(GPIOC,GPIO_PIN_13,GPIO_PIN_RESET);</span><br><span class="line">        <span class="built_in">osDelay</span>(<span class="number">200</span>);</span><br><span class="line">        <span class="built_in">HAL_GPIO_WritePin</span>(GPIOC,GPIO_PIN_13,GPIO_PIN_SET);</span><br><span class="line">        <span class="built_in">osDelay</span>(<span class="number">200</span>);</span><br><span class="line">        <span class="built_in">HAL_GPIO_WritePin</span>(GPIOC,GPIO_PIN_13,GPIO_PIN_RESET);</span><br><span class="line">        <span class="built_in">osDelay</span>(<span class="number">1000</span>);</span><br><span class="line">    &#125;</span><br><span class="line">  <span class="comment">/* USER CODE END Start_sw_1Task */</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>属于贴片MOS管控制的LED灯闪烁代码占用一个线程可删除优化性能，将其注释掉，并分别查找该函数注释掉，该函数控制<code>sw1_pwm_taskHandle</code>任务查找并注释，关于FREERTOS任务线程ID和创建可见<a href="https://blog.csdn.net/liangbin414/article/details/95212314">STM32 FreeRTOS的osThreadDef创建任务</a>和<a href="https://blog.51cto.com/u_14114084/3786013">FreeRTOS学习笔记（11）— FreeRTOS的线程管理、定时器管理(CMSIS_API)</a>；烧入代码并编译无报错各模块工作正常！</p><h3 id="蓝牙模块测试">蓝牙模块测试</h3><p>蓝牙名称为<code>HC-05</code>，PIN码为默认的<code>1234</code>在蓝牙调试助手APP对话模式中可查看蓝牙串口发的详细信息。手机端显示RX，此时蓝牙状态灯时灭时闪。下午15点14分测试，蓝牙模块正常。</p><h3 id="mpu通讯测试">MPU通讯测试</h3><p>灵敏度中上较为灵敏，零点漂移最大在-0.1左右，工作正常！</p><h3 id="原来的降压模块in-处管脚存在虚焊0213下午3点">原来的降压模块IN-处管脚存在虚焊0213下午3点</h3><p>同时该模块IN+管脚存在引脚长度不足的问题，以上问题可能是导致旧PCB损坏的原因</p><div class="tip bell faa-horizontal animated"><p>该模块存在不稳定因素暂停使用，将在使用万用表确保无误后继续使用。</p></div><h3 id="pcb设计检查">PCB设计检查</h3><p>经检查电源供电线路部分清楚排除因PCB设计问题导致的损坏。<br><img src="https://files.catbox.moe/gkvwkx.png" alt=""></p><h3 id="电机">电机</h3><p>两个电机供电均接在DRV8833上应该会有过载保护，电机损坏可能性几乎为0。但建议使用新的电机驱动模块，电机编码器供电直接是32提供3.3V损坏可能性为0。<br><img src="https://files.catbox.moe/uhcang.png" alt=""></p><h3 id="b站和知乎有一些和源码对应的pid控制讲解">B站和知乎有一些和源码对应的PID控制讲解</h3><h2 id="0213开发日志">0213开发日志</h2><p>早上去拿快递门都没开妈的真是不方便</p><h3 id="接入加密云存档">接入加密云存档</h3><p><a href="https://yun.hgez6.top/zh-CN/%E6%AF%95%E4%B8%9A%E8%AE%BE%E8%AE%A1%E4%BA%91%E5%AD%98%E6%A1%A3/">大鸟云备份</a></p><h3 id="降压模块焊点及其测试">降压模块焊点及其测试</h3><p>降压模块焊点完美但是排针有些小弯曲要注意<br>环境:未插入DRV8833<br>降压模块PCB 8个焊点两两相连，链接正常！<br>降压模块本体 8个焊点两两相连，链接正常！<br>开关关闭下in+为0v out为0V正常<br>开关打开下in+为7.99v out为4.99V正常</p><h3 id="pcb供电测试">PCB供电测试</h3><p>插入降压模块后接入32打开开关，OLED显示，蓝牙可接受数据，MPU初始化及传输正常。<br>PCB供电正常。早9点23结束测试，断开电源排线，一切顺利。</p><h3 id="drv8833模块">DRV8833模块</h3><p>DRV8833模块焊接完毕，所有焊点十分完美等电机排线到达后进行测试</p><h3 id="电机死区和pwm调速">电机死区和PWM调速</h3><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">void Set_PWM(int motor1,int motor2)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(motor1&gt;0)</span><br><span class="line">&#123;</span><br><span class="line"><span class="attribute">PWMA2</span>=Dead_Zone+(abs(motor1))*1.17;</span><br><span class="line"><span class="attribute">PWMA1</span>=0;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> </span><br><span class="line">&#123; </span><br><span class="line">PWMA2 =0;</span><br><span class="line"><span class="attribute">PWMA1</span>=Dead_Zone+(abs(motor1))*1.17;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(motor2&lt;0)&#123;</span><br><span class="line"></span><br><span class="line">PWMB2 = Dead_Zone+(abs(motor2))<span class="number">*1</span>.17;</span><br><span class="line">PWMB1 = 0;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> </span><br><span class="line">&#123; PWMB2 = 0;</span><br><span class="line"><span class="attribute">PWMB1</span>=Dead_Zone+(abs(motor2))*1.17;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>电机死区应该是使电机刚好能转动的PWM数值，预计可通过对以上代码并将<code>Set_PWM(100,100)</code>那么可通过调整Dead_Zone找到电机的死区且实际的死区为<code>Dead_Zone-117</code><br>DRV8833可以翻转IO口的高低电平使得电机正反转<br>1，2应该是代表正转/反转 A/B应该是代表电机1，2号</p><h2 id="0214开发日志">0214开发日志</h2><h3 id="先测机械中值">先测机械中值</h3><p>先使得小车保持中立位从OLED中读出参数<code>pitch</code>的值为1.5<br><code>#define Mechanical_balance 1.5</code> 标准的宏定义</p><h3 id="测电机死区">测电机死区</h3><p>电机死区是使得电机刚开始转动的临界PWM数值，可以通过赋值<code>Set_PWM(-100,-100)</code>测得<br>我们这里大约测得为</p><figure class="highlight abnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">int   Dead_Zone1<span class="operator">=</span><span class="number">3100</span><span class="comment">;    //电机死区1 4250</span></span><br><span class="line">int   Dead_Zone2<span class="operator">=</span><span class="number">3000</span><span class="comment">; </span></span><br></pre></td></tr></table></figure><p>1,2代表电机序号，每个电机体制不同死区相差50-100属于正常，我这里的死区比较极限了因为里面赋值的100但是死区没有加上117，但是问题不大</p><h3 id="调节pid">调节PID</h3><p>这里的PID分为直立环，速度环和转速环。<br>直立环用于检测角度与机械中值的偏差，如果小车向前进的方向倾斜说明KP过小不足以提供回复力<br>如果小车出现小幅度大范围低频率抖动说明KD过小不足以快速响应以消除抖动<br>速度环用于控制速度偏差根据机械特性Ki=Kp/200<br>转动换，用于使小车保持直线，对偏离方向的运动提供回复的扭力，非遥控状态依靠KD调节，遥控状态通过KP,KD共同调节，Kp主要提供左，右转动的扭力<br>以下为B站视频上的PID参数</p><figure class="highlight subunit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">struct pid_arg PID = &#123;</span><br><span class="line">.Balance_Kp=<span class="string">-300</span> ,//<span class="string">-230</span> 245 170 <span class="string">-200</span> <span class="string">-280</span> <span class="string">-300</span></span><br><span class="line">.Balance_Kd=<span class="string">-0</span>.75,//<span class="string">-0</span>.16 0.50 <span class="string">-0</span>.5 <span class="string">-0</span>.7 <span class="string">-0</span>.6</span><br><span class="line">.Velocity_Kp=<span class="string">-120</span>,//<span class="string">-48</span> 70 100 <span class="string">-115</span> <span class="string">-60</span> <span class="string">-80</span> <span class="string">-120</span></span><br><span class="line">.Velocity_Ki=<span class="string">-0</span>.6,//<span class="string">-0</span>.24 0.21 0.325 <span class="string">-2</span>.4 <span class="string">-0</span>.3 <span class="string">-0</span>.4 <span class="string">-0</span>.6</span><br><span class="line">.Turn_Kp = 180,  //70</span><br><span class="line">.Turn_Kd = 1.0,  //0.5 1.5出现左右高频抖动</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>下午15点18测试，上述参数没问题，配合遥感很灵敏</p><h3 id="关于蓝牙">关于蓝牙</h3><p>蓝牙通讯有延迟，该小车不适合短时间频繁操作</p><h3 id="关于32">关于32</h3><p>该32 5V引脚有问题不过接电池的话不影响使用。</p><h3 id="一切顺利-毕设完成-接下来进一步建模巩固pid知识">一切顺利，毕设完成,接下来进一步建模巩固PID知识</h3><h3 id="验证通过-但是手机摇杆要以中点为中心操作-不要在四块小正方形里面随便乱滑动">验证通过，但是手机摇杆要以中点为中心操作，不要在四块小正方形里面随便乱滑动！</h3><h3 id="0226日志">0226日志</h3><p>今天在源码里查找PWMA1发现<code>#define PWMA1   TIM3-&gt;CCR2</code>，TIM3应该是定时器而CCRx是捕获/比较寄存器（CCR）应该与PWM占空比有关。<br>突然想到一个问题，既然平衡小车保持平衡主要靠回复力也可叫扭矩，那么根据T=9550P/n 可知，转速越小扭矩越大，而在PID算法中则会增大PWM值增大转速来增大回复力，这不是矛盾了吗？<br>答：增大PWM时候功率P的增加速度大于n故扭矩整体变大（存疑），减速器的作用是相同功率下减少转速n以增大输出扭矩！</p><h3 id="0227日志">0227日志</h3><p><code>hc_src04_start</code>是超声波模块的启动函数,找到了蓝牙的接收函数未找到蓝牙的发送函数疑似直接用串口的<code>printf</code>发送<br><a href="https://blog.csdn.net/liangbin414/article/details/95212314">STM32 FreeRTOS的osThreadDef创建任务</a><br>这片文章线程优先级写的还算清楚，用osThreadDef创建任务时里面的参数都要搞清楚<br>这里的200HZ任务，或者别的频率任务是怎么实现的？<br>用<code>osDelay(5);</code>延迟函数函数实现的。实际上程序内的语句是一直在运行的。</p><h3 id="0228日志">0228日志</h3><p>原本打算用matlab Simulink对直立环PD进行定性分析，我在Simulink画了PD环节发现示波 器波形为一条直线，经研究是因为没有加入被控对象的传递函数模型导致无法显示输出波形，PID控制实质上根据被控对象的传递函数模型对输出量进行期望校正！<br>一般程序设计用的都是离散化PID即</p><ol><li>一阶差分代替一阶微分</li><li>累加代替积分<br>关于一阶差分的定义：<br>定义1 当自变量从x变到x+1时，函数y(x)的改变量：<br><img src="https://bkimg.cdn.bcebos.com/formula/499be90df244d2733305b353c251df98.svg" alt=""><br>称为函数y(x)在点x的一阶差分<br>经Simulink下仿真Kp太小会有稳态误差<br>占空比是当前PWM/7999</li></ol><h3 id="0301日志">0301日志</h3><p>换成了自己优化过的开发板，所有接口都用排母和端子连接了很舒服。<br>机械中值变成了-1.8，测试中发现小车的motor1比较灵活需要抑制一下，所以电机死区改为</p><figure class="highlight abnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">int   Dead_Zone1<span class="operator">=</span><span class="number">3100</span><span class="comment">;    //电机死区1 4250</span></span><br><span class="line">int   Dead_Zone2<span class="operator">=</span><span class="number">3150</span><span class="comment">; </span></span><br></pre></td></tr></table></figure><p>旧的PID参数转向很快，即使转向环的KD=1已经很大了，静止时仍然有偏移趋势，而且前后退速度不快估计是速度环被转向环抑制了<br>同时为了减少小车轮子左右抖动的概率，下降转向环的KD，下降转向环的KP（减少转向瞬间的车身抖动），提高速度环KP,KI，提高直立环KD</p><figure class="highlight subunit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">//PID调节参数</span><br><span class="line">struct pid_arg PID = &#123;</span><br><span class="line">.Balance_Kp=<span class="string">-300</span> ,//<span class="string">-230</span> 245 170 <span class="string">-200</span> <span class="string">-280</span> <span class="string">-300</span></span><br><span class="line">.Balance_Kd=<span class="string">-0</span>.95,//<span class="string">-0</span>.16 0.50 <span class="string">-0</span>.5 <span class="string">-0</span>.7 <span class="string">-0</span>.6</span><br><span class="line">.Velocity_Kp=<span class="string">-130</span>,//<span class="string">-48</span> 70 100 <span class="string">-115</span> <span class="string">-60</span> <span class="string">-80</span> <span class="string">-120</span></span><br><span class="line">.Velocity_Ki=<span class="string">-0</span>.65,//<span class="string">-0</span>.24 0.21 0.325 <span class="string">-2</span>.4 <span class="string">-0</span>.3 <span class="string">-0</span>.4 <span class="string">-0</span>.6</span><br><span class="line">.Turn_Kp = 150,  //70</span><br><span class="line">.Turn_Kd = 0.75,  //0.5 1.5出现左右高频抖动</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h3 id="0302开发日志">0302开发日志</h3><p>左右轮子其实静摩擦差距很大，但如果把死区值设置的相差过大的话，反而会造成左右高频抖动。M2略比M1大一些就行。<br>为啥电机驱动输入IO都用的TIM3定时器生成的PWM？<br>因为是软件PWM，这个项目IIC也是软件的<br>freeRTOS和管脚的相关配置是在CubeMX内事先配置好的。</p><h3 id="一切顺利-万事如意">一切顺利，万事如意！</h3>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>win11无损普通账户和管理员权限互相切换</title>
      <link href="/posts/5e6749ca/"/>
      <url>/posts/5e6749ca/</url>
      
        <content type="html"><![CDATA[<h1 id="前言-这个方法不行-会导致无法获取管理员的权限的bug">前言(这个方法不行，会导致无法获取管理员的权限的Bug)</h1><p>使用管理员权限无法打开小米妙享了</p><h2 id="解决">解决</h2><p>计算机上面有不一样等级的管理权限，在安装一些软件，或是运行一些程序时，先获得管理员管理权限，才可以执行。一些用户刚触碰win10系统，不知道怎样开展管理员管理权限设置，下面我教你win10系统管理员管理权限如何设置吧。</p><p>1、另外按住快捷键win r开启运行菜单，输入“netplwiz”确定，进入下一步。<br><img src="https://inews.gtimg.com/newsapp_bt/0/13597754713/1000" alt=""></p><p>2、开启用户账号窗口后，将自身的账号选中，进入下一步。<br><img src="https://inews.gtimg.com/newsapp_bt/0/13597755152/1000" alt=""></p><p>3、点一下“属性”，如下图箭头所说处，进入下一步。<br><img src="https://inews.gtimg.com/newsapp_bt/0/13597754754/1000" alt=""></p><p>4、开启属性窗口后，点一下上端“组员”，随后将“管理员”选项选中。选好后，先后点一下“应用”-“确定”。那样管理员管理权限就打开了，进入下一步。<br><img src="https://inews.gtimg.com/newsapp_bt/0/13597754815/1000" alt=""></p><h3 id="bug">BUG</h3><p>使用上面的方法就改不回管理员权限了，提示权限不足</p><h3 id="解决bug并使用新方法">解决BUG并使用新方法</h3><p>进入PE密码管理器解锁原生管理员账号，登录此账号开启本地账号的管理员权限，但不要全部使用管理员权限运行软件即可。<br><a href="https://zhuanlan.zhihu.com/p/67899637">参考此链接的方法三</a></p><h2 id="方法三：修改组注册表">方法三：修改组注册表</h2><p>注意：修改注册表有可能会造成系统异常或无法进入，建议修改前备份电脑中的重要资料  。</p><p>【Win】+【R】打开“运行”，输入：【regedit】回车，进入注册表编辑器。依次打开：</p><p>【HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\System】，在右侧找到【FilterAdministratorToken】，双击后将数值数据改为【1】并【确定】。<br>可直接在powershell使用以下命令</p><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">reg.exe <span class="keyword">add</span><span class="language-bash"> HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\System /v FilterAdministratorToken /t REG_DWORD /d 1</span></span><br></pre></td></tr></table></figure><p>若没有“FilterAdministratorToken”，则在空白处点击鼠标右键，【新建】【DWORD（32位）值】，并更名为【FilterAdministratorToken】，双击将其数值数据改为【1】。</p><p>改完后，还要改另外一个，也是一样，依次找到：</p><p>【HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\System\UIPI】，在右边有个【默认】项，双击将值改成【1】。完成后重启。<br><img src="https://pic1.zhimg.com/80/v2-003a56c51d87028bdc7fc758ebdfa700_720w.webp" alt="如图"></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>一文享用小米妙享</title>
      <link href="/posts/e5785757/"/>
      <url>/posts/e5785757/</url>
      
        <content type="html"><![CDATA[<h1 id="qaq">QAQ</h1><ol><li>Q:不是小米路由而是比较简陋的软路由支持小米妙享吗？<br>A：支持！但最好是WiFi6</li><li>Q:不是电脑不是WiFi6支持小米妙享吗？<br>A：支持！有线网络即可妙享<br>经过有以上两问可知小米妙享几乎<strong>没有硬件限制</strong>，只要两设备在同一网络环境下即可！</li><li>显示机型不支持？<br>A: <em><strong>伪装机型即可</strong></em><sup>[1]</sup>:华硕笔电按esc进入bios关闭secure boot(安全启动)将小米启动项设为第一优先级，就伪装成小米啦，安全启动不用开启没软用，而且小米启动项为非安全启动项开启会有BUG提示。后续不需要伪装的话最好进PE删了那些文件就行了。建议把win11自动更新驱动关了。</li><li>显示不支持win10？<br>A:酷友说酷比魔方可以伪装系统可以试试看</li><li>没有WiFi和蓝牙？<br>A:实际上有网线就能用，建议模拟一下骗过软件但本人没有实际测试</li></ol><hr><p>以下是一些影响体验的大问题，单独说说:</p><h2 id="无法显示手机镜像？">无法显示手机镜像？</h2><p>换了网络环境手机镜像无法显示，如果提示网络错误，则卸载该版本后使用MIUI+beta最后一版兼容性较强作为过渡包<sup>[2]</sup>，经测试该版本可以正常显示，然后再升级到最新版。</p><h2 id="直接无法拖拽文件？">直接无法拖拽文件？</h2><p>和模拟机型有关，模拟的机型建议和本机蓝牙差不多，我不用机型模拟加28版本妙享反而能用。卸载小米妙享记得删除系统盘下<code>C:\ProgramData\MI</code>缓存文件!如果不行还建议删除<code>C:\ProgramData\Timi Personal Computing</code><br>由于本机蓝牙4.x,小米官方支持的列表机型为5.x故导致机型模拟后互传无法使用，我们每次升级的时候进入disG软件改一下机型重启，然后正常用即可！<br>经测试该方法可用，互传和镜像均可用，但目前不能同时用。</p><h2 id="最好设置成小米妙享默认核显-防火墙在专用和公用网络放行所有相关组件">最好设置成小米妙享默认核显，防火墙在专用和公用网络放行所有相关组件</h2><h3 id="资源">资源</h3><p><a href="https://e5.hgez6.top/zh-CN/PC%E8%BD%AF%E4%BB%B6/%E4%BC%AA%E8%A3%85%E5%B0%8F%E7%B1%B3%E7%AC%94%E7%94%B5/">1，2相关文件</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>markdown语法总结和代码块测试</title>
      <link href="/posts/38e6c17c/"/>
      <url>/posts/38e6c17c/</url>
      
        <content type="html"><![CDATA[<h1 id="语法官方文档">语法官方文档</h1><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://markdown.com.cn/basic-syntax/</span><br></pre></td></tr></table></figure><hr><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="string">此为分栏符上下请空两行</span></span><br></pre></td></tr></table></figure><h2 id="二级标题">二级标题</h2><p><code>代码高亮</code></p><figure class="highlight arcade"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">``</span>代码高亮<span class="string">``</span></span><br></pre></td></tr></table></figure><h3 id="测试通过">测试通过</h3>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>matlab绘制MATLAB频域分析 奈氏图、根轨迹绘制</title>
      <link href="/posts/fac5d191/"/>
      <url>/posts/fac5d191/</url>
      
        <content type="html"><![CDATA[<h1 id="绘图简介">绘图简介</h1><p>在复平面上表示传递函数的幅值相位角随频率的改变而改变的图就是nyquist图（奈奎斯特图，奈氏图），表示控制系统的幅相频率特性，横坐标U(real number)纵坐标jV(imaginary number)；伯德图(bode)利用对数表示系统的幅频、相频特性,它分为两个图，一个是对数幅频图、一个是相频图，横坐标均为w,纵坐标一个为，一个为，,为相位角；而对数幅相图（nichols plot）则是将幅频和相频在一张图上表示出来了，横坐标是相位角fi(w)、纵坐标是增益K、然后图里面有不同的幅值线(幅值单位dB)。<br>这里的传递函数以惯性环节为例: 1/（Ts+1），T取0.01。</p><h1 id="奈氏图">奈氏图</h1><p>分子分母的系数分别存入两个1维矩阵，这里我利用了sys=tf()构造了系统sys。tf转换效果就是构造一些系统，比如你输入两个一维矩阵，那么就可以构造一个分式。具体见这里。nyquist（sys）直接把一个传递函数输入，然后绘出奈氏图[re,im,w]=nyquist(sys)则是根据需要返回传递函数将s替换成jw后的实部、虚部，还有相应的频率。</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">num = [<span class="number">1</span>];   <span class="comment">%分子</span></span><br><span class="line">den = [<span class="number">0.01</span> <span class="number">1</span>];   <span class="comment">%分母</span></span><br><span class="line">sys = tf(num, den);  <span class="comment">%构造系统</span></span><br><span class="line"><span class="built_in">figure</span>();</span><br><span class="line">nyquist(sys);</span><br><span class="line">[re, im, w] = nyquist(sys);</span><br><span class="line">grid on    </span><br></pre></td></tr></table></figure><h2 id="根轨迹图">根轨迹图</h2><p>以系统G(S)=K(s+1)/(s<sup>3+2s</sup>2)为例思路同上，对分子分母分别构造矩阵记为m,n</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">m=[<span class="number">1</span> <span class="number">1</span>]  </span><br><span class="line">n=[<span class="number">1</span> <span class="number">2</span> <span class="number">0</span> <span class="number">0</span>]</span><br><span class="line">rlocus(m,n)  </span><br></pre></td></tr></table></figure><p><img src="https://files.catbox.moe/wozlis.png" alt="G(S)=K(s+1)/(s3+2*s2)的根轨迹"><br>图中点的参数grain值就是K值<br><a href="https://www.bilibili.com/video/BV1sV411x7t6/?spm_id_from=333.1007.top_right_bar_window_history.content.click&amp;vd_source=ea78e03d02c651ab9a1849ee5454e98b">参考链接</a></p><h3 id="不知道为啥这两个代码块总是渲染不好-不折腾了">不知道为啥这两个代码块总是渲染不好，不折腾了</h3>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>N11T升级安卓13注意事项</title>
      <link href="/posts/88b882cf/"/>
      <url>/posts/88b882cf/</url>
      
        <content type="html"><![CDATA[<h1 id="原有的精简模块卡米">原有的精简模块卡米</h1><p>幸好有救砖模块。。暂时懒得找问题</p><h1 id="超级壁纸无法使用">超级壁纸无法使用</h1><p>是因为最新的N11T自带的主题壁纸把超级壁纸接口砍了。用OLED版本的主题壁纸配合壁纸即可！<br>二者缺一不可</p><div class="btns rounded grid5">            <a class="button" href='https://e5.hgez6.top/zh-CN/Android/%E8%B6%85%E7%BA%A7%E5%A3%81%E7%BA%B8%E6%81%A2%E5%A4%8D/' title='资源下载'><i class='fas fa-download'></i>资源下载</a>          </div><h1 id="侧滑手势无法按照之前方法更改">侧滑手势无法按照之前方法更改</h1><p>入口变为：<code>/data/system/theme/</code><br>将原来模块中的压缩包<code>com.miui.home</code>放到新路径<code>/data/system/theme/</code><br>重启桌面即可！</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>自行车后拨调速</title>
      <link href="/posts/d88c0c0/"/>
      <url>/posts/d88c0c0/</url>
      
        <content type="html"><![CDATA[<h1 id="原理">原理</h1><ol><li>拉紧线时，挡位由高变低</li><li>释放线时，挡位由低变高<br>链条若贴紧小轮则容易挡位由低变高<br>链条若贴紧大轮则容易挡位由高变低<br>前变一般不用动</li></ol><h2 id="微调">微调</h2><p>推荐优先使用后拨变速器处的微调螺丝，逆时针为拉紧线（逆时针链条越贴紧大轮），顺时针为释放线（顺时针链条越贴紧小轮），通常骑行久了线会松，因此一般调低挡位会卡顿，此时应逆时针转动微调螺丝。</p><h2 id="后变处的螺丝">后变处的螺丝</h2><p>原理同上：逆时针为拉紧线，顺时针为释放线<br>只是变动会更大一些</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>华为GT2手表添加音乐的正确格式</title>
      <link href="/posts/c6a96c35/"/>
      <url>/posts/c6a96c35/</url>
      
        <content type="html"><![CDATA[<h1 id="首先将音频文件放在手机根目录下的文件夹">首先将音频文件放在手机根目录下的文件夹</h1><h1 id="不是所有的mp3文件都能加进手表">不是所有的mp3文件都能加进手表</h1><p>如果不能添加显示不支持则用格式工厂转换为<strong>VBR低质量</strong>即可<br><img src="https://files.catbox.moe/erhz0a.png" alt=""><br>输出文件夹选择E/FFOUT不要在源文件夹输出防止混淆！</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>AX6OP以及打印机注意事项</title>
      <link href="/posts/5a048d86/"/>
      <url>/posts/5a048d86/</url>
      
        <content type="html"><![CDATA[<h1 id="关于ax6路由器op">关于AX6路由器OP</h1><p>一开始刷了lean大开源的最后5.10源码，说实话还行，后来换了恩山另一个源，感觉整体不太满意。花里胡哨不实用，而且开源OP无法发挥硬件极限，开始用过志平的QSDK(无初始密码)感觉差点意思，终究是转战lean大的QSDK(初始密码password)!</p><h1 id="qsdk注意事项">QSDK注意事项</h1><h2 id="一定要先刷底包">一定要先刷底包</h2><p>进u-boot刷底包，<strong>底包是factory字样</strong>，刷完后进入web刷sysupgrade，直接刷sysupgrade非常危险进不了系统！</p><h2 id="改后台地址防止冲突">改后台地址防止冲突</h2><p>由于QSDK后台管理IP默认为<code>192.168.1.1</code>，和移动宽带光猫地址冲突。所以先打开WINSCP，协议选SCP，进入路由器后台文件系统，找到路径<code>/etc/config/network</code><br>打开网络配置文件，如下<br><img src="https://img-blog.csdnimg.cn/2021030116201599.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0FiaW4xNzYxOA==,size_16,color_FFFFFF,t_70#pic_center" alt=""><br>把 option gateway '192.168.1.1'改成自己需要的IP地址，如192.168.10.1，保存重启即可</p><h2 id="wifi加密算法">wifi加密算法</h2><p>wifi加密算法改为WPA-PSK换成别比如WPA2开头的容易导致WIFI5设备无法连接网络<br><img src="https://files.catbox.moe/4v07um.png" alt=""></p><h2 id="wifi带宽">wifi带宽</h2><p>选择160mhz即可，160频段可向下兼容，同样适用于wifi5设备和仅支持80mhz的WiFi6设备，信道目前选40，信道可根据实际调整<br><img src="https://files.catbox.moe/67u76v.png" alt=""></p><h3 id="关于80-80带宽">关于80——80带宽</h3><p>80-80很可能是AX6的4x4mimo功能，需要客户端支持4x4的天线收发，一般手机都是2x2所以用不到<br><img src="https://files.catbox.moe/jl8p2b.png" alt=""></p><h3 id="官方固件的ssh密码备份">官方固件的SSH密码备份</h3><p><code>ca267868</code></p><h2 id="相关文件下载地址">相关文件下载地址</h2><p><a href="https://e5.hgez6.top/zh-CN/Android/openwrt/QSDK/">R开头的文件是LEAN大的</a></p><h3 id="恩山地址及其qsdk下载链接">恩山地址及其QSDK下载链接</h3><p>AX6（含最新QSDK固件）<br>蓝奏云:https://wws.lanzoui.com/b02c8p8ta<br>密码:777s<br><a href="https://www.right.com.cn/forum/forum.php?mod=viewthread&amp;tid=4875974&amp;extra=page%3D1%26filter%3Dtypeid%26typeid%3D64">恩山原帖地址</a><br><a href="https://www.right.com.cn/forum/forum.php?mod=viewthread&amp;tid=8224347&amp;extra=page%3D1%26filter%3Dtypeid%26typeid%3D64">恩山志平固件分享原帖地址</a></p><h1 id="打印机注意事项">打印机注意事项</h1><h2 id="遇到的问题">遇到的问题</h2><p>打印的时候正常操作，打印出来的内容却存在错页漏页。</p><h2 id="解决">解决</h2><p>是pdf文件页面过大超过A4纸导致，以后打印使用WPS选择<strong>缩小过大打印界面</strong>，如果有些文件本身正常则默认设置即可，具体问题具体分析<br><img src="https://files.catbox.moe/7147e0.png" alt=""></p><h2 id="双面打印到第二步的时候-有概率抽取两张纸导致打印错误">双面打印到第二步的时候，有概率抽取两张纸导致打印错误！</h2><p><s>打印反面抽纸时可以用手压一下！</s>  刚打印完有点热有可能一下抽两张，冷却一下就好了</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>2012数一复盘</title>
      <link href="/posts/7048a381/"/>
      <url>/posts/7048a381/</url>
      
        <content type="html"><![CDATA[<h1 id="p1">P1</h1><p>第19题图别画错 幂级数分母带有x要对0分类讨论</p><div class="video"><video controls preload><source src='https://yun.hgez6.top/api/raw/?path=/%E8%80%83%E7%A0%94/%E5%A4%8D%E7%9B%98/2012S1.mp4' type='video/mp4'>Your browser does not support the video tag.</video></div><h1 id="第18题重要">第18题重要</h1><div class="video"><video controls preload><source src='https://yun.hgez6.top/api/raw/?path=/%E8%80%83%E7%A0%94/%E5%A4%8D%E7%9B%98/2012P2.mp4' type='video/mp4'>Your browser does not support the video tag.</video></div>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>2018英一作文1</title>
      <link href="/posts/b7753fd6/"/>
      <url>/posts/b7753fd6/</url>
      
        <content type="html"><![CDATA[<h1 id="2018英一小作文">2018英一小作文</h1><p>邀请专家要用正式语言！<br>recreation 娱乐 workshop 研讨会 seminars 研讨会<br>第一段说明有个活动，你被热情邀请并作为重要嘉宾<br>第二段说明时间地点和活动内容及其他内容<br>第三段期待你的到来；如果你接受邀请则说明到来时间以便我们安排</p><div class="video"><video controls preload><source src='https://yun.hgez6.top/api/raw/?path=/%E8%80%83%E7%A0%94/%E5%A4%8D%E7%9B%98/2018EnZW1.mp4' type='video/mp4'>Your browser does not support the video tag.</video></div>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>2022数竞赛粗心一题</title>
      <link href="/posts/8cc176c7/"/>
      <url>/posts/8cc176c7/</url>
      
        <content type="html"><![CDATA[<h1 id="题目提供op-代入时算po没有考虑负号粗心一题">题目提供OP，代入时算PO没有考虑负号粗心一题！</h1><p>务必仔细再仔细</p><div class="video"><video controls preload><source src='https://yun.hgez6.top/api/raw/?path=/%E8%80%83%E7%A0%94/%E5%A4%8D%E7%9B%98/S2022_11.mp4' type='video/mp4'>Your browser does not support the video tag.</video></div>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>2011数一复盘</title>
      <link href="/posts/cd82cf4f/"/>
      <url>/posts/cd82cf4f/</url>
      
        <content type="html"><![CDATA[<h1 id="p1">P1</h1><div class="video"><video controls preload><source src='https://yun.hgez6.top/api/raw/?path=/%E8%80%83%E7%A0%94/%E5%A4%8D%E7%9B%98/2011_S1_p1.mp4' type='video/mp4'>Your browser does not support the video tag.</video></div><h1 id="p2">P2</h1><div class="video"><video controls preload><source src='https://yun.hgez6.top/api/raw/?path=/%E8%80%83%E7%A0%94/%E5%A4%8D%E7%9B%98/2011_S1_p2.mp4' type='video/mp4'>Your browser does not support the video tag.</video></div>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>连线B站UP系列</title>
      <link href="/posts/7481f7fe/"/>
      <url>/posts/7481f7fe/</url>
      
        <content type="html"><![CDATA[<h1 id="连线风子">连线风子</h1><p>妈的，刚开始连麦说话有点激动，鸟那么大的人了说话那么紧张干嘛，没必要，吹水还不会吗</p><div class="video"><video controls preload><source src='https://yun.hgez6.top/api/raw/?path=/picbed/linkUP/fz.mp4' type='video/mp4'>Your browser does not support the video tag.</video></div><h2 id="持续更新">持续更新</h2>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>2010数一复盘</title>
      <link href="/posts/101416ca/"/>
      <url>/posts/101416ca/</url>
      
        <content type="html"><![CDATA[<h1 id="2010数一">2010数一</h1><p>难度明显下降，题目标准，仅有最后一题难，第19题计算难</p><div class="video"><video controls preload><source src='https://yun.hgez6.top/api/raw/?path=/%E8%80%83%E7%A0%94/%E5%A4%8D%E7%9B%98/2010%E6%95%B0%E4%B8%80%E5%A4%8D%E7%9B%98.mp4' type='video/mp4'>Your browser does not support the video tag.</video></div>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>2009数一</title>
      <link href="/posts/b24d88d4/"/>
      <url>/posts/b24d88d4/</url>
      
        <content type="html"><![CDATA[<h1 id="2009数一">2009数一</h1><div class="video"><video controls preload><source src='https://s138.ananas.chaoxing.com/sv-w7/video/e7/2a/22/09291132d320a7f776e2a01c22e7d383/sd.mp4' type='video/mp4'>Your browser does not support the video tag.</video></div>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>2007和2008数一复盘</title>
      <link href="/posts/24a71d83/"/>
      <url>/posts/24a71d83/</url>
      
        <content type="html"><![CDATA[<h1 id="2007数一">2007数一</h1><div class="video"><video controls preload><source src='https://s138.ananas.chaoxing.com/sv-w9/video/56/a5/1f/934b57ca56d06d54adb6a8b76c9369da/sd.mp4' type='video/mp4'>Your browser does not support the video tag.</video></div><h1 id="2008数一">2008数一</h1><p>08年数一大题有较多冷门考点如傅里叶展开，归纳法求行列式（正常为特征值特征向量法） 卡方分布的期望方差应用等</p><div class="video"><video controls preload><source src='https://s138.ananas.chaoxing.com/sv-w7/video/23/b2/83/0963b0b37b0013b88ee67ca29b32ebfb/sd.mp4' type='video/mp4'>Your browser does not support the video tag.</video></div>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>2012年专业课和无穷级数复盘</title>
      <link href="/posts/4aac8e3d/"/>
      <url>/posts/4aac8e3d/</url>
      
        <content type="html"><![CDATA[<h1 id="2012年专业课">2012年专业课</h1><p>注意线性离散和非线性的内容有点忘了</p><div class="video"><video controls preload><source src='https://s138.ananas.chaoxing.com/sv-w8/video/96/62/8f/c956e6578c2834f56418af05ebeea0d8/sd.mp4' type='video/mp4'>Your browser does not support the video tag.</video></div><h1 id="无穷级数复盘">无穷级数复盘</h1><div class="video"><video controls preload><source src='https://s138.ananas.chaoxing.com/sv-w9/video/7d/a1/9d/a6e421ed76c26fc40c3cbff4c8c6db24/sd.mp4' type='video/mp4'>Your browser does not support the video tag.</video></div>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>2005和2006数一订正</title>
      <link href="/posts/2325c1ce/"/>
      <url>/posts/2325c1ce/</url>
      
        <content type="html"><![CDATA[<h1 id="2005">2005</h1><h2 id="2005第一部分">2005第一部分</h2><div class="video"><video controls preload><source src='https://s138.ananas.chaoxing.com/sv-w9/video/71/cb/0b/cc4bcab371af711d739ed6863f4492da/sd.mp4' type='video/mp4'>Your browser does not support the video tag.</video></div><h2 id="2005第二部分">2005第二部分</h2><div class="video"><video controls preload><source src='https://s138.ananas.chaoxing.com/sv-w7/video/21/03/f2/69bd7473034e094ff12f71d1f96ae7f6/sd.mp4' type='video/mp4'>Your browser does not support the video tag.</video></div><h1 id="2006">2006</h1><div class="video"><video controls preload><source src='https://s138.ananas.chaoxing.com/sv-w9/video/50/6e/89/0b96d261d9bb47c798008c03fac033c0/sd.mp4' type='video/mp4'>Your browser does not support the video tag.</video></div>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>留数法和因式分解中的留数法</title>
      <link href="/posts/97bbbe8/"/>
      <url>/posts/97bbbe8/</url>
      
        <content type="html"><![CDATA[<h1 id="两个留数法有区别">两个留数法有区别</h1><p>求拉普拉斯逆变换时候可以直接用复变函数的留数法，也可以先用留数法(这里的留数法用于分解因式)分解因式后再根据表拉逆变换<br>且分解因式时候用的留数法针对首1标准型 ，这两个留数法使用的目的不同，故有各自不同的变换方法</p><div class="video"><video controls preload><source src='https://s138.ananas.chaoxing.com/video/63/87/51/966de1930967627d2016170de457eae8/sd.mp4' type='video/mp4'>Your browser does not support the video tag.</video></div>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>政治小程序易错知识点</title>
      <link href="/posts/f76d438f/"/>
      <url>/posts/f76d438f/</url>
      
        <content type="html"><![CDATA[<h1 id="政治小程序易错知识点-持续更新">政治小程序易错知识点【持续更新】</h1><h2 id="马原">马原</h2><p>本题考查意识形态。意识形态又称为观念上层建筑，包括政治法律思想、道德、艺术、宗教、哲学等。<strong>非意识形态包括自然科学、形式逻辑、语言学。选项C的内容都不属于意识形态。</strong> 因此，选项C正确。干扰项分析选项A、B、D，都属于意识形态的内容。<br>本题考查历史创造者问题。黎澍在《论历史的创造及其他》一文中提出了题干中的这一论断，抹杀了历史活动的参与者与历史活动的创造者的差别，是一种错误观点。<strong>马克思主义认为，只有对历史发展起推动作用的人们，才是历史的创造者，否则，就只是历史的参与者。</strong> 因此，选项A正确。干扰项分析：选项B，观点本身正确，但题干是一种错误观点。选项C，恩格斯认为，所有的人都对历史发展起作用，所有的作用构成了“历史合力”，但这并不意味着所有的人都对历史发展起创造作用，题干所表达的意思显然与历史合力论不相符。选项D，题干并没有表达历史人物有突出贡献这样的意思。<br>材料主要叙述了不知廉耻、荣辱倒错的危害，对廉耻和荣辱的认识属于社会意识，因此，材料反映的是落后社会意识的阻碍作用。AD两项观点正确，但与题意不符。C项观点错误，任何社会意识都是对社会存在的反映。<br>社会意识可分为两方面<br>1、社会心理（低层次、自发的、不系统的，以感性为主）<br>2、社会意识形式（高层次，自觉的，系统的，以理性为主）<br>生产工具是区分社会经济时代的客观依据。科学技术是先进生产力的集中体现。<br>唯物史观关于人民群众是历史创造者的原理，是无产阶级政党群众观点和群众路线的理论基础。<br>本题考查了社会存在和社会意识的关系。社会存在决定社会意识，社会存在是社会意识内容的客观来源，社会意识是社会物质生活过程及其条件的主观反映。文章、歌诗皆是关注时代发展、依据现实而作。因此，本题的正确选项是A选项B表述错误，社会意识具有相对独立性，社会意识在从根本上受到社会存在决定的同时，还具有自己特有的发展形式和规律。表现之一为社会意识与社会存在发展的不完全同步性和不平衡性，所以社会意识的变化并不总是会落后于社会存在，因此，排除。选项C表述错误，社会意识对社会存在有能动的反作用，但不全是积极的作用，因此，排除。选项D表述正确，社会意识内部各种形式之间相互影响且各自具有历史继承性，但不符合题意，因此，排除。<br>不存在抽象人性，只有具体人性，人性不是固定不变的.<br>题干材料的错误在于：第一，把个人意志看作历史发展的最终原因—认为历史是你想怎么摆就怎么摆，这里实际上夸大了人为意志，把人为意志看作历史发展的最终原因。第二，把历史看作是偶然事件的堆积——认为历史有很多种可能，只是强调了其中的偶然因素，而忽视了更重要的必然因素。第三，否定社会历史的客观性和规律性，是典型的历史唯心主义。据此，本题全选。<br>社会基本矛盾特别是生产力和生产关系的矛盾，决定着社会中其他矛盾的存在和发展，所以A项正确。社会基本矛盾具有不同的表现形式和解决方式，并从根本上影响和促进社会形态的变化和发展，所以B项正确。一般来说，社会基本矛盾是其他一切社会矛盾的根源，规定和制约着社会主要矛盾的存在和发展，社会主要矛盾是社会基本矛盾的具体体现，所以C项正确。D项错误，人民群众决定人类社会的发展方向，社会基本矛盾是根本动力，但是不决定人类社会发展的方向。<br>本题考查的知识点是社会存在的内涵。<br>社会存在也称社会物质生活条件，是社会生活的物质方面，主要包括物质生产方式、自然地理环境和人口因素。<br>自然地理环境是人类社会生存和发展的永恒的、必要的条件，是人们生活和生产的自然基础。<br>地理环境和人口因素对社会发展起着加速或延缓的作用，但不能脱离社会生产发生作用，不能决定社会的性质和社会形态的更替。<br>物质生产方式就是劳动者和劳动资料结合的特殊方式，是生产力和生产关系的统一，它集中地体现了人类社会的物质性。<br>生产方式是社会历史发展的决定力量。<br>因此，本题的正确选项是BCD选项A表述错误，<strong>自然地理环境才是人类社会生存和发展的永恒的、必要的条件。</strong><br>社会存在是社会意识内容的客观来源，社会意识是社会物质生活过程及其条件的主观反映，并非是随着时间的推移而自主变化。<br>劳动者是生产力中最活跃的因素，科学技术是生产力中的重要因素。<br>选项D，自然地理环境、人口因素和物质生产方式是社会存在的内容。<br>经济基础是制度化的物质社会关系。<br>在社会进步发展过程中，有时会出现社会形态更替的反复甚至倒退现象，但不会改变历史前进的总趋势。<br>社会基本矛盾是社会发展的根本动力。<br>生产力的基本要素：劳动工具、劳动对象、劳动者<br>重要要素：科学技术<br>不是所有历史人物，而是具有进步意义的历史人物才能首先发现或提出历史进程中的新的历史任务。<br>1.阶级斗争是社会发展的直接动力。<br>2.社会基本矛盾运动是社会发展的根本动力。<br>社会关系是非既定的，因此，人的社会属性也是变化发展的<br>改革社会发展直接动力，人民群众历史变革主体性力量<br>关系是多样的，生产关系是社会存在，而情感关系入友情、爱情是以人的意志为转移，不算。社会存在，所以不是各种关系都算社会存在<br>社会革命是阶级斗争的最高形式<br>在整个上层建筑中，政治上层建筑居于主导地位，以国家政权为核心，国家不是从来就有的，它是社会发展到一定历史阶段的产物，政治法律思想属于观念上层建筑，国家政权是上层建筑的核心。<br>一个民族之所以作出这种或那种选择，有特定的原因：是取决于民族利益。民族利益是一个民族进行历史选择的直接动机。二是取决于交往，处在转折点上的民族在国际交往中可以从处于先进社会形态的民族那里获得历史启示，各民族之间的交往是一个民族进行历史选择、实现社会跨越的必要条件。三是取决于对历史必然性以及本民族特点的把握程度，这种程度直接制约着历史选择活动的内容和方向。<br>社会形态的更替归根到底是社会基本矛盾运动的结果，与民族矛盾没有直接关系。<br>私人劳动和社会劳动的矛盾也是简单商品经济的基本矛盾<br>劳动力成为商品，是货币转化成资本的前提条件。原因是购买的劳动力能够带来剩余价值<br>运动是绝对的，静止是相对的。<br>动中有静，静中有动，所以说运动寓于静止之中，这句话也是可以的。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>2004年数一</title>
      <link href="/posts/f3eee2ae/"/>
      <url>/posts/f3eee2ae/</url>
      
        <content type="html"><![CDATA[<h1 id="2003年数一题目容易要狠抓计算">2003年数一题目容易要狠抓计算</h1><div class="video"><video controls preload><source src='https://s138.ananas.chaoxing.com/video/6b/1f/69/318afc9f55faf4f6ca0f00fae61eb7b9/sd.mp4' type='video/mp4'>Your browser does not support the video tag.</video></div>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>自控中的一些概念</title>
      <link href="/posts/26d7c29b/"/>
      <url>/posts/26d7c29b/</url>
      
        <content type="html"><![CDATA[<h1 id="自控中的一些概念-持续更新">自控中的一些概念【持续更新】</h1><h3 id="阻尼值对应的响应">阻尼值对应的响应</h3><p><img src="https://bkimg.cdn.bcebos.com/pic/d62a6059252dd42a3a207488033b5bb5c9eab8e3?x-bce-process=image/watermark,image_d2F0ZXIvYmFpa2U4MA==,g_7,xp_5,yp_5" alt=""><br>一个系统受初扰动后不再受外界激励，因受到阻力造成能量损失而位移峰值渐减的振动称为阻尼振动。系统的状态由阻尼比ζ来划分。不同系统中ζ的计算式不同，但意义一样。<strong>把ζ=0的情况称为无阻尼，即周期运动；把<code>0&lt;ζ&lt;1</code>的情况称为欠阻尼；把ζ&gt;1的情况称为过阻尼；把ζ=1的情况称为临界阻尼，即阻尼的大小刚好使系统作非“周期”运动。</strong> 理想状态下，与欠阻尼况和过阻尼相比，在临界阻尼情况下，系统从运动趋近平衡所需的时间最短。</p><h3 id="传递函数">传递函数</h3><p>传递函数描述只适用于线性定常系统<br>传递函数G(s)的拉氏反变换是脉冲响应g(t)。脉冲响应（也称脉冲过渡函数）是<br>系统在单位脉冲δ(t)瑜入时的输出响应，此时R(s)=L[δ(t)]=1.</p><h3 id="三频段理论">三频段理论</h3><p><img src="https://pic3.zhimg.com/v2-b670edf0d18f09ef81d1ad1900f660ca_b.jpg" alt="三频段理论只适用与单位反馈的最小相位系统"></p><ol><li>三频段理论有：低频、中频和高频段。</li><li>低频段主要对应系统的稳态精度和响应速度(开环增益K，系统型别v)；</li><li>中频段主要反映了系统的稳定性和动态性能(中频段对应了系统的幅值剪切频率和相频剪切频率，这分别对应了系统的幅值裕度h与相角裕度γ，同时相角裕度与剪切频率也决定了系统(尤其是高阶系统)的调节时间、峰值时间和超调量等参数，这反映了系统的动态性能；且中频段斜率最好是-20dB/dec</li><li>高频段主要体现了系统的抗噪声能力，高频段的分贝斜率越大则抗噪声能力越好(高频噪声的幅值衰减越快)。<br>注解：<br>虽然对二阶系统而言，ts公式中仅与无阻尼自然震荡频率Wn有关，但是对高阶系统而言ts公式中与Wc截止频率成反比，因此中频段可看出系统的快速性，且相角裕度与高阶系统的谐振峰值Mr和超调量均成反比！   <em><strong>(高阶公式在胡寿松书P253)</strong></em></li></ol><h3 id="pid和滤波器的关系">PID和滤波器的关系</h3><p>P 比例 I 积分 D 微分<br>高通滤波器，又称低截止滤波器、低阻滤波器，允许高于某一截频的频率通过，而大大衰减较低频率的一种滤波器  。它去掉了信号中不必要的低频成分或者说去掉了低频干扰。<br>有源高通滤波器：由无源元件(一般用R和C)和有源器件(如集成运算放大器）组成。<br><img src="https://bkimg.cdn.bcebos.com/pic/8694a4c27d1ed21b4a5d90c7a96eddc451da3f7f?x-bce-process=image/resize,m_lfit,w_440,limit_1" alt="一阶有源高通滤波器"><br><img src="https://bkimg.cdn.bcebos.com/pic/d788d43f8794a4c23fcb59090af41bd5ad6e3923?x-bce-process=image/resize,m_lfit,w_440,limit_1" alt="一阶有源高通滤波器幅频特性曲线"><br><img src="https://pic1.zhimg.com/80/v2-e48ad732f98260d48f181d2e286a6381_720w.webp?source=1940ef5c" alt="低通滤波器幅频特性曲线"><br>可知低通滤波器相当于比例积分  高通滤波器相当于比例微分<br>状态反馈未必能保持能观性，输出反馈可同时保持能观性</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>坐标变换的注意事项</title>
      <link href="/posts/db1bf418/"/>
      <url>/posts/db1bf418/</url>
      
        <content type="html"><![CDATA[<h1 id="如题">如题</h1><p>坐标平移变换一定要注意是把<code>S</code>用变换后的<code>S'</code>表示再带入到原来的<code>S</code>中去</p><div class="video"><video controls preload><source src='https://s138.ananas.chaoxing.com/sv-w9/video/26/44/82/6d9b5df4b5e693bf6308bd68803431b8/sd.mp4' type='video/mp4'>Your browser does not support the video tag.</video></div><h2 id="补充知识">补充知识</h2><p>劳斯判据的本质是判别右半平面的实数根个数，开环传递函数在奈氏图中计算<code>P</code>也可用此法</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>2003年数一</title>
      <link href="/posts/1132f9d7/"/>
      <url>/posts/1132f9d7/</url>
      
        <content type="html"><![CDATA[<h1 id="2003年数一考察全面-做的不好">2003年数一考察全面，做的不好</h1><p>补充知识点：柯西施瓦兹不等式<br><img src="https://files.catbox.moe/6v5kll.png" alt="柯西施瓦兹不等式"></p><div class="video"><video controls preload><source src='https://s138.ananas.chaoxing.com/sv-w9/video/55/0a/90/5798c53b7a8331b69d1d3d16a6d5f91f/sd.mp4' type='video/mp4'>Your browser does not support the video tag.</video></div>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>2002年数一分析</title>
      <link href="/posts/affcd7a3/"/>
      <url>/posts/affcd7a3/</url>
      
        <content type="html"><![CDATA[<h1 id="2002年数一比较简单">2002年数一比较简单</h1><p>但是定量分析不要含糊，概念要准确，计算要准确！</p><div class="video"><video controls preload><source src='https://s138.ananas.chaoxing.com/sv-w7/video/68/b4/75/00506d2cec3741b84702b8e2b91299d6/sd.mp4' type='video/mp4'>Your browser does not support the video tag.</video></div>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>2001数一极重要</title>
      <link href="/posts/9b1b7d77/"/>
      <url>/posts/9b1b7d77/</url>
      
        <content type="html"><![CDATA[<h1 id="2001年极其重要">2001年极其重要</h1><p>整张卷子做的很差，这张卷子属于数一标准题型，23年超过这个难度也属于正常<br>对其中发现的问题务必引起足够重视！</p><div class="video"><video controls preload><source src='https://s138.ananas.chaoxing.com/sv-w7/video/4f/39/f5/652ab737346d786aae6a5a5e13f417f9/sd.mp4' type='video/mp4'>Your browser does not support the video tag.</video></div>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>2000年数一</title>
      <link href="/posts/fa0542d4/"/>
      <url>/posts/fa0542d4/</url>
      
        <content type="html"><![CDATA[<h1 id="2000年是13题易错极其重要">2000年是13题易错极其重要</h1><div class="video"><video controls preload><source src='https://s138.ananas.chaoxing.com/video/e9/c9/c7/8da92c959fe2b0d204c7dc8ccd01944d/sd.mp4' type='video/mp4'>Your browser does not support the video tag.</video></div><h2 id="回顾视频1-12题">回顾视频1-12题</h2><div class="tip info"><p>清晰度为720P</p></div> <div class="video"><video controls preload><source src='https://s138.ananas.chaoxing.com/sv-w9/video/ff/e5/7b/72e67e3acd16cebb5261e948149d3e00/sd.mp4' type='video/mp4'>Your browser does not support the video tag.</video></div>  <h2 id="回顾视频剩余题目">回顾视频剩余题目</h2><div class="video"><video controls preload><source src='https://s138.ananas.chaoxing.com/video/46/0a/ff/0f152fd6e65c3a185f86d172a80947f1/sd.mp4' type='video/mp4'>Your browser does not support the video tag.</video></div> ]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>使用gulp压缩静态资源</title>
      <link href="/posts/ec215a7a/"/>
      <url>/posts/ec215a7a/</url>
      
        <content type="html"><![CDATA[<h1 id="遇到的问题">遇到的问题</h1><p>npm 全局(gobal)安装gulp有很多警告包括几个关键警告，但是这个不用管npm就这样的只要不是装不上的ERRO都不用管<br>安装完成后使用gulp命令显示找不到该命令，这个好办，安装完找不到命令通常是环境缺失，因为我没有把Nodejs放在常规的C盘而是D盘但是gulp路径还是C盘<br>这里可以用everything找一下你的<code>gulp-cli</code>安装路径我的是<code>C:\Users\hge666\AppData\Roaming\npm</code>路径通常到父目录即可<br>然后分别在用户环境变量和系统环境变量的path中添加重新打开终端即可！<br>注意压缩字体需要用到py环境的支持否则安装报错<br>注意某些前端框架可能不支持压缩</p><h2 id="参考教程">参考教程</h2><p><a href="https://akilar.top/posts/49b73b87/">参考教程</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>1999数一订正</title>
      <link href="/posts/ccc807f8/"/>
      <url>/posts/ccc807f8/</url>
      
        <content type="html"><![CDATA[<h2 id="回顾视频在线观看">回顾视频在线观看</h2><div class="tip info"><p>清晰度为720P</p></div> <div class="video"><video controls preload><source src='https://s138.ananas.chaoxing.com/video/f0/d1/b3/8ee17ab48ecd2965329bba8ec9ba01ae/sd.mp4' type='video/mp4'>Your browser does not support the video tag.</video></div>  <h3 id="回顾视频2">回顾视频2</h3><div class="video"><video controls preload><source src='https://s138.ananas.chaoxing.com/sv-w8/video/ce/c8/34/c7114a52a51a3a1b4e39ee04f6545225/sd.mp4' type='video/mp4'>Your browser does not support the video tag.</video></div> gulgu]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>重装系统后hexo博客环境恢复</title>
      <link href="/posts/74f3828d/"/>
      <url>/posts/74f3828d/</url>
      
        <content type="html"><![CDATA[<h1 id="node-js环境恢复">node.js环境恢复</h1><p>node.js无需注册表配置，仅需将对应目录添加到系统变量即可，故无需另外下载安装，那个node.js的安装包也就是一个解压的作用如果有自己的压缩包直接解压就行，一步到位</p><ol><li>进入高级系统设置，编辑<strong>用户环境变量</strong>，再编辑<code>PATH</code>并在其中添加<code>X:\Nodejs路径\node_global</code>这里的<code>X</code>替换为你对应的盘符，我对应的是<code>D:\Develop\node_global</code><br><img src="https://files.catbox.moe/yhsa7x.png" alt="用户环境图"><br><img src="https://files.catbox.moe/vew941.png" alt="通常node_global下就是hexo插件"></li><li>在<strong>系统变量</strong>中添加<code>NODE_PATH</code>,路径规则同上<code>X:\Nodejs路径\node_global\node_modules</code><br><img src="https://files.catbox.moe/kaonk7.png" alt=""><br>再编辑其中的<code>PATH</code>并添加Node.js所在目录<br><img src="https://files.catbox.moe/nlhevt.png" alt=""><br>即可</li></ol><h2 id="node-js版本">node.js版本</h2><p>node.js版本 <em><strong>12.19.0</strong></em> npm版本 <em><strong>6.14.8</strong></em><br><img src="https://files.catbox.moe/vkfftk.png" alt=""></p><h2 id="powrshell提示找不到hexo命令">powrshell提示找不到hexo命令</h2><ol><li>是因为powrshell默认禁止加载未经签名的脚本开启允许本地PowerShell脚本在不签名的情况下运行即可</li><li>hexo安装在博客目录下，可能是博客目录下的环境变量没有添加。注意你的博客目录下应该有两个 node_modules 文件夹，例如我的是 E:\GItBK-UI2\node_modules.bin 要添加到 Path 里面的是与 _config.yml 在同一个目录的 node_modules 文件夹！<a href="https://blog.csdn.net/qq_36759224/article/details/100411949">参考</a></li></ol><h2 id="hexo版本">hexo版本</h2><p><img src="https://files.catbox.moe/jirovz.png" alt="hexo版本"></p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">hexo</span>:<span class="number">6</span>.<span class="number">0</span>.<span class="number">0</span></span><br><span class="line"><span class="attribute">hexo</span>-cli:<span class="number">4</span>.<span class="number">3</span>.<span class="number">0</span></span><br><span class="line"><span class="attribute">05</span>:w1n3210.<span class="number">0</span>.<span class="number">22621</span></span><br><span class="line"><span class="attribute">node</span>:<span class="number">12</span>.<span class="number">19</span>.<span class="number">0</span></span><br><span class="line"><span class="attribute">V8</span>:<span class="number">7.8.279.23</span>-n0de.<span class="number">44</span></span><br><span class="line"><span class="attribute">uV</span>:<span class="number">1</span>.<span class="number">39</span>.<span class="number">0</span></span><br><span class="line"><span class="attribute">Z1ib</span>:<span class="number">1</span>.<span class="number">2</span>.<span class="number">11</span></span><br><span class="line"><span class="attribute">brot1</span>:<span class="number">1</span>.<span class="number">0</span>.<span class="number">9</span></span><br><span class="line"><span class="attribute">ares</span>:<span class="number">1</span>.<span class="number">16</span>.<span class="number">0</span></span><br><span class="line"><span class="attribute">modules</span>:<span class="number">72</span></span><br><span class="line"><span class="attribute">nghttp2</span>:<span class="number">1</span>.<span class="number">41</span>.<span class="number">0</span></span><br><span class="line"><span class="attribute">napl</span>:<span class="number">7</span></span><br></pre></td></tr></table></figure><h3 id="环境下载">环境下载</h3><p>221009</p><div class="btns rounded grid5">            <a class="button" href='https://sharewh1.xuexi365.com/share/download/76fe0dbb475cbffd4450c5e8a9c250f5?at_%3D1665287961320%26ak_%3Db84aaa47a23051825ebce1c070ed0534%26ad_%3Dc9151ac7eebdcd7d04352678018cf5a9%26fn%3DDevelop221009?forceDownload=1' title='环境下载'><i class='fas fa-download'></i>环境下载</a>          </div><h1 id="gulp环境恢复">gulp环境恢复</h1><p>由于nodjs的全局gobal插件和cache缓存目录都在C盘，不方便后期转移和维护，导致新电脑安装解压后仅hexo命令有效而gulp无效。因此要设置全局gobal插件和cache缓存的路径<br><code>npm config set prefix &quot;X:\Develop(改成你的)\node_global&quot;</code><br><code>npm config set cache &quot;X:\Develop(改成你的)\node_cache&quot;</code><br>输入命令<code>npm config list</code> 显示所有配置信息<br>万一输入的路径错误导致异常可用以下方法恢复：<a href="https://blog.csdn.net/CharlynYanyan/article/details/121276972">恢复教程</a><br>如果还是找不到gulp命令在博客根目录运行<code>npm install gulp --save #安装gulp插件</code>即可。</p><h3 id="网络优化">网络优化</h3><p>NPM默认的源在某些国内主机（如阿里云）的某些时间段访问会非常的慢，大家在使用NPM源时常常会使用国内的淘宝镜像源：<br><code>npm config set registry http://registry.npm.taobao.org/</code><br>但是这个淘宝源亲测不是总是最新的，如我今天使用NPM时遇到了这个情况：<br>“No matching version found for nodebb-theme-persona@9.1.36”<br>百思不得其解，最后想起可能是之前使用了淘宝源，包不是最新的有关,登录Npm账号一般也要切回默认源。<br>切换回默认的源：<br><code>npm config set registryhttps://registry.npmjs.org</code><br>使用下面的语句检查你的当前NPM源：<br><code>npm get registry</code></p><h1 id="git环境恢复">git环境恢复</h1><h2 id="ssh和用户名邮箱绑定">ssh和用户名邮箱绑定</h2><p><a href="https://www.bilibili.com/video/BV1mU4y1j72n?p=3&amp;vd_source=ea78e03d02c651ab9a1849ee5454e98b">参考视频</a><br>生成ssh:ssh-keygen -t rsa -C &quot;邮箱地址&quot;</p><p>.ssh生成路径：<code>C:\Users\你他娘的用户名\.ssh</code><br>.ssh生成后选择下个一名字较长的文件复制里面的内容，到github官网设置，ssh key处新建并粘贴<br>测定ssh是否绑定成功：<code>ssh -T git@github.com</code><br>若此时使用VScode进行账号同步会显示无绑定的用户名和邮箱<br>所以要在CMD里绑定邮箱和账号名<br><code>git config --global user.name &quot;hgez6&quot;</code><br><code>git config --global user.email &quot;1799785832@qq.com&quot;</code><br>至此结束<br>如果一直出现ssh: connect to host github.com port 22:   Connection refused的话具体看这个教程https://www.cnblogs.com/Archer314/p/14641310.html</p><h2 id="git-push">git push</h2><p>VScode中进行git push，是VSCODE代码管理器能够识别git仓库，以后统一用VScode管理即可！</p><h3 id="题外话">题外话</h3><p>一个博客utools占位图插件安装包备份</p><div class="btns rounded grid5">            <a class="button" href='https://sharewh1.xuexi365.com/share/download/e92cf661c9f2d7ccca5671050b7af69f?at_%3D1665287961666%26ak_%3Da88b390c5f7b0e65a7a5c6eb437c8ab6%26ad_%3D917bf2c90f9a96de71a2a38161ba0baf%26fn%3D%E5%8D%A0%E4%BD%8D%E5%9B%BE-1.0.0?forceDownload=1' title='占位图插件下载'><i class='fas fa-download'></i>占位图插件下载</a>          </div>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>区政府国庆喷泉</title>
      <link href="/posts/e515bbff/"/>
      <url>/posts/e515bbff/</url>
      
        <content type="html"><![CDATA[<h2 id="国庆喷泉视频在线观看">国庆喷泉视频在线观看</h2><div class="tip info"><p>清晰度为4K转720P</p></div> <div class="video"><video controls preload><source src='https://s138.ananas.chaoxing.com/sv-w8/video/91/11/a3/e1c6fa9f714b46cf64366636d5a73029/sd.mp4' type='video/mp4'>Your browser does not support the video tag.</video></div>  <h3 id="4k源视频下载">4k源视频下载</h3><div class="btns rounded grid5">            <a class="button" href='https://sharewh1.xuexi365.com/share/download/e1c6fa9f714b46cf64366636d5a73029?at_%3D1664978259645%26ak_%3De625d894db5e3d02d11e76a028028dba%26ad_%3De07e1812de9f3330b578d324859ab723%26fn%3DLieAll_20221005_185843681?forceDownload=1' title='下载4K源视频'><i class='fas fa-download'></i>下载4K源视频</a>          </div><script type="text/javascript">SAONotify("你好啊","喷泉好看吗?立即回答：好看");</script>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>奋战计划</title>
      <link href="/posts/a25c3c26/"/>
      <url>/posts/a25c3c26/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="仅大鸟本人可访问!" data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="9c57dd74b72666fa4a6ee2dfc697787598de59bb472c021dcb2e8806e62a4d2f"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-up">      <input class="hbe hbe-input-field hbe-input-field-up" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-up" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-up">Hey, password is required here.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Markdown语法与外挂标签写法汇总</title>
      <link href="/posts/2013454d/"/>
      <url>/posts/2013454d/</url>
      
        <content type="html"><![CDATA[<h1 id="1-markdown语法自带格式">1.Markdown语法自带格式</h1><div class="note info flat"><p>参考：<a href="https://blog.csdn.net/u014061630/article/details/81359144">Markdown语法图文全面详解(10分钟学会)</a></p></div><div class="note warning flat"><p>注意：此页面偶尔会存在CSS冲突问题!</p></div><h2 id="1-1-代码块">1.1 代码块</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-2">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">\```shell</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">VSCode终端</span></span><br><span class="line">hexo clean; hexo s</span><br><span class="line">hexo clean; hexo g; hexo d</span><br><span class="line">git add .; git commit -m &quot;npm publish&quot;; npm version patch; </span><br><span class="line">git push</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">Cmder终端</span></span><br><span class="line">hexo clean &amp;&amp; hexo s</span><br><span class="line">hexo clean &amp;&amp; hexo g &amp;&amp; hexo d</span><br><span class="line">git add . &amp;&amp; git commit -m &quot;npm publish&quot; &amp;&amp; npm version patch</span><br><span class="line">git push</span><br><span class="line">\```</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">VSCode终端</span></span><br><span class="line">hexo clean; hexo s</span><br><span class="line">hexo clean; hexo g; hexo d</span><br><span class="line">git add .; git commit -m &quot;npm publish&quot;; npm version patch; </span><br><span class="line">git push</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">Cmder终端</span></span><br><span class="line">hexo clean &amp;&amp; hexo s</span><br><span class="line">hexo clean &amp;&amp; hexo g &amp;&amp; hexo d</span><br><span class="line">git add . &amp;&amp; git commit -m &quot;npm publish&quot; &amp;&amp; npm version patch</span><br><span class="line">git push</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="1-2-多级标题">1.2 多级标题</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-2">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="section"># H1</span></span><br><span class="line"><span class="section">## H2</span></span><br><span class="line"><span class="section">### H3</span></span><br><span class="line"><span class="section">#### H4</span></span><br><span class="line"><span class="section">##### H5</span></span><br><span class="line"><span class="section">###### H6</span></span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><p>见本文章标题!</p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="1-3-文字样式">1.3 文字样式</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-2">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">u</span>&gt;</span></span>下划线演示<span class="language-xml"><span class="tag">&lt;/<span class="name">u</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line">文字<span class="strong">**加粗**</span>演示</span><br><span class="line"></span><br><span class="line">文字<span class="emphasis">*斜体*</span>演示</span><br><span class="line"></span><br><span class="line">文本<span class="code">`高亮`</span>演示</span><br><span class="line"></span><br><span class="line">文本~~删除~~线演示</span><br><span class="line"></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">font</span> <span class="attr">size</span> = <span class="string">5</span>&gt;</span></span>5号字<span class="language-xml"><span class="tag">&lt;/<span class="name">font</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">font</span> <span class="attr">face</span>=<span class="string">&quot;黑体&quot;</span>&gt;</span></span>黑体<span class="language-xml"><span class="tag">&lt;/<span class="name">font</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">font</span> <span class="attr">color</span>=<span class="string">blue</span>&gt;</span></span>蓝色<span class="language-xml"><span class="tag">&lt;/<span class="name">font</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">table</span>&gt;</span></span><span class="language-xml"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><span class="language-xml"><span class="tag">&lt;<span class="name">td</span> <span class="attr">bgcolor</span>=<span class="string">MistyRose</span>&gt;</span></span>这里的背景色是：MistyRosen，此处输入任意想输入的内容<span class="language-xml"><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><span class="language-xml"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><span class="language-xml"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span></span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><p><u>下划线演示</u></p><p>文字<strong>加粗</strong>演示</p><p>文字<em>斜体</em>演示</p><p>文本<code>高亮</code>演示</p><p>文本<s>删除</s>线演示</p><p><font size = 5>5号字</font><br><font face="黑体">黑体</font><br><font color=blue>蓝色</font></p><table><tr><td bgcolor=MistyRose>这里的背景色是：MistyRosen，此处输入任意想输入的内容</td></tr></table><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><div class="note info flat"><p>上述要点可参考:<a href="https://blog.csdn.net/qq_43732429/article/details/108034518">【Markdown语法】字体颜色大小及文字底色设置</a></p></div><h2 id="1-4-引用">1.4 引用</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-2">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="quote">&gt;  Java</span></span><br><span class="line"><span class="quote">&gt; 二级引用演示</span></span><br><span class="line"><span class="quote">&gt; MySQL</span></span><br><span class="line"><span class="quote">&gt; &gt;外键</span></span><br><span class="line"><span class="quote">&gt; &gt;</span></span><br><span class="line"><span class="quote">&gt; &gt;事务</span></span><br><span class="line"><span class="quote">&gt; &gt;</span></span><br><span class="line"><span class="quote">&gt; &gt;<span class="strong">**行级锁**</span>(引用内部一样可以用格式)</span></span><br><span class="line"><span class="quote">&gt; </span></span><br><span class="line"><span class="quote">&gt; ....</span></span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><blockquote><p>Java<br>二级引用演示<br>MySQL</p><blockquote><p>外键</p><p>事务</p><p><strong>行级锁</strong>(引用内部一样可以用格式)</p></blockquote><p>....</p></blockquote><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="1-5-分割线">1.5 分割线</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-2">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line"><span class="strong">**<span class="emphasis">*</span></span></span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><hr><hr><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="1-6-列表-跟空格都可以">1.6 列表(*,+,-跟空格都可以)</h2><h3 id="1-6-1-无序列表">1.6.1 无序列表</h3><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-2">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">*</span> Java</span><br><span class="line"><span class="bullet">*</span> Python</span><br><span class="line"><span class="bullet">*</span> ...</span><br><span class="line"></span><br><span class="line"><span class="bullet">+</span> Java</span><br><span class="line"><span class="bullet">+</span> Python</span><br><span class="line"><span class="bullet">+</span> ...</span><br><span class="line"></span><br><span class="line"><span class="bullet">-</span> Java</span><br><span class="line"><span class="bullet">-</span> Python</span><br><span class="line"><span class="bullet">-</span> ...</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><ul><li>Java</li><li>Python</li><li>...</li></ul><ul><li>Java</li><li>Python</li><li>...</li></ul><ul><li>Java</li><li>Python</li><li>...</li></ul><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h3 id="1-6-2-有序列表">1.6.2 有序列表</h3><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-2">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="section"># 注意后面有空格</span></span><br><span class="line"><span class="bullet">1.</span> </span><br><span class="line"><span class="bullet">2.</span> </span><br><span class="line"><span class="bullet">3.</span> </span><br><span class="line"><span class="bullet">4.</span> </span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><ol><li></li><li></li><li></li><li></li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="1-7-图片">1.7 图片</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-2">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="section"># 本地图片</span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;/assets/pusheencode.webp&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;示例图片&quot;</span> <span class="attr">style</span>=<span class="string">&quot;zoom:50%;&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="section"># 在线图片</span></span><br><span class="line">![<span class="string">code</span>](<span class="link">https://cdn.jsdelivr.net/gh/fomalhaut1998/markdown_pic/img/code.png</span>)</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><p>本地图片:<br><img src="/assets/pusheencode.webp" alt="示例图片" style="zoom:50%;" /><br>在线图片:<br><img src="https://cdn.jsdelivr.net/gh/fomalhaut1998/markdown_pic/img/code.png" alt="code"></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="1-8-表格">1.8 表格</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-2">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">| 项目标号 | 资金     | 备注 |</span><br><span class="line">| -------- | -------- | ---- |</span><br><span class="line">| 1        | 100，000 | 无   |</span><br><span class="line">| 2        | 200，000 | 无   |</span><br><span class="line">| 3        | 300,600  | 重要 |</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><table><thead><tr><th>项目标号</th><th>资金</th><th>备注</th></tr></thead><tbody><tr><td>1</td><td>100，000</td><td>无</td></tr><tr><td>2</td><td>200，000</td><td>无</td></tr><tr><td>3</td><td>300,600</td><td>重要</td></tr></tbody></table><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="1-9-公式">1.9 公式</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-2">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$$</span><br><span class="line">\Gamma(z)=\int<span class="emphasis">_0^\infty t^&#123;z-1&#125;e^&#123;-t&#125;dt.</span></span><br><span class="line"><span class="emphasis">$$</span></span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">Γ</mi><mo stretchy="false">(</mo><mi>z</mi><mo stretchy="false">)</mo><mo>=</mo><msubsup><mo>∫</mo><mn>0</mn><mi mathvariant="normal">∞</mi></msubsup><msup><mi>t</mi><mrow><mi>z</mi><mo>−</mo><mn>1</mn></mrow></msup><msup><mi>e</mi><mrow><mo>−</mo><mi>t</mi></mrow></msup><mi>d</mi><mi>t</mi><mi mathvariant="normal">.</mi></mrow><annotation encoding="application/x-tex">\Gamma(z)=\int_0^\infty t^{z-1}e^{-t}dt.</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">Γ</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.326242em;vertical-align:-0.9119499999999999em;"></span><span class="mop"><span class="mop op-symbol large-op" style="margin-right:0.44445em;position:relative;top:-0.0011249999999999316em;">∫</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.414292em;"><span style="top:-1.7880500000000001em;margin-left:-0.44445em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span><span style="top:-3.8129000000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">∞</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9119499999999999em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">t</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.864108em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.04398em;">z</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.843556em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mathdefault mtight">t</span></span></span></span></span></span></span></span></span><span class="mord mathdefault">d</span><span class="mord mathdefault">t</span><span class="mord">.</span></span></span></span></span></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h1 id="2-butterfly外挂标签">2.Butterfly外挂标签</h1><div class="note info flat"><p>这部分参考安知鱼:<a href="https://anzhiy.cn/posts/7d58.html">基于Butterfly的外挂标签引入</a></p></div><h2 id="2-1-行内文本样式-text">2.1 行内文本样式 text</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-2">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-3">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&#123;% u 文本内容 %&#125;</span><br><span class="line">&#123;% emp 文本内容 %&#125;</span><br><span class="line">&#123;% wavy 文本内容 %&#125;</span><br><span class="line">&#123;% del 文本内容 %&#125;</span><br><span class="line">&#123;% kbd 文本内容 %&#125;</span><br><span class="line">&#123;% psw 文本内容 %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">1.</span> 带 &#123;% u 下划线 %&#125; 的文本</span><br><span class="line"><span class="bullet">2.</span> 带 &#123;% emp 着重号 %&#125; 的文本</span><br><span class="line"><span class="bullet">3.</span> 带 &#123;% wavy 波浪线 %&#125; 的文本</span><br><span class="line"><span class="bullet">4.</span> 带 &#123;% del 删除线 %&#125; 的文本</span><br><span class="line"><span class="bullet">5.</span> 键盘样式的文本 &#123;% kbd command %&#125; + &#123;% kbd D %&#125;</span><br><span class="line"><span class="bullet">6.</span> 密码样式的文本：&#123;% psw 这里没有验证码 %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><ol><li>带 <u>下划线</u> 的文本</li><li>带 <emp>着重号</emp> 的文本</li><li>带 <wavy>波浪线</wavy> 的文本</li><li>带 <del>删除线</del> 的文本</li><li>键盘样式的文本 <kbd>command</kbd> + <kbd>D</kbd></li><li>密码样式的文本：<psw>这里没有验证码</psw></li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-2-行内文本-span">2.2 行内文本 span</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-2">配置参数</button></li><li class="tab"><button type="button" data-href="#分栏-3">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% span 样式参数(参数以空格划分), 文本内容 %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><ol><li><code>字体</code>: logo, code</li><li><code>颜色</code>: red,yellow,green,cyan,blue,gray</li><li><code>大小</code>: small, h4, h3, h2, h1, large, huge, ultra</li><li><code>对齐方向</code>: left, center, right</li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">-</span> 彩色文字</span><br><span class="line">在一段话中方便插入各种颜色的标签，包括：&#123;% span red, 红色 %&#125;、&#123;% span yellow, 黄色 %&#125;、&#123;% span green, 绿色 %&#125;、&#123;% span cyan, 青色 %&#125;、&#123;% span blue, 蓝色 %&#125;、&#123;% span gray, 灰色 %&#125;。</span><br><span class="line"><span class="bullet">-</span> 超大号文字</span><br><span class="line">文档「开始」页面中的标题部分就是超大号文字。</span><br><span class="line">&#123;% span center logo large, Volantis %&#125;</span><br><span class="line">&#123;% span center small, A Wonderful Theme for Hexo %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-4"><ul><li>彩色文字<br>在一段话中方便插入各种颜色的标签，包括：<span class='p red'>红色</span>、<span class='p yellow'>黄色</span>、<span class='p green'>绿色</span>、<span class='p cyan'>青色</span>、<span class='p blue'>蓝色</span>、<span class='p gray'>灰色</span>。</li><li>超大号文字<br>文档「开始」页面中的标题部分就是超大号文字。<br><span class='p center logo large'>Volantis</span><br><span class='p center small'>A Wonderful Theme for Hexo</span></li></ul><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-3-段落文本-p">2.3 段落文本 p</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-2">配置参数</button></li><li class="tab"><button type="button" data-href="#分栏-3">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% p 样式参数(参数以空格划分), 文本内容 %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><ol><li><code>字体</code>: logo, code</li><li><code>颜色</code>: red,yellow,green,cyan,blue,gray</li><li><code>大小</code>: small, h4, h3, h2, h1, large, huge, ultra</li><li><code>对齐方向</code>: left, center, right</li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">-</span> 彩色文字</span><br><span class="line">在一段话中方便插入各种颜色的标签，包括：&#123;% p red, 红色 %&#125;、&#123;% p yellow, 黄色 %&#125;、&#123;% p green, 绿色 %&#125;、&#123;% p cyan, 青色 %&#125;、&#123;% p blue, 蓝色 %&#125;、&#123;% p gray, 灰色 %&#125;。</span><br><span class="line"><span class="bullet">-</span> 超大号文字</span><br><span class="line">文档「开始」页面中的标题部分就是超大号文字。</span><br><span class="line">&#123;% p center logo large, Volantis %&#125;</span><br><span class="line">&#123;% p center small, A Wonderful Theme for Hexo %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-4"><ul><li>彩色文字<br>在一段话中方便插入各种颜色的标签，包括：<p class='p red'>红色</p>、<p class='p yellow'>黄色</p>、<p class='p green'>绿色</p>、<p class='p cyan'>青色</p>、<p class='p blue'>蓝色</p>、<p class='p gray'>灰色</p>。</li><li>超大号文字<br>文档「开始」页面中的标题部分就是超大号文字。</li></ul><p class='p center logo large'>Volantis</p><p class='p center small'>A Wonderful Theme for Hexo</p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-4-引用note">2.4 引用note</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">通用配置</button></li><li class="tab"><button type="button" data-href="#分栏-2">语法格式</button></li><li class="tab"><button type="button" data-href="#分栏-3">参数配置</button></li><li class="tab"><button type="button" data-href="#分栏-4">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-5">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">note:</span><br><span class="line">  # Note tag style values:</span><br><span class="line">  #  - simple    bs-callout old alert style. Default.</span><br><span class="line">  #  - modern    bs-callout new (v2-v3) alert style.</span><br><span class="line">  #  - flat      flat callout style with background, like on Mozilla or StackOverflow.</span><br><span class="line">  #  - disabled  disable all CSS styles import of note tag.</span><br><span class="line">  style: simple</span><br><span class="line">  icons: false</span><br><span class="line">  border<span class="emphasis">_radius: 3</span></span><br><span class="line"><span class="emphasis">  # Offset lighter of background in % for modern and flat styles (modern: -12 | 12; flat: -18 | 6).</span></span><br><span class="line"><span class="emphasis">  # Offset also applied to label tag variables. This option can work with disabled note tag.</span></span><br><span class="line"><span class="emphasis">  light_</span>bg<span class="emphasis">_offset: 0</span></span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="section"># 自带icon</span></span><br><span class="line">&#123;% note [class] [no-icon] [style] %&#125;</span><br><span class="line">Any content (support inline tags too.io).</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line"><span class="section"># 外部icon</span></span><br><span class="line">&#123;% note [color] [icon] [style] %&#125;</span><br><span class="line">Any content (support inline tags too.io).</span><br><span class="line">&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><p>1.自带icon</p><table><thead><tr><th>参数</th><th style="text-align:center">用法</th></tr></thead><tbody><tr><td>class</td><td style="text-align:center">【可选】标识，不同的标识有不同的配色 （ default / primary / success / info / warning / danger ）</td></tr><tr><td>no-icon</td><td style="text-align:center">【可选】不显示 icon</td></tr><tr><td>style</td><td style="text-align:center">【可选】可以覆盖配置中的 style （simple/modern/flat/disabled）</td></tr></tbody></table><p>2.外部icon</p><table><thead><tr><th>参数</th><th style="text-align:center">用法</th></tr></thead><tbody><tr><td>class</td><td style="text-align:center">【可选】标识，不同的标识有不同的配色 （ default / blue / pink / red / purple / orange / green ）</td></tr><tr><td>no-icon</td><td style="text-align:center">【可选】可配置自定义 icon (只支持 fontawesome 图标, 也可以配置 no-icon )</td></tr><tr><td>style</td><td style="text-align:center">【可选】可以覆盖配置中的 style （simple/modern/flat/disabled）</td></tr></tbody></table><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-4"><details class="folding-tag" blue><summary> 1.自带icon </summary>              <div class='content'>              <p>1.<code>simple</code>样式</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;% note simple %&#125;默认 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note default simple %&#125;default 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note primary simple %&#125;primary 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note success simple %&#125;success 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note info simple %&#125;info 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note warning simple %&#125;warning 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note danger simple %&#125;danger 提示块标签&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure><p>2.<code>modern</code>样式</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;% note modern %&#125;默认 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note default modern %&#125;default 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note primary modern %&#125;primary 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note success modern %&#125;success 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note info modern %&#125;info 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note warning modern %&#125;warning 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note danger modern %&#125;danger 提示块标签&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure><p>3.<code>flat</code>样式</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;% note flat %&#125;默认 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note default flat %&#125;default 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note primary flat %&#125;primary 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note success flat %&#125;success 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note info flat %&#125;info 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note warning flat %&#125;warning 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note danger flat %&#125;danger 提示块标签&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure><p>4.<code>disabled</code>样式</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;% note disabled %&#125;默认 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note default disabled %&#125;default 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note primary disabled %&#125;primary 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note success disabled %&#125;success 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note info disabled %&#125;info 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note warning disabled %&#125;warning 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note danger disabled %&#125;danger 提示块标签&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure><p>5.<code>no-icon</code>样式</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;% note no-icon %&#125;默认 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note default no-icon %&#125;default 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note primary no-icon %&#125;primary 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note success no-icon %&#125;success 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note info no-icon %&#125;info 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note warning no-icon %&#125;warning 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note danger no-icon %&#125;danger 提示块标签&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure>              </div>            </details><details class="folding-tag" blue><summary> 2.外部icon </summary>              <div class='content'>              <p>1.<code>simple</code>样式</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;% note &#x27;fab fa-cc-visa&#x27; simple %&#125;你是刷 Visa 还是 UnionPay&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note blue &#x27;fas fa-bullhorn&#x27; simple %&#125;2021年快到了....&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note pink &#x27;fas fa-car-crash&#x27; simple %&#125;小心开车 安全至上&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note red &#x27;fas fa-fan&#x27; simple%&#125;这是三片呢？还是四片？&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note orange &#x27;fas fa-battery-half&#x27; simple %&#125;你是刷 Visa 还是 UnionPay&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note purple &#x27;far fa-hand-scissors&#x27; simple %&#125;剪刀石头布&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note green &#x27;fab fa-internet-explorer&#x27; simple %&#125;前端最讨厌的浏览器&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure><p>2.<code>modern</code>样式</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;% note &#x27;fab fa-cc-visa&#x27; modern %&#125;你是刷 Visa 还是 UnionPay&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note blue &#x27;fas fa-bullhorn&#x27; modern %&#125;2021年快到了....&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note pink &#x27;fas fa-car-crash&#x27; modern %&#125;小心开车 安全至上&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note red &#x27;fas fa-fan&#x27; modern%&#125;这是三片呢？还是四片？&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note orange &#x27;fas fa-battery-half&#x27; modern %&#125;你是刷 Visa 还是 UnionPay&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note purple &#x27;far fa-hand-scissors&#x27; modern %&#125;剪刀石头布&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note green &#x27;fab fa-internet-explorer&#x27; modern %&#125;前端最讨厌的浏览器&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure><p>3.<code>flat</code>样式</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;% note &#x27;fab fa-cc-visa&#x27; flat %&#125;你是刷 Visa 还是 UnionPay&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note blue &#x27;fas fa-bullhorn&#x27; flat %&#125;2021年快到了....&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note pink &#x27;fas fa-car-crash&#x27; flat %&#125;小心开车 安全至上&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note red &#x27;fas fa-fan&#x27; flat%&#125;这是三片呢？还是四片？&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note orange &#x27;fas fa-battery-half&#x27; flat %&#125;你是刷 Visa 还是 UnionPay&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note purple &#x27;far fa-hand-scissors&#x27; flat %&#125;剪刀石头布&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note green &#x27;fab fa-internet-explorer&#x27; flat %&#125;前端最讨厌的浏览器&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure><p>4.<code>disabled</code>样式</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;% note &#x27;fab fa-cc-visa&#x27; disabled %&#125;你是刷 Visa 还是 UnionPay&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note blue &#x27;fas fa-bullhorn&#x27; disabled %&#125;2021年快到了....&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note pink &#x27;fas fa-car-crash&#x27; disabled %&#125;小心开车 安全至上&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note red &#x27;fas fa-fan&#x27; disabled %&#125;这是三片呢？还是四片？&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note orange &#x27;fas fa-battery-half&#x27; disabled %&#125;你是刷 Visa 还是 UnionPay&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note purple &#x27;far fa-hand-scissors&#x27; disabled %&#125;剪刀石头布&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note green &#x27;fab fa-internet-explorer&#x27; disabled %&#125;前端最讨厌的浏览器&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure><p>5.<code>no-icon</code>样式</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;% note no-icon %&#125;你是刷 Visa 还是 UnionPay&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note blue no-icon %&#125;2021年快到了....&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note pink no-icon %&#125;小心开车 安全至上&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note red no-icon %&#125;这是三片呢？还是四片？&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note orange no-icon %&#125;你是刷 Visa 还是 UnionPay&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note purple no-icon %&#125;剪刀石头布&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note green no-icon %&#125;前端最讨厌的浏览器&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure>              </div>            </details><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-5"><details class="folding-tag" blue><summary> 1.自带icon </summary>              <div class='content'>              <p>1.<code>simple</code>样式</p><div class="note simple"><p>默认 提示块标签</p></div><div class="note default simple"><p>default 提示块标签</p></div><div class="note primary simple"><p>primary 提示块标签</p></div><div class="note success simple"><p>success 提示块标签</p></div><div class="note info simple"><p>info 提示块标签</p></div><div class="note warning simple"><p>warning 提示块标签</p></div><div class="note danger simple"><p>danger 提示块标签</p></div>2.`modern`样式<div class="note modern"><p>默认 提示块标签</p></div><div class="note default modern"><p>default 提示块标签</p></div><div class="note primary modern"><p>primary 提示块标签</p></div><div class="note success modern"><p>success 提示块标签</p></div><div class="note info modern"><p>info 提示块标签</p></div><div class="note warning modern"><p>warning 提示块标签</p></div><div class="note danger modern"><p>danger 提示块标签</p></div><p>3.<code>flat</code>样式</p><div class="note flat"><p>默认 提示块标签</p></div><div class="note default flat"><p>default 提示块标签</p></div><div class="note primary flat"><p>primary 提示块标签</p></div><div class="note success flat"><p>success 提示块标签</p></div><div class="note info flat"><p>info 提示块标签</p></div><div class="note warning flat"><p>warning 提示块标签</p></div><div class="note danger flat"><p>danger 提示块标签</p></div><p>4.<code>disabled</code>样式</p><div class="note disabled"><p>默认 提示块标签</p></div><div class="note default disabled"><p>default 提示块标签</p></div><div class="note primary disabled"><p>primary 提示块标签</p></div><div class="note success disabled"><p>success 提示块标签</p></div><div class="note info disabled"><p>info 提示块标签</p></div><div class="note warning disabled"><p>warning 提示块标签</p></div><div class="note danger disabled"><p>danger 提示块标签</p></div><p>5.<code>no-icon</code>样式</p><div class="note no-icon flat"><p>默认 提示块标签</p></div><div class="note default no-icon flat"><p>default 提示块标签</p></div><div class="note primary no-icon flat"><p>primary 提示块标签</p></div><div class="note success no-icon flat"><p>success 提示块标签</p></div><div class="note info no-icon flat"><p>info 提示块标签</p></div><div class="note warning no-icon flat"><p>warning 提示块标签</p></div><div class="note danger no-icon flat"><p>danger 提示块标签</p></div>              </div>            </details><details class="folding-tag" blue><summary> 2.外部icon </summary>              <div class='content'>              <p>1.<code>simple</code>样式</p><div class="note icon-padding simple"><i class="note-icon fab fa-cc-visa"></i><p>你是刷 Visa 还是 UnionPay</p></div><div class="note blue icon-padding simple"><i class="note-icon fas fa-bullhorn"></i><p>2021年快到了....</p></div><div class="note pink icon-padding simple"><i class="note-icon fas fa-car-crash"></i><p>小心开车 安全至上</p></div><div class="note red icon-padding simple"><i class="note-icon fas fa-fan"></i><p>这是三片呢？还是四片？</p></div><div class="note orange icon-padding simple"><i class="note-icon fas fa-battery-half"></i><p>你是刷 Visa 还是 UnionPay</p></div><div class="note purple icon-padding simple"><i class="note-icon far fa-hand-scissors"></i><p>剪刀石头布</p></div><div class="note green icon-padding simple"><i class="note-icon fab fa-internet-explorer"></i><p>前端最讨厌的浏览器</p></div><p>2.<code>modern</code>样式</p><div class="note icon-padding modern"><i class="note-icon fab fa-cc-visa"></i><p>你是刷 Visa 还是 UnionPay</p></div><div class="note blue icon-padding modern"><i class="note-icon fas fa-bullhorn"></i><p>2021年快到了....</p></div><div class="note pink icon-padding modern"><i class="note-icon fas fa-car-crash"></i><p>小心开车 安全至上</p></div><div class="note red icon-padding modern"><i class="note-icon fas fa-fan"></i><p>这是三片呢？还是四片？</p></div><div class="note orange icon-padding modern"><i class="note-icon fas fa-battery-half"></i><p>你是刷 Visa 还是 UnionPay</p></div><div class="note purple icon-padding modern"><i class="note-icon far fa-hand-scissors"></i><p>剪刀石头布</p></div><div class="note green icon-padding modern"><i class="note-icon fab fa-internet-explorer"></i><p>前端最讨厌的浏览器</p></div><p>3.<code>flat</code>样式</p><div class="note icon-padding flat"><i class="note-icon fab fa-cc-visa"></i><p>你是刷 Visa 还是 UnionPay</p></div><div class="note blue icon-padding flat"><i class="note-icon fas fa-bullhorn"></i><p>2021年快到了....</p></div><div class="note pink icon-padding flat"><i class="note-icon fas fa-car-crash"></i><p>小心开车 安全至上</p></div><div class="note red icon-padding flat"><i class="note-icon fas fa-fan"></i><p>这是三片呢？还是四片？</p></div><div class="note orange icon-padding flat"><i class="note-icon fas fa-battery-half"></i><p>你是刷 Visa 还是 UnionPay</p></div><div class="note purple icon-padding flat"><i class="note-icon far fa-hand-scissors"></i><p>剪刀石头布</p></div><div class="note green icon-padding flat"><i class="note-icon fab fa-internet-explorer"></i><p>前端最讨厌的浏览器</p></div><p>4.<code>disabled</code>样式</p><div class="note icon-padding disabled"><i class="note-icon fab fa-cc-visa"></i><p>你是刷 Visa 还是 UnionPay</p></div><div class="note blue icon-padding disabled"><i class="note-icon fas fa-bullhorn"></i><p>2021年快到了....</p></div><div class="note pink icon-padding disabled"><i class="note-icon fas fa-car-crash"></i><p>小心开车 安全至上</p></div><div class="note red icon-padding disabled"><i class="note-icon fas fa-fan"></i><p>这是三片呢？还是四片？</p></div><div class="note orange icon-padding disabled"><i class="note-icon fas fa-battery-half"></i><p>你是刷 Visa 还是 UnionPay</p></div><div class="note purple icon-padding disabled"><i class="note-icon far fa-hand-scissors"></i><p>剪刀石头布</p></div><div class="note green icon-padding disabled"><i class="note-icon fab fa-internet-explorer"></i><p>前端最讨厌的浏览器</p></div><p>5.<code>no-icon</code>样式</p><div class="note no-icon flat"><p>你是刷 Visa 还是 UnionPay</p></div><div class="note blue no-icon flat"><p>2021年快到了....</p></div><div class="note pink no-icon flat"><p>小心开车 安全至上</p></div><div class="note red no-icon flat"><p>这是三片呢？还是四片？</p></div><div class="note orange no-icon flat"><p>你是刷 Visa 还是 UnionPay</p></div><div class="note purple no-icon flat"><p>剪刀石头布</p></div><div class="note green no-icon flat"><p>前端最讨厌的浏览器</p></div>              </div>            </details><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-5-上标标签-tip">2.5 上标标签 tip</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-2">配置参数</button></li><li class="tab"><button type="button" data-href="#分栏-3">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% tip [参数，可选] %&#125;文本内容&#123;% endtip %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><ol><li><code>样式</code>: success,error,warning,bolt,ban,home,sync,cogs,key,bell</li><li><code>自定义图标</code>: 支持fontawesome。</li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;% tip %&#125;default&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip info %&#125;info&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip success %&#125;success&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip error %&#125;error&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip warning %&#125;warning&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip bolt %&#125;bolt&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip ban %&#125;ban&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip home %&#125;home&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip sync %&#125;sync&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip cogs %&#125;cogs&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip key %&#125;key&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip bell %&#125;bell&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip fa-atom %&#125;自定义font awesome图标&#123;% endtip %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-4"><div class="tip "><p>default</p></div><div class="tip info"><p>info</p></div><div class="tip success"><p>success</p></div><div class="tip error"><p>error</p></div><div class="tip warning"><p>warning</p></div><div class="tip bolt"><p>bolt</p></div><div class="tip ban"><p>ban</p></div><div class="tip home"><p>home</p></div><div class="tip sync"><p>sync</p></div><div class="tip cogs"><p>cogs</p></div><div class="tip key"><p>key</p></div><div class="tip bell"><p>bell</p></div><div class="tip fa-atom"><p>自定义font awesome图标</p></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-6-动态标签-anima">2.6 动态标签 anima</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-2">配置参数</button></li><li class="tab"><button type="button" data-href="#分栏-3">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% tip [参数，可选] %&#125;文本内容&#123;% endtip %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><div class="note info flat"><ol><li>将所需的CSS类添加到图标（或DOM中的任何元素）。</li><li>对于父级悬停样式，需要给目标元素添加指定CSS类，同时还要给目标元素的父级元素添加CSS类<code>faa-parent animated-hover</code>。（详情见示例及示例源码）<br>You can regulate the speed of the animation by adding the CSS class or . faa-fastfaa-slow</li><li>可以通过给目标元素添加CSS类<code>faa-fast</code>或<code>faa-slow</code>来控制动画快慢。</li></ol></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><p>1.On DOM load（当页面加载时显示动画）</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#123;% tip warning faa-horizontal animated %&#125;warning&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip ban faa-flash animated %&#125;ban&#123;% endtip %&#125;</span><br></pre></td></tr></table></figure><p>2.调整动画速度</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#123;% tip warning faa-horizontal animated faa-fast %&#125;warning&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip ban faa-flash animated faa-slow %&#125;ban&#123;% endtip %&#125;</span><br></pre></td></tr></table></figure><p>3.On hover（当鼠标悬停时显示动画）</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#123;% tip warning faa-horizontal animated-hover %&#125;warning&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip ban faa-flash animated-hover %&#125;ban&#123;% endtip %&#125;</span><br></pre></td></tr></table></figure><p>4.On parent hover（当鼠标悬停在父级元素时显示动画）</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#123;% tip warning faa-parent animated-hover %&#125;<span class="language-xml"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;faa-horizontal&quot;</span>&gt;</span></span>warning<span class="language-xml"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span>&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip ban faa-parent animated-hover %&#125;<span class="language-xml"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;faa-flash&quot;</span>&gt;</span></span>ban<span class="language-xml"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span>&#123;% endtip %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-4"><p>1.On DOM load（当页面加载时显示动画）</p><div class="tip warning faa-horizontal animated"><p>warning</p></div><div class="tip ban faa-flash animated"><p>ban</p></div>2.调整动画速度<div class="tip warning faa-horizontal animated faa-fast"><p>warning</p></div><div class="tip ban faa-flash animated faa-slow"><p>ban</p></div>3.On hover（当鼠标悬停时显示动画）<div class="tip warning faa-horizontal animated-hover"><p>warning</p></div><div class="tip ban faa-flash animated-hover"><p>ban</p></div>4.On parent hover（当鼠标悬停在父级元素时显示动画）<div class="tip warning faa-parent animated-hover"><p class="faa-horizontal">warning</p></div><div class="tip ban faa-parent animated-hover"><p class="faa-flash">ban</p></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-7-复选列表-checkbox">2.7 复选列表 checkbox</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-2">配置参数</button></li><li class="tab"><button type="button" data-href="#分栏-3">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% checkbox 样式参数（可选）, 文本（支持简单md） %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><ol><li><code>样式</code>: plus, minus, times</li><li><code>颜色</code>: red,yellow,green,cyan,blue,gray</li><li><code>选中状态</code>: checked</li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&#123;% checkbox 纯文本测试 %&#125;</span><br><span class="line">&#123;% checkbox checked, 支持简单的 [<span class="string">markdown</span>](<span class="link">https://guides.github.com/features/mastering-markdown/</span>) 语法 %&#125;</span><br><span class="line">&#123;% checkbox red, 支持自定义颜色 %&#125;</span><br><span class="line">&#123;% checkbox green checked, 绿色 + 默认选中 %&#125;</span><br><span class="line">&#123;% checkbox yellow checked, 黄色 + 默认选中 %&#125;</span><br><span class="line">&#123;% checkbox cyan checked, 青色 + 默认选中 %&#125;</span><br><span class="line">&#123;% checkbox blue checked, 蓝色 + 默认选中 %&#125;</span><br><span class="line">&#123;% checkbox plus green checked, 增加 %&#125;</span><br><span class="line">&#123;% checkbox minus yellow checked, 减少 %&#125;</span><br><span class="line">&#123;% checkbox times red checked, 叉 %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-4"><div class='checkbox'><input type="checkbox" />            <p>纯文本测试</p>            </div><div class='checkbox checked'><input type="checkbox" checked="checked"/>            <p>支持简单的 <a href="https://guides.github.com/features/mastering-markdown/">markdown</a> 语法</p>            </div><div class='checkbox red'><input type="checkbox" />            <p>支持自定义颜色</p>            </div><div class='checkbox green checked'><input type="checkbox" checked="checked"/>            <p>绿色 + 默认选中</p>            </div><div class='checkbox yellow checked'><input type="checkbox" checked="checked"/>            <p>黄色 + 默认选中</p>            </div><div class='checkbox cyan checked'><input type="checkbox" checked="checked"/>            <p>青色 + 默认选中</p>            </div><div class='checkbox blue checked'><input type="checkbox" checked="checked"/>            <p>蓝色 + 默认选中</p>            </div><div class='checkbox plus green checked'><input type="checkbox" checked="checked"/>            <p>增加</p>            </div><div class='checkbox minus yellow checked'><input type="checkbox" checked="checked"/>            <p>减少</p>            </div><div class='checkbox times red checked'><input type="checkbox" checked="checked"/>            <p>叉</p>            </div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-8-单选列表-radio">2.8 单选列表 radio</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-2">配置参数</button></li><li class="tab"><button type="button" data-href="#分栏-3">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% radio 样式参数（可选）, 文本（支持简单md） %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><ol><li><code>颜色</code>: red,yellow,green,cyan,blue,gray</li><li><code>选中状态</code>: checked</li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&#123;% radio 纯文本测试 %&#125;</span><br><span class="line">&#123;% radio checked, 支持简单的 [<span class="string">markdown</span>](<span class="link">https://guides.github.com/features/mastering-markdown/</span>) 语法 %&#125;</span><br><span class="line">&#123;% radio red, 支持自定义颜色 %&#125;</span><br><span class="line">&#123;% radio green, 绿色 %&#125;</span><br><span class="line">&#123;% radio yellow, 黄色 %&#125;</span><br><span class="line">&#123;% radio cyan, 青色 %&#125;</span><br><span class="line">&#123;% radio blue, 蓝色 %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-4"><div class='checkbox'><input type="radio" />            <p>纯文本测试</p>            </div><div class='checkbox checked'><input type="radio" checked="checked"/>            <p>支持简单的 <a href="https://guides.github.com/features/mastering-markdown/">markdown</a> 语法</p>            </div><div class='checkbox red'><input type="radio" />            <p>支持自定义颜色</p>            </div><div class='checkbox green'><input type="radio" />            <p>绿色</p>            </div><div class='checkbox yellow'><input type="radio" />            <p>黄色</p>            </div><div class='checkbox cyan'><input type="radio" />            <p>青色</p>            </div><div class='checkbox blue'><input type="radio" />            <p>蓝色</p>            </div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-9-时间轴-timeline">2.9 时间轴 timeline</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-2">配置参数</button></li><li class="tab"><button type="button" data-href="#分栏-3">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&#123;% timeline 时间线标题（可选）[,color] %&#125;</span><br><span class="line">&lt;!-- timeline 时间节点（标题） --&gt;</span><br><span class="line">正文内容</span><br><span class="line">&lt;!-- endtimeline --&gt;</span><br><span class="line">&lt;!-- timeline 时间节点（标题） --&gt;</span><br><span class="line">正文内容</span><br><span class="line">&lt;!-- endtimeline --&gt;</span><br><span class="line">&#123;% endtimeline %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><ol><li><code>title</code>:标题/时间线</li><li><code>color</code>:<code>timeline</code>颜色:default(留空) / blue / pink / red / purple / orange / green</li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">&#123;% timeline 时间轴样式,blue %&#125;</span><br><span class="line"></span><br><span class="line">&lt;!-- timeline 2020-07-24 [<span class="string">2.6.6 -&gt; 3.0</span>](<span class="link">https://github.com/volantis-x/hexo-theme-volantis/releases</span>) --&gt;</span><br><span class="line"></span><br><span class="line"><span class="bullet">1.</span> 如果有 <span class="code">`hexo-lazyload-image`</span> 插件，需要删除并重新安装最新版本，设置 <span class="code">`lazyload.isSPA: true`</span>。</span><br><span class="line"><span class="bullet">2.</span> 2.x 版本的 css 和 js 不适用于 3.x 版本，如果使用了 <span class="code">`use_cdn: true`</span> 则需要删除。</span><br><span class="line"><span class="bullet">3.</span> 2.x 版本的 fancybox 标签在 3.x 版本中被重命名为 gallery 。</span><br><span class="line"><span class="bullet">4.</span> 2.x 版本的置顶 <span class="code">`top: true`</span> 改为了 <span class="code">`pin: true`</span>，并且同样适用于 <span class="code">`layout: page`</span> 的页面。</span><br><span class="line"><span class="bullet">5.</span> 如果使用了 <span class="code">`hexo-offline`</span> 插件，建议卸载，3.0 版本默认开启了 pjax 服务。</span><br><span class="line"></span><br><span class="line">&lt;!-- endtimeline --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- timeline 2020-05-15 [<span class="string">2.6.3 -&gt; 2.6.6</span>](<span class="link">https://github.com/volantis-x/hexo-theme-volantis/releases/tag/2.6.6</span>) --&gt;</span><br><span class="line"></span><br><span class="line">不需要额外处理。</span><br><span class="line"></span><br><span class="line">&lt;!-- endtimeline --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- timeline 2020-04-20 [<span class="string">2.6.2 -&gt; 2.6.3</span>](<span class="link">https://github.com/volantis-x/hexo-theme-volantis/releases/tag/2.6.3</span>) --&gt;</span><br><span class="line"></span><br><span class="line"><span class="bullet">1.</span> 全局搜索 <span class="code">`seotitle`</span> 并替换为 <span class="code">`seo_title`</span>。</span><br><span class="line"><span class="bullet">2.</span> group 组件的索引规则有变，使用 group 组件的文章内，<span class="code">`group: group_name`</span> 对应的组件名必须是 <span class="code">`group_name`</span>。</span><br><span class="line"><span class="bullet">2.</span> group 组件的列表名优先显示文章的 <span class="code">`short_title`</span> 其次是 <span class="code">`title`</span>。</span><br><span class="line"></span><br><span class="line">&lt;!-- endtimeline --&gt;</span><br><span class="line"></span><br><span class="line">&#123;% endtimeline %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-4"><div class="timeline blue"><div class='timeline-item headline'><div class='timeline-item-title'><div class='item-circle'><p>时间轴样式</p></div></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>2020-07-24 <a href="https://github.com/volantis-x/hexo-theme-volantis/releases">2.6.6 -&gt; 3.0</a></p></div></div><div class='timeline-item-content'><ol><li>如果有 <code>hexo-lazyload-image</code> 插件，需要删除并重新安装最新版本，设置 <code>lazyload.isSPA: true</code>。</li><li>2.x 版本的 css 和 js 不适用于 3.x 版本，如果使用了 <code>use_cdn: true</code> 则需要删除。</li><li>2.x 版本的 fancybox 标签在 3.x 版本中被重命名为 gallery 。</li><li>2.x 版本的置顶 <code>top: true</code> 改为了 <code>pin: true</code>，并且同样适用于 <code>layout: page</code> 的页面。</li><li>如果使用了 <code>hexo-offline</code> 插件，建议卸载，3.0 版本默认开启了 pjax 服务。</li></ol></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>2020-05-15 <a href="https://github.com/volantis-x/hexo-theme-volantis/releases/tag/2.6.6">2.6.3 -&gt; 2.6.6</a></p></div></div><div class='timeline-item-content'><p>不需要额外处理。</p></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>2020-04-20 <a href="https://github.com/volantis-x/hexo-theme-volantis/releases/tag/2.6.3">2.6.2 -&gt; 2.6.3</a></p></div></div><div class='timeline-item-content'><ol><li>全局搜索 <code>seotitle</code> 并替换为 <code>seo_title</code>。</li><li>group 组件的索引规则有变，使用 group 组件的文章内，<code>group: group_name</code> 对应的组件名必须是 <code>group_name</code>。</li><li>group 组件的列表名优先显示文章的 <code>short_title</code> 其次是 <code>title</code>。</li></ol></div></div></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-10-链接卡片-link">2.10 链接卡片 link</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-2">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-3">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% link 标题, 链接, 图片链接（可选） %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% link 糖果屋教程贴, https://akilar.top/posts/615e2dec/, https://cdn.cbd.int/akilar-candyassets@1.0.36/image/siteicon/favicon.ico %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><div class="tag link"><a class="link-card" title="糖果屋教程贴" href="https://akilar.top/posts/615e2dec/"><div class="left"><img src="https://cdn.cbd.int/akilar-candyassets@1.0.36/image/siteicon/favicon.ico"/></div><div class="right"><p class="text">糖果屋教程贴</p><p class="url">https://akilar.top/posts/615e2dec/</p></div></a></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-11-按钮-btns">2.11 按钮 btns</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-2">参数配置</button></li><li class="tab"><button type="button" data-href="#分栏-3">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;% btns 样式参数 %&#125;</span><br><span class="line">&#123;% cell 标题, 链接, 图片或者图标 %&#125;</span><br><span class="line">&#123;% cell 标题, 链接, 图片或者图标 %&#125;</span><br><span class="line">&#123;% endbtns %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><ol><li>圆角样式：rounded, circle</li><li>增加文字样式：可以在容器内增加 <code>&lt;b&gt;</code>标题<code>&lt;/b&gt;</code>和<code>&lt;p&gt;</code>描述文字<code>&lt;/p&gt;</code></li><li>布局方式：<br>默认为自动宽度，适合视野内只有一两个的情况。</li></ol><table><thead><tr><th>参数</th><th>含义</th></tr></thead><tbody><tr><td>wide</td><td>宽一点的按钮</td></tr><tr><td>fill</td><td>填充布局，自动铺满至少一行，多了会换行</td></tr><tr><td>center</td><td>居中，按钮之间是固定间距</td></tr><tr><td>around</td><td>居中分散</td></tr><tr><td>grid2</td><td>等宽最多2列，屏幕变窄会适当减少列数</td></tr><tr><td>grid3</td><td>等宽最多3列，屏幕变窄会适当减少列数</td></tr><tr><td>grid4</td><td>等宽最多4列，屏幕变窄会适当减少列数</td></tr><tr><td>grid5</td><td>等宽最多5列，屏幕变窄会适当减少列数</td></tr></tbody></table><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><p>1.如果需要显示类似「团队成员」之类的一组含有头像的链接</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&#123;% btns circle grid5 %&#125;</span><br><span class="line">&#123;% cell xaoxuu, https://xaoxuu.com, https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/avatar/avatar.png %&#125;</span><br><span class="line">&#123;% cell xaoxuu, https://xaoxuu.com, https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/avatar/avatar.png %&#125;</span><br><span class="line">&#123;% cell xaoxuu, https://xaoxuu.com, https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/avatar/avatar.png %&#125;</span><br><span class="line">&#123;% cell xaoxuu, https://xaoxuu.com, https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/avatar/avatar.png %&#125;</span><br><span class="line">&#123;% cell xaoxuu, https://xaoxuu.com, https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/avatar/avatar.png %&#125;</span><br><span class="line">&#123;% endbtns %&#125;</span><br></pre></td></tr></table></figure><p>2.或者含有图标的按钮</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;% btns rounded grid5 %&#125;</span><br><span class="line">&#123;% cell 下载源码, /, fas fa-download %&#125;</span><br><span class="line">&#123;% cell 查看文档, /, fas fa-book-open %&#125;</span><br><span class="line">&#123;% endbtns %&#125;</span><br></pre></td></tr></table></figure><p>3.圆形图标 + 标题 + 描述 + 图片 + 网格5列 + 居中</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&#123;% btns circle center grid5 %&#125;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&#x27;https://apps.apple.com/cn/app/heart-mate-pro-hrm-utility/id1463348922?ls=1&#x27;</span>&gt;</span></span></span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&#x27;fab fa-apple&#x27;</span>&gt;</span></span><span class="language-xml"><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span></span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">b</span>&gt;</span></span>心率管家<span class="language-xml"><span class="tag">&lt;/<span class="name">b</span>&gt;</span></span></span><br><span class="line">  &#123;% p red, 专业版 %&#125;</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&#x27;https://cdn.jsdelivr.net/gh/fomalhaut1998/cdn-assets/qrcode/heartmate_pro.png&#x27;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&#x27;https://apps.apple.com/cn/app/heart-mate-lite-hrm-utility/id1475747930?ls=1&#x27;</span>&gt;</span></span></span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&#x27;fab fa-apple&#x27;</span>&gt;</span></span><span class="language-xml"><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span></span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">b</span>&gt;</span></span>心率管家<span class="language-xml"><span class="tag">&lt;/<span class="name">b</span>&gt;</span></span></span><br><span class="line">  &#123;% p green, 免费版 %&#125;</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&#x27;https://cdn.jsdelivr.net/gh/fomalhaut1998/cdn-assets/qrcode/heartmate_lite.png&#x27;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span></span><br><span class="line">&#123;% endbtns %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-4"><p>1.如果需要显示类似「团队成员」之类的一组含有头像的链接</p><div class="btns circle grid5">            <a class="button" href='https://xaoxuu.com' title='xaoxuu'><img src='https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/avatar/avatar.png'>xaoxuu</a><a class="button" href='https://xaoxuu.com' title='xaoxuu'><img src='https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/avatar/avatar.png'>xaoxuu</a><a class="button" href='https://xaoxuu.com' title='xaoxuu'><img src='https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/avatar/avatar.png'>xaoxuu</a><a class="button" href='https://xaoxuu.com' title='xaoxuu'><img src='https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/avatar/avatar.png'>xaoxuu</a><a class="button" href='https://xaoxuu.com' title='xaoxuu'><img src='https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/avatar/avatar.png'>xaoxuu</a>          </div>2.或者含有图标的按钮<div class="btns rounded grid5">            <a class="button" href='/' title='下载源码'><i class='fas fa-download'></i>下载源码</a><a class="button" href='/' title='查看文档'><i class='fas fa-book-open'></i>查看文档</a>          </div>3.圆形图标 + 标题 + 描述 + 图片 + 网格5列 + 居中<div class="btns circle center grid5">            <a href='https://apps.apple.com/cn/app/heart-mate-pro-hrm-utility/id1463348922?ls=1'>  <i class='fab fa-apple'></i>  <b>心率管家</b>  <p class='p red'>专业版</p>  <img src='https://cdn.jsdelivr.net/gh/fomalhaut1998/cdn-assets/qrcode/heartmate_pro.png'></a><a href='https://apps.apple.com/cn/app/heart-mate-lite-hrm-utility/id1475747930?ls=1'>  <i class='fab fa-apple'></i>  <b>心率管家</b>  <p class='p green'>免费版</p>  <img src='https://cdn.jsdelivr.net/gh/fomalhaut1998/cdn-assets/qrcode/heartmate_lite.png'></a>          </div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-12-github卡片-ghcard">2.12 github卡片 ghcard</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-2">参数配置</button></li><li class="tab"><button type="button" data-href="#分栏-3">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#123;% ghcard 用户名, 其它参数（可选） %&#125;</span><br><span class="line">&#123;% ghcard 用户名/仓库, 其它参数（可选） %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><p>使用<code>,</code>分割各个参数。写法为：<code>参数名=参数值</code><br>以下只写几个常用参数值。</p><table><thead><tr><th><strong>参数名</strong></th><th>取值</th><th>释义</th></tr></thead><tbody><tr><td>hide</td><td>stars,commits,prs,issues,contribs</td><td>隐藏指定统计</td></tr><tr><td>count_private</td><td>true</td><td>将私人项目贡献添加到总提交计数中</td></tr><tr><td>show_icons</td><td>true</td><td>显示图标</td></tr><tr><td>theme</td><td>查阅:<a href="https://github.com/anuraghazra/github-readme-stats/blob/master/themes/README.md">Available Themes</a></td><td>主题</td></tr></tbody></table><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><p>1.用户信息卡片</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">| &#123;% ghcard fomalhaut1998 %&#125; | &#123;% ghcard fomalhaut1998, theme=vue %&#125; |</span><br><span class="line">| -- | -- |</span><br><span class="line">| &#123;% ghcard fomalhaut1998, theme=buefy %&#125; | &#123;% ghcard fomalhaut1998, theme=solarized-light %&#125; |</span><br><span class="line">| &#123;% ghcard fomalhaut1998, theme=onedark %&#125; | &#123;% ghcard fomalhaut1998, theme=solarized-dark %&#125; |</span><br><span class="line">| &#123;% ghcard fomalhaut1998, theme=algolia %&#125; | &#123;% ghcard fomalhaut1998, theme=calm %&#125; |</span><br></pre></td></tr></table></figure><p>2.仓库信息卡片</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">| &#123;% ghcard volantis-x/hexo-theme-volantis %&#125; | &#123;% ghcard volantis-x/hexo-theme-volantis, theme=vue %&#125; |</span><br><span class="line">| -- | -- |</span><br><span class="line">| &#123;% ghcard volantis-x/hexo-theme-volantis, theme=buefy %&#125; | &#123;% ghcard volantis-x/hexo-theme-volantis, theme=solarized-light %&#125; |</span><br><span class="line">| &#123;% ghcard volantis-x/hexo-theme-volantis, theme=onedark %&#125; | &#123;% ghcard volantis-x/hexo-theme-volantis, theme=solarized-dark %&#125; |</span><br><span class="line">| &#123;% ghcard volantis-x/hexo-theme-volantis, theme=algolia %&#125; | &#123;% ghcard volantis-x/hexo-theme-volantis, theme=calm %&#125; |</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-4"><p>1.用户信息卡片</p><table><thead><tr><th><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/fomalhaut1998"><img src="https://github-readme-stats.vercel.app/api/?username=fomalhaut1998&show_owner=true"/></a></th><th><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/fomalhaut1998"><img src="https://github-readme-stats.vercel.app/api/?username=fomalhaut1998&theme=vue&show_owner=true"/></a></th></tr></thead><tbody><tr><td><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/fomalhaut1998"><img src="https://github-readme-stats.vercel.app/api/?username=fomalhaut1998&theme=buefy&show_owner=true"/></a></td><td><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/fomalhaut1998"><img src="https://github-readme-stats.vercel.app/api/?username=fomalhaut1998&theme=solarized-light&show_owner=true"/></a></td></tr><tr><td><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/fomalhaut1998"><img src="https://github-readme-stats.vercel.app/api/?username=fomalhaut1998&theme=onedark&show_owner=true"/></a></td><td><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/fomalhaut1998"><img src="https://github-readme-stats.vercel.app/api/?username=fomalhaut1998&theme=solarized-dark&show_owner=true"/></a></td></tr><tr><td><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/fomalhaut1998"><img src="https://github-readme-stats.vercel.app/api/?username=fomalhaut1998&theme=algolia&show_owner=true"/></a></td><td><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/fomalhaut1998"><img src="https://github-readme-stats.vercel.app/api/?username=fomalhaut1998&theme=calm&show_owner=true"/></a></td></tr></tbody></table><p>2.仓库信息卡片</p><table><thead><tr><th><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/volantis-x/hexo-theme-volantis"><img src="https://github-readme-stats.vercel.app/api/pin/?username=volantis-x&repo=hexo-theme-volantis&show_owner=true"/></a></th><th><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/volantis-x/hexo-theme-volantis"><img src="https://github-readme-stats.vercel.app/api/pin/?username=volantis-x&repo=hexo-theme-volantis&theme=vue&show_owner=true"/></a></th></tr></thead><tbody><tr><td><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/volantis-x/hexo-theme-volantis"><img src="https://github-readme-stats.vercel.app/api/pin/?username=volantis-x&repo=hexo-theme-volantis&theme=buefy&show_owner=true"/></a></td><td><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/volantis-x/hexo-theme-volantis"><img src="https://github-readme-stats.vercel.app/api/pin/?username=volantis-x&repo=hexo-theme-volantis&theme=solarized-light&show_owner=true"/></a></td></tr><tr><td><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/volantis-x/hexo-theme-volantis"><img src="https://github-readme-stats.vercel.app/api/pin/?username=volantis-x&repo=hexo-theme-volantis&theme=onedark&show_owner=true"/></a></td><td><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/volantis-x/hexo-theme-volantis"><img src="https://github-readme-stats.vercel.app/api/pin/?username=volantis-x&repo=hexo-theme-volantis&theme=solarized-dark&show_owner=true"/></a></td></tr><tr><td><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/volantis-x/hexo-theme-volantis"><img src="https://github-readme-stats.vercel.app/api/pin/?username=volantis-x&repo=hexo-theme-volantis&theme=algolia&show_owner=true"/></a></td><td><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/volantis-x/hexo-theme-volantis"><img src="https://github-readme-stats.vercel.app/api/pin/?username=volantis-x&repo=hexo-theme-volantis&theme=calm&show_owner=true"/></a></td></tr></tbody></table><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-13-github徽标-ghbdage">2.13 github徽标 ghbdage</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-2">配置参数</button></li><li class="tab"><button type="button" data-href="#分栏-3">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% bdage [right],[left],[logo]||[color],[link],[title]||[option] %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><ol><li><code>left</code>：徽标左边的信息，必选参数。</li><li><code>right</code>: 徽标右边的信息，必选参数，</li><li><code>logo</code>：徽标图标，图标名称详见<a href="https://simpleicons.org/">simpleicons</a>，可选参数。</li><li><code>color</code>：徽标右边的颜色，可选参数。</li><li><code>link</code>：指向的链接，可选参数。</li><li><code>title</code>：徽标的额外信息，可选参数。主要用于优化SEO，但<code>object</code>标签不会像<code>a</code>标签一样在鼠标悬停显示<code>title</code>信息。</li><li><code>option</code>：自定义参数，支持<a href="https://shields.io/">shields.io</a>的全部API参数支持，具体参数可以参看上文中的拓展写法示例。形式为<code>name1=value2&amp;name2=value2</code>。</li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><p>1.基本参数,定义徽标左右文字和图标</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#123;% bdage Theme,Butterfly %&#125;</span><br><span class="line">&#123;% bdage Frame,Hexo,hexo %&#125;</span><br></pre></td></tr></table></figure><p>2.信息参数，定义徽标右侧内容背景色，指向链接</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% bdage CDN,JsDelivr,jsDelivr||abcdef,https://metroui.org.ua/index.html,本站使用JsDelivr为静态资源提供CDN加速 %&#125;</span><br><span class="line">//如果是跨顺序省略可选参数，仍然需要写个逗号,用作分割</span><br><span class="line">&#123;% bdage Source,GitHub,GitHub||,https://github.com/ %&#125;</span><br></pre></td></tr></table></figure><p>3.拓展参数，支持shields的API的全部参数内容</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% bdage Hosted,Vercel,Vercel||brightgreen,https://vercel.com/,本站采用双线部署，默认线路托管于Vercel||style=social&amp;logoWidth=20 %&#125;</span><br><span class="line">//如果是跨顺序省略可选参数组，仍然需要写双竖线||用作分割</span><br><span class="line">&#123;% bdage Hosted,Vercel,Vercel||||style=social&amp;logoWidth=20&amp;logoColor=violet %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-4"><p>1.基本参数,定义徽标左右文字和图标</p><p><object class="ghbdage" style="margin-inline:5px" title="" standby="loading..." data="https://img.shields.io/badge/Butterfly-Theme-orange?logo=&color=orange&link=&"></object><br><object class="ghbdage" style="margin-inline:5px" title="" standby="loading..." data="https://img.shields.io/badge/Hexo-Frame-orange?logo=hexo&color=orange&link=&"></object></p><p>2.信息参数，定义徽标右侧内容背景色，指向链接</p><p><object class="ghbdage" style="margin-inline:5px" title="本站使用JsDelivr为静态资源提供CDN加速" standby="loading..." data="https://img.shields.io/badge/JsDelivr-CDN-orange?logo=jsDelivr&color=abcdef&link=https://metroui.org.ua/index.html&"></object><br>//如果是跨顺序省略可选参数，仍然需要写个逗号,用作分割<br><object class="ghbdage" style="margin-inline:5px" title="" standby="loading..." data="https://img.shields.io/badge/GitHub-Source-orange?logo=GitHub&color=orange&link=https://github.com/&"></object></p><p>3.拓展参数，支持shields的API的全部参数内容</p><p><object class="ghbdage" style="margin-inline:5px" title="本站采用双线部署，默认线路托管于Vercel" standby="loading..." data="https://img.shields.io/badge/Vercel-Hosted-orange?logo=Vercel&color=brightgreen&link=https://vercel.com/&style=social&logoWidth=20"></object><br>//如果是跨顺序省略可选参数组，仍然需要写双竖线||用作分割<br><object class="ghbdage" style="margin-inline:5px" title="" standby="loading..." data="https://img.shields.io/badge/Vercel-Hosted-orange?logo=Vercel&color=orange&link=&style=social&logoWidth=20&logoColor=violet"></object></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-14-网站卡片-sites">2.14 网站卡片 sites</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-2">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-3">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;% sitegroup %&#125;</span><br><span class="line">&#123;% site 标题, url=链接, screenshot=截图链接, avatar=头像链接（可选）, description=描述（可选） %&#125;</span><br><span class="line">&#123;% site 标题, url=链接, screenshot=截图链接, avatar=头像链接（可选）, description=描述（可选） %&#125;</span><br><span class="line">&#123;% endsitegroup %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&#123;% sitegroup %&#125;</span><br><span class="line">&#123;% site xaoxuu, url=https://xaoxuu.com, screenshot=https://i.loli.net/2020/08/21/VuSwWZ1xAeUHEBC.jpg, avatar=https://cdn.jsdelivr.net/gh/fomalhaut1998/cdn-assets/avatar/avatar.png, description=简约风格 %&#125;</span><br><span class="line">&#123;% site inkss, url=https://inkss.cn, screenshot=https://i.loli.net/2020/08/21/Vzbu3i8fXs6Nh5Y.jpg, avatar=https://cdn.jsdelivr.net/gh/inkss/common@master/static/web/avatar.jpg, description=这是一段关于这个网站的描述文字 %&#125;</span><br><span class="line">&#123;% site MHuiG, url=https://blog.mhuig.top, screenshot=https://i.loli.net/2020/08/22/d24zpPlhLYWX6D1.png, avatar=https://cdn.jsdelivr.net/gh/MHuiG/imgbed@master/data/p.png, description=这是一段关于这个网站的描述文字 %&#125;</span><br><span class="line">&#123;% site Colsrch, url=https://colsrch.top, screenshot=https://i.loli.net/2020/08/22/dFRWXm52OVu8qfK.png, avatar=https://cdn.jsdelivr.net/gh/Colsrch/images/Colsrch/avatar.jpg, description=这是一段关于这个网站的描述文字 %&#125;</span><br><span class="line">&#123;% site Linhk1606, url=https://linhk1606.github.io, screenshot=https://i.loli.net/2020/08/21/3PmGLCKicnfow1x.png, avatar=https://i.loli.net/2020/02/09/PN7I5RJfFtA93r2.png, description=这是一段关于这个网站的描述文字 %&#125;</span><br><span class="line">&#123;% endsitegroup %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><div class="site-card-group"><a class="site-card" href="https://fomalhaut1998.com"><div class="img"><img src="https://i.loli.net/2020/08/21/VuSwWZ1xAeUHEBC.jpg"/></div><div class="info"><img src="https://cdn.jsdelivr.net/gh/fomalhaut1998/cdn-assets/avatar/avatar.png"/><span class="title">fomalhaut1998</span><span class="desc">简约风格</span></div></a><a class="site-card" href="https://inkss.cn"><div class="img"><img src="https://i.loli.net/2020/08/21/Vzbu3i8fXs6Nh5Y.jpg"/></div><div class="info"><img src="https://cdn.jsdelivr.net/gh/inkss/common@master/static/web/avatar.jpg"/><span class="title">inkss</span><span class="desc">这是一段关于这个网站的描述文字</span></div></a><a class="site-card" href="https://blog.mhuig.top"><div class="img"><img src="https://i.loli.net/2020/08/22/d24zpPlhLYWX6D1.png"/></div><div class="info"><img src="https://cdn.jsdelivr.net/gh/MHuiG/imgbed@master/data/p.png"/><span class="title">MHuiG</span><span class="desc">这是一段关于这个网站的描述文字</span></div></a><a class="site-card" href="https://colsrch.top"><div class="img"><img src="https://i.loli.net/2020/08/22/dFRWXm52OVu8qfK.png"/></div><div class="info"><img src="https://cdn.jsdelivr.net/gh/Colsrch/images/Colsrch/avatar.jpg"/><span class="title">Colsrch</span><span class="desc">这是一段关于这个网站的描述文字</span></div></a><a class="site-card" href="https://linhk1606.github.io"><div class="img"><img src="https://i.loli.net/2020/08/21/3PmGLCKicnfow1x.png"/></div><div class="info"><img src="https://i.loli.net/2020/02/09/PN7I5RJfFtA93r2.png"/><span class="title">Linhk1606</span><span class="desc">这是一段关于这个网站的描述文字</span></div></a></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-15-行内图片-inlineimage">2.15 行内图片 inlineimage</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-2">参数配置</button></li><li class="tab"><button type="button" data-href="#分栏-3">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% inlineimage 图片链接, height=高度（可选） %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><ol><li><code>高度</code>：height=20px</li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">这是 &#123;% inlineimage https://cdn.jsdelivr.net/gh/volantis-x/cdn-emoji/aru-l/0000.gif %&#125; 一段话。</span><br><span class="line"></span><br><span class="line">这又是 &#123;% inlineimage https://cdn.jsdelivr.net/gh/volantis-x/cdn-emoji/aru-l/5150.gif, height=40px %&#125; 一段话。</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-4"><p>这是 <img no-lazy class="inline" src="https://cdn.jsdelivr.net/gh/volantis-x/cdn-emoji/aru-l/0000.gif" style="height:1.5em"/> 一段话。</p><p>这又是 <img no-lazy class="inline" src="https://cdn.jsdelivr.net/gh/volantis-x/cdn-emoji/aru-l/5150.gif" style="height:40px;"/> 一段话。</p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-16-单张图片-image">2.16 单张图片 image</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-2">参数配置</button></li><li class="tab"><button type="button" data-href="#分栏-3">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% image 链接, width=宽度（可选）, height=高度（可选）, alt=描述（可选）, bg=占位颜色（可选） %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><ol><li>图片宽度高度：width=300px, height=32px</li><li>图片描述：alt=图片描述（butterfly需要在主题配置文件中开启图片描述）</li><li>占位背景色：bg=#f2f2f2</li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><p>1.添加描述：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% image https://cdn.jsdelivr.net/gh/volantis-x/cdn-wallpaper-minimalist/2020/025.jpg, alt=每天下课回宿舍的路，没有什么故事。 %&#125;</span><br></pre></td></tr></table></figure><p>2.指定宽度</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% image https://cdn.jsdelivr.net/gh/volantis-x/cdn-wallpaper-minimalist/2020/025.jpg, width=400px %&#125;</span><br></pre></td></tr></table></figure><p>3.指定宽度并添加描述：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% image https://cdn.jsdelivr.net/gh/volantis-x/cdn-wallpaper-minimalist/2020/025.jpg, width=400px, alt=每天下课回宿舍的路，没有什么故事。 %&#125;</span><br></pre></td></tr></table></figure><p>4.设置占位背景色：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% image https://cdn.jsdelivr.net/gh/volantis-x/cdn-wallpaper-minimalist/2020/025.jpg, width=400px, bg=#1D0C04, alt=优化不同宽度浏览的观感 %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-4"><p>1.添加描述：</p><div class="img-wrap"><div class="img-bg"><img class="img" src="https://cdn.jsdelivr.net/gh/volantis-x/cdn-wallpaper-minimalist/2020/025.jpg" alt="每天下课回宿舍的路，没有什么故事。"/></div><span class="image-caption">每天下课回宿舍的路，没有什么故事。</span></div>2..指定宽度<div class="img-wrap"><div class="img-bg"><img class="img" src="https://cdn.jsdelivr.net/gh/volantis-x/cdn-wallpaper-minimalist/2020/025.jpg" style="width:400px;"/></div></div>3.指定宽度并添加描述：<div class="img-wrap"><div class="img-bg"><img class="img" src="https://cdn.jsdelivr.net/gh/volantis-x/cdn-wallpaper-minimalist/2020/025.jpg" alt="每天下课回宿舍的路，没有什么故事。" style="width:400px;"/></div><span class="image-caption">每天下课回宿舍的路，没有什么故事。</span></div>4.设置占位背景色：<div class="img-wrap"><div class="img-bg" style="background:#1D0C04"><img class="img" src="https://cdn.jsdelivr.net/gh/volantis-x/cdn-wallpaper-minimalist/2020/025.jpg" alt="优化不同宽度浏览的观感" style="width:400px;"/></div><span class="image-caption">优化不同宽度浏览的观感</span></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-17-音频-audio">2.17 音频 audio</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-2">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-3">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% audio 音频链接 %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% audio https://github.com/volantis-x/volantis-docs/releases/download/assets/Lumia1020.mp3 %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><div class="audio"><audio controls preload><source src='https://github.com/volantis-x/volantis-docs/releases/download/assets/Lumia1020.mp3' type='audio/mp3'>Your browser does not support the audio tag.</audio></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-18-视频-video">2.18 视频 video</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-2">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-3">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% video 视频链接 %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><ol><li><code>对齐方向</code>：left, center, right</li><li><code>列数</code>：逗号后面直接写列数，支持 1 ～ 4 列。</li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><p>1.100%宽度</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% video https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG<span class="emphasis">_0341.mov %&#125;</span></span><br></pre></td></tr></table></figure><p>2.50%宽度</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&#123;% videos, 2 %&#125;</span><br><span class="line">&#123;% video https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG<span class="emphasis">_0341.mov %&#125;</span></span><br><span class="line"><span class="emphasis">&#123;% video https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_</span>0341.mov %&#125;</span><br><span class="line">&#123;% video https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG<span class="emphasis">_0341.mov %&#125;</span></span><br><span class="line"><span class="emphasis">&#123;% video https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_</span>0341.mov %&#125;</span><br><span class="line">&#123;% endvideos %&#125;</span><br></pre></td></tr></table></figure><p>3.25%宽度</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&#123;% videos, 4 %&#125;</span><br><span class="line">&#123;% video https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG<span class="emphasis">_0341.mov %&#125;</span></span><br><span class="line"><span class="emphasis">&#123;% video https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_</span>0341.mov %&#125;</span><br><span class="line">&#123;% video https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG<span class="emphasis">_0341.mov %&#125;</span></span><br><span class="line"><span class="emphasis">&#123;% video https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_</span>0341.mov %&#125;</span><br><span class="line">&#123;% video https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG<span class="emphasis">_0341.mov %&#125;</span></span><br><span class="line"><span class="emphasis">&#123;% video https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_</span>0341.mov %&#125;</span><br><span class="line">&#123;% video https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG<span class="emphasis">_0341.mov %&#125;</span></span><br><span class="line"><span class="emphasis">&#123;% video https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_</span>0341.mov %&#125;</span><br><span class="line">&#123;% endvideos %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-4"><p>1.100%宽度</p><div class="video"><video controls preload><source src='https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov' type='video/mp4'>Your browser does not support the video tag.</video></div>2.50%宽度<div class="videos" col='2'><div class="video"><video controls preload><source src='https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov' type='video/mp4'>Your browser does not support the video tag.</video></div><div class="video"><video controls preload><source src='https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov' type='video/mp4'>Your browser does not support the video tag.</video></div><div class="video"><video controls preload><source src='https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov' type='video/mp4'>Your browser does not support the video tag.</video></div><div class="video"><video controls preload><source src='https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov' type='video/mp4'>Your browser does not support the video tag.</video></div></div>3.25%宽度<div class="videos" col='4'><div class="video"><video controls preload><source src='https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov' type='video/mp4'>Your browser does not support the video tag.</video></div><div class="video"><video controls preload><source src='https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov' type='video/mp4'>Your browser does not support the video tag.</video></div><div class="video"><video controls preload><source src='https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov' type='video/mp4'>Your browser does not support the video tag.</video></div><div class="video"><video controls preload><source src='https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov' type='video/mp4'>Your browser does not support the video tag.</video></div><div class="video"><video controls preload><source src='https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov' type='video/mp4'>Your browser does not support the video tag.</video></div><div class="video"><video controls preload><source src='https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov' type='video/mp4'>Your browser does not support the video tag.</video></div><div class="video"><video controls preload><source src='https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov' type='video/mp4'>Your browser does not support the video tag.</video></div><div class="video"><video controls preload><source src='https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov' type='video/mp4'>Your browser does not support the video tag.</video></div></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-19-相册-gallery">2.19 相册 gallery</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-2">参数配置</button></li><li class="tab"><button type="button" data-href="#分栏-3">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><p>1.gallerygroup 相册图库</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;gallery-group-main&quot;</span>&gt;</span></span></span><br><span class="line">&#123;% galleryGroup name description link img-url %&#125;</span><br><span class="line">&#123;% galleryGroup name description link img-url %&#125;</span><br><span class="line">&#123;% galleryGroup name description link img-url %&#125;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br></pre></td></tr></table></figure><p>2.gallery 相册</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% gallery %&#125;</span><br><span class="line">markdown 圖片格式</span><br><span class="line">&#123;% endgallery %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><ul><li>gallerygroup 相册图库</li></ul><table><thead><tr><th>参数名</th><th>释义</th></tr></thead><tbody><tr><td>name</td><td>图库名字</td></tr><tr><td>description</td><td>图库描述</td></tr><tr><td>link</td><td>链接到对应相册的地址</td></tr><tr><td>img-url</td><td>图库封面</td></tr></tbody></table><ul><li><p>gallery 相册</p><p>区别于旧版的Gallery相册,新的Gallery相册会自动根据图片长度进行排版，书写也更加方便，与markdown格式一样。可根据需要插入到相应的md。无需再自己配置长宽。<strong>建议在粘贴时故意使用长短、大小、横竖不一的图片</strong>，会有更好的效果。（尺寸完全相同的图片只会平铺输出，效果很糟糕）</p></li></ul><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><p>1.gallerygroup 相册图库</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;gallery-group-main&quot;</span>&gt;</span></span></span><br><span class="line">&#123;% galleryGroup MC 在Rikkaの六花服务器里留下的足迹 &#x27;/gallery/MC/&#x27; https://cdn.cbd.int/akilar-candyassets@1.0.36/image/1.jpg %&#125;</span><br><span class="line">&#123;% galleryGroup Gundam 哦咧哇gundam哒！ &#x27;/gallery/Gundam/&#x27; https://cdn.cbd.int/akilar-candyassets@1.0.36/image/20200907110508327.png %&#125;</span><br><span class="line">&#123;% galleryGroup I-am-Akilar 某种意义上也算自拍吧 &#x27;/gallery/I-am-Akilar/&#x27; https://cdn.cbd.int/akilar-candyassets@1.0.36/image/20200907113116651.png %&#125;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br></pre></td></tr></table></figure><p>2.gallery 相册</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;% gallery %&#125;</span><br><span class="line">![](<span class="link">https://i.loli.net/2019/12/25/Fze9jchtnyJXMHN.jpg</span>)</span><br><span class="line">![](<span class="link">https://i.loli.net/2019/12/25/ryLVePaqkYm4TEK.jpg</span>)</span><br><span class="line">&#123;% endgallery %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-4"><p>1.gallerygroup 相册图库</p><div class="gallery-group-main">  <figure class="gallery-group">  <img class="gallery-group-img no-lightbox" src='https://cdn.cbd.int/akilar-candyassets@1.0.36/image/1.jpg' alt="Group Image Gallery">  <figcaption>  <div class="gallery-group-name">MC</div>  <p>在Rikkaの六花服务器里留下的足迹</p>  <a href='/gallery/MC/'></a>  </figcaption>  </figure>  <figure class="gallery-group">  <img class="gallery-group-img no-lightbox" src='https://cdn.cbd.int/akilar-candyassets@1.0.36/image/20200907110508327.png' alt="Group Image Gallery">  <figcaption>  <div class="gallery-group-name">Gundam</div>  <p>哦咧哇gundam哒！</p>  <a href='/gallery/Gundam/'></a>  </figcaption>  </figure>  <figure class="gallery-group">  <img class="gallery-group-img no-lightbox" src='https://cdn.cbd.int/akilar-candyassets@1.0.36/image/20200907113116651.png' alt="Group Image Gallery">  <figcaption>  <div class="gallery-group-name">I-am-Akilar</div>  <p>某种意义上也算自拍吧</p>  <a href='/gallery/I-am-Akilar/'></a>  </figcaption>  </figure></div>2.gallery 相册<div class="fj-gallery"><p><img src="https://i.loli.net/2019/12/25/Fze9jchtnyJXMHN.jpg" alt=""><br><img src="https://i.loli.net/2019/12/25/ryLVePaqkYm4TEK.jpg" alt=""></p>          </div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-20-折叠框-folding">2.20 折叠框 folding</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-2">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-3">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><p>1.gallerygroup 相册图库</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% folding 参数（可选）, 标题 %&#125;</span><br><span class="line">![](<span class="link">https://cdn.jsdelivr.net/gh/volantis-x/cdn-wallpaper/abstract/41F215B9-261F-48B4-80B5-4E86E165259E.jpeg</span>)</span><br><span class="line">&#123;% endfolding %&#125;</span><br></pre></td></tr></table></figure><!-- tab 参数配置 --><ol><li><p><code>颜色</code>：blue, cyan, green, yellow, red</p></li><li><p><code>状态</code>：状态填写 open 代表默认打开。</p></li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">&#123;% folding 查看图片测试 %&#125;</span><br><span class="line"></span><br><span class="line">![](<span class="link">https://cdn.jsdelivr.net/gh/volantis-x/cdn-wallpaper/abstract/41F215B9-261F-48B4-80B5-4E86E165259E.jpeg</span>)</span><br><span class="line"></span><br><span class="line">&#123;% endfolding %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% folding cyan open, 查看默认打开的折叠框 %&#125;</span><br><span class="line"></span><br><span class="line">这是一个默认打开的折叠框。</span><br><span class="line"></span><br><span class="line">&#123;% endfolding %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% folding green, 查看代码测试 %&#125;</span><br><span class="line">假装这里有代码块（代码块没法嵌套代码块）</span><br><span class="line">&#123;% endfolding %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% folding yellow, 查看列表测试 %&#125;</span><br><span class="line"></span><br><span class="line"><span class="bullet">-</span> haha</span><br><span class="line"><span class="bullet">-</span> hehe</span><br><span class="line"></span><br><span class="line">&#123;% endfolding %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% folding red, 查看嵌套测试 %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% folding blue, 查看嵌套测试2 %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% folding 查看嵌套测试3 %&#125;</span><br><span class="line"></span><br><span class="line">hahaha <span class="language-xml"><span class="tag">&lt;<span class="name">span</span>&gt;</span></span><span class="language-xml"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&#x27;https://cdn.jsdelivr.net/gh/volantis-x/cdn-emoji/tieba/%E6%BB%91%E7%A8%BD.png&#x27;</span> <span class="attr">style</span>=<span class="string">&#x27;height:24px&#x27;</span>&gt;</span></span><span class="language-xml"><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line">&#123;% endfolding %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% endfolding %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% endfolding %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><details class="folding-tag" ><summary> 查看图片测试 </summary>              <div class='content'>              <p><img src="https://cdn.jsdelivr.net/gh/volantis-x/cdn-wallpaper/abstract/41F215B9-261F-48B4-80B5-4E86E165259E.jpeg" alt=""></p>              </div>            </details><details class="folding-tag" cyan open><summary> 查看默认打开的折叠框 </summary>              <div class='content'>              <p>这是一个默认打开的折叠框。</p>              </div>            </details><details class="folding-tag" green><summary> 查看代码测试 </summary>              <div class='content'>              <p>假装这里有代码块（代码块没法嵌套代码块）</p>              </div>            </details><details class="folding-tag" yellow><summary> 查看列表测试 </summary>              <div class='content'>              <ul><li>haha</li><li>hehe</li></ul>              </div>            </details><details class="folding-tag" red><summary> 查看嵌套测试 </summary>              <div class='content'>              <details class="folding-tag" blue><summary> 查看嵌套测试2 </summary>              <div class='content'>              <details class="folding-tag" ><summary> 查看嵌套测试3 </summary>              <div class='content'>              <p>hahaha <span><img src='https://cdn.jsdelivr.net/gh/volantis-x/cdn-emoji/tieba/%E6%BB%91%E7%A8%BD.png' style='height:24px'></span></p>              </div>            </details>              </div>            </details>              </div>            </details><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-21-分栏-tab">2.21 分栏 tab</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-2">配置参数</button></li><li class="tab"><button type="button" data-href="#分栏-3">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;% tabs Unique name, [index] %&#125;</span><br><span class="line">&lt;!-- tab [Tab caption] [@icon] --&gt;</span><br><span class="line">Any content (support inline tags too).</span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line">&#123;% endtabs %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><ol><li><p>Unique name :</p><ul><li><p>选项卡块标签的唯一名称，不带逗号。</p></li><li><p>将在#id中用作每个标签及其索引号的前缀。</p></li><li><p>如果名称中包含空格，则对于生成#id，所有空格将由破折号代替。</p></li><li><p>仅当前帖子/页面的URL必须是唯一的！</p></li></ul></li><li><p>[index]:</p><ul><li><p>活动选项卡的索引号。</p></li><li><p>如果未指定，将选择第一个标签（1）。</p></li><li><p>如果index为-1，则不会选择任何选项卡。</p></li><li><p>可选参数。</p></li></ul></li><li><p>[Tab caption]:</p><ul><li><p>当前选项卡的标题。</p></li><li><p>如果未指定标题，则带有制表符索引后缀的唯一名称将用作制表符的标题。</p></li><li><p>如果未指定标题，但指定了图标，则标题将为空。</p></li><li><p>可选参数。</p></li></ul></li><li><p>[@icon]:</p><ul><li><p>FontAwesome图标名称（全名，看起来像“ fas fa-font”）</p></li><li><p>可以指定带空格或不带空格；</p></li><li><p>例如’Tab caption @icon’ 和 ‘Tab caption@icon’.</p></li><li><p>可选参数。</p></li></ul></li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><p>1.Demo 1 - 预设选择第一个【默认】</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;% tabs test1 %&#125;</span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line"><span class="strong">**This is Tab 1.**</span></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line"><span class="strong">**This is Tab 2.**</span></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line"><span class="strong">**This is Tab 3.**</span></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line">&#123;% endtabs %&#125;</span><br></pre></td></tr></table></figure><p>2.Demo 2 - 预设选择tabs</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;% tabs test2, 3 %&#125;</span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line"><span class="strong">**This is Tab 1.**</span></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line"><span class="strong">**This is Tab 2.**</span></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line"><span class="strong">**This is Tab 3.**</span></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line">&#123;% endtabs %&#125;</span><br></pre></td></tr></table></figure><p>3.Demo 3 - 没有预设值</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;% tabs test3, -1 %&#125;</span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line"><span class="strong">**This is Tab 1.**</span></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line"><span class="strong">**This is Tab 2.**</span></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line"><span class="strong">**This is Tab 3.**</span></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line">&#123;% endtabs %&#125;</span><br></pre></td></tr></table></figure><p>4.Demo 4 - 自定义Tab名 + 只有icon + icon和Tab名</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;% tabs test4 %&#125;</span><br><span class="line">&lt;!-- tab 第一个Tab --&gt;</span><br><span class="line"><span class="strong">**tab名字为第一个Tab**</span></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab @fab fa-apple-pay --&gt;</span><br><span class="line"><span class="strong">**只有图标 没有Tab名字**</span></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab 炸弹@fas fa-bomb --&gt;</span><br><span class="line"><span class="strong">**名字+icon**</span></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line">&#123;% endtabs %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-4"><p>1.Demo 1 - 预设选择第一个【默认】</p><div class="tabs" id="test1"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#test1-1">test1 1</button></li><li class="tab"><button type="button" data-href="#test1-2">test1 2</button></li><li class="tab"><button type="button" data-href="#test1-3">test1 3</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="test1-1"><p><strong>This is Tab 1.</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test1-2"><p><strong>This is Tab 2.</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test1-3"><p><strong>This is Tab 3.</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><p>2.Demo 2 - 预设选择tabs</p><div class="tabs" id="test2"><ul class="nav-tabs"><li class="tab"><button type="button" data-href="#test2-1">test2 1</button></li><li class="tab"><button type="button" data-href="#test2-2">test2 2</button></li><li class="tab active"><button type="button" data-href="#test2-3">test2 3</button></li></ul><div class="tab-contents"><div class="tab-item-content" id="test2-1"><p><strong>This is Tab 1.</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test2-2"><p><strong>This is Tab 2.</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content active" id="test2-3"><p><strong>This is Tab 3.</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><p>3.Demo 3 - 没有预设值</p><div class="tabs" id="test3"><ul class="nav-tabs"><li class="tab"><button type="button" data-href="#test3-1">test3 1</button></li><li class="tab"><button type="button" data-href="#test3-2">test3 2</button></li><li class="tab"><button type="button" data-href="#test3-3">test3 3</button></li></ul><div class="tab-contents"><div class="tab-item-content" id="test3-1"><p><strong>This is Tab 1.</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test3-2"><p><strong>This is Tab 2.</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test3-3"><p><strong>This is Tab 3.</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><p>4.Demo 4 - 自定义Tab名 + 只有icon + icon和Tab名</p><div class="tabs" id="test4"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#test4-1">第一个Tab</button></li><li class="tab"><button type="button" data-href="#test4-2"><i class="fab fa-apple-pay" style="text-align: center;"></i></button></li><li class="tab"><button type="button" data-href="#test4-3"><i class="fas fa-bomb"></i>炸弹</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="test4-1"><p><strong>tab名字为第一个Tab</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test4-2"><p><strong>只有图标 没有Tab名字</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test4-3"><p><strong>名字+icon</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-22-诗词标签-poem">2.22 诗词标签 poem</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">参数配置</button></li><li class="tab"><button type="button" data-href="#分栏-2">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-3">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><ol><li><code>title</code>：诗词标题</li><li><code>author</code>：作者，可以不写</li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&#123;% poem 水调歌头,苏轼 %&#125;</span><br><span class="line">丙辰中秋，欢饮达旦，大醉，作此篇，兼怀子由。</span><br><span class="line">明月几时有？把酒问青天。</span><br><span class="line">不知天上宫阙，今夕是何年？</span><br><span class="line">我欲乘风归去，又恐琼楼玉宇，高处不胜寒。</span><br><span class="line">起舞弄清影，何似在人间？</span><br><span class="line"></span><br><span class="line">转朱阁，低绮户，照无眠。</span><br><span class="line">不应有恨，何事长向别时圆？</span><br><span class="line">人有悲欢离合，月有阴晴圆缺，此事古难全。</span><br><span class="line">但愿人长久，千里共婵娟。</span><br><span class="line">&#123;% endpoem %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><div class='poem'><div class='poem-title'>水调歌头</div><div class='poem-author'>苏轼</div><p>丙辰中秋，欢饮达旦，大醉，作此篇，兼怀子由。<br>明月几时有？把酒问青天。<br>不知天上宫阙，今夕是何年？<br>我欲乘风归去，又恐琼楼玉宇，高处不胜寒。<br>起舞弄清影，何似在人间？</p><p>转朱阁，低绮户，照无眠。<br>不应有恨，何事长向别时圆？<br>人有悲欢离合，月有阴晴圆缺，此事古难全。<br>但愿人长久，千里共婵娟。</p></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-23-阿里图标-icon">2.23 阿里图标 icon</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-2">参数配置</button></li><li class="tab"><button type="button" data-href="#分栏-3">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% icon [icon-xxxx],[font-size] %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><ol><li><code>icon-xxxx</code>：表示图标<code>font-class</code>,可以在自己的阿里矢量图标库项目的<code>font-class</code>引用方案内查询并复制。</li><li><code>font-size</code>：表示图标大小，直接填写数字即可，单位为<code>em</code>。图标大小默认值为<code>1em</code>。</li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">&#123;% icon icon-rat<span class="emphasis">_zi %&#125;&#123;% icon icon-rat,2 %&#125;</span></span><br><span class="line"><span class="emphasis"></span></span><br><span class="line"><span class="emphasis">&#123;% icon icon-ox_</span>chou,3 %&#125;&#123;% icon icon-ox,4 %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% icon icon-tiger<span class="emphasis">_yin,5 %&#125;&#123;% icon icon-tiger,6 %&#125;</span></span><br><span class="line"><span class="emphasis"></span></span><br><span class="line"><span class="emphasis">&#123;% icon icon-rabbit_</span>mao,1 %&#125;&#123;% icon icon-rabbit,2 %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% icon icon-dragon<span class="emphasis">_chen,3 %&#125;&#123;% icon icon-dragon,4 %&#125;</span></span><br><span class="line"><span class="emphasis"></span></span><br><span class="line"><span class="emphasis">&#123;% icon icon-snake_</span>si,5 %&#125;&#123;% icon icon-snake,6 %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% icon icon-horse<span class="emphasis">_wu %&#125;&#123;% icon icon-horse,2 %&#125;</span></span><br><span class="line"><span class="emphasis"></span></span><br><span class="line"><span class="emphasis">&#123;% icon icon-goat_</span>wei,3 %&#125;&#123;% icon icon-goat,4 %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% icon icon-monkey<span class="emphasis">_shen,5 %&#125;&#123;% icon icon-monkey,6 %&#125;</span></span><br><span class="line"><span class="emphasis"></span></span><br><span class="line"><span class="emphasis">&#123;% icon icon-rooster_</span>you %&#125;&#123;% icon icon-rooster,2 %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% icon icon-dog<span class="emphasis">_xu,3 %&#125;&#123;% icon icon-dog,4 %&#125;</span></span><br><span class="line"><span class="emphasis"></span></span><br><span class="line"><span class="emphasis">&#123;% icon icon-boar_</span>hai,5 %&#125;&#123;% icon icon-boar,6 %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-4"><p><svg class="icon" style="width:1em; height:1em" aria-hidden="true"><use xlink:href="#icon-rat_zi"></use></svg><svg class="icon" style="width:2em; height:2em" aria-hidden="true"><use xlink:href="#icon-rat"></use></svg></p><p><svg class="icon" style="width:3em; height:3em" aria-hidden="true"><use xlink:href="#icon-ox_chou"></use></svg><svg class="icon" style="width:4em; height:4em" aria-hidden="true"><use xlink:href="#icon-ox"></use></svg></p><p><svg class="icon" style="width:5em; height:5em" aria-hidden="true"><use xlink:href="#icon-tiger_yin"></use></svg><svg class="icon" style="width:6em; height:6em" aria-hidden="true"><use xlink:href="#icon-tiger"></use></svg></p><p><svg class="icon" style="width:1em; height:1em" aria-hidden="true"><use xlink:href="#icon-rabbit_mao"></use></svg><svg class="icon" style="width:2em; height:2em" aria-hidden="true"><use xlink:href="#icon-rabbit"></use></svg></p><p><svg class="icon" style="width:3em; height:3em" aria-hidden="true"><use xlink:href="#icon-dragon_chen"></use></svg><svg class="icon" style="width:4em; height:4em" aria-hidden="true"><use xlink:href="#icon-dragon"></use></svg></p><p><svg class="icon" style="width:5em; height:5em" aria-hidden="true"><use xlink:href="#icon-snake_si"></use></svg><svg class="icon" style="width:6em; height:6em" aria-hidden="true"><use xlink:href="#icon-snake"></use></svg></p><p><svg class="icon" style="width:1em; height:1em" aria-hidden="true"><use xlink:href="#icon-horse_wu"></use></svg><svg class="icon" style="width:2em; height:2em" aria-hidden="true"><use xlink:href="#icon-horse"></use></svg></p><p><svg class="icon" style="width:3em; height:3em" aria-hidden="true"><use xlink:href="#icon-goat_wei"></use></svg><svg class="icon" style="width:4em; height:4em" aria-hidden="true"><use xlink:href="#icon-goat"></use></svg></p><p><svg class="icon" style="width:5em; height:5em" aria-hidden="true"><use xlink:href="#icon-monkey_shen"></use></svg><svg class="icon" style="width:6em; height:6em" aria-hidden="true"><use xlink:href="#icon-monkey"></use></svg></p><p><svg class="icon" style="width:1em; height:1em" aria-hidden="true"><use xlink:href="#icon-rooster_you"></use></svg><svg class="icon" style="width:2em; height:2em" aria-hidden="true"><use xlink:href="#icon-rooster"></use></svg></p><p><svg class="icon" style="width:3em; height:3em" aria-hidden="true"><use xlink:href="#icon-dog_xu"></use></svg><svg class="icon" style="width:4em; height:4em" aria-hidden="true"><use xlink:href="#icon-dog"></use></svg></p><p><svg class="icon" style="width:5em; height:5em" aria-hidden="true"><use xlink:href="#icon-boar_hai"></use></svg><svg class="icon" style="width:6em; height:6em" aria-hidden="true"><use xlink:href="#icon-boar"></use></svg></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-24-特效标签wow">2.24 特效标签wow</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-2">渲染演示</button></li><li class="tab"><button type="button" data-href="#分栏-3">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% wow [animete],[duration],[delay],[offset],[iteration] %&#125;</span><br><span class="line">内容</span><br><span class="line">&#123;% endwow %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><ol><li><code>animate</code>: 动画样式，效果详见<a href="https://animate.style/">animate.css参考文档</a></li><li><code>duration</code>: 选填项，动画持续时间，单位可以是<code>ms</code>也可以是<code>s</code>。例如<code>3s</code>，<code>700ms</code>。</li><li><code>delay</code>: 选填项，动画开始的延迟时间，单位可以是<code>ms</code>也可以是<code>s</code>。例如<code>3s</code>，<code>700ms</code>。</li><li><code>offset</code>: 选填项，开始动画的距离（相对浏览器底部）</li><li><code>iteration</code>: 选填项，动画重复的次数</li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><p>1.flip动画效果。</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;% wow animate<span class="strong">__zoomIn,5s,5s,100,10 %&#125;</span></span><br><span class="line"><span class="strong">&#123;% note blue &#x27;fas fa-bullhorn&#x27; modern%&#125;</span></span><br><span class="line"><span class="strong">`zoomIn`动画效果，持续`5s`，延时`5s`，离底部`100`距离时启动，重复`10`次</span></span><br><span class="line"><span class="strong">&#123;% endnote %&#125;</span></span><br><span class="line"><span class="strong">&#123;% endwow %&#125;</span></span><br></pre></td></tr></table></figure><p>2.zoomIn动画效果，持续5s，延时5s，离底部100距离时启动，重复10次</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;% wow animate<span class="strong">__zoomIn,5s,5s,100,10 %&#125;</span></span><br><span class="line"><span class="strong">&#123;% note blue &#x27;fas fa-bullhorn&#x27; modern%&#125;</span></span><br><span class="line"><span class="strong">`zoomIn`动画效果，持续`5s`，延时`5s`，离底部`100`距离时启动，重复`10`次</span></span><br><span class="line"><span class="strong">&#123;% endnote %&#125;</span></span><br><span class="line"><span class="strong">&#123;% endwow %&#125;</span></span><br></pre></td></tr></table></figure><p>3.slideInRight动画效果，持续5s，延时5s</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;% wow animate<span class="strong">__slideInRight,5s,5s %&#125;</span></span><br><span class="line"><span class="strong">&#123;% note orange &#x27;fas fa-car&#x27; modern%&#125;</span></span><br><span class="line"><span class="strong">`slideInRight`动画效果，持续`5s`，延时`5s`。</span></span><br><span class="line"><span class="strong">&#123;% endnote %&#125;</span></span><br><span class="line"><span class="strong">&#123;% endwow %&#125;</span></span><br></pre></td></tr></table></figure><p>4.heartBeat动画效果，延时5s，重复10次。此处注意不用的参数位置要留空，用逗号间隔。</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;% wow animate<span class="strong">__heartBeat,,5s,,10 %&#125;</span></span><br><span class="line"><span class="strong">&#123;% note red &#x27;fas fa-battery-half&#x27; modern%&#125;</span></span><br><span class="line"><span class="strong">`heartBeat`动画效果，延时`5s`，重复`10`次。</span></span><br><span class="line"><span class="strong">&#123;% endnote %&#125;</span></span><br><span class="line"><span class="strong">&#123;% endwow %&#125;</span></span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-4"><p>1.flip动画效果。</p><div class='wow animate__zoomIn' data-wow-duration='5s' data-wow-delay='5s' data-wow-offset='100'  data-wow-iteration='10' ><div class="note blue icon-padding modern"><i class="note-icon fas fa-bullhorn"></i><p><code>zoomIn</code>动画效果，持续<code>5s</code>，延时<code>5s</code>，离底部<code>100</code>距离时启动，重复<code>10</code>次</p></div></div><p>2.zoomIn动画效果，持续5s，延时5s，离底部100距离时启动，重复10次</p><div class='wow animate__zoomIn' data-wow-duration='5s' data-wow-delay='5s' data-wow-offset='100'  data-wow-iteration='10' ><div class="note blue icon-padding modern"><i class="note-icon fas fa-bullhorn"></i><p><code>zoomIn</code>动画效果，持续<code>5s</code>，延时<code>5s</code>，离底部<code>100</code>距离时启动，重复<code>10</code>次</p></div></div><p>3.slideInRight动画效果，持续5s，延时5s</p><div class='wow animate__slideInRight' data-wow-duration='5s' data-wow-delay='5s' data-wow-offset=''  data-wow-iteration='' ><div class="note orange icon-padding modern"><i class="note-icon fas fa-car"></i><p><code>slideInRight</code>动画效果，持续<code>5s</code>，延时<code>5s</code>。</p></div></div><p>4.heartBeat动画效果，延时5s，重复10次。此处注意不用的参数位置要留空，用逗号间隔。</p><div class='wow animate__heartBeat' data-wow-duration='' data-wow-delay='5s' data-wow-offset=''  data-wow-iteration='10' ><div class="note red icon-padding modern"><i class="note-icon fas fa-battery-half"></i><p><code>heartBeat</code>动画效果，延时<code>5s</code>，重复<code>10</code>次。</p></div></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-25-进度条-progress">2.25  进度条 progress</h2><div class="note info flat"><p>进度条标签参考<a href="https://rongbuqiu.com/jdt.html">沂佰孜猫-给HEXO文章添加彩色进度条</a>。<br>源样式提取自<a href="https://zwying0814.gitbook.io/cuteen/">Cuteen</a>主题。</p></div><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">参数配置</button></li><li class="tab"><button type="button" data-href="#分栏-2">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-3">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% progress [width] [color] [text] %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><ol><li><code>width</code>: 0到100的阿拉伯数字</li><li><code>color</code>: 颜色，取值有red,yellow,green,cyan,blue,gray</li><li><code>text</code>:进度条上的文字内容</li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&#123;% progress 10 red 进度条样式预览 %&#125;</span><br><span class="line">&#123;% progress 30 yellow 进度条样式预览 %&#125;</span><br><span class="line">&#123;% progress 50 green 进度条样式预览 %&#125;</span><br><span class="line">&#123;% progress 70 cyan 进度条样式预览 %&#125;</span><br><span class="line">&#123;% progress 90 blue 进度条样式预览 %&#125;</span><br><span class="line">&#123;% progress 100 gray 进度条样式预览 %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-4"><div class="progress"><div class="progress-bar-animated progress-bar progress-bar-striped bg-red"  style="width: 10%" aria-valuenow="10" aria-valuemin="0" aria-valuemax="100"><p>进度条样式预览</p></div></div><div class="progress"><div class="progress-bar-animated progress-bar progress-bar-striped bg-yellow"  style="width: 30%" aria-valuenow="30" aria-valuemin="0" aria-valuemax="100"><p>进度条样式预览</p></div></div><div class="progress"><div class="progress-bar-animated progress-bar progress-bar-striped bg-green"  style="width: 50%" aria-valuenow="50" aria-valuemin="0" aria-valuemax="100"><p>进度条样式预览</p></div></div><div class="progress"><div class="progress-bar-animated progress-bar progress-bar-striped bg-cyan"  style="width: 70%" aria-valuenow="70" aria-valuemin="0" aria-valuemax="100"><p>进度条样式预览</p></div></div><div class="progress"><div class="progress-bar-animated progress-bar progress-bar-striped bg-blue"  style="width: 90%" aria-valuenow="90" aria-valuemin="0" aria-valuemax="100"><p>进度条样式预览</p></div></div><div class="progress"><div class="progress-bar-animated progress-bar progress-bar-striped bg-gray"  style="width: 100%" aria-valuenow="100" aria-valuemin="0" aria-valuemax="100"><p>进度条样式预览</p></div></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-26-注释-notation">2.26 注释 notation</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-2">参数配置</button></li><li class="tab"><button type="button" data-href="#分栏-3">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% nota [label] , [text] %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><ol><li><p><code>label</code>: 注释词汇</p></li><li><p><code>text</code>: 悬停显示的注解内容</p></li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% nota 把鼠标移动到我上面试试 ,可以看到注解内容出现在顶栏 %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-4"><p><span class='nota' data-nota='可以看到注解内容出现在顶栏'>把鼠标移动到我上面试试</span></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-27-气泡注释-bubble">2.27 气泡注释 bubble</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-2">参数配置</button></li><li class="tab"><button type="button" data-href="#分栏-3">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% bubble [content] , [notation] ,[background-color] %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><ol><li><code>content</code>: 注释词汇</li><li><code>notation</code>: 悬停显示的注解内容</li><li><code>background-color</code>: 可选，气泡背景色。默认为“#71a4e3”</li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">最近我学到了不少新玩意儿（虽然对很多大佬来说这些已经是旧技术了），比如CSS的&#123;% bubble 兄弟相邻选择器,&quot;例如 h1 + p &#123;margin-top:50px;&#125;&quot; %&#125;，&#123;% bubble flex布局,&quot;Flex 是 Flexible Box 的缩写，意为&quot;弹性布局&quot;，用来为盒状模型提供最大的灵活性&quot;,&quot;#ec5830&quot; %&#125;，&#123;% bubble transform变换,&quot;transform 属性向元素应用 2D 或 3D 转换。该属性允许我们对元素进行旋转、缩放、移动或倾斜。&quot;,&quot;#1db675&quot; %&#125;，animation的&#123;% bubble 贝塞尔速度曲线,&quot;贝塞尔曲线(Bézier curve)，又称贝兹曲线或贝济埃曲线，是应用于二维图形应用程序的数学曲线。一般的矢量图形软件通过它来精确画出曲线，贝兹曲线由线段与节点组成，节点是可拖动的支点，线段像可伸缩的皮筋&quot;,&quot;#de4489&quot; %&#125;写法，还有今天刚看到的&#123;% bubble clip-path,&quot;clip-path属性使用裁剪方式创建元素的可显示区域。区域内的部分显示，区域外的隐藏。&quot;,&quot;#868fd7&quot; %&#125;属性。这些对我来说很新颖的概念狠狠的冲击着我以前积累起来的设计思路。</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-4"><p>最近我学到了不少新玩意儿（虽然对很多大佬来说这些已经是旧技术了），比如CSS的<span class="bubble-content">兄弟相邻选择器</span><span class="bubble-notation"><span class="bubble-item" style="background-color:#71a4e3;">例如 h1 + p {margin-top:50px;}</span></span>，<span class="bubble-content">flex布局</span><span class="bubble-notation"><span class="bubble-item" style="background-color:#ec5830;">Flex 是 Flexible Box 的缩写，意为弹性布局&quot;，用来为盒状模型提供最大的灵活性&quot;</span></span>，<span class="bubble-content">transform变换</span><span class="bubble-notation"><span class="bubble-item" style="background-color:#1db675;">transform 属性向元素应用 2D 或 3D 转换。该属性允许我们对元素进行旋转、缩放、移动或倾斜。</span></span>，animation的<span class="bubble-content">贝塞尔速度曲线</span><span class="bubble-notation"><span class="bubble-item" style="background-color:#de4489;">贝塞尔曲线(Bézier curve)，又称贝兹曲线或贝济埃曲线，是应用于二维图形应用程序的数学曲线。一般的矢量图形软件通过它来精确画出曲线，贝兹曲线由线段与节点组成，节点是可拖动的支点，线段像可伸缩的皮筋</span></span>写法，还有今天刚看到的<span class="bubble-content">clip-path</span><span class="bubble-notation"><span class="bubble-item" style="background-color:#868fd7;">clip-path属性使用裁剪方式创建元素的可显示区域。区域内的部分显示，区域外的隐藏。</span></span>属性。这些对我来说很新颖的概念狠狠的冲击着我以前积累起来的设计思路。</p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-28-引用文献-reference">2.28 引用文献 reference</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-2">参数配置</button></li><li class="tab"><button type="button" data-href="#分栏-3">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#123;% referto [id] , [literature] %&#125;</span><br><span class="line">&#123;% referfrom [id] , [literature] , [url] %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><ol><li><p>referto 引用上标</p><ul><li><p><code>id</code>: 上标序号内容，需与referfrom标签的id对应才能实现跳转</p></li><li><p><code>literature</code>: 引用的参考文献名称</p></li></ul></li><li><p>referfrom 引用出处</p><ul><li><p><code>id</code>: 序号内容，需与referto标签的id对应才能实现 跳转</p></li><li><p><code>literature</code>: 引用的参考文献名称</p></li><li><p><code>url</code>: 引用的参考文献链接，可省略</p></li></ul></li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">Akilarの糖果屋(akilar.top)是一个私人性质的博客&#123;% referto &#x27;[1]&#x27;,&#x27;Akilarの糖果屋群聊简介&#x27; %&#125;，从各类教程至生活点滴，无话不谈。建群的目的是提供一个闲聊的场所。博客采用Hexo框架&#123;% referto &#x27;[2]&#x27;,&#x27;Hexo中文文档&#x27; %&#125;，Butterfly主题&#123;% referto &#x27;[3]&#x27;,&#x27;Butterfly 安装文档(一) 快速开始&#x27; %&#125;</span><br><span class="line"></span><br><span class="line">本项目参考了Volantis&#123;% referto &#x27;[4]&#x27;,&#x27;hexo-theme-volantis 标签插件&#x27; %&#125;的标签样式。引入<span class="code">`[tag].js`</span>，并针对<span class="code">`butterfly`</span>主题修改了相应的<span class="code">`[tag].styl`</span>。在此鸣谢<span class="code">`Volantis`</span>主题众开发者。</span><br><span class="line">主要参考内容包括各个volantis的内置标签插件文档&#123;% referto &#x27;[5]&#x27;,&#x27;Volantis文档:内置标签插件&#x27; %&#125;</span><br><span class="line">Butterfly主题的各个衍生魔改&#123;% referto &#x27;[6]&#x27;,&#x27;Butterfly 安装文档:标签外挂（Tag Plugins&#x27; %&#125;&#123;% referto &#x27;[7]&#x27;,&#x27;小弋の生活馆全样式预览&#x27; %&#125;&#123;% referto &#x27;[8]&#x27;,&#x27;l-lin-font-awesome-animation&#x27; %&#125;&#123;% referto &#x27;[9]&#x27;,&#x27;小康的butterfly主题使用文档&#x27; %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% referfrom &#x27;[1]&#x27;,&#x27;Akilarの糖果屋群聊简介&#x27;,&#x27;https://jq.qq.com/?<span class="emphasis">_wv=1027&amp;k=pGLB2C0N&#x27; %&#125;</span></span><br><span class="line"><span class="emphasis">&#123;% referfrom &#x27;[2]&#x27;,&#x27;Hexo中文文档&#x27;,&#x27;https://hexo.io/zh-cn/docs/&#x27; %&#125;</span></span><br><span class="line"><span class="emphasis">&#123;% referfrom &#x27;[3]&#x27;,&#x27;Butterfly 安装文档(一) 快速开始&#x27;,&#x27;https://butterfly.js.org/posts/21cfbf15/&#x27; %&#125;</span></span><br><span class="line"><span class="emphasis">&#123;% referfrom &#x27;[4]&#x27;,&#x27;hexo-theme-volantis 标签插件&#x27;,&#x27;https://volantis.js.org/v5/tag-plugins/&#x27; %&#125;</span></span><br><span class="line"><span class="emphasis">&#123;% referfrom &#x27;[5]&#x27;,&#x27;Volantis文档:内置标签插件&#x27;,&#x27;https://volantis.js.org/tag-plugins/&#x27; %&#125;</span></span><br><span class="line"><span class="emphasis">&#123;% referfrom &#x27;[6]&#x27;,&#x27;Butterfly 安装文档:标签外挂（Tag Plugins&#x27;,&#x27;https://butterfly.js.org/posts/4aa8abbe/#%E6%A8%99%E7%B1%A4%E5%A4%96%E6%8E%9B%EF%BC%88Tag-Plugins%EF%BC%89&#x27; %&#125;</span></span><br><span class="line"><span class="emphasis">&#123;% referfrom &#x27;[7]&#x27;,&#x27;小弋の生活馆全样式预览&#x27;,&#x27;https://lovelijunyi.gitee.io/posts/c898.html&#x27; %&#125;</span></span><br><span class="line"><span class="emphasis">&#123;% referfrom &#x27;[8]&#x27;,&#x27;l-lin-font-awesome-animation&#x27;,&#x27;https://github.com/l-lin/font-awesome-animation&#x27; %&#125;</span></span><br><span class="line"><span class="emphasis">&#123;% referfrom &#x27;[9]&#x27;,&#x27;小康的butterfly主题使用文档&#x27;,&#x27;https://www.antmoe.com/posts/3b43914f/&#x27; %&#125;</span></span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-4"><p>Akilarの糖果屋(akilar.top)是一个私人性质的博客<span class="hidden-anchor" id="referto_[1]"></span><sup class="reference"><a href="#referfrom_[1]">[1]</a></sup><span class="reference-bubble"><span class="reference-item"><span class="reference-literature">Akilarの糖果屋群聊简介</span><span class="reference-title">参考资料</span></span></span>，从各类教程至生活点滴，无话不谈。建群的目的是提供一个闲聊的场所。博客采用Hexo框架<span class="hidden-anchor" id="referto_[2]"></span><sup class="reference"><a href="#referfrom_[2]">[2]</a></sup><span class="reference-bubble"><span class="reference-item"><span class="reference-literature">Hexo中文文档</span><span class="reference-title">参考资料</span></span></span>，Butterfly主题<span class="hidden-anchor" id="referto_[3]"></span><sup class="reference"><a href="#referfrom_[3]">[3]</a></sup><span class="reference-bubble"><span class="reference-item"><span class="reference-literature">Butterfly 安装文档(一) 快速开始</span><span class="reference-title">参考资料</span></span></span></p><p>本项目参考了Volantis<span class="hidden-anchor" id="referto_[4]"></span><sup class="reference"><a href="#referfrom_[4]">[4]</a></sup><span class="reference-bubble"><span class="reference-item"><span class="reference-literature">hexo-theme-volantis 标签插件</span><span class="reference-title">参考资料</span></span></span>的标签样式。引入<code>[tag].js</code>，并针对<code>butterfly</code>主题修改了相应的<code>[tag].styl</code>。在此鸣谢<code>Volantis</code>主题众开发者。<br>主要参考内容包括各个volantis的内置标签插件文档<span class="hidden-anchor" id="referto_[5]"></span><sup class="reference"><a href="#referfrom_[5]">[5]</a></sup><span class="reference-bubble"><span class="reference-item"><span class="reference-literature">Volantis文档:内置标签插件</span><span class="reference-title">参考资料</span></span></span><br>Butterfly主题的各个衍生魔改<span class="hidden-anchor" id="referto_[6]"></span><sup class="reference"><a href="#referfrom_[6]">[6]</a></sup><span class="reference-bubble"><span class="reference-item"><span class="reference-literature">Butterfly 安装文档:标签外挂（Tag Plugins</span><span class="reference-title">参考资料</span></span></span><span class="hidden-anchor" id="referto_[7]"></span><sup class="reference"><a href="#referfrom_[7]">[7]</a></sup><span class="reference-bubble"><span class="reference-item"><span class="reference-literature">小弋の生活馆全样式预览</span><span class="reference-title">参考资料</span></span></span><span class="hidden-anchor" id="referto_[8]"></span><sup class="reference"><a href="#referfrom_[8]">[8]</a></sup><span class="reference-bubble"><span class="reference-item"><span class="reference-literature">l-lin-font-awesome-animation</span><span class="reference-title">参考资料</span></span></span><span class="hidden-anchor" id="referto_[9]"></span><sup class="reference"><a href="#referfrom_[9]">[9]</a></sup><span class="reference-bubble"><span class="reference-item"><span class="reference-literature">小康的butterfly主题使用文档</span><span class="reference-title">参考资料</span></span></span></p><div class="reference-source"><span class="hidden-anchor" id="referfrom_[1]"></span><a class="reference-anchor" href="#referto_[1]">[1]<div class="reference-anchor-up fa-solid fa-angles-up"></div></a><a class="reference-link" href="https://jq.qq.com/?_wv=1027&k=pGLB2C0N">Akilarの糖果屋群聊简介</a></div><div class="reference-source"><span class="hidden-anchor" id="referfrom_[2]"></span><a class="reference-anchor" href="#referto_[2]">[2]<div class="reference-anchor-up fa-solid fa-angles-up"></div></a><a class="reference-link" href="https://hexo.io/zh-cn/docs/">Hexo中文文档</a></div><div class="reference-source"><span class="hidden-anchor" id="referfrom_[3]"></span><a class="reference-anchor" href="#referto_[3]">[3]<div class="reference-anchor-up fa-solid fa-angles-up"></div></a><a class="reference-link" href="https://butterfly.js.org/posts/21cfbf15/">Butterfly 安装文档(一) 快速开始</a></div><div class="reference-source"><span class="hidden-anchor" id="referfrom_[4]"></span><a class="reference-anchor" href="#referto_[4]">[4]<div class="reference-anchor-up fa-solid fa-angles-up"></div></a><a class="reference-link" href="https://volantis.js.org/v5/tag-plugins/">hexo-theme-volantis 标签插件</a></div><div class="reference-source"><span class="hidden-anchor" id="referfrom_[5]"></span><a class="reference-anchor" href="#referto_[5]">[5]<div class="reference-anchor-up fa-solid fa-angles-up"></div></a><a class="reference-link" href="https://volantis.js.org/tag-plugins/">Volantis文档:内置标签插件</a></div><div class="reference-source"><span class="hidden-anchor" id="referfrom_[6]"></span><a class="reference-anchor" href="#referto_[6]">[6]<div class="reference-anchor-up fa-solid fa-angles-up"></div></a><a class="reference-link" href="https://butterfly.js.org/posts/4aa8abbe/#%E6%A8%99%E7%B1%A4%E5%A4%96%E6%8E%9B%EF%BC%88Tag-Plugins%EF%BC%89">Butterfly 安装文档:标签外挂（Tag Plugins</a></div><div class="reference-source"><span class="hidden-anchor" id="referfrom_[7]"></span><a class="reference-anchor" href="#referto_[7]">[7]<div class="reference-anchor-up fa-solid fa-angles-up"></div></a><a class="reference-link" href="https://lovelijunyi.gitee.io/posts/c898.html">小弋の生活馆全样式预览</a></div><div class="reference-source"><span class="hidden-anchor" id="referfrom_[8]"></span><a class="reference-anchor" href="#referto_[8]">[8]<div class="reference-anchor-up fa-solid fa-angles-up"></div></a><a class="reference-link" href="https://github.com/l-lin/font-awesome-animation">l-lin-font-awesome-animation</a></div><div class="reference-source"><span class="hidden-anchor" id="referfrom_[9]"></span><a class="reference-anchor" href="#referto_[9]">[9]<div class="reference-anchor-up fa-solid fa-angles-up"></div></a><a class="reference-link" href="https://www.antmoe.com/posts/3b43914f/">小康的butterfly主题使用文档</a></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-29-pdf展示">2.29 PDF展示</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-2">参数配置</button></li><li class="tab"><button type="button" data-href="#分栏-3">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% pdf 文件路径 %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><ol><li><code>文件路径</code>: 可以是相对路径或者是在线链接</li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="section"># 1.本地文件:在md文件路径下创建一个同名文件夹，其内放pdf文件名为xxx.pdf的文件</span></span><br><span class="line">&#123;% pdf xxx.pdf %&#125;</span><br><span class="line"><span class="section"># 2.在线链接</span></span><br><span class="line">&#123;% pdf https://cdn.jsdelivr.net/gh/Justlovesmile/CDN/pdf/小作文讲义.pdf %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-4"><p>2.在线链接(要放到最外层才能起作用)</p><pre><code>&lt;div class=&quot;row&quot;&gt;&lt;embed src=&quot;https://cdn.jsdelivr.net/gh/Justlovesmile/CDN/pdf/小作文讲义.pdf&quot; width=&quot;100%&quot; height=&quot;550&quot; type=&quot;application/pdf&quot;&gt;&lt;/div&gt;</code></pre><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-30-hexo-tag-map-插件">2.30 Hexo-tag-map 插件</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-2">参数配置</button></li><li class="tab"><button type="button" data-href="#分栏-3">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% + 标签值 + 经度 + 纬度 + 文本 + 缩放等级 + 宽 + 高 + 默认图层 + %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><table><thead><tr><th style="text-align:center">地图名</th><th style="text-align:center">标签值 &lt;必填&gt;</th><th style="text-align:center">宽 (默认 100%) / 高 (默认 360px)</th><th style="text-align:center">缩放等级 (默认 14)</th><th style="text-align:center">宽 (默认 100%) / 高 (默认 360px)</th><th style="text-align:center">默认图层 (默认 1)</th></tr></thead><tbody><tr><td style="text-align:center">混合地图</td><td style="text-align:center">map</td><td style="text-align:center">百分数或具体值 (100% 或 360px)</td><td style="text-align:center">取值 3~18</td><td style="text-align:center">百分数或具体值 (100% 或 360px)</td><td style="text-align:center">取值 1~7</td></tr><tr><td style="text-align:center">谷歌地图</td><td style="text-align:center">googleMap</td><td style="text-align:center">百分数或具体值 (100% 或 360px)</td><td style="text-align:center">取值 1~20</td><td style="text-align:center">百分数或具体值 (100% 或 360px)</td><td style="text-align:center">取值 1~3</td></tr><tr><td style="text-align:center">高德地图</td><td style="text-align:center">gaodeMap</td><td style="text-align:center">百分数或具体值 (100% 或 360px)</td><td style="text-align:center">取值 3~18</td><td style="text-align:center">百分数或具体值 (100% 或 360px)</td><td style="text-align:center">取值 1~3</td></tr><tr><td style="text-align:center">百度地图</td><td style="text-align:center">baiduMap</td><td style="text-align:center">百分数或具体值 (100% 或 360px)</td><td style="text-align:center">取值 4~18</td><td style="text-align:center">百分数或具体值 (100% 或 360px)</td><td style="text-align:center">取值 1~2</td></tr><tr><td style="text-align:center">Geoq 地图</td><td style="text-align:center">geoqMap</td><td style="text-align:center">百分数或具体值 (100% 或 360px)</td><td style="text-align:center">取值 1~18</td><td style="text-align:center">百分数或具体值 (100% 或 360px)</td><td style="text-align:center">取值 1~5</td></tr><tr><td style="text-align:center">openstreet 地图</td><td style="text-align:center">openstreetMap</td><td style="text-align:center">百分数或具体值 (100% 或 360px)</td><td style="text-align:center">取值 1~18</td><td style="text-align:center">百分数或具体值 (100% 或 360px)</td><td style="text-align:center">不支持此参数</td></tr></tbody></table><ol><li>参数之间，用英文逗号相隔</li><li>参数必须按上述事例顺序输入，不得为空</li><li>同一个页面，同一组经纬度值，只能插入一个相同标签值的地图 (若有需要，可以将第二个地图上，经度或纬度末尾删除一两个数)</li><li>参数取值必须在上述范围内</li><li>默认图层：即地图叠加层的值，默认常规地图还是卫星地图，可按地图显示顺序取值</li><li>缩放等级，数字越大，地图比例尺越小，显示的越精细</li><li>除标签值外，其他参数选填，但 每个参数的左边的参数必填</li><li>谷歌地图需要外网才能加载查看</li></ol><p>坐标获取：<a href="https://lbs.amap.com/tools/picker">高德地图坐标拾取系统</a> 、<a href="https://api.map.baidu.com/lbsapi/getpoint/index.html">百度地图坐标拾取系统</a></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% map 120.101101,30.239119 %&#125;</span><br><span class="line">&#123;% googleMap 120.101101,30.239119, 这里是西湖灵隐寺，据说求姻缘很灵验哦！ %&#125;</span><br><span class="line">&#123;% geoqMap 120.101101,30.239119, 这里是西湖灵隐寺，据说求姻缘很灵验哦！, 13, 90%, 320px, 3 %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-4"><link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/hexo-tag-map/lib/leaflet@1.7.1.css"><script data-pjax src="https://cdn.jsdelivr.net/npm/hexo-tag-map/lib/leaflet@1.7.1.js"></script><script data-pjax src="https://cdn.jsdelivr.net/npm/hexo-tag-map/lib/leaflet.ChineseTmsProviders@1.0.4.js"></script><div class="map-box"><div id="map-120.101101-30.239119" style="max-width:100%; height:360px;display: block;margin:0 auto;z-index:1;border-radius: 5px;"></div></div><script type="text/javascript">var normalm=L.tileLayer.chinaProvider('GaoDe.Normal.Map',{maxZoom:20,minZoom:1,attribution:'Amap'});var imgm=L.tileLayer.chinaProvider('GaoDe.Satellite.Map',{maxZoom:20,minZoom:1,attribution:'Amap'});var imga=L.tileLayer.chinaProvider('GaoDe.Satellite.Annotion',{maxZoom:20,minZoom:1,attribution:'Amap'});var normalMap=L.tileLayer.chinaProvider('Google.Normal.Map',{maxZoom:20,minZoom:1,attribution:'Google Maps'}),satelliteMap=L.tileLayer.chinaProvider('Google.Satellite.Map',{maxZoom:21,minZoom:1,attribution:'Google Maps'});routeMap=L.tileLayer.chinaProvider('Google.Satellite.Annotion',{maxZoom:21,minZoom:1});var normalMap=L.tileLayer.chinaProvider('Google.Normal.Map',{maxZoom:21,minZoom:1,attribution:'Google Maps'}),satelliteMap=L.tileLayer.chinaProvider('Google.Satellite.Map',{maxZoom:21,minZoom:1,attribution:'Google Maps'}),routeMap=L.tileLayer.chinaProvider('Google.Satellite.Annotion',{maxZoom:21,minZoom:1,attribution:'Google Maps'});var normalm1=L.tileLayer.chinaProvider('Geoq.Normal.Map',{maxZoom:21,minZoom:1,attribution:'GeoQ'});var normal=L.layerGroup([normalm]),image=L.layerGroup([imgm,imga]);var baseLayers={"高德地图":normal,"智图地图":normalm1,"谷歌地图":normalMap,"高德卫星地图":imgm,"谷歌卫星地图":satelliteMap,"高德卫星标注":image,"谷歌卫星标注":routeMap};var mymap=L.map('map-120.101101-30.239119',{center:[30.239119,120.101101],zoom:14,layers:[normal],zoomControl:false});L.control.layers(baseLayers,null).addTo(mymap);L.control.zoom({zoomInTitle:'放大',zoomOutTitle:'缩小'}).addTo(mymap);</script><br><link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/hexo-tag-map/lib/leaflet@1.7.1.css"><script data-pjax src="https://cdn.jsdelivr.net/npm/hexo-tag-map/lib/leaflet@1.7.1.js"></script><script data-pjax src="https://cdn.jsdelivr.net/npm/hexo-tag-map/lib/leaflet.ChineseTmsProviders@1.0.4.js"></script><div id="googleMap-120.101101-30.239119" style="max-width:100%; height:360px;display: block;margin:0 auto;z-index:1;border-radius: 5px;"></div><script type="text/javascript">var normalMap=L.tileLayer.chinaProvider('Google.Normal.Map',{maxZoom:22,minZoom:1,attribution:'Google Maps'}),satelliteMap=L.tileLayer.chinaProvider('Google.Satellite.Map',{maxZoom:22,minZoom:1,attribution:'Google Maps'}),routeMap=L.tileLayer.chinaProvider('Google.Satellite.Annotion',{maxZoom:22,minZoom:1,attribution:'Google Maps'});var baseLayers={"谷歌地图":normalMap,"谷歌卫星图":satelliteMap,"谷歌卫星标注": routeMap};var overlayLayers={};var mymap=L.map("googleMap-120.101101-30.239119",{center:[30.239119,120.101101],zoom:14,layers:[normalMap],zoomControl:false});L.control.layers(baseLayers,null).addTo(mymap);L.control.zoom({zoomInTitle:'放大',zoomOutTitle:'缩小'}).addTo(mymap);var marker = L.marker(['30.239119','120.101101']).addTo(mymap);marker.bindPopup("这里是西湖灵隐寺，据说求姻缘很灵验哦！").openPopup();</script><br><link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/hexo-tag-map/lib/leaflet@1.7.1.css"><script data-pjax src="https://cdn.jsdelivr.net/npm/hexo-tag-map/lib/leaflet@1.7.1.js"></script><script data-pjax src="https://cdn.jsdelivr.net/npm/hexo-tag-map/lib/leaflet.ChineseTmsProviders@1.0.4.js"></script><div id="geoqMap-120.101101-30.239119" style="max-width:90%; height:320px;display: block;margin:0 auto;z-index:1;border-radius: 5px;"></div><script type="text/javascript">var normalm1=L.tileLayer.chinaProvider('Geoq.Normal.Map',{maxZoom:20,minZoom:1,attribution:'GeoQ'});var normalm2=L.tileLayer.chinaProvider('Geoq.Normal.PurplishBlue',{maxZoom:20,minZoom:1,attribution:'GeoQ'});var normalm3=L.tileLayer.chinaProvider('Geoq.Normal.Gray',{maxZoom:20,minZoom:1,attribution:'GeoQ'});var normalm4=L.tileLayer.chinaProvider('Geoq.Normal.Warm',{maxZoom:20,minZoom:1,attribution:'GeoQ'});var normalm5=L.tileLayer.chinaProvider('Geoq.Theme.Hydro',{maxZoom:20,minZoom:1,attribution:'GeoQ'});var normal=L.layerGroup([normalm1,normalm2,normalm3,normalm4,normalm5]);var baseLayers={"智图地图":normalm1,"午夜蓝":normalm2,"灰色":normalm3,"暖色":normalm4,"水系":normalm5};var mymap=L.map("geoqMap-120.101101-30.239119",{center:[30.239119,120.101101],zoom:13,layers:[normalm3],zoomControl:false});L.control.layers(baseLayers,null).addTo(mymap);L.control.zoom({zoomInTitle:'放大',zoomOutTitle:'缩小'}).addTo(mymap);var marker = L.marker(['30.239119','120.101101']).addTo(mymap);marker.bindPopup("这里是西湖灵隐寺，据说求姻缘很灵验哦！").openPopup();</script><br><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-31-隐藏块">2.31 隐藏块</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-2">参数配置</button></li><li class="tab"><button type="button" data-href="#分栏-3">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% hideBlock display,bg,color %&#125;</span><br><span class="line">content</span><br><span class="line">&#123;% endhideBlock %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><ol><li>content：要隐藏的内容</li><li>display：展示前按钮显示的文字（可选）</li><li>bg：按钮的背景颜色（可选）</li><li>color：按钮显示的文字的颜色（可选）</li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;% hideBlock 点我预览, blue %&#125;</span><br><span class="line">这里有张图片：</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;https://s1.vika.cn/space/2022/10/30/b35fce448bc9404a8d65c3ce1e6e46eb&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;image (1)&quot;</span> <span class="attr">style</span>=<span class="string">&quot;zoom:67%;&quot;</span> /&gt;</span></span></span><br><span class="line">&#123;% endhideBlock %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-4"><div class="hide-block"><button type="button" class="hide-button" style="background-color:  blue;">点我预览    </button><div class="hide-content"><p>这里有张图片：<br><img src="https://s1.vika.cn/space/2022/10/30/b35fce448bc9404a8d65c3ce1e6e46eb" alt="image (1)" style="zoom:67%;" /></p></div></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div>]]></content>
      
      
      <categories>
          
          <category> 演示 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Markdown </tag>
            
            <tag> 外挂标签 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>1号文件一手一脚</title>
      <link href="/posts/d5a01897/"/>
      <url>/posts/d5a01897/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="仅大鸟本人可访问!" data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="6d09d230d254ccc139c31d7a2628f3826153c8888945fee37ba7b45625ae6a2f">4a073aef6f17ceb90153b60dc70c7df28c4a95ddb955ee51f4107897434437f3b8908bf36ec74cef688778b281e6deefb1fa1921fa6191e519ddd53b86a3ea157686df46c0a1ccac1c8af288184aef2c3bdf2197000c623fda4f2afa5b8f97b1a3296ac0916b292eb5c783dc476a4aac497081ae532611047b410c452925f071feb17ef561b3ea2d2de712b9bb04e450d48fcc4d39ce21ea2acc0e3b0d3c86444c5b7a1dbdacf71da1fead9d25fbac95adba40cd013e09a073cd8576b375fe32e28854b8eea17770b34f1592043fd6e78402cb548b89494e720e9bc247b049505508c233f335a613a92b8cdd6258e775606f90a9c69a3137548c50d750f6bf549e0259f61ac0d984927ea82114d8fb77b9d18c60f56616fdbfd858eac4dc484b43389383c7e0fe62090175e8a4ac06aeaa5806b83584a643e0fab8243a9d409062e4cf3851f9cb81e75c42fe5dc86870834f4b91f4f0bb0154027adf249680e17e4794207eb233d71856aca24956aa2fe7521413abe4d5c879539baa222563e9a3154fff301941f8be2d9485daedca3584e7544931a961c0e06c6a0c1cb17795dbc7623df65f2a4a0d42d407daee28cad3c0c2afebdd5b56e1eb1ae41683cf105eb625ebeddb4daa1b43170a974a18c3ad19b4d16473b09df7f9988f4a3b2d525def625dbd54a61b20150a1b2b5c61a986b8c7e24256c5db10e9fae95d7014d457253bd15af828a8c32e91f461358953643eb3348b9fda2a530eaf4a5619c98b32c89d35306f7a53802383e570374c2892b2202126c788d2dca109646d85d86aa60f4726f3926187583b2e8c042a1a3cbeb76bf0fe860760b28d0b907fb5345705976394c505d3d9070b21bbe4c1e6810b7312ff8fb077371cab3f3c0d33511f8c845348d70d249aa02879969d1bbd238b7181f2aa75b6ae1a0a4c821ddfea58266c9f45a64b28db3db37832368d7017554a4dfc9733299636daaf1b46f125426e346a728820c5857566787506680c99b0df2fc3fdbdb4034f64698a95090faf79fab18e75ee75bb4482a01d84591b5b296903ac45090717ea44aff75f7aaf4fe6bfc8db0240386ba47da4d13dc04f12a4a30aca6171aad1a2b831917239317429c70124b08421e3c0bb0b1269a101ed7bde6f0a2e77c9dab48d70056d2f7f57e3d64625747f14185ed92c55c5f14297111cb7bffd60079c4c1d2e83f89e95a80c6df70ec9038e990c4eadad409f22984a281e52493cef569da0eef88b9fc355241ba24ee489c171a50757f1ca1d3850e8ec4032d0bf48df2fb555744e7a379f569e8d69c982498fb25ccbeed16cd89c71a6d5a767fbba3912a9831cf039935232eb719433446ebf8d03cbbe74b46b05b624208a35676381d62a08983833925c65efc4da696f2f358086160d13653412e6588a8a3c3e1099b4b8e78034e586a509cd5af541411aa27f8129453dfb4a80b360c0cad6602ec1b9625121831f5643361affa6239b70df48bb53ae0c4f2e3f9014ea762243e923a98ee55246f2720254571fdb42e08761f7bc5d854ac700c1e613409bd5e9fde54fedacbec9967d8faba0c0841d63c9b5e3640ed21b0b8195d6cd7970fe4fdc9f485eaf07190b92b25477a8a63070b43fc9a288ec4d9069c164be20b2de9298111a7efdc955eab484fce515e7ea834d11515d5ca03408dcc660bcba70f0cf00e65d0352a88086cf9d1331cc490bac1248cef6fe5027772e790d035d262b441443acadada5a8a7da2dc91aeadc91673f7f426039e4d379af321c1a288f307bea57a5e0b349c670c664539f6eb9ad532067237671832a638e81192bc7d2fa0ec36b74ef1c8a4aa418e4438d00d01031cb0bd7d644b514fc4c09b6b99f6a8929758bef8b6d5accd411157126333b6ed4a7ee46d4b4198a9b0d189c71658bf580a93b6c1c5e7c0feda4fcef90100360bab45ca53c2eb718b9c34e93985e345aaf774399f26d36d9fb21d52ca42073aeec874deac78a5e87978326f79f39a150ec1dac52b4e5147bb073863ea1e6cd153e6773b05742bcece12b13222271b678ce6140f151b1b0fd1fbf7a9982b5c075a7ca3458efa696cc8cf8f3f42bcc6e74b5cf25b66e9db9f6dc0e873ea0243cecfab1460171fa56e84fb15087bcd9b9c20ee5c999b995b8f138701a1e74ee7f67a01841498cf9865494988787fed536cc1734e9e880e4baf4e53cdd33e16039d006e50d3375a0ec7b82dd0c93988898f8f6e4460f91618115be6061146ee3beee8af5154e5e84723b8628bbc66805c7e092430c507246355f248cf8424284a6d1f714e60bd5105c5ad2b5d97fcfd289362ae4fee672a9bf762f5b3c351ac5ca96ea0849584e558548659a088f8caf28a692acf5d98fc6da0b4108b1ea888370b9318feb01291ac79a9bebe9098e89cf7155beadfbe6789c33dc06a4cb6daa94a2aa035e01143129c73fb6c314ec355dc6d223e3d8f25bb2fee65e6cb7f4ca1e1e0485beb247d345d40002759da8cb774251251298552fcc435530dd560377891f22985d244121bacdef48c6b36f25915b155180e3b98f2f56ab18fa497cbd288cde8ee9c85227a707591a97e575a4a3e1df010384ed1ead8c416fb81f2b31f154cf757fb36b9bb68c97d45943e9b67241aa8a830a1a91b41234970dd2c3c29a3884a66a9da3a161c22fea1ef8a742b34cc6c06cfb00493c8a2b74079e3d95ad97cf5d45dc28b75d98e834d9ccb9cd4ffcbc729078cfba79ba9b650ee70c01a074143805da1aa2c71ba65ff58160563a47321effa70434a4259b70212c649edf88110a2794b645f554a1d3d624d1b0cf535c2101c911acfbaebeb0382c5fe6e14b6234937154a2417e8ceb3df34198f8f4ecf55ba3ae426258d4109f8f28eb13cbd19a635e3cd3405cd6695e79e84ba2090113643c902af6c99366eab8424ef1fb1204b8d0757f2fdcdcf21e492df7e992605307e1e4e6ed63a8577baa1d559d312d117867cbcd9682374f15316c0ba689fd1fd954b5b1a0e702c21667bb5fcfb07ac4fe98027c73bfb51bee60c5049c2acb1f723821140c479728381bb4d68e8b1b28eb9c08fff20033f5824366af5552cb3cb9149699d86946d00befbb8d97ba7c4d691ee2a9ebeabab930aaeab3d7f7243f2bbac4d59f5f42cc6793376b19cb9340aacf3cbc99e8bdb62e1fae2889473abf12ffa8c8fe457a6806c1976a6b09f4d128fafb4160a6f7989cb0409934ec4e5ca72f2fd78d3ff34c496bbec23ec56612535e95c52fb617098027761b72ae991bc1bb35591b7c9691e7fcfda6c5a0304d20738ad72af2ee337c060075d0e245674bff389b5b082b9733f402e287839f9b47f1c162a3ac9a94eb765d06d38d5c58def4574a7d19fadb7c1957c5e26e18318339b87474efe67bb319660272e84de52e1d3a53c2cd9bf0d1c979b751c2133912d3ba7d311747ee67367910dcd880f31409dc9a31eb861dcfb616fa71a9493104b681bff4826d7db1cfb627b4c6d0ea1e6a2c293444f5f533f95a6e62981bc7aa09086d4b358ceffb5cf31ac4774f180c7dbb282e9daa6db9ca5cca3ca4ff678b02ca23c27376dda2b7629d49dd83210ec9f7efe10df023122b4d510a2c64af6ddf5aa994e84499ac2155657ab86d1dc4c7b8aa7957b48e52359b0a8b195eac2e76e42f758e42b39feee8645c0910ee5e94716ac40c4e49a2b80f9e928792fb1e96557d2a1562e725bfcaba59baea89a31e3cbea61eb5f21c45f78474da897475e0b92163fad5de2ce76b16478fa814b0d63ff296af94a6bdc7ab13e25db2dca7edb6a21ac966c41804dc93458800789c625ad91c47c9f76c5cc8b04f5f6c661bd2129841643775f48968c4be6ed65d37ee1ce85328440ac759a6ffae4e535a581e25ddd53464e48ef2e277d3b5497d022cb69bc687e48ff472bbc1baaccb8e427dc28b60677da5f81af302e450cf380e1a8bb84fdb7fb889a2db95ffd3efce546cab3e912f7e3207096332ff1cb5fb2ce554a977c14001426a588596b67c0e2889ccd9358f0245f06172b7f22d968b85bcb8b08a9e4b8bbe0c8331fb776b04507ec4fbcc6966b0fbc620ee58ace20737cc4acdec32f0c2b8699775f138e7a741f0fe980f2c2262a8a81faec296218d76ab106b5a2342dfe659ce7dd5e065e5aeb9076efcd5c8d47bfccefb351673b81c7038995c02852679301f3d20d53764f6e4467bf12ad5f1b02cfc221284326ce964306a3c6615f229370d1b38e1910899121b152b41b5c2afb53ec729a326e875faf72f71e7baec814a23d77554e2f6ed7e3b0884291b20cb72b1d6764ec3e39cb5c0983c0fea123ce4cbc0f4b8058e6b068398b21171da2dced6adb0633d6d84de582b6e99c336cb010e2544b523df2864fc04c686b094f4bb78b560c4c020273d8b11599ee122b8bc4d4010bf683b42d479c6275c687166a985f119d1fabd6a3374ae539ff6957dcd929b602cab7f5f14f5706fb5a44b583df2ab4d7ef0659faa861b0bbd7ffc2e91ee92911c802318ccad6269a17279c37ee0f05139eff5f734c5c9ae309f1764d65ed61a82e27a5bb6eee0ee0de99befa7e6da1944f2992504c3dc623accee8bdcaea852ddec2ef091eb8b9e95251fecea2502f74d711f841ed866b24f3a73dc7a41aff845128f7854341d8c8b66c55734d0c0181b36e450e0f17ec1eb2467ad658cccc1b7b17c743de43d06337bc0481b5f9f70aa72654bfe434d1df2c8bd5e2328a47fc953cc809b8ea479d09226dd462a1da0028b07b08c0b307dff664563f83e93c81e9391d1ffcb2be4b2c554d79eb66c37d57bbe8ab7f5e63a5699ad6fc2dc19028b9c7cdadfb38a9b64cd98e7eed5b4defbc7f67c888872495a22f5b19f7fbc28d9a124dd28db410c168d9f5140cd5b61b34127b1288dd00df213fa5b5f3fee052e4294ffa453cffa2e79f97ac6feffbb48f9680adceae39252816416f3c5ea1a5f81c2855abbb887b73abe7227d6716ee192031b81e65d776ddbed637484d1b937a66d5fba35b89a915375264d67d464def349959724d6f97357f5994dc3bfa41bcdf461f2dbc07094f4de8bae54441a510b265f2894554dea3e865bb5921dbbcc08dbc7f80bdee1a6c44b93be5f73915cd0d7343fbda1398d153488606f7ccebc2aa810c1f8826a98c72faefe1ec43b5bc6f9375bf7f0299f92b8dc644dc1bbe3c17068a64e2037bfa37b40db20bf4513ac860a8f9c159a8d06e7d3b545749817c7109a1cd05e4b7b91f9d2d02bbe5a2b525307ecd63356189a68af50eeba6e3281144285274b7fdb14785624bdcc06bfb0fa7b846e11e1f3997eb362256e6e6069a3cb0f3d41bd5bdcdbd85ed043cf9e6b000b083fadb3de5e914e7265892cb9eb3501aad5eac09c769da86ca8ca49892ee9b1f80ae86e6266b405acfda8355fd25a907cc2432ab36a4ace8e5bfb2d58ad695c95b3117cc63767e532fb44c2f2b0a584089459b6892af81bc553b13ec1a0d9431d2340b95c7f56e76b27f137da65b5479da5da78626a9f9eb915c754034bae1ab42430b174033abde33c74609e6d02a508590d27b3acb4707eacc1c7975aa61d09d26ca94ec3e866cc98b7c9bf3076be6cb26be5b695ec99812d0e25f41e07acfad8ecf209eb5453985bfda43eb7b220ea2bbe663082bd0a7d1cc91c4f0832a76f260db5244dfe70e2947966e4e58e3de201f319e1aa7daa379bd3db1edd377bae72c12a2a2fcbbff7301a07ce9f5cf3f8ac3e410c382aec9b96761148251a6ede05f1bfb88ec57817441a174c498467b8fbdb77b0423fb256c6f8bcad951dda993986dec0ab2c0256d4e8fd28995c889420f6555927bf75c4d7cf64971c4c7d1fb9fd6bd4ca85e02d5b2016bd4f677cf17db7e8531c4b6c65f2a3cae24018bd0043decd169f80d742d575e12ef5cb948e61539124cacd53b6994e13c53a0e3b90e9f3f35c03a86ebb7d9409d6ac9f8e685ca1bc4b6a8d07e4d0767d1e279f0b7aee50c498d6a0054ba1f338f8650ed0e318413a89801d96d9a446d35bf02a4dde8fe11c1b63d73061291c7fb4ce72ba9d84f65a89a7fe8993ee33d3a60d4eeb4812050e5c00baa13e7fa5f2a0ceb1f7c53d7da7a16477cc419e65b79bfd3d9f28b74f49f1b8c9804ad444d1de5cb58d70dc9a4c18b2b3197586ebaebe7aaeda86668f1ce39551022151b4b1810ff912bc1b76b6c4897b4aa8c68f48dc99f7b819d7f4b9602852c482917053389f7fdd4a38d17da8ddc26176a9b6a98d09338624410742df6bcdf40720c884b1dbb8f7b7a9bc57cf4c5308efe3d5e8f90ee6b6b7d35038c4fec889bf45c6521aa2da655f3ff5c5b1a003903fd5132c0b54ef21b4deacbe813b4b096df0d6e102d404b25193ea2a36605c7f482bdc521e3e68818123899b348fd3d0872a7a61c73d4476d063e6839182859faf7e626b07a34de88afaf8f5114a6694b3b98883b142bdb4d64649990a095c0b</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-up">      <input class="hbe hbe-input-field hbe-input-field-up" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-up" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-up">Hey, password is required here.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 定期查看 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>5月22日骑行见闻</title>
      <link href="/posts/d23297df/"/>
      <url>/posts/d23297df/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="仅大鸟本人可访问!" data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="fa81c5c47b930361d400dfea241f4804b5007da392f98ba83c8dca2879a5f54a">4a073aef6f17ceb90153b60dc70c7df28c4a95ddb955ee51f4107897434437f36fa92e4bdf2ce5aa53b38d417edf2588d050deb83210797ff1f85227a3c065bfc8c037049bfb9d31a3f42af06d78bd01cfd1fe08c055a0595ebbbaca140bb4928c0081d6bb44137e82a2e7359948aec19fcb3b84d47e8e4a2c0b2814c9945ff42f128f347c6d9720167f666f76d7c83f481f37f761dcfadeac808599ad5de68114bce14a14575696728597c74a9e7326dfcee4aa6b1b4ed7e3489c5cee1072e7ef37acc9e5f6514bbd4e68d5eccfe5c1b38406fedac8a7c28128e27119e9e20de3fb30da3538834a7ce4b475440a235c459bb3136fc3df3acf150c4abac00f906ede9ac2ddd4aad592a9fa43bb87d8c383cdbf085741f029d898b4ab75ee29c11d218cb9b32e2c2e2f199edd1d3fd792660b9da9cc69a9c3a3f7ab7d9c8041224ea901638b0fa82a6f1f74ba85235242f69aa6675e5c3f902040759203893896d04522ebdd0551cdd3f85ddbc40e65b4a55e11e3bbd1e047fc430a35daee01d5db9260fbbd45c74f458f53d6cb8907d2e1be2263d57064961f0446ffa29de963abaca10ff259d8be23fe6afbe036866154c3b205e607a386cbc8994ae6a1ca0161f2c775e6faa9a34067fb35a8e0444334272f9a18674a84466fcf582020209432a04376b7841f65ccedc31e99c5010ce7006ae2cc99535bba86873b767812ed56b4c6aab7b899e6928903c1aefff64524010b965807546daf31f6910f4e8ed5de64358dfa595af57af8bb619edfb08493bdc5941dd565d9c6efe7d8905522955e2e39e1e0dbd80eaa8e229ae80dfb83e97218694596b440ca1793ab0af5b7f556b8711166b5b8cc90b60e4ea48b38647d131dda41f1980e9058f0af9200f2b9cba44cab1f5b74df0cd7b7b981df7ce74f90003c001238f5ba8e8c91499fdf4b0ab09f7a847ad30bc8d8e5bf007d8ef1ef10b15d30d199f5712b7ba978dacd2c6feb9139aa11557cc0160f8f290912fd13e78f3b182e7cbe09a918a4c28537660465cc3ba173f405502fda8b3f6cf9571d49b96e100a1509f8eab11da1a0a95c767c661a94acb87bb32221adff88b7de2bbb0576ad34b7492f397031387d00e1ae565f3c7c6349cc979752ebda93b7778a3926d8e5a21efe2e4449c1cde92a533b14ec5d6d2c245ad8e1a1566da4508ed0c1c6502e2b5af403e34fe4d14ced9d1c79591c4130d071c1f1beec844b84729c91a90f528732887b1b38a1f426020048544ff4ce544ffe2adc88c40fb58ea23d4a0e511bc8362d77ffe71f6914e1773dd74e2b4ec16145b5e679dced186876c90f5533608c08ff4285930f515d3d79761e3e060c8c750bb156b9e086918ab457522281915ba8c7d1db31476bfb38b0754492537527298c8948a55365096c673a60ec2a3673f8484e77ecc686590d529cd493ce4c8d3e61062dffbbab3c59f024f74872caf000639bc0bdf9916fa7c6514b3fb0d719d5798b09ef8c28448d52a4e0b78f49efda1725360a14f3fbfb6b84e517d8a7b98f014f93f002612318c19e2ce62715d9f4130f223b838986618e8c558a01ddbfe91f7e90a5c496b313f5543560105ec72dc02088a2c80a9696d5d1d6f88a966ed40e67c2ef7839b3cf04415674143f6d66784e7c939925e52bcb66ac6eefafa8d6c5a73a8a81925160cf144932185a6359061207de170ede0b663343bf226c11b856f35ee674f67925edf999f9ffda1271da62d6c266d1dca60074d098aa13396dadf3ecceb19537d84dead11c4952670b3b37431df1b31622e705ad22d0282c7b84c4de09f48fb5a595c036dbee8fbce6ee9d0232fc1de55ef9e51661ba0c94f204214ae1197c6de42602a600cf143f4614b04f1d74763d37c2ab108276ab0843d08e654d1eee941c12b865c00978f0bb92a3c28b7130c1893d</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-up">      <input class="hbe hbe-input-field hbe-input-field-up" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-up" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-up">Hey, password is required here.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>分部积分推广公式的注意事项</title>
      <link href="/posts/397ef2f8/"/>
      <url>/posts/397ef2f8/</url>
      
        <content type="html"><![CDATA[<h1 id="要注意u-v的关系-v是好求积分的那个-同时最后一项上下u-v相乘后求积分要注意-1-n-1">要注意u,v的关系，v是好求积分的那个，同时最后一项上下u,v相乘后求积分要注意(-1)^(n+1)</h1><p><strong>抽象函数使用分部积分的时候，是对其积分还是求导看题干</strong><br>张宇基础30-P112</p><img src="/posts/397ef2f8/%E5%88%86%E9%83%A8%E7%A7%AF%E5%88%86%E6%8E%A8%E5%B9%BF.png" class="">]]></content>
      
      
      <categories>
          
          <category> 高等数学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 总结 </tag>
            
            <tag> 算法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>电脑麦克风和闪屏问题修复</title>
      <link href="/posts/3c41fdfb/"/>
      <url>/posts/3c41fdfb/</url>
      
        <content type="html"><![CDATA[<h2 id="问题">问题</h2><p>笔记本电脑使用第二屏幕，在开启麦克风的情况下一直会闪屏，而且似乎开启关闭麦克风热键无效。</p><h2 id="原因">原因</h2><p>与驱动有关，<s>麦克风除了要装声卡驱动外还要装一个DTS Audio驱动才能正常运行</s>，~~且这两个驱动版本要互相配合。~</p><h2 id="下载">下载</h2><p>用win10自带的就行，不一定要到官网下载<br><a href="https://www.asus.com.cn/supportonly/FX80GE/HelpDesk_Download/">官方地址</a><br><img src="https://pic.rmb.bdstatic.com/bjh/076a93279ca36769337b6ed94bc078ee.png" alt="如图.png"><br><img src="https://pic.rmb.bdstatic.com/bjh/aff60321f06866834fa13252227e6eee.png" alt="如图2.png"></p><h2 id="后续">后续</h2><p><s>那么简单的问题，竟然在电脑上发生2年多了，直到现在才解决。做事干脆利落，思路清楚！</s><br><s>还是没解决，估计是设计问题，解决不了了，但是可以确定DTS与麦克风有关。</s></p><h2 id="已解决">已解决</h2><h2 id="我后来把两个驱动都卸载了-win10会自行匹配相应声卡驱动-然后我把两个虚拟的扬声器和麦克风都禁用了现在好了-那个dts可以不装-我后来卸了也没发现问题-声卡驱动下载下载后复制到d-360downloads-360驱动大师目录-驱动备份目录用360驱动大师还原即可如图禁用-png">我后来把两个驱动都卸载了，win10会自行匹配相应声卡驱动，然后我把两个虚拟的扬声器和麦克风都禁用了现在好了。那个DTS可以不装，我后来卸了也没发现问题。<br><a href="https://e5-oneindex.vercel.app/zh-CN/PC%E8%BD%AF%E4%BB%B6/%E5%A3%B0%E5%8D%A1%E9%A9%B1%E5%8A%A8%E5%A4%87%E4%BB%BD/">声卡驱动下载</a><br>下载后复制到<code>D:\360Downloads\360驱动大师目录\驱动备份目录</code>用360驱动大师还原即可<br><img src="https://pic.rmb.bdstatic.com/bjh/5311f01ad9876f7dd3944b0d2d0f83cf.png" alt="如图禁用.png"></h2><p>还是会有闪屏，但是比原来的情况好了，用系统自带的录音机好像问题少点。</p><h3 id="顺便备份一下markdown语法">顺便备份一下markdown语法</h3><h2 id="https-markdown-com-cn-basic-syntax">https://markdown.com.cn/basic-syntax/</h2><p><a href="https://blog.csdn.net/qq_40896997/article/details/106551767">markdown表情大全</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> 沉没成本 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>matlab神经网络示例</title>
      <link href="/posts/67197f8c/"/>
      <url>/posts/67197f8c/</url>
      
        <content type="html"><![CDATA[<h2 id="神经网络">神经网络</h2><p>神经网络可用于预测数据，通过已知的输入/输出【输出为要预测的数据类型】，分别把输入/输出转换为矩阵P,T<br>运用BP 三层通用模型，适当选择激励函数和隐层神经元的激励函数。遇到数据的值，范围相差太大，比如两个数量级以上，那就要归一化。<br>例如：<br>BP 神经网络通常采用 Sigmoid 可微函数和线性函数作为网络的激励函数。<br>本实例选择 S 型正切函数 tansig 作为隐层神经元的激励函数。而由于网络的输出<br>归一到[ -1, 1]范围内, 因此预测模型选取 S 型对数函数 logsig 作为输出层神经元<br>的激励函数。<br>程序示例：</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">P=[<span class="number">3.2</span> <span class="number">3.2</span> <span class="number">3</span> <span class="number">3.2</span> <span class="number">3.2</span> <span class="number">3.4</span> <span class="number">3.2</span> <span class="number">3</span> <span class="number">3.2</span> <span class="number">3.2</span> <span class="number">3.2</span> <span class="number">3.9</span> <span class="number">3.1</span> <span class="number">3.2</span>;</span><br><span class="line"><span class="number">9.6</span> <span class="number">10.3</span> <span class="number">9</span> <span class="number">10.3</span> <span class="number">10.1</span> <span class="number">10</span> <span class="number">9.6</span> <span class="number">9</span> <span class="number">9.6</span> <span class="number">9.2</span> <span class="number">9.5</span> <span class="number">9</span> <span class="number">9.5</span> <span class="number">9.7</span>;</span><br><span class="line"><span class="number">3.45</span> <span class="number">3.75</span> <span class="number">3.5</span> <span class="number">3.65</span> <span class="number">3.5</span> <span class="number">3.4</span> <span class="number">3.55</span> <span class="number">3.5</span> <span class="number">3.55</span> <span class="number">3.5</span> <span class="number">3.4</span> <span class="number">3.1</span> <span class="number">3.6</span> <span class="number">3.45</span>;</span><br><span class="line"><span class="number">2.15</span> <span class="number">2.2</span> <span class="number">2.2</span> <span class="number">2.2</span> <span class="number">2</span> <span class="number">2.15</span> <span class="number">2.14</span> <span class="number">2.1</span> <span class="number">2.1</span> <span class="number">2.1</span> <span class="number">2.15</span> <span class="number">2</span> <span class="number">2.1</span> <span class="number">2.15</span>;</span><br><span class="line"><span class="number">140</span> <span class="number">120</span> <span class="number">140</span> <span class="number">150</span> <span class="number">80</span> <span class="number">130</span> <span class="number">130</span> <span class="number">100</span> <span class="number">130</span> <span class="number">140</span> <span class="number">115</span> <span class="number">80</span> <span class="number">90</span> <span class="number">130</span>;</span><br><span class="line"><span class="number">2.8</span> <span class="number">3.4</span> <span class="number">3.5</span> <span class="number">2.8</span> <span class="number">1.5</span> <span class="number">3.2</span> <span class="number">3.5</span> <span class="number">1.8</span> <span class="number">3.5</span> <span class="number">2.5</span> <span class="number">2.8</span> <span class="number">2.2</span> <span class="number">2.7</span> <span class="number">4.6</span>;</span><br><span class="line"><span class="number">11</span> <span class="number">10.9</span> <span class="number">11.4</span> <span class="number">10.8</span> <span class="number">11.3</span> <span class="number">11.5</span> <span class="number">11.8</span> <span class="number">11.3</span> <span class="number">11.8</span> <span class="number">11</span> <span class="number">11.9</span> <span class="number">13</span> <span class="number">11.1</span> <span class="number">10.85</span>;</span><br><span class="line"><span class="number">50</span> <span class="number">70</span> <span class="number">50</span> <span class="number">80</span> <span class="number">50</span> <span class="number">60</span> <span class="number">65</span> <span class="number">40</span> <span class="number">65</span> <span class="number">50</span> <span class="number">50</span> <span class="number">50</span> <span class="number">70</span> <span class="number">70</span>]; <span class="comment">%输入矩阵</span></span><br><span class="line">T=[<span class="number">2.24</span> <span class="number">2.33</span> <span class="number">2.24</span> <span class="number">2.32</span> <span class="number">2.2</span> <span class="number">2.27</span> <span class="number">2.2</span> <span class="number">2.26</span> <span class="number">2.2</span> <span class="number">2.24</span> <span class="number">2.24</span> <span class="number">2.2</span> <span class="number">2.2</span> <span class="number">2.35</span>]; <span class="comment">%输出矩阵</span></span><br><span class="line">[p1,minp,maxp,t1,mint,maxt ]=premnmx(P,T);  <span class="comment">%对P,T进行归一化生成新的矩阵p1,t1</span></span><br><span class="line">net1=newff(p1,t1,<span class="number">8</span>,&#123;<span class="string">&#x27;tansig&#x27;</span>,<span class="string">&#x27;tansig&#x27;</span>,<span class="string">&#x27;purlin&#x27;</span>&#125;,<span class="string">&#x27;trainlm&#x27;</span>);  <span class="comment">%设置神经网络，命名为net1,8为输入神经元数量，新版本好像不能定义隐层数量了</span></span><br><span class="line">net1.trainParam.epochs=<span class="number">5000</span>; <span class="comment">%最大训练次数</span></span><br><span class="line">net1.trainParam.goal=<span class="number">0.0000001</span>; <span class="comment">%目标误差</span></span><br><span class="line">net1.trainParam.lr=<span class="number">0.01</span>; <span class="comment">%学习速率 lr 为 0. 01</span></span><br><span class="line">[net1,tr]=train(net1,p1,t1);   <span class="comment">%对归一化后的值进行训练</span></span><br><span class="line">a=[<span class="number">3.0</span>;<span class="number">9.3</span>;<span class="number">3.3</span>;<span class="number">2.05</span>;<span class="number">100</span>;<span class="number">2.8</span>;<span class="number">11.2</span>;<span class="number">50</span>];  <span class="comment">%要预测数据的相关数据</span></span><br><span class="line">[a,PS] = mapminmax(a);  <span class="comment">%归一化</span></span><br><span class="line">b=sim(net1,a);  <span class="comment">%放入训练好的神经网络</span></span><br><span class="line">c=postmnmx(b,mint,maxt); <span class="comment">%反归一化并输出结果为c</span></span><br><span class="line">Z= sim (net,a);  <span class="comment">%将a放入训练好的模糊工具箱对应的神经网络net得到可信值Z</span></span><br></pre></td></tr></table></figure><h2 id="注意">注意</h2><p>旧版本归一化函数为<br>[p1,minp,maxp,t1,mint,maxt ]=premnmx(P,T);<br>新版本为<br>[Y,PS] = mapminmax(X)<br>用旧版的也行如果用新版最后一句<code>c=postmnmx(b,mint,maxt);</code> 会报错。<br>不使用模糊工具箱可去掉最后一句。<br><code>Y</code>是归一化得到的数据，<code>PS</code>是一种描述数据的结构。它们的计算方式是<code>y = (ymax-ymin)*(x-xmin)/(xmax-xmin) + ymin</code>;<br>默认归一化到-1到1，也可以自己设置，如：若想将规范范围划为(0,1)，可编写Y=mapminmax(A,0,1);<br>net1.trainParam.epochs设置的数值为最大训练次数，若达到目标误差net1.trainParam.goal则会停止训练。<br>归一化默认是对行归一，如果每行元素只有一个的话，那就是他本身了，比如这里的a数据a=[3.0;9.3;3.3;2.05;100;2.8;11.2;50]; 用<code>;</code>隔开就是一个列矩阵，若用<code>，</code>隔开就是行矩阵，这里用列矩阵是因为每行代表的元素含义不同。</p><h3 id="图片示例">图片示例</h3><p><img src="https://pic.rmb.bdstatic.com/bjh/64738fded2e02cef65c50389a23f7dbb.png" alt="数值.png"><br><img src="https://pic.rmb.bdstatic.com/bjh/322c6e9ffe9d5944a3f264cbf39b78ba.png" alt="神经网络现象.png"></p><h2 id="方法二：使用模糊工具箱也是可以的">方法二：使用模糊工具箱也是可以的</h2><p>见大鸟云人工智能目录下</p><h3 id="没技术含量不过是用软件罢了">没技术含量不过是用软件罢了</h3><hr>]]></content>
      
      
      <categories>
          
          <category> 人工智能 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> matlab </tag>
            
            <tag> 神经网络 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>浏览器F12小技巧及谷歌相机8.4</title>
      <link href="/posts/65c85bd0/"/>
      <url>/posts/65c85bd0/</url>
      
        <content type="html"><![CDATA[<h1 id="技巧">技巧</h1><p>可以在查看器那里用鼠标选中指定区域在右侧可以查看关联的.css精确位置</p><p><img src="https://e5-oneindex.vercel.app/api/raw/?path=/picbed/post/22-04-24/1.png" alt="如图"><br>基于此我爬到了边缘动画改成蓝色的代码哈哈哈加在diyziti.css里了<br><img src="https://e5-oneindex.vercel.app/api/raw/?path=/picbed/post/22-04-24/2.png" alt="如图"><br><img src="https://e5-oneindex.vercel.app/api/raw/?path=/picbed/post/22-04-24/3.png" alt="如图"><br>试了下失败不折腾了</p><h2 id="hexo莫名其妙本地搜索展不开了">hexo莫名其妙本地搜索展不开了</h2><p>吓死我，以为哪里代码又出问题了，结果我把搜索改成false然后再重新启用又好了，估计是缓存的问题。</p><h2 id="谷歌相机8-4">谷歌相机8.4</h2><p>谷歌相机8.4是真的好用啊，红米note5又焕发青春哈哈<br><a href="https://www.celsoazevedo.com/files/android/google-camera/dev-hasli/f/dl8/">GCAMHUB</a></p><h3 id="使用法">使用法</h3><p>lib8.4.300_Arcide_2022-04-15.zip<br>https://wwi.lanzoup.com/iMkHc03q1ylg</p><p>lib8.4.300_Arcide_2022-04-15_defaultmerge.zip<br>https://wwi.lanzoup.com/iAU9x03q20uh</p><p>zip 解压缩<br>3.Intruction:<br>-Save XML under the directory of sdcard\LMC8.4<br>-Save lib under the directory of sdcard\LMC8.1\libs<br><a href="https://e5-oneindex.vercel.app/zh-CN/%E5%AE%89%E5%8D%93%E7%9B%B8%E5%85%B3/%E7%BA%A2%E7%B1%B3note5%E8%BD%AF%E4%BB%B6/%E8%B0%B7%E6%AD%8C%E7%9B%B8%E6%9C%BA8.4%E6%8E%A8%E8%8D%90">本站源</a></p><h2 id="题外话">题外话</h2><p>给手表添加音乐一定要把.mp3/.aac放在 /sdcard/Music/ 目录下</p>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
          <category> 记录 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 小技巧 </tag>
            
            <tag> 谷歌相机 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>win10禁用更新/激活方法及hexotags与categories用法</title>
      <link href="/posts/58fc2632/"/>
      <url>/posts/58fc2632/</url>
      
        <content type="html"><![CDATA[<h1 id="起因">起因</h1><p>ltsc原本一直不会更新的昨天莫名其妙更新了</p><h2 id="更新禁用方法">更新禁用方法</h2><p><a href="https://e5-oneindex.vercel.app/zh-CN/PC%E8%BD%AF%E4%BB%B6/win10ltsc%E7%9B%B8%E5%85%B3/win10%E7%A6%81%E7%94%A8%E6%9B%B4%E6%96%B0%E6%96%B9%E6%B3%95.mp4">查看视频</a><br>策略组里windows组件那里有个win10更新，把右侧的能禁用的也全部禁用<br>如果涉及激活请恢复这些组件<br>win+r 打开注册表<code>regedit</code><br>找到路径<code>计算机\HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\WaaSMedicSvc</code>如视频中所说<br>start数值改成4，详情见视频，有时候系统缺少驱动此项会强制恢复但是，FailureActions的数值还是不会变的。</p><h2 id="ltsc永久激活">ltsc永久激活</h2><p><a href="https://www.lifeng.in/13003.html">这篇可用</a><br>文中可用激活码</p><figure class="highlight gcode"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">43</span>TBQ-<span class="symbol">NH92</span>J-XKT<span class="name">M7</span>-KT<span class="number">3</span>KK-P<span class="number">39</span>PB</span><br></pre></td></tr></table></figure><p>请使用上篇文章中的第二个工具@angelkyo 大佬曾经分享的C#应用程序版【我已经备份到多个网盘】<br><a href="https://hgeyun.vercel.app/zh-CN/%E7%B3%BB%E7%BB%9F/W10_Digital_License_C__v3.7">本站下载-</a></p><h1 id="hexo博客中tags与categories用法">hexo博客中tags与categories用法</h1><p>这个我经常忘记备份下【转载】<br>ags与categories</p><p>在hexo中使用tags与categories往往需要使用多标签和多分类,这里记录一下它们的用法。<br>tag</p><p>用法：</p><p>tags:</p><ul><li>123</li><li>456<br>tags: [123, 456]</li></ul><p>多标签写法，这2种都是一样的效果，用哪个都可以，建议使用列表[]式，直观清晰。<br>categories</p><h3 id="这是默认的写法-给文章添加一个分类">这是默认的写法，给文章添加一个分类。</h3><p>categories: 123</p><h3 id="这会将文章分类123-456子分类目录下">这会将文章分类123/456子分类目录下。</h3><p>categories: [123, 456]<br>这会将文章分类到123/456子分类目录下。<br>categories:</p><ul><li>123</li><li>456<br>多标签写法，文章被分类到123、456以及123的自分类789这3个分类下面，官方指定写法。【似乎对于butterfly没用】<br>categories:</li><li>[123]</li><li>[456]</li><li>[123, 789]</li></ul>]]></content>
      
      
      <categories>
          
          <category> 记录 </category>
          
          <category> win10禁用更新 </category>
          
          <category> hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> win10ltsc </tag>
            
            <tag> 用法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>redis数据库注意事项</title>
      <link href="/posts/c4345f6c/"/>
      <url>/posts/c4345f6c/</url>
      
        <content type="html"><![CDATA[<h1 id="注意格式">注意格式</h1><p>Default user password(或者Key)@Public endpoint<br>不能直接用Public endpoint，直接用会被404或者504拒绝访问！</p><h2 id="推荐两个免费库">推荐两个免费库</h2><p><a href="https://console.upstash.com/">upstash</a><br><a href="https://redis.com/">redis</a></p><h3 id="顺便推荐一个图库">顺便推荐一个图库</h3><p><a href="https://z4a.net/">z4国内访问还比较流畅</a></p><h3 id="即时总结整理真的太重要-不然好多事做了回过头来看-和没做差不多-哈哈">即时总结整理真的太重要！不然好多事做了回过头来看，和没做差不多，哈哈</h3>]]></content>
      
      
      <categories>
          
          <category> 数据库 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 踩坑记录 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>4月2日记录</title>
      <link href="/posts/8ae33109/"/>
      <url>/posts/8ae33109/</url>
      
        <content type="html"><![CDATA[<h1 id="干就完了">干就完了</h1><p>目前准备考研是优先级仅次于吃饭，睡觉，健身的事情。用红米note5少看了手机效率反而有所提高（但是还不够），最近在B站直播背单词，因为自己背单词总是走神忍不住看别的，直播背单词效率高多了。<br>其实高数前面张宇的课虽然听了，但是那时候没买书效率不高，预计要重听一遍，英语也要引起重视（多学些技巧提高总体思想维度）<br>客观的讲，目前总体实力较弱，与预期有很大差距，还需要进一步努力，巩固，基础阶段还是要提高时间利用质量！<br>学校也开始准备考研专座了，我也要认真起来啦~<br><strong>干就完了兄弟们！</strong></p><h2 id="要健康生活改变不良习惯了">要健康生活改变不良习惯了！</h2><p>最近在麦当劳会员日(其实不优惠但忍不住买和要饭的一样操了)，这种油炸垃圾食品吃太多，长了好多痘痘，而且腹部长了好大一个必须戒除一切不良习惯。<br>现在是22年4/25，本大鸟又回来了。最近麦当劳扣的一批，不过就算和之前一样我也不屑于去吃这种工业流水线食品。目前已经快一个月没吃了，健康不少，继续加油，大鸟必胜！！！</p><h2 id="关于英语">关于英语</h2><p>最近单词背的太慢而且效率不高我觉得很离谱，难道是单词app不适合我？这样下去不行。<br>4-19发现了不背单词可以斩掉单词，还能恢复挺好的，加上词根词缀现在效率变高了，哈哈</p>]]></content>
      
      
      <categories>
          
          <category> 日记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 总结 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>不定积分证明题总结</title>
      <link href="/posts/6038564/"/>
      <url>/posts/6038564/</url>
      
        <content type="html"><![CDATA[<h1 id="背景">背景</h1><svg class="icon" style="width:1em; height:1em" aria-hidden="true"><use xlink:href="#icon-rat_zi"></use></svg><svg class="icon" style="width:2em; height:2em" aria-hidden="true"><use xlink:href="#icon-rat"></use></svg>不定积分证明题常常出让你证明一个等式  <p>首先可以把变量换成x方便看<br>然后，<strong>构造函数，或者用零点定理，特别要注意和0，1有关的量，这些往往是构造的关键</strong>；<br>一些基本的 罗尔定理，中值定理，拉格朗日等都必须要掌握<br>判断零点的个数用单调性！<br>还有一些<strong>积分的绝对值&lt;=绝对值的积分</strong>这样的常见不等式要会用<br><strong>开区间成立的，闭区间一定成立</strong>；因为闭区间元素多，元素越多约束越少。<br>积分的基本加减运算更要会<br>最重要的还是灵活变通，多做题。</p><h1 id="证明不等式">证明不等式</h1><ul><li>掌握中学基本不等式常见方法</li><li>“一阶可导”经常用拉格朗日中值定理</li><li>“二阶及以上可导”经常用泰勒公式</li><li>证明＞比证明大于等于更严格</li><li>抽象函数使用分部积分的时候，是对其积分还是求导看题干</li></ul><h2 id="不定积分的几何应用">不定积分的几何应用</h2><p>绕y轴旋转的可以使用柱壳法。</p>]]></content>
      
      
      <categories>
          
          <category> 高等数学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 总结 </tag>
            
            <tag> 算法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>3月22下午</title>
      <link href="/posts/7cb1b510/"/>
      <url>/posts/7cb1b510/</url>
      
        <content type="html"><![CDATA[<h1 id="时间浪费太多-苟八事情少干">时间浪费太多 苟八事情少干</h1><p>昨天的实验报告花了我挺长时间醉了，没必要<br>ONeindex他妈的改了环境改成了pnpm部署又花了我半天，真是没必要~<br>不说了干正事了！<br>今天下午本来想薅一下羊毛，结果羊没见着还浪费时间，属于是贪小便宜反而丢了西瓜。。<br>外婆做的青团真好吃，时间过的好快！  要珍惜当下了 手机使用时间还在每天2小时左右吧</p>]]></content>
      
      
      <categories>
          
          <category> 日记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 总结 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>人工智能模糊算法</title>
      <link href="/posts/e5fc0b69/"/>
      <url>/posts/e5fc0b69/</url>
      
        <content type="html"><![CDATA[<h2 id="模糊算法">模糊算法</h2><p>先要知道模糊集合，模糊集合表示变量与对应关系的隶属度(密切度)<br>已知一个输入的模糊集合和一个输出的模糊集合可以确定模糊关系R,R=A^T<em>B （列向量 * 行向量）<br>求得R的矩阵后，运用新的已知输入量</em>R求出新的输出量集合<br>求得集合后便可得到隶属度关系，通过多种模糊决策，确定输出量的具体数值。<br>模糊决策有最大隶属度法，加权平均法等等。</p><h3 id="报告示例">报告示例</h3><p><a href="https://hgeyun.vercel.app/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD/%E5%AE%9E%E9%AA%8C%E6%8A%A5%E5%91%8A/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E6%A8%A1%E7%B3%8A_%E7%94%B5%E6%B0%94191_19401170108_%E4%BD%95%E4%BD%B3%E6%A5%A0.docx">点击查看</a></p><h4 id="程序">程序</h4><p>当时忘带U盘了嘿嘿。</p>]]></content>
      
      
      <categories>
          
          <category> 人工智能 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 算法 </tag>
            
            <tag> 模糊推理 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>二月初二中</title>
      <link href="/posts/34fe3c9f/"/>
      <url>/posts/34fe3c9f/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="仅大鸟本人可访问!" data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="5d4b5a09a8883ac73e03a839f56f0082cd3c364a7933f71c157c5de8682d4a9d">4a073aef6f17ceb90153b60dc70c7df28c4a95ddb955ee51f4107897434437f36f642bc6dc606922e2c795aa2d7e795b15b9d8d8717f68a8992bff8c4a1696c78f820169cad23632c16d759b31e0b8bce09ac879f7e169d94369f45b5017c297c3f271ae44f601e4c096513b1def762c22ad5d72a0c8ef3edaa37de3559e8d42220f84d6cbe7aca4cbac56f04727fe0b25c0a76209f43ada8d9fc2346dd598a3b0f260e095f59c75c3bedca20d053b49c90d3231df150a9bace5e3d1782b0b7d67253b6db1b1bfefefdcaab2892041565821cf990e18b15eddb4349e407b95c9e54bfb515fd780925a820d19abfb871aac4082edc7a79b149aea164816cf38f07403f76af845f58ae0db725c70cb181872a1f56f6bc58573c32d3df1db551f426f2bf9c6f8e85337b4a6c498f8a41d85a4fa7ec55d3243fc998f32c9d7eccb96d8070195cc772227166a0a19bee05d6e665209b2e08219f82d1af400a97f64ceb7854ffe3fe6470c83ab7c482dbff07af892f73b0a5cc8182c037018ca98113b304624f1f2ac89cce19b9e99288fbd47a3f7b0d6bb4e1e7a54283861e6779d48250ad22f8a7ef47c41d8a00e0ba9c8c07926685df01861414a7c6fa4acb74d3f347c6588447a1dd97755d79187d63bd697f9d7a47b0ff5ce89a7079969ab7f4f0c6d9f5537900d254682797e85d9a2197544158ac8f32296eae61cbe58a6a8d03eee5427802992568b32ce3a50bc21ecd9187b6c2036eba07e15501988a85efb87aa3ca511ad58eba0ea166937608b21b7a4ed1e47666e5442eefb59b45d0741669534749232535e2ddd8b27a5c86595f1731c4a0132071d9b2ce73dee3bef171156b5d87bd737fa16155181101e98c1aeeb692262f8d18a0f18ef9729ca0a96ec847a450c43fac904fe6d18b2291cabdb9005865d36fe75d4ef7ef09029552e440585bb90ee9c4be943cc1a7e21a00250891a8a1e36cec2a7b17614823b96db6b71eaafcf3df799814bfa3f04219976206b53f0eb94331404225e0885542ce13f080073cdb3ce8fb95b7c55732b4d0e995feb4c9de26932aeb0ca297dc29bdac273bb6f2f85eb46b159f2bd4ac6c0847151fed36e6d1d0b140c0ae8ebb44f5d11033f326bdcb0396535130973faf91b80a7437a01b43c5738d218494b1a28e6</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-up">      <input class="hbe hbe-input-field hbe-input-field-up" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-up" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-up">Hey, password is required here.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 日记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 总结 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>3/3最近生活总结</title>
      <link href="/posts/6448901f/"/>
      <url>/posts/6448901f/</url>
      
        <content type="html"><![CDATA[<h2 id="最近">最近</h2><p><em>没有继续学习C++</em><br>准备考研了，本身留给考研的时间也不多就不继续学习C<ins>了；<br>其实高数比编程更考验逻辑。<br>但是没有坚持下去也有一些遗憾，我还是认为C</ins>是一门值得学习的语言，但是仅仅是掌握语法远远不够的，我始终认为只到入门级别编程不如不学。<br>其实当时选择电气专业就是为了不想编程哈哈~</p><h2 id="目标">目标</h2><p>睡觉吃饭还是在第一位，有空多锻炼吧<br>针对考研的时间不用花太多，但是最近时间利用率不充分！</p>]]></content>
      
      
      <categories>
          
          <category> 日记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 总结 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>重积分总结</title>
      <link href="/posts/7253c256/"/>
      <url>/posts/7253c256/</url>
      
        <content type="html"><![CDATA[<h1 id="常见题目包括但不局限于">常见题目包括但不局限于</h1><ol><li>极限背景下</li></ol><ul><li>极限转换为重积分方法要知道</li></ul><ol start="2"><li>改变积分次序</li></ol><ul><li>画区域图</li><li>必要时可改变图的形状</li></ul><ol start="3"><li>max{}形式</li></ol><ul><li>画出关键函数关系如max{xy，1}，画y=1/x</li></ul><ol start="4"><li>先定限(范围，投影)后积分</li></ol><ul><li>定的限后积分</li></ul><ol start="5"><li>极坐标法</li></ol><ul><li>x=rcos y=rsin <strong>r一定要的(我经常漏掉)</strong> 然后会在积分里确定一个r的范围</li><li>放射变换，坐标变换结合</li></ul><ol start="6"><li>轮换对称法</li></ol><ul><li>如果交换x,y坐标积分区域不变可用轮换对称法</li><li>要灵活用</li><li>同类相加再除更好算</li></ul><ol start="7"><li>二重积分中值定理</li></ol><h2 id="三重积分">三重积分</h2><ol><li>要有空间和投影概念</li></ol><h3 id="先一后二">先一后二</h3><p>切土豆丝，确定上下曲面z(x,y)的表达式，投影区域求和</p><h3 id="先二后一">先二后一</h3><p>切土豆片 截面通常为把Z看成常数，x,y为变量的圆类</p><h3 id="柱坐标法">柱坐标法</h3><p>和极坐标法类似。z不变，灵活运用即可</p><h3 id="球坐标法">球坐标法</h3><p>此方法有三重积分特色，可用来求进阶题目，如求极限</p><h2 id="注意">注意</h2><p>换元法后上下限也要变，对于不能直接点火公式的可变范围用。根据物理意义二重积分上限大于下限。<br>坐标对称性求积分<br>质点公式等。</p><h1 id="灵活用">灵活用！！！</h1>]]></content>
      
      
      <categories>
          
          <category> 高等数学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 总结 </tag>
            
            <tag> 算法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>小米11p刷机记录及VA/B分区ROOT</title>
      <link href="/posts/969f581f/"/>
      <url>/posts/969f581f/</url>
      
        <content type="html"><![CDATA[<h1 id="前言">前言</h1><p>最近从垃圾MIUI13降级到了12.5.4，为保证手机稳定运行我将此次刷机记录在这里（<strong>刷机十分浪费时间，如果没有重大BUG不要刷！！！</strong>）</p><h1 id="避坑">避坑</h1><p>ifw禁用analytics全部组件会引起无限软重启！但是整体PM禁用却没事，后台也不运行<br><img src="https://pic.rmb.bdstatic.com/bjh/6b11b5ad546c43bc23cacc9ba164edaf.png" alt="图片.png"></p><ul><li>使用blocker进行ifw禁用不要导出规则，有自动禁用所有mipush的BUG。</li><li>备份规则直接复制data/system/ifw即可。</li><li>不要对系统软件ifw禁用某些组件可能会引起软重启</li></ul><h2 id="软重启解决">软重启解决</h2><p>遇到软重启，可以安全模式卸载对应用户软件<br>我也魔改了自动救砖模块，使其能对ifw造成的软重启进行恢复。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">Disable_All_Modules() &#123;</span><br><span class="line">    ls &quot;/data/adb/modules&quot; | while read i; do</span><br><span class="line">        [[ &quot;$i&quot; = &quot;$MODID&quot; ]] &amp;&amp; continue</span><br><span class="line">        touch &quot;/data/adb/modules/$i/disable&quot; &amp;&gt;/dev/null</span><br><span class="line">    done</span><br><span class="line">    reboot    #注意</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Statistics() &#123;</span><br><span class="line">    if [[ ! -f $LOG ]]; then</span><br><span class="line">        echo &quot;1&quot; &gt;$LOG</span><br><span class="line">    else</span><br><span class="line">        Number_of_brick_rescue=`cat $LOG`</span><br><span class="line">        p=&quot;$(expr $Number_of_brick_rescue + 1)&quot;</span><br><span class="line">        echo &quot;$p&quot; &gt;$LOG</span><br><span class="line">    fi</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Unfreezing() &#123;</span><br><span class="line"></span><br><span class="line">[ -z $BOOTMODE ] &amp;&amp; ps | grep zygote | grep -qv grep &amp;&amp; BOOTMODE=true</span><br><span class="line">[ -z $BOOTMODE ] &amp;&amp; ps -A 2&gt;/dev/null | grep zygote | grep -qv grep &amp;&amp; BOOTMODE=true</span><br><span class="line">[ -z $BOOTMODE ] &amp;&amp; BOOTMODE=false</span><br><span class="line">rm -rf /data/system/ifw/*    #插桩</span><br><span class="line"></span><br><span class="line">rm -rf /data/system/users/0/package-restrictions.xml </span><br><span class="line">    </span><br><span class="line">exit 0   #注意</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">MODDIR=$&#123;0%/*&#125;</span><br><span class="line">MODID=$&#123;MODDIR##*/&#125;</span><br><span class="line">Module_XinXi=$MODDIR/module.prop</span><br><span class="line">START_LOG=$MODDIR/Number_of_starts.log</span><br><span class="line">LOG=$MODDIR/Number_of_brick_rescue.log</span><br><span class="line">VERSION=$MODDIR/now_version</span><br><span class="line">now_version=$(getprop ro.system.build.version.incremental)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">if [[ ! -f $START_LOG ]]; then</span><br><span class="line">    echo 0 &gt;&quot;$START_LOG&quot;</span><br><span class="line">    Frequency2=1</span><br><span class="line">else</span><br><span class="line">    Frequency=`cat $START_LOG`</span><br><span class="line">    Frequency2=&quot;$(expr $Frequency + 1)&quot;</span><br><span class="line">    echo &quot;$Frequency2&quot; &gt;&quot;$START_LOG&quot;</span><br><span class="line">    echo &quot;$now_version&quot; &gt; &quot;$VERSION&quot;  </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">fi</span><br><span class="line">    if [[ $Frequency2 -eq 2 ]]; then</span><br><span class="line">        chmod 000 /data/adb/service.d/* /data/adb/post-fs-data.d/*</span><br><span class="line">        Statistics</span><br><span class="line">        Unfreezing  #插桩</span><br><span class="line">        Disable_All_Modules      </span><br><span class="line">    elif [[ $Frequency2 -ge 4 ]]; then</span><br><span class="line">        rm -f &quot;$START_LOG&quot;</span><br><span class="line">        Statistics</span><br><span class="line">        Unfreezing</span><br><span class="line">        reboot  #注意</span><br><span class="line">    fi</span><br><span class="line"></span><br><span class="line">   exit 0</span><br></pre></td></tr></table></figure><h2 id="系统软件禁用">系统软件禁用</h2><p>使用magisk模块和PM禁用，两种方式。顽固垃圾用magisk，否则用后者。<br>其中<em><strong>WAPPushManager这个和免费网络短信有关，禁用会异常掉线</strong></em><br>magisk模块代码如下：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">Magisk 模块脚本配置</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">说明：</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">1. 将你要替换的文件放入 system 文件夹 (删除 placeholder 文件)</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">2. 将模块信息写入 module.prop</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">3. 在这个文件中进行设置 (customize.sh)</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">4. 如果你需要在启动时执行命令, 请把它们加入 post-fs-data.sh 或 service.sh</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">5. 如果需要修改系统属性(build.prop), 请把它加入 system.prop</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">如果你需要启用 Magic Mount 请把它设置为 <span class="literal">true</span> 不启用则设置为 <span class="literal">false</span></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">大多数模块都需要启用它</span></span><br><span class="line">AUTOMOUNT=true</span><br><span class="line">SKIPMOUNT=false PROPFILE=false</span><br><span class="line">POSTFSDATA=false LATESTARTSERVICE=false</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">列出你想在系统中直接删除的所有路径 一行一个路径 只能文件夹 不能文件 并且只能system里面的文件夹</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">此命令会删除下列路径文件夹内的所有文件</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">/system/SuiNian666/ 只是一个例子 如果你要删除其他路径 请删除那一行例子</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">开始安装（shell命令）</span></span><br><span class="line">on_install() &#123;</span><br><span class="line">ui_print &quot;- 正在释放文件&quot;</span><br><span class="line">  unzip -o &quot;$ZIPFILE&quot; &#x27;system/*&#x27; -d $MODPATH &gt;&amp;2</span><br><span class="line">&#125;</span><br><span class="line">set_permissions() &#123;</span><br><span class="line">set_perm_recursive  $MODPATH  0  0  0755  0644</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">REPLACE=&quot;</span><br><span class="line">/system/app/MiSubScreenUi</span><br><span class="line">/system/app/PrintSpooler</span><br><span class="line">/system/app/GFDelmarSetting</span><br><span class="line">/system/app/ModemTestBox</span><br><span class="line">/system/app/SimAppDialog</span><br><span class="line">/system/app/XiaomiModemDebugService</span><br><span class="line">/system/system_ext/app/SimContact</span><br><span class="line">/system/system_ext/app/remoteSimLockAuthentication</span><br><span class="line">/system/app/AnalyticsCore</span><br><span class="line">/system/app/AutoRegistration</span><br><span class="line">/system/app/BasicDreams</span><br><span class="line">/system/app/BookmarkProvider</span><br><span class="line">/system/app/Updater</span><br><span class="line">/system/app/CompanionDeviceManager</span><br><span class="line">/system/app/KeyChain</span><br><span class="line">/system/app/mab</span><br><span class="line">/system/app/MiuiVpnSdkManager</span><br><span class="line">/system/app/MSA</span><br><span class="line">/system/app/VsimCore</span><br><span class="line">/system/app/PacProcessor</span><br><span class="line">/system/app/PaymentService</span><br><span class="line">/system/app/SimAppDialog</span><br><span class="line">/system/app/MiuiDaemon   </span><br><span class="line">/system/app/Stk</span><br><span class="line">/system/app/WallpaperBackup</span><br><span class="line">/system/app/WMService</span><br><span class="line">/system/app/MiuiPrintSpoolerBeta</span><br><span class="line">/system/priv-app/BlockedNumberProvider</span><br><span class="line">/system/priv-app/CallLogBackup</span><br><span class="line">/system/priv-app/DMRegService</span><br><span class="line">/system/priv-app/StatementService  </span><br><span class="line">/system/priv-app/MiGameCenterSDKService</span><br><span class="line"></span><br><span class="line">/system/priv-app/UserDictionaryProvider</span><br><span class="line">/system/priv-app/BuiltInPrintService</span><br><span class="line"></span><br><span class="line">/system/data-app/com.standardar.service</span><br><span class="line">/system/data-app/GameCenter</span><br><span class="line">/system/data-app/GoogleContactsSyncAdapter</span><br><span class="line">/system/product/app/PhotoTable</span><br><span class="line">/system/product/app/talkback</span><br><span class="line">/system/product/app/PowerOffAlarm</span><br><span class="line">/system/product/priv-app/GmsCore</span><br><span class="line">/system/product/priv-app/GoogleOneTimeInitializer</span><br><span class="line">/system/product/priv-app/GooglePartnerSetup</span><br><span class="line">/system/product/priv-app/GooglePlayServicesUpdater</span><br><span class="line">/system/product/priv-app/GoogleServicesFramework</span><br><span class="line">/system/vendor/data-app</span><br><span class="line">/system/system_ext/app/uceShimService   </span><br><span class="line">/system/system_ext/app/uimremoteserver</span><br><span class="line">/system/system_ext/app/uimremoteclient</span><br><span class="line">/system/system_ext/app/xdivert    </span><br><span class="line"></span><br><span class="line">/system/system_ext/priv-app/GoogleServicesFramework  </span><br><span class="line">/system/system_ext/priv-app/GoogleOneTimeInitializer</span><br><span class="line">/system/system_ext/priv-app/EmergencyInfo</span><br><span class="line">/system/vendor/app/CACertService</span><br><span class="line">/system/vendor/app/CneApp</span><br><span class="line">&quot;</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">/system/system_ext/app/WAPPushManager这个和免费网络短信有关，禁用会异常掉线</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">/system/priv-app/Music</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">/system/priv-app/MiuiVideo</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">/system/priv-app/NewHome</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">/system/priv-app/ONS</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">/system/priv-app/Browser</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">/system/priv-app/PlatformNetworkPermissionConfig</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">/system/app/Traceur</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">这个文件 (customize.sh) 将被安装脚本在 util_functions.sh 之后 <span class="built_in">source</span> 化（设置为环境变量）</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">如果你需要自定义操作, 请在这里以函数方式定义它们 然后在 update-binary 里调用这些函数</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">不要直接向 update-binary 添加代码 因为这会让你很难将模块迁移到新的模板版本</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">尽量不要对 update-binary 文件做其他修改 尽量只在其中执行函数调用</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">/system/priv-app/MiRcs  5G消息？</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">/system/app/Cit</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">/system/app/com.miui.qr</span></span><br></pre></td></tr></table></figure><p>PM禁用如下：</p><blockquote><p>仅供参考 经测试导航正常</p></blockquote><p><img src="https://pic.rmb.bdstatic.com/bjh/3bb7e92463ec6990426de4590911359a.png" alt="部分1.png"></p><p><img src="https://pic.rmb.bdstatic.com/bjh/78afab59cbd759ee5c09cfec0c09e25e.png" alt="部分2.png"></p><h3 id="其他一些">其他一些</h3><p>手机管家使用5.7.1全局小窗版，不知道为啥装了核心破解，但是系统软件遇到签名不一致的情况，还是无法安装，关闭MIUI优化用原生安装器正常，怀疑是被云控了。核心破解与破解卡米冲突！<br>MIUI+手机上的软件要和电脑上的版本对应，不然可能连不上，最新版好像能有有线网络协同了：手机3.5.20 电脑2.5.1.49体验很好。</p><h3 id="红米note5两条fastboot下防回滚屏蔽指令">红米Note5两条fastboot下防回滚屏蔽指令</h3><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">fastboot</span> flash antirbpass twrp.img</span><br><span class="line">fastboot flash recovery twrp.img</span><br></pre></td></tr></table></figure><h3 id="红米note11t禁用谷歌服务会导致qq安装时重启">红米Note11T禁用谷歌服务会导致qq安装时重启</h3><h1 id="不再折腾就这样吧">不再折腾就这样吧！</h1><h1 id="va-b分区root">VA/B分区ROOT</h1><p>由于上次想更新系统还原BOOT后，没有安装root直接重启了导致掉了ROOT<br>第一步：如果打不开MAGISK先卸载，卸载R安装工具<br>第二步：<a href="https://xiaomirom.com/">下载n11t(xaga)对应ROM</a>，复制playload.bin至解包工具playload_input目录，运行解包，出现boot字样关闭<br>第三步：复制boot.img至手机，使用magisk修补，传送至电脑，使用搞机工具箱重启至fastboot刷入boot即可（如果未识别fastboot说明驱动不对）</p>]]></content>
      
      
      <categories>
          
          <category> 安卓 </category>
          
          <category> 刷机 </category>
          
          <category> Shell </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 避坑记录 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>wifi不稳定无法加载图片解决方案</title>
      <link href="/posts/6c072a00/"/>
      <url>/posts/6c072a00/</url>
      
        <content type="html"><![CDATA[<h2 id="起因">起因</h2><p>最近我家的WiFi手机上网速正常但是无法加载某些app的图片，电脑上一切正常。</p><h2 id="可能性">可能性</h2><p>有两种可能产生以上问题：</p><ul><li>可能是DNS污染</li><li>网络服务本身不支持ipv6的，却在wifi控制界面开启了Ipv6</li></ul><h1 id="解决">解决</h1><p>用DNS优选换用延迟更低的DNS，未解决<br><strong>关闭wifi控制界面的Ipv6</strong> 问题解决</p>]]></content>
      
      
      <categories>
          
          <category> 避坑记录 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 修复 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>向量代数和空间解析几何基础</title>
      <link href="/posts/613717f0/"/>
      <url>/posts/613717f0/</url>
      
        <content type="html"><![CDATA[<h1 id="向量代数和空间解析几何背景">向量代数和空间解析几何背景</h1><p>向量代数和空间解析几何，高中也学过二维的数量积和三维坐标轴下的简单计算；<br>而在高等数学部分主要学，由曲线经过旋转到曲面的计算方法：</p><ul><li>取一点(x0,y0)满足曲线方程</li><li>另外取一点(x,y)和(x0,y0)在绕坐标轴旋转的同一个圆上 x<sup>2+y</sup>2= x0<sup>2+y0</sup>2</li><li>两点构成的向量与坐标轴垂直</li><li>综上可得到旋转体方程仅仅是方法一（用曲面上的点到轴的距离和母线上的点到轴的距离相等也可）</li></ul><h1 id="常见计算">常见计算</h1><p>点到平面的距离公式(两平行平面的距离公式)；点到直线的距离(两平行直线的距离公式)<br>面和面(线与线)的夹角【这个比较简单】</p><h1 id="曲面的投影-消去变量法">曲面的投影，消去变量法</h1><h1 id="各类常见曲面-并与-重积分结合">各类常见曲面 并与 重积分结合</h1><h1 id="向量积及其概念">向量积及其概念</h1><p>向量积可用来算平行四边形面积 |c|=|a||b|sind<br>向量积还符合axb=-axb</p><h3 id="平面束应该不在考纲内">平面束应该不在考纲内</h3>]]></content>
      
      
      <categories>
          
          <category> 高等数学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 总结 </tag>
            
            <tag> 算法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>多元函数微分学基础总结</title>
      <link href="/posts/bc979acf/"/>
      <url>/posts/bc979acf/</url>
      
        <content type="html"><![CDATA[<h1 id="连续-可偏导-可微-连续可偏导">连续，可偏导，可微，连续可偏导</h1><p>连续可偏导 推出 可微，不可反推。<br>由可微 能推出 连续或者可偏导 但不能推出连续可偏导，也不能由连续或者可偏导，推出可微。<br>连续和可偏导之间无关系。<br>张宇基础30 P159<br><img src="https://pic.rmb.bdstatic.com/bjh/b259042ba544c7f3cf5e30f43adff436.png" alt="证明连续，极限值存在且等于该点的函数值.png"><br><img src="https://pic.rmb.bdstatic.com/bjh/8c37dd379fc0c414108ac4a829998b12.png" alt="证明偏导，x，y其中一个在x0或y0点变化△x趋于0(△y)另一个不变.png"><br><img src="https://pic.rmb.bdstatic.com/bjh/e54e025b243ee02ccd430950c7250ccc.png" alt="证明可微要以上三步.png"><br><img src="https://pic.rmb.bdstatic.com/bjh/812ca7aac88d737c20f650003072aad1.png" alt="偏导数的连续性不常考.png"></p><h2 id="多元函数的多阶偏导计算">多元函数的多阶偏导计算</h2><p>常常把位置1的变量整体看成1，位置2的变量整体看成2<br><img src="https://pic.rmb.bdstatic.com/bjh/47a4fe56726f7f2d9e3eef11d88dca3f.png" alt="图片.png"></p><h2 id="微分计算">微分计算</h2><ol><li>先求偏导再整合</li><li>两边整体微分</li></ol><h2 id="闭区域最值计算">闭区域最值计算</h2><p>先用非条件极值公式找特殊点，再用拉个朗日法算边界上的条件极值，即可。<br>如，矩形区域的一个边界可分为x=常数 (y在变化)</p>]]></content>
      
      
      <categories>
          
          <category> 高等数学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 总结 </tag>
            
            <tag> 算法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>npm包发布及其CDN加速</title>
      <link href="/posts/cea67e40/"/>
      <url>/posts/cea67e40/</url>
      
        <content type="html"><![CDATA[<h1 id="发布npm包">发布npm包</h1><p>在要发布包的对应目录，右键使用Vscode打开,依次执行如下代码</p><ol><li><code>npm init</code>(初始化和git init差不多)</li></ol><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">name:</span> (mtmap)</span><br><span class="line"><span class="symbol">version:</span> (<span class="number">1.0</span><span class="number">.0</span>)</span><br><span class="line"><span class="symbol">description:</span> xxxxx</span><br><span class="line">entry point: (<span class="keyword">/dist/</span>gaia.demo.map.js)</span><br><span class="line">test command:</span><br><span class="line">git repository:</span><br><span class="line"><span class="symbol">keywords:</span></span><br><span class="line"><span class="symbol">author:</span> allanhao</span><br><span class="line"><span class="symbol">license:</span> (ISC) MIT</span><br><span class="line">About to write to E:\github\mtmap\package.json:</span><br><span class="line"></span><br><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="string">&quot;name&quot;</span>: <span class="string">&quot;mtmap&quot;</span>,</span><br><span class="line">  <span class="string">&quot;version&quot;</span>: <span class="string">&quot;0.1.0&quot;</span>,</span><br><span class="line">  <span class="string">&quot;description&quot;</span>: <span class="string">&quot;xxxxx&quot;</span>,</span><br><span class="line">  <span class="string">&quot;main&quot;</span>: <span class="string">&quot;/dist/gaia.demo.map.js&quot;</span>,</span><br><span class="line">  <span class="string">&quot;scripts&quot;</span>: <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="string">&quot;test&quot;</span>: <span class="string">&quot;echo \&quot;Error: no test specified\&quot; &amp;&amp; exit 1&quot;</span></span><br><span class="line">  <span class="punctuation">&#125;</span>,</span><br><span class="line">  <span class="string">&quot;author&quot;</span>: <span class="string">&quot;allanhao&quot;</span>,</span><br><span class="line">  <span class="string">&quot;license&quot;</span>: <span class="string">&quot;MIT&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br><span class="line">Is this ok? (yes) </span><br></pre></td></tr></table></figure><p>上文为package.json中填入的信息，()内的为默认值，如果你之前有git.init，他会检测到。<br>2. <code>npm login</code>登陆 一定要使用官方源<code>npm config set registry https://registry.npmjs.org/</code><br>3. <code>npm publish</code><br>有时会出现错误信息E403如下，是因为这个包名在仓库里已经有了</p><figure class="highlight livescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">npm</span> ERR! publish Failed PUT <span class="number">403</span></span><br><span class="line"><span class="built_in">npm</span> ERR! code E403</span><br><span class="line"><span class="built_in">npm</span> ERR! You <span class="keyword">do</span> <span class="keyword">not</span> have permission <span class="keyword">to</span> publish <span class="string">&quot;package-demo&quot;</span>. Are you logged <span class="keyword">in</span> <span class="keyword">as</span> the correct user? : package-demo</span><br></pre></td></tr></table></figure><p>提示没有权限，其实就是你的module名在npm上已经被占用啦，这时候你就去需要去npm搜索你的模块名称，如果搜索不到，就可以用，并且把package.json里的name修改过来，重新npm publish，看到如下信息就表示安装完成了。</p><h2 id="npm的版本控制">npm的版本控制</h2><p>使用<code>npm version patch</code>然后<code>npm publish</code><br>或者直接改package.json里的version然后<code>npm publish</code></p><h2 id="cdn加速">CDN加速</h2><p>CDN加速很简单，不需要注册账号,直接链接仓库即可，jsdelivr对于文件夹不稳定，建议使用unpkg.zhimg.com(经常抽风)<br>用CDN的好处是，本地修改元素文件后推送到云，从而远程对网站元素进行修改。</p><blockquote><p>2022-4-24<br>建议使用<br><code>https://unpkg.com/packagename@version/</code></p></blockquote><h3 id="题外话">题外话</h3><p>因这些有的没的技术含量无，本人自身专业能力较低，不再对本站进行维护！！！</p><blockquote><p>2021-1-18</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
          <category> Node.js </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CDN加速 </tag>
            
            <tag> 包管理 </tag>
            
            <tag> 版本控制 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo圆角修改</title>
      <link href="/posts/2efd84f0/"/>
      <url>/posts/2efd84f0/</url>
      
        <content type="html"><![CDATA[<h1 id="f12调试工具定位要修改的样式">F12调试工具定位要修改的样式</h1><p><img src="https://pic.rmb.bdstatic.com/bjh/419a5089d290d8780e5122a8a1e880a8.png" alt="定位1.png"><br><img src="https://pic.rmb.bdstatic.com/bjh/f868c8b1d08232f149f82beba29f2242.png" alt="定位2.png"><br>也可以查看别人的css是怎么改的，然后使用工具对比差异，找到差异，修改。</p><h1 id="vscode查找要修改的值并调试">Vscode查找要修改的值并调试</h1><p><img src="https://pic.rmb.bdstatic.com/bjh/f62f4ec5cef67bd81238fd3070312c0d.png" alt="插桩1.png"><br><img src="https://pic.rmb.bdstatic.com/bjh/77c2ec72766cd59025b8a457d1f80052.png" alt="插桩2.png"><br><strong>注意图片中的代码不用加&quot;;&quot;号</strong></p>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 魔改 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>逆向开发法网页速成！&amp; 基于api的前后端分离思考</title>
      <link href="/posts/9d38bb17/"/>
      <url>/posts/9d38bb17/</url>
      
        <content type="html"><![CDATA[<blockquote><p>本文仅供学习使用</p></blockquote><h1 id="查看-下载源代码速成网页">查看/下载源代码速成网页</h1><p>网页由html,js,css三大主要部分构成；<br>绝大部分js,css(文本类型)，图片这些静态资源，都存放在CDN；<br>CDN供应商的服务器放在世界各个角落，可将代码，图片等静态资源，转换成外链，形成源服务器的映射；<br>方法1：<br>话不多说直接F12(几乎所有资源都可看到)<br><img src="https://pic.rmb.bdstatic.com/bjh/a3a87afcedd337361eb5944093346f2f.png" alt="F12.png"><br>方法2：</p><ol><li>右键另存为<br>或者浏览器自带的另存为方式<br><img src="https://mapp.alicdn.com/16419826700157xOJ0QWCTLSdiUE.png" alt="图片.png"><br>另存为后三种元素都可以保存下来，js,css会被存放在同一个文件中，且该文件名应于html文件名相同（中文文件名可能会导致编辑器中乱码）；<br><img src="https://pic.rmb.bdstatic.com/bjh/fd5af3845b224e1a966ab29581ba081d.png" alt="图片.png"><br>有些网站使用打包工具生成，他的代码(非常规)就没有参考价值；及其个别经过了混淆也无参考价值；</li></ol><h2 id="下载完用编辑器如vscode编辑你想改的代码即可">下载完用编辑器如VScode编辑你想改的代码即可</h2><p>利用查找更快哦！</p><h1 id="基于api的前后端分离思考">基于api的前后端分离思考</h1><p>将api的代码嵌入到静态页面中，<strong>用户在访问时</strong>就能通过第三方云的api服务获取特定的动态数据(api对应一个apikey来识别特定的库)，使用第三方云可以实现前后端分离。</p>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 思考 </tag>
            
            <tag> 逆向 </tag>
            
            <tag> 速成 </tag>
            
            <tag> api </tag>
            
            <tag> 前后端分离 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JS下修改指定id和class的对应元素值 --以hexo随机indeximg为例</title>
      <link href="/posts/7a22925c/"/>
      <url>/posts/7a22925c/</url>
      
        <content type="html"><![CDATA[<h1 id="前言">前言</h1><p>从来没学过前端，以后也不打算学，目前的前端生态已经相当成熟了，写个网页和word技术含量差不多，毕竟网页也只是描述语言而已。</p><h2 id="巧用f12">巧用F12</h2><p>会用F12查看你要修改的元素的id和class非常重要<br>F12也能查看源码</p><img src="/posts/7a22925c/%E5%8F%912.png" class=""><h2 id="创建js文件定位id-判断class">创建JS文件定位id,判断class</h2><p>hexo 随机 indeximg,整体.js文件的代码:</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> bannerimg =[</span><br><span class="line">  <span class="string">&quot;url(https://ae01.alicdn.com/kf/H21b5f6b8496141a1979a33666e1074d9x.jpg)&quot;</span>,</span><br><span class="line">  <span class="string">&quot;url(https://picsum.photos/id/767/3069/2048)&quot;</span>,</span><br><span class="line">  <span class="string">&quot;url(https://picsum.photos/id/800/4663/3109)&quot;</span>,</span><br><span class="line">  <span class="string">&quot;url(https://picsum.photos/id/459/2310/1534)&quot;</span>,</span><br><span class="line">  <span class="string">&quot;url(https://picsum.photos/id/458/5184/3456)&quot;</span>,</span><br><span class="line">  <span class="string">&quot;url(https://picsum.photos/id/317/1935/1089)&quot;</span></span><br><span class="line">];</span><br><span class="line"><span class="comment">//获取banner图片总数，生成随机数</span></span><br><span class="line"><span class="keyword">var</span> bannerindex =<span class="title class_">Math</span>.<span class="title function_">floor</span>(<span class="title class_">Math</span>.<span class="title function_">random</span>() * bannerimg.<span class="property">length</span>);</span><br><span class="line"><span class="keyword">var</span> bgid = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;page-header&quot;</span>);</span><br><span class="line"><span class="keyword">if</span>(bgid.<span class="property">className</span> ==<span class="string">&quot;full_page&quot;</span>)                                <span class="comment">//精确到class重要插桩</span></span><br><span class="line">&#123;<span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;page-header&quot;</span>).<span class="property">style</span>.<span class="property">backgroundImage</span> = bannerimg[bannerindex];&#125;</span><br></pre></td></tr></table></figure><p>定位ID</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> bgid = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;page-header&quot;</span>);</span><br></pre></td></tr></table></figure><p>判断class类并修改(赋值)</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(bgid.<span class="property">className</span> ==<span class="string">&quot;full_page&quot;</span>)                                <span class="comment">//精确到class重要插桩</span></span><br><span class="line">  &#123;<span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;page-header&quot;</span>).<span class="property">style</span>.<span class="property">backgroundImage</span> = bannerimg[bannerindex];&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
          <category> JS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 自定义元素 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>不定积分重要方法总结--区间再现，区间平移，华氏公式</title>
      <link href="/posts/fc1fa1d4/"/>
      <url>/posts/fc1fa1d4/</url>
      
        <content type="html"><![CDATA[<h1 id="区间再现-区间平移-华氏公式-是不定积分的重要公式没有之一">区间再现，区间平移，华氏公式，是不定积分的重要公式没有之一</h1><p>注意他们的使用条件：</p><h2 id="区间再现">区间再现</h2><ol><li>对任何函数成立</li><li><strong>使用区间再现前后函数上下限不变！</strong> 这是区别于换元法的最大意义之一！</li></ol><h2 id="区间平移">区间平移</h2><p>区间平移指的是以T为单位平移，仅仅对整体是周期函数有效。<br>如果整体不是周期函数，而子函数存在周期函数，可以用换元法进行模拟区间平移来判断他们的关系。(有点像仿射变换)</p><h2 id="华氏公式-点火公式">华氏公式(点火公式)</h2><p>点火公式仅仅是0-π/2的情况，其他情况处理见 张宇基础30 P130页。</p>]]></content>
      
      
      <categories>
          
          <category> 高等数学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 总结 </tag>
            
            <tag> 算法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>单serverless服务分布式部署的思考--以githubPage为例</title>
      <link href="/posts/fe197273/"/>
      <url>/posts/fe197273/</url>
      
        <content type="html"><![CDATA[<h2 id="前言">前言</h2><p>自从花了几天用hexo在githubPage上部署了博客，虽然技术含量很低，但我感觉很有意思。<br>githubPage作为一种Serverless服务之一，我认为功能不仅仅只能是部署一个博客！<br>事实上也是如此，经过云电脑的验证，githubPage可以整合任意的静态界面，然后通过URL引用的方式互相跳转。<br>这里的引用可以是：</p><ol><li>githubpage下的子目录相对引用例如<code>xxx.github.io./文件夹</code></li><li>也可以在同一个项目下，使用其本身语法进行相对引用(比如hexo项目下生成的博客，页面内互相跳转也有自己的语法)<br>绝对引用输入完整的URL那就更不用多说了。</li></ol><h2 id="单serverless服务分布式部署">单serverless服务分布式部署</h2><p>以githubPage为例，可以添加子文件夹，然后将你想要部署的不同类型静态页面添加到子文件夹，用上面的引用方法跳转。</p><h2 id="已知bug">已知BUG</h2><p>hexo的deloy服务有可能会把不同部署的子文件夹覆盖掉(hexo deploy好像是一整个覆盖)<br>不能使用<code>git pull origin main --allow-unrelated-histories</code>拉取，使用<code>--allow-unrelated-histories</code>会导致BUG。<br>使用<code>git pull origin main</code>在不同类型静态页面添加到子文件夹目录再拉取一次</p><h1 id="重要说明">重要说明</h1><p>(上面这样pull也有BUG因为有些类型的文件pull不下来，直接复制.deploy_git（public更好 public是hexo g生成的）目录的所有文件，统一进行push是无bug的)<br>然后重新add , commit ,push上传。</p>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
          <category> git </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Serverless云部署 </tag>
            
            <tag> 经验总结 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PLC顺控并行指令伪多线程</title>
      <link href="/posts/31340fd5/"/>
      <url>/posts/31340fd5/</url>
      
        <content type="html"><![CDATA[<h2 id="以东西南北红绿灯为例">以东西南北红绿灯为例</h2><p>其实比较简单，不多说了，就是使用PLC S7-200的顺控指令并行分支，一个分支执行东西红绿灯，另一个执行南北，最后汇总转移。<br>为什么说是伪多线程？<br>因为最后需要汇总转移，两个分支在最后具有一定耦合性，并不能说完全相互独立。</p><div class='checkbox green checked'><input type="checkbox" checked="checked"/>            <p>控制大意如下</p>            </div><details class="folding-tag" ><summary> 查看详细图片 </summary>              <div class='content'>              <img src="/posts/31340fd5/1.png" class="">              </div>            </details><p>红绿灯闪烁部分可以看看</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br></pre></td><td class="code"><pre><span class="line">TITLE=PROGRAM COMMENTS</span><br><span class="line">Network 1 // Network Title</span><br><span class="line">// Network Comment</span><br><span class="line">LD     I0.0</span><br><span class="line">S      S0.0, 1</span><br><span class="line">Network 2 </span><br><span class="line">LD     I0.0</span><br><span class="line">O      M0.0</span><br><span class="line">AN     I0.1</span><br><span class="line">=      M0.0</span><br><span class="line">Network 3 </span><br><span class="line">LSCR   S0.0</span><br><span class="line">Network 4 </span><br><span class="line">LD     M0.0</span><br><span class="line">SCRT   S0.1</span><br><span class="line">SCRT   S0.2</span><br><span class="line">Network 5 </span><br><span class="line">SCRE</span><br><span class="line">Network 6 </span><br><span class="line">LSCR   S0.1</span><br><span class="line">Network 7 </span><br><span class="line">LD     SM0.0</span><br><span class="line">TON    T37, 250</span><br><span class="line">Network 8 </span><br><span class="line">LDN    T37</span><br><span class="line">=      M0.3</span><br><span class="line">Network 9 </span><br><span class="line">LD     T37</span><br><span class="line">SCRT   S0.3   </span><br><span class="line">Network 10 </span><br><span class="line">SCRE</span><br><span class="line">Network 11 </span><br><span class="line">LSCR   S0.3   //闪烁部分</span><br><span class="line">Network 12 </span><br><span class="line">LD     SM0.0</span><br><span class="line">TON    T38, 30</span><br><span class="line">Network 13 </span><br><span class="line">LD     M0.0</span><br><span class="line">AN     T39</span><br><span class="line">TON    T40, 5</span><br><span class="line">Network 14 </span><br><span class="line">LD     T40</span><br><span class="line">TON    T39, 5</span><br><span class="line">Network 15 </span><br><span class="line">LD     T40</span><br><span class="line">AN     T38</span><br><span class="line">=      M0.1</span><br><span class="line">Network 16 </span><br><span class="line">LD     T38</span><br><span class="line">SCRT   S0.4</span><br><span class="line">Network 17 </span><br><span class="line">SCRE</span><br><span class="line">Network 18 </span><br><span class="line">LSCR   S0.4</span><br><span class="line">Network 19 </span><br><span class="line">LD     SM0.0</span><br><span class="line">TON    T41, 20</span><br><span class="line">Network 20 </span><br><span class="line">LDN    T41</span><br><span class="line">=      Q0.1</span><br><span class="line">Network 21 </span><br><span class="line">LD     T41</span><br><span class="line">TON    T42, 300</span><br><span class="line">Network 22 </span><br><span class="line">LDN    T42</span><br><span class="line">=      Q0.2</span><br><span class="line">Network 23 </span><br><span class="line">SCRE</span><br><span class="line">Network 24 </span><br><span class="line">// 南北信号灯</span><br><span class="line">LSCR   S0.2</span><br><span class="line">Network 25 </span><br><span class="line">LD     M0.0</span><br><span class="line">TON    T43, 300</span><br><span class="line">Network 26 </span><br><span class="line">LDN    T43</span><br><span class="line">=      Q0.5</span><br><span class="line">Network 27 </span><br><span class="line">LD     T43</span><br><span class="line">SCRT   S0.5</span><br><span class="line"></span><br><span class="line">Network 28 </span><br><span class="line">SCRE</span><br><span class="line">Network 29 </span><br><span class="line">LSCR   S0.5</span><br><span class="line">Network 30 </span><br><span class="line">LD     M0.0</span><br><span class="line">TON    T44, 250</span><br><span class="line">Network 31 </span><br><span class="line">LDN    T44</span><br><span class="line">=      M0.2</span><br><span class="line">Network 32 </span><br><span class="line">LD     T44</span><br><span class="line">SCRT   S0.6</span><br><span class="line">Network 33 </span><br><span class="line">SCRE</span><br><span class="line">Network 34 </span><br><span class="line">LSCR   S0.6</span><br><span class="line"></span><br><span class="line">Network 35 </span><br><span class="line">LD     SM0.0</span><br><span class="line">TON    T45, 30</span><br><span class="line"></span><br><span class="line">Network 36 </span><br><span class="line">LD     M0.0</span><br><span class="line">AN     T46</span><br><span class="line">TON    T47, 5</span><br><span class="line"></span><br><span class="line">Network 37 </span><br><span class="line">LD     T47</span><br><span class="line">TON    T46, 5</span><br><span class="line"></span><br><span class="line">Network 38 </span><br><span class="line">LD     T47</span><br><span class="line">AN     T45</span><br><span class="line">=      M0.4</span><br><span class="line"></span><br><span class="line">Network 39 </span><br><span class="line">LD     T45</span><br><span class="line">SCRT   S0.7</span><br><span class="line"></span><br><span class="line">Network 40 </span><br><span class="line">SCRE</span><br><span class="line">Network 41 </span><br><span class="line">LSCR   S0.7</span><br><span class="line"></span><br><span class="line">Network 42 </span><br><span class="line">LD     SM0.0</span><br><span class="line">TON    T47, 20</span><br><span class="line"></span><br><span class="line">Network 43 </span><br><span class="line">LDN    T47</span><br><span class="line">=      Q0.4</span><br><span class="line"></span><br><span class="line">Network 44 </span><br><span class="line">SCRE</span><br><span class="line">Network 45 </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">LD     S0.7</span><br><span class="line">A      S0.4</span><br><span class="line">AN     I0.1</span><br><span class="line">R      S0.7, 1</span><br><span class="line">R      S0.4, 1</span><br><span class="line">S      S0.0, 1</span><br><span class="line">Network 46 </span><br><span class="line">LD     M0.3</span><br><span class="line">O      M0.1</span><br><span class="line">=      Q0.0</span><br><span class="line">Network 47 </span><br><span class="line"></span><br><span class="line">LD     M0.2</span><br><span class="line">O      M0.4</span><br><span class="line">=      Q0.3</span><br></pre></td></tr></table></figure><p>当然也在github上开源的，直接下载下来，看梯形图更方便。</p>]]></content>
      
      
      <categories>
          
          <category> 开源 </category>
          
          <category> 电气自动化 </category>
          
          <category> PLC </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 多线程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>NPM-package踩坑记录和一次解码记录</title>
      <link href="/posts/a0487b7e/"/>
      <url>/posts/a0487b7e/</url>
      
        <content type="html"><![CDATA[<h2 id="npm-package踩坑记录">NPM-package踩坑记录</h2><p>最近用node.js下的包管理工具下载了一个插件，想直接进Node_module目录改.js和css目录改代码，但是都没有效果。是因为修改的是element的源码，而你引用的是它编译打包之后的。所以修改无效。<br>正确的方法是，进入插件的开源仓库fork源码后修改，使用npm重新编译。</p><h3 id="方法1如下；-转载">方法1如下；(转载)</h3><p>如果你不想直接使用我的魔改，你想要修改某些东西，例如卡片透明度，那么你不必修改压缩过的 css，而是应该到 static-butterfly 仓库下载源代码，按照./src/css/config.less 中的文件进行自定义配置。</p><figure class="highlight coffeescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">npm</span> i</span><br><span class="line"><span class="built_in">npm</span> run build</span><br></pre></td></tr></table></figure><p>修改你想要自定义的配置项，只需要修改配置中的对应字段即可（上面代码可能不全，以实际文件为准）。然后在根目录下运行如下命令进行构建即可。</p><div class="tag link"><a class="link-card" title="点击查看" href="https://www.antmoe.com/posts/a811d614/"><div class="left"><img src="https://unpkg.zhimg.com/akilar-candyassets/image/siteicon/favicon.ico"/></div><div class="right"><p class="text">点击查看</p><p class="url">https://www.antmoe.com/posts/a811d614/</p></div></a></div><h3 id="方法2如下：-转载">方法2如下：(转载)</h3><div class="tag link"><a class="link-card" title="点击查看" href="https://segmentfault.com/q/1010000023232103"><div class="left"><img src="https://unpkg.zhimg.com/akilar-candyassets/image/siteicon/favicon.ico"/></div><div class="right"><p class="text">点击查看</p><p class="url">https://segmentfault.com/q/1010000023232103</p></div></a></div><h2 id="解码记录">解码记录</h2><p>在某大佬软件源码下看到了这个</p><figure class="highlight taggerscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">/**</span><br><span class="line"> <span class="symbol">\u0061</span><span class="symbol">\u0048</span><span class="symbol">\u0052</span><span class="symbol">\u0030</span><span class="symbol">\u0063</span><span class="symbol">\u0044</span><span class="symbol">\u006f</span><span class="symbol">\u0076</span><span class="symbol">\u004c</span><span class="symbol">\u0032</span><span class="symbol">\u0052</span><span class="symbol">\u006c</span><span class="symbol">\u0064</span><span class="symbol">\u0069</span><span class="symbol">\u0031</span><span class="symbol">\u007a</span><span class="symbol">\u0061</span><span class="symbol">\u0057</span><span class="symbol">\u0052</span><span class="symbol">\u006c</span><span class="symbol">\u0059</span><span class="symbol">\u0032</span><span class="symbol">\u0046</span><span class="symbol">\u0079</span><span class="symbol">\u004c</span><span class="symbol">\u006d</span><span class="symbol">\u0052</span><span class="symbol">\u0076</span><span class="symbol">\u0059</span><span class="symbol">\u0032</span><span class="symbol">\u0031</span><span class="symbol">\u0070</span><span class="symbol">\u0063</span><span class="symbol">\u006e</span><span class="symbol">\u004a</span><span class="symbol">\u0076</span><span class="symbol">\u0063</span><span class="symbol">\u0069</span><span class="symbol">\u0035</span><span class="symbol">\u006a</span><span class="symbol">\u0062</span><span class="symbol">\u0069</span><span class="symbol">\u0039</span><span class="symbol">\u0035</span><span class="symbol">\u0062</span><span class="symbol">\u0033</span><span class="symbol">\u0056</span><span class="symbol">\u006d</span><span class="symbol">\u0061</span><span class="symbol">\u0057</span><span class="symbol">\u0035</span><span class="symbol">\u006b</span><span class="symbol">\u0061</span><span class="symbol">\u0058</span><span class="symbol">\u0051</span><span class="symbol">\u0076</span><span class="symbol">\u0061</span><span class="symbol">\u0057</span><span class="symbol">\u0035</span><span class="symbol">\u006b</span><span class="symbol">\u005a</span><span class="symbol">\u0058</span><span class="symbol">\u0067</span><span class="symbol">\u0075</span><span class="symbol">\u0061</span><span class="symbol">\u0048</span><span class="symbol">\u0052</span><span class="symbol">\u0074</span><span class="symbol">\u0062</span><span class="symbol">\u0041</span><span class="symbol">\u003d</span><span class="symbol">\u003d</span></span><br><span class="line"> **/</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>你们觉得应该怎么解密?</p><span class="hide-inline"><button type="button" class="hide-button" style="background-color: green;">答案是  </button><span class="hide-content">uni-base64-二维码</span></span>  <p>如果把其中一个步骤,按自己的规则偏移编码,是不是谁也解不出来了。</p><h3 id="浅谈二维码识别">浅谈二维码识别</h3><p>二维码识别似乎是识别方块，要注意方块的前景色和背景色对比越大越好，因为他是形状识别。</p>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
          <category> 解码 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> npm包管理 </tag>
            
            <tag> 踩坑记录 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CPP构造函数调用规则</title>
      <link href="/posts/2d59519/"/>
      <url>/posts/2d59519/</url>
      
        <content type="html"><![CDATA[<div class="note info simple"><p>本人将持续在这里更新C++学习记录 本次将学习CPP构造函数调用规则</p></div><p><a href="https://www.bilibili.com/video/BV1et411b73Z?p=109">看到这里啦</a></p><blockquote><p>前一节也是重点!<br>//创建一个类，C++编译器会给每个类添加3个构造函数<br>//默认构造 析构函数 拷贝构造(值拷贝)</p></blockquote><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Person</span></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//默认构造</span></span><br><span class="line"><span class="built_in">Person</span>()</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;Person无参数构造函数&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//有参数构造</span></span><br><span class="line"><span class="built_in">Person</span>(<span class="type">int</span> a)</span><br><span class="line">&#123;</span><br><span class="line">age = a;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;Person有参数构造函数&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//拷贝构造函数</span></span><br><span class="line"><span class="built_in">Person</span>(<span class="type">const</span> Person&amp; p)</span><br><span class="line">&#123;</span><br><span class="line">age = p.age;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;Person拷贝构造函数&quot;</span> &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">~<span class="built_in">Person</span>()    <span class="comment">//析构函数就算不加执行完也会调用</span></span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;Person析构函数&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> age;</span><br><span class="line"></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>就算把拷贝构造函数注释调下面这段代码也能正常调用<br>结果为<br>Person无参数构造函数<br>P2的年龄为：19<br>Person析构函数<br>Person析构函数</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">test01</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">Person p;</span><br><span class="line">p.age = <span class="number">19</span>;</span><br><span class="line"><span class="function">Person <span class="title">p2</span><span class="params">(p)</span></span>;  <span class="comment">//本人没创建拷贝构造函数</span></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;P2的年龄为：&quot;</span> &lt;&lt;p2.age&lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>因为编译器帮你写了。</p><div class="tip home faa-horizontal animated-hover"><p>注意：自己写的高级构造函数(拷贝&gt;有参&gt;默认)会屏蔽编译器的低级构造函数！</p></div>]]></content>
      
      
      <categories>
          
          <category> 学习记录 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C++ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>数控机床切割椭圆NC代码</title>
      <link href="/posts/2bf5f316/"/>
      <url>/posts/2bf5f316/</url>
      
        <content type="html"><![CDATA[<h2 id="写在前面">写在前面</h2><div class="tip home faa-horizontal animated-hover"><p>之前选修课跟着学校的郑教授学过几天机制的专业课-数控机床与工业机器人<br>现在想起来很多细枝末节的东西都已经忘的差不多了</p></div><div class='checkbox checked'><input type="radio" checked="checked"/>            <p>但是一套操作流程还是有印象的例如打开仿真软件-选择机床-先让刀具回到原点，导入NC代码-启动</p>            </div><div class="tip cogs"><p>下面就放两段NC代码的示例吧~</p></div><h3 id="代码示例">代码示例</h3><p>切割椭圆代码示例</p><figure class="highlight nc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">%</span></span><br><span class="line"><span class="meta">O0009</span></span><br><span class="line"><span class="attr">#1</span>=<span class="number">35</span></span><br><span class="line"><span class="attr">#2</span>=<span class="number">25</span></span><br><span class="line"><span class="attr">#5</span>=-<span class="attr">#1</span></span><br><span class="line"><span class="attr">#6</span>=<span class="number">300</span></span><br><span class="line"><span class="attr">#7</span>=<span class="number">0</span></span><br><span class="line"><span class="name">G91</span><span class="name">G28</span>Z<span class="number">0</span></span><br><span class="line"><span class="name">M06</span>T<span class="number">01</span>H<span class="number">01</span></span><br><span class="line">S<span class="number">500</span><span class="name">M03</span></span><br><span class="line"><span class="name">G64</span><span class="name">G90</span><span class="name">G54</span><span class="name">G00</span>[<span class="attr">#1</span><span class="number">+20.</span>]Y<span class="number">60.</span></span><br><span class="line"><span class="name">G43</span>Z<span class="number">50.</span></span><br><span class="line">Z<span class="number">5.</span></span><br><span class="line"><span class="name">G01</span>Z<span class="number">-3.</span>F<span class="number">300</span></span><br><span class="line"><span class="name">G41</span><span class="name">G01</span>X[<span class="attr">#1</span>]D<span class="number">01</span>F[<span class="attr">#6</span>]</span><br><span class="line">Y<span class="number">0.</span></span><br><span class="line"><span class="keyword">while</span>[<span class="attr">#3</span><span class="keyword">GE</span><span class="attr">#7</span>]D<span class="meta">O1</span></span><br><span class="line"><span class="attr">#3</span>=<span class="attr">#1</span></span><br><span class="line"><span class="attr">#4</span>=-[<span class="attr">#2</span>*<span class="attr">#2</span>]*SQRT[<span class="number">1</span>-<span class="attr">#3</span>*<span class="attr">#3</span>/<span class="attr">#1</span>/<span class="attr">#1</span>]</span><br><span class="line"><span class="name">G01</span>X[<span class="attr">#3</span>]Y[<span class="attr">#4</span>]F[<span class="attr">#6</span>]</span><br><span class="line"><span class="attr">#3</span>=<span class="attr">#3</span><span class="number">-0.1</span></span><br><span class="line">E<span class="symbol">ND1</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span>[<span class="attr">#3</span><span class="keyword">GE</span><span class="attr">#5</span>]D<span class="meta">O2</span></span><br><span class="line"><span class="attr">#3</span>=<span class="attr">#7</span></span><br><span class="line"><span class="attr">#4</span>=-[<span class="attr">#2</span>*<span class="attr">#2</span>]*SQRT[<span class="number">1</span>-<span class="attr">#3</span>*<span class="attr">#3</span>/<span class="attr">#1</span>/<span class="attr">#1</span>]</span><br><span class="line"><span class="name">G01</span>X[<span class="attr">#3</span>]Y[<span class="attr">#4</span>]F[<span class="attr">#6</span>]</span><br><span class="line"><span class="attr">#3</span>=<span class="attr">#3</span><span class="number">-0.1</span></span><br><span class="line">E<span class="symbol">ND2</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span>[<span class="attr">#3</span><span class="keyword">lE</span><span class="attr">#7</span>]D<span class="meta">O3</span></span><br><span class="line"><span class="attr">#3</span>=<span class="attr">#5</span></span><br><span class="line"><span class="attr">#4</span>=[<span class="attr">#2</span>*<span class="attr">#2</span>]*SQRT[<span class="number">1</span>-<span class="attr">#3</span>*<span class="attr">#3</span>/<span class="attr">#1</span>/<span class="attr">#1</span>]</span><br><span class="line"><span class="name">G01</span>X[<span class="attr">#3</span>]Y[<span class="attr">#4</span>]F[<span class="attr">#6</span>]</span><br><span class="line"><span class="attr">#3</span>=<span class="attr">#3</span><span class="number">+0.1</span></span><br><span class="line">E<span class="symbol">ND3</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span>[<span class="attr">#3</span><span class="keyword">lE</span><span class="attr">#1</span>]D<span class="meta">O4</span></span><br><span class="line"><span class="attr">#3</span>=<span class="attr">#7</span></span><br><span class="line"><span class="attr">#4</span>=[<span class="attr">#2</span>*<span class="attr">#2</span>]*SQRT[<span class="number">1</span>-<span class="attr">#3</span>*<span class="attr">#3</span>/<span class="attr">#1</span>/<span class="attr">#1</span>]</span><br><span class="line"><span class="name">G01</span>X[<span class="attr">#3</span>]Y[<span class="attr">#4</span>]F[<span class="attr">#6</span>]</span><br><span class="line"><span class="attr">#3</span>=<span class="attr">#3</span><span class="number">+0.1</span></span><br><span class="line">E<span class="symbol">ND4</span></span><br><span class="line"></span><br><span class="line"><span class="name">G01</span>Y-[<span class="attr">#2</span><span class="number">+1.</span>]</span><br><span class="line">X-[<span class="attr">#1</span><span class="number">+1.</span>]</span><br><span class="line">Y+[<span class="attr">#2</span><span class="number">+1.</span>]</span><br><span class="line">X+[<span class="attr">#1</span><span class="number">+10.</span>]</span><br><span class="line"><span class="name">G40</span><span class="name">G60</span></span><br><span class="line"><span class="name">G00</span>Z<span class="number">100</span></span><br><span class="line"><span class="name">M05</span></span><br><span class="line"><span class="name">G91</span><span class="name">G28</span>Z<span class="number">0</span></span><br><span class="line"><span class="name">M30</span></span><br><span class="line"><span class="meta">%</span></span><br></pre></td></tr></table></figure><p>这一段忘记是啥了。。</p><figure class="highlight nc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">%</span></span><br><span class="line"><span class="meta">O0001</span></span><br><span class="line"><span class="name">G98</span><span class="name">G40</span><span class="name">G21</span></span><br><span class="line">T<span class="number">0101</span></span><br><span class="line"><span class="name">G00</span>X<span class="number">100.</span>Z<span class="number">100.</span></span><br><span class="line"><span class="name">M04</span>S<span class="number">600</span></span><br><span class="line"><span class="name">G00</span>X<span class="number">52.</span>Z<span class="number">2.</span></span><br><span class="line"><span class="name">G71</span>U<span class="number">1.0</span>R<span class="number">0.3</span></span><br><span class="line"><span class="name">G71</span>P<span class="number">100</span>Q<span class="number">200</span>U<span class="number">0.3</span>W<span class="number">0.0</span>F<span class="number">150</span></span><br><span class="line"><span class="symbol">N100</span><span class="name">G00</span>X<span class="number">0.</span>S<span class="number">1000</span></span><br><span class="line"><span class="name">G01</span>Z<span class="number">0.</span>F<span class="number">80</span></span><br><span class="line"><span class="name">G03</span>X<span class="number">16.</span>Z<span class="number">-8.0</span>R<span class="number">8.0</span></span><br><span class="line"><span class="name">G01</span>X<span class="number">18.0</span></span><br><span class="line">X<span class="number">20.0</span>Z<span class="number">-9.0</span></span><br><span class="line">Z<span class="number">-16.0</span></span><br><span class="line">X<span class="number">26.0</span></span><br><span class="line"><span class="name">G03</span>X<span class="number">36.0</span>Z<span class="number">-21.0</span>R<span class="number">5.0</span></span><br><span class="line"><span class="name">G01</span>Z<span class="number">-26.0</span></span><br><span class="line"><span class="name">G02</span>X<span class="number">46.0</span>Z<span class="number">-31.0</span>R<span class="number">5.0</span></span><br><span class="line"><span class="symbol">N200</span><span class="name">G01</span>X<span class="number">52.0</span></span><br><span class="line"><span class="name">G70</span>P<span class="number">100</span>Q<span class="number">200</span></span><br><span class="line"><span class="name">G00</span>X<span class="number">100.0</span>Z<span class="number">100.0</span></span><br><span class="line"><span class="name">M30</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 机械制造 </category>
          
          <category> 数控机床 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> NC代码 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C51简单的开源示例</title>
      <link href="/posts/6c8a0937/"/>
      <url>/posts/6c8a0937/</url>
      
        <content type="html"><![CDATA[<h2 id="前言">前言</h2><blockquote><p>既然这几天在玩github那么就把之前做过的一些简单C51示例放在仓库里了</p></blockquote><p>没有一个难的项目，所以我也不费口舌了</p>  <a class="btn-beautify " href="https://github.com/hgez6/C51easyvdemo"   title="如果有兴趣开源地址都在这里"><i class="far fa-hand-point-right"></i><span>如果有兴趣开源地址都在这里</span></a>]]></content>
      
      
      <categories>
          
          <category> 嵌入式 </category>
          
          <category> C51 </category>
          
          <category> 开源 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C </tag>
            
            <tag> 简单 </tag>
            
            <tag> keil </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CPP对象的初始化清理</title>
      <link href="/posts/c1078a08/"/>
      <url>/posts/c1078a08/</url>
      
        <content type="html"><![CDATA[<h1 id="构造函数进行初始化">构造函数进行初始化</h1><ol><li>构造函数</li><li>没有返回值 不用写void</li><li>函数名 与类名相同</li><li>构造函数可以有参数可以发生重载</li><li>创建对象会自动调用一次且仅有一次（初始化）</li></ol><h2 id="构造函数">构造函数</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Person</span></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">Person</span>()</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;Person&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>初始化会执行 <code>cout &lt;&lt; &quot;Person&quot; &lt;&lt; endl;</code>一次</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">test01</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">Person p;    <span class="comment">//执行完自动调用析构函数</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">test01</span>();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="析构函数">析构函数</h1><ol><li>会进行清理操作</li><li>在函数名前加~即可</li><li>无参数 不重载</li><li>对象销毁前自动调用且只有一次</li></ol><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Person</span></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">Person</span>()</span><br><span class="line">&#123;</span><br><span class="line">  cout &lt;&lt; <span class="string">&quot;Person构造函数&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">~<span class="built_in">Person</span>()    <span class="comment">//析构函数就算不加执行完也会空实现的析构函数创建，构造函数同理</span></span><br><span class="line">&#123;</span><br><span class="line">  cout &lt;&lt; <span class="string">&quot;Person析构函数&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">Person p;   <span class="comment">//执行构造</span></span><br><span class="line"><span class="comment">//test01();   //test函数调用完析构</span></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;  <span class="comment">//析构函数</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 学习记录 </category>
          
          <category> 开源 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C++ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PLC8路抢答器设计思路</title>
      <link href="/posts/dfde453e/"/>
      <url>/posts/dfde453e/</url>
      
        <content type="html"><![CDATA[<h2 id="开发环境-方案设计">开发环境&amp;方案设计</h2><p>S7-200实验箱，其中自带抢答器部分仅有<mark class="hl-label red">四路可用</mark> </p><div class="tip success faa-horizontal animated-hover"><p>但是可以接到机械臂的IO上实现功能，同时还能用触摸屏控制。</p></div>  <div class="tip warning faa-horizontal animated-hover"><p>要注意使用触摸屏控制照样需要关联输入输出线圈  如果想让本地数码管显示需要让对应的输入的输入输出线圈得电  还是需要连线。</p></div><div class='checkbox green checked'><input type="checkbox" checked="checked"/>            <p>如果用触摸屏推荐使用屏幕显示数码管关联变量</p>            </div><div class="note blue icon-padding simple"><i class="note-icon fas fa-bullhorn"></i><p>接线图如下所示：<br>其中Q0.1-Q0.6对应8位数码管的7段(除去小数点的那一段)<br>Q1.0是提示灯  I0.0是启动按钮 I0.1是复位按钮<br>M20.2-M21.1是触摸屏控制8路的的驱动<br>M0.1-M0.7是有线连接的8路驱动</p></div><blockquote><p>程序讲解</p></blockquote><div style="position: relative; width: 100%; height: 0; padding-bottom: 75%;"><iframe  src="//player.bilibili.com/player.html?aid=550376197&bvid=BV1Fi4y1975w&cid=477939572&page=1" scrolling="no" border="0" frameborder="no" allowfullscreen="true"style="position: absolute; width: 100%; height: 100%; Left: 0; top: 0;" ></iframe></div>  <h2 id="触摸屏部分">触摸屏部分</h2><p>触摸屏可以直接通过触摸屏上的按钮操控,而无需接输入I0.0-I1.1,原理是触摸屏可以用以太网和PC在网段下下载图形化程序，而在图形化IDE(WinCC中)按钮可以直接与通用辅助寄存器关联起来，利用已写好的梯形图对PLC进行控制实现，也就是用软件资源扩展硬件，这是重要的编程思想！😀</p><div class='checkbox times red checked'><input type="checkbox" checked="checked"/>            <p>I0.0-I0.1变量关联在WINCC start/restart 中</p>            </div><div class='checkbox green'><input type="radio" />            <p>PLC输入继电器(I)外部有一物理输入端子与之对应</p>            </div><div class='checkbox cyan checked'><input type="checkbox" checked="checked"/>            <p>本项目中建议全局使用通用辅助继电器M进行变量关联</p>            </div><div class='checkbox green checked'><input type="checkbox" checked="checked"/>            <p>推荐使用软件关联通用辅助继电器扩展IO</p>            </div><details class="folding-tag" ><summary> 查看通讯设置图片 </summary>              <div class='content'>              <img src="/posts/dfde453e/%E9%80%9A%E8%AE%AF%E6%B5%8B%E8%AF%95.PNG" class="" title="[通讯测试]">              </div>            </details><details class="folding-tag" ><summary> 查看变量关联表图片 </summary>              <div class='content'>              <img src="/posts/dfde453e/1.PNG" class="" title="description&#x3D;变量关联表">              </div>            </details><details class="folding-tag" ><summary> 查看图形界面图片 </summary>              <div class='content'>              <img src="/posts/dfde453e/%E5%9B%BE%E5%BD%A2%E7%95%8C%E9%9D%A2.PNG" class="" title="description&#x3D;图形界面">              </div>            </details><wavy>截止目前本人做的所有PLC项目均以开源：</wavy><div class="tag link"><a class="link-card" title="开源地址" href="https://github.com/hgez6/PLC-learn"><div class="left"><img src="https://unpkg.zhimg.com/akilar-candyassets/image/siteicon/favicon.ico"/></div><div class="right"><p class="text">开源地址</p><p class="url">https://github.com/hgez6/PLC-learn</p></div></a></div>]]></content>
      
      
      <categories>
          
          <category> 开源 </category>
          
          <category> 电气自动化 </category>
          
          <category> PLC </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 多路 </tag>
            
            <tag> 触摸屏 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>云边端背景下的多传感器监测系统可行性分析</title>
      <link href="/posts/93ba12d5/"/>
      <url>/posts/93ba12d5/</url>
      
        <content type="html"><![CDATA[<h1 id="引言">引言</h1><p>什么是云-边-端？<br>其实没有那么高端</p><div class="note primary modern"><p>云-24小时服务器 边-高算力平台(整合多种算法) 端-在本文中特指传感器终端</p></div><h2 id="浅谈实现方案">浅谈实现方案</h2><p>以下为流程图：</p><details class="folding-tag" ><summary> 查看流程图 </summary>              <div class='content'>              <img src="/posts/93ba12d5/%E6%B5%81%E7%A8%8B%E5%9B%BE.png" class="">              </div>            </details><p>流程图仅提供一种实现思路，2022年了相关技术已经相当成熟  简单的开源Demo也很多不再赘述。<br>以微信云平台为例<br>登陆开发者平台，填入物联网云平台 API 即可<br>小程序接入 API 后便可以从物联网云获取传感器信息<br>这里的传感器信息再经过高算力计算机处理，按照特定的算法数据过滤和整合，抵达用户。<br>如果想传递图片和视频 一般摄像头模块固件文档有使用方法<br>如果没有 也可以接入云图床和云视频平台 产生相应的外链并解析即可获取视频和图片信息。</p><div class="tip success faa-horizontal animated-hover"><p>直接传输视频和图片可能很难但使用外链的方式在程序中获取传感器终端的相应信息却很简单。</p></div><h2 id="传感器模块与边缘计算">传感器模块与边缘计算</h2><p>任意传感器放在用户要监控的各个部位，就可以获取到相应的数据</p><div class='checkbox green'><input type="radio" />            <p>比如光电传感器监测亮度，超声波测速，还有各种位移，加速度传感器等</p>            </div> <mark class="hl-label red">我们知道传感器模块具有独立和互相之间低耦合特性，利用此特性非常符合"多终端监测"的概念</mark>   <p>传感器模块可以通过无线通讯模组(4G,5G,WIFI等)通过HTTP或者MQTT向高算力计算机发送数据，当然这里的高算力计算机读者也可以与物联网云服务器中的云函数整合在一起。<br>当然有些传感器例如PSE软启动器之间与供电设备连在一起那么就要用工业上的Modbus协议或者TCP/IP等在接入高算力计算机。</p><div class="note default flat"><p>关于数据集中到高算力计算机或者云后怎样设计算法过滤，整合信息这块比较难，我没能力在此阐述</p></div><h3 id="浅谈公用方案设计">浅谈公用方案设计</h3><p>公用方案例如图书馆管理系统，这样的市政公开环境监测方案<br>这种方案不需要为不同用户添加数据库，直接可以在服务器上部署物联网云和相应的界面</p><h3 id="浅谈多用户方案设计">浅谈多用户方案设计</h3><p>多用户情况下需要为每一个用户设置一个唯一的标识。<br>通过这个标识与数据库连接，通过读取经过处理后的传感器数据。</p><h3 id="传感器模组设计">传感器模组设计</h3><p>推荐使用带有无线通讯扩展传感器，或者采用低算力芯片IO口连接传感器<br>来实现云边端背景下的多传感器监测系统设计！</p>]]></content>
      
      
      <categories>
          
          <category> 电气自动化 </category>
          
          <category> 自动检测技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 云端 </tag>
            
            <tag> 思考 </tag>
            
            <tag> 传感器 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CPP封装对象特性学习记录</title>
      <link href="/posts/9ce7577d/"/>
      <url>/posts/9ce7577d/</url>
      
        <content type="html"><![CDATA[<div class="note info simple"><p>本人将持续在这里更新C++学习记录 本次将学习类的嵌套和封装--以点和圆的关系为例</p></div><p><a href="https://www.bilibili.com/video/BV1et411b73Z?p=105">看到这里啦</a></p><h2 id="圆类中再添加点类">圆类中再添加点类</h2><p>首先新建点类和圆类 然后再圆类中添加点类<br>此处已进行过封装  封装成<code>cricle.h</code>注意引用自定义头文件需要加<code>&quot;&quot;</code>，学会1个VS2022快捷键TAB+shift为向左缩进。<br>圆类头文件</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Circle</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="comment">//设置x</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">setr</span><span class="params">(<span class="type">int</span> r1)</span></span>;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">getr</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">setcenter</span><span class="params">(point center1)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function">point <span class="title">getcenter</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line"><span class="type">int</span> r;</span><br><span class="line">point center;  <span class="comment">//圆类中添加点类</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>点类头文件</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">pragma</span> once</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">point</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="comment">//设置x</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">setx</span><span class="params">(<span class="type">int</span> x1)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">sety</span><span class="params">(<span class="type">int</span> y1)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">getx</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">gety</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line"><span class="type">int</span> x;</span><br><span class="line"><span class="type">int</span> y;</span><br><span class="line"></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="包含头文件的cpp-点和圆函数详细">包含头文件的CPP 点和圆函数详细</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;cricle.h&quot;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Circle::setr</span><span class="params">(<span class="type">int</span> r1)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">r = r1;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">Circle::getr</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> r;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Circle::setcenter</span><span class="params">(point center1)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line">center = center1;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">point <span class="title">Circle::getcenter</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> center;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><mark class="hl-label red">这里的Circle::意思是在圆类下的行为函数这一点特别重要,所以要包含相应类的头文件</mark>   ]]></content>
      
      
      <categories>
          
          <category> 学习记录 </category>
          
          <category> 开源 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C++ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CPP学习记录(1/5)对象</title>
      <link href="/posts/5d2487d7/"/>
      <url>/posts/5d2487d7/</url>
      
        <content type="html"><![CDATA[<div class="note info simple"><p>本人将持续在这里更新C++学习记录<br>目前学到对象</p></div><h2 id="对象私有化">对象私有化</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Person</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="comment">//设置姓名</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">setName</span><span class="params">(string wname)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">name = wname;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="function">string <span class="title">getname</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> name;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">getage</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span> age = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">return</span> age;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">setAge</span><span class="params">(<span class="type">int</span> age)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (age &gt; <span class="number">180</span> || age &lt; <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;你这个老妖精&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">age = age;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">setyp</span><span class="params">(string yp1)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">yp = yp1;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line"><span class="comment">//R/W</span></span><br><span class="line">string name;</span><br><span class="line"><span class="comment">// R</span></span><br><span class="line"><span class="type">int</span> age;</span><br><span class="line"><span class="comment">// W</span></span><br><span class="line">string yp;</span><br><span class="line"></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><div class="note warning simple"><p>巧妙设置public函数接口</p></div><p>代码中priavte为私有属性， Class类内可以访问，类外无问。 既然类内都可以访问那么，直接在类内定义public接口即可，通过public下 自定义不同的读写函数接口，就可以在类外控制读/写。<br>由于类外无法直接访问私有变量，所以要通过类内公有<code>get()</code>来访问。<br>*写函数的行为要注意：*返回值类型要与功能对应。</p><h2 id="实例化具体对象">实例化具体对象</h2><p>通过<code>Person P1;</code>这个<strong>P1</strong>就是实例化的具体对象  <mark class="hl-label green">(可创建任意多个)</mark> ，通过他访问类内的成员和行为。<code>P1.XXX</code>如<code>P1.mj();</code>最后不要忘记赋予cout左值&lt;&lt;输出哦~</p><div class="note warning simple"><p>sruct和class的区别</p></div><p>struct默认是公有，后者为私有。</p><h2 id="全局函数判断属性">全局函数判断属性</h2><p>函数()中定义类中的实例化对象了来访问。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">bool</span> <span class="title">issame</span><span class="params">(Cube C1,Cube C2)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (C1.<span class="built_in">getH</span>() == C2.<span class="built_in">getH</span>() &amp;&amp; C1.<span class="built_in">getK</span>() == C2.<span class="built_in">getK</span>())</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="利用成员函数判断">利用成员函数判断</h2><p>class pubilc 下定义</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">bool</span>  <span class="title">issame2</span><span class="params">(Cube&amp; C)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (h == C.h &amp;&amp; k == C.k)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>int main 中<code>bool ret = C1.issame2(C2);</code>调用实例C1下的公用函数再传入C2地址做判断。</p><h3 id="当然还是开源的">当然还是开源的</h3>  <a class="btn-beautify " href="https://github.com/hgez6/CPPLearn"   title="如果有兴趣源码都在这里"><i class="far fa-hand-point-right"></i><span>如果有兴趣源码都在这里</span></a>  <mark class="hl-label green">不说了睡了!</mark> ]]></content>
      
      
      <categories>
          
          <category> 学习记录 </category>
          
          <category> 开源 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C++ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>现场总线PSE通讯-OPC远控-XT断路器总结</title>
      <link href="/posts/9f237e38/"/>
      <url>/posts/9f237e38/</url>
      
        <content type="html"><![CDATA[<h1 id="写在前面">写在前面</h1><p>本来想用markdown写的但是用word写完了，加上我很忙，又什么都学的不精，也不想在花时间在打字上了。<br>嘿嘿</p><blockquote><p>就在博客上灌个水吧。😂</p></blockquote><h3 id="当然还是开源的我也会把word文档放出来">当然还是开源的我也会把word文档放出来</h3>  <a class="btn-beautify " href="https://github.com/hgez6/ABB-modbus"   title="如果有兴趣源码文档都在这里"><i class="far fa-hand-point-right"></i><span>如果有兴趣源码文档都在这里</span></a>  <mark class="hl-label green">不说了睡了!</mark> ]]></content>
      
      
      <categories>
          
          <category> 开源 </category>
          
          <category> 电气自动化 </category>
          
          <category> 现场总线 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 外链 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C++通讯录编程学习记录</title>
      <link href="/posts/7025eb1e/"/>
      <url>/posts/7025eb1e/</url>
      
        <content type="html"><![CDATA[<h2 id="项目说明">项目说明</h2><p>VS2022 这个其实是个简单的C语言复习项目主要在Main中展现显示函数，然后赋予局部变量右值以存按键值：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">showmenu</span>();</span><br><span class="line">cin &gt;&gt; select;</span><br></pre></td></tr></table></figure><p>然后用 while+switch+子函数 选择功能 输入0用return 0和system(&quot;pause&quot;);退出。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">switch</span> (select)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line"><span class="built_in">addperson</span>(&amp;book);</span><br><span class="line"></span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line"></span><br><span class="line"><span class="built_in">showperson</span>(&amp;book);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line"><span class="built_in">deleteperson</span>(&amp;book);</span><br><span class="line"></span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line"><span class="built_in">find</span>(&amp;book);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">5</span>:</span><br><span class="line"><span class="built_in">changep</span>(&amp;book);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> <span class="number">6</span>:</span><br><span class="line"><span class="built_in">cleanall</span>(&amp;book);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> <span class="number">0</span>:</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;正在退出当前系统。。&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><h2 id="顺便提一句">顺便提一句</h2><p>  对于清空联系人不用全局遍历赋值为NULL，直接对    books book;     books内结构体中的book类型里边的总人数size对象赋值为0即可，连人数都没有了那么也就清空了可能这就是顶层设计吧👏。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">struct</span> <span class="title class_">books</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">person</span> arryp[<span class="number">1000</span>];</span><br><span class="line"><span class="type">int</span> size;</span><br><span class="line"></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="结构体和oop的区别">结构体和OOP的区别</h2><p>结构体相比OOP是不支持继承和多态的</p><h3 id="开源地址">开源地址</h3><p><a href="https://gitee.com/HG666889/CPP-0">点击查看源码-&gt;</a></p>]]></content>
      
      
      <categories>
          
          <category> C++ </category>
          
          <category> 学习记录 </category>
          
          <category> 开源 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 结构体指针 </tag>
            
            <tag> 通讯录 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>GIT指令管理代码简单使用方法</title>
      <link href="/posts/3e4c68da/"/>
      <url>/posts/3e4c68da/</url>
      
        <content type="html"><![CDATA[<h1 id="官方步骤">官方步骤</h1><p>…or create a new repository on the command line</p><figure class="highlight armasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">echo</span> <span class="string">&quot;# apitj&quot;</span> &gt;&gt; README.md</span><br><span class="line"><span class="symbol">git</span> init</span><br><span class="line"><span class="symbol">git</span> <span class="keyword">add</span> README.md</span><br><span class="line"><span class="symbol">git</span> commit -m <span class="string">&quot;first commit&quot;</span></span><br><span class="line"><span class="symbol">git</span> branch -M main</span><br><span class="line"><span class="symbol">git</span> remote <span class="keyword">add</span> origin https:<span class="comment">//github.com/hgez6/apitj.git</span></span><br><span class="line"><span class="symbol">git</span> <span class="keyword">push</span> -u origin main</span><br></pre></td></tr></table></figure><p>…or push an existing repository from the command line</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git remote add origin https:<span class="regexp">//gi</span>thub.com<span class="regexp">/hgez6/</span>apitj.git</span><br><span class="line">git branch -M main</span><br><span class="line">git push -u origin main</span><br></pre></td></tr></table></figure><p>…or import code from another repository</p><p>You can initialize this repository with code from a Subversion, Mercurial, or TFS project.</p><h2 id="初始化">初始化</h2><p>安装GIT工具在指定目录右键<code>git init</code>初始化使其能被git工具上传，可用文件管理器进入目录或者使用<code>cd/xxx</code>终端挂载</p><h2 id="添加文件">添加文件</h2><p>使用 <code>git add -A</code>或者<code>git add . </code>添加所有文件进暂存区，使用&quot;&quot;可添加指定文件<code>git add &quot;readme.txt&quot; </code></p><h2 id="提交commit-修改">提交commit 修改</h2><p>从Git的暂存区提交版本到仓库，参数-m后为当次提交的备注信息<br><code>git commit -m &quot;1.0.0&quot;</code></p><h2 id="推送到指定仓库">推送到指定仓库</h2><p>将本地的Git仓库信息推送上传到服务器<br><code>git push https://gitee.com/***/test.git</code></p><p>或者先关联远程git服务器(推荐)</p><p><code>git remote add origin https://gitee.com/xxx/xx.git</code><br>然后 <code>git push  origin master</code>后面的master为分支对于多分支类型可以引用其他分支 然后合并 <code>git-merge</code></p><h3 id="错误处理">错误处理</h3><p>  遇到无法push的情况,通常是因为远端存在的文件类型与本地不一致，或者是本地换过文件夹目录，可使用<code>git pull origin master</code>先拉取仓库然后再本地修改，提交，推送。</p><p>遇到无法直接PULL的情况，可能是git文件类型判断错误，使用 <code>git pull origin master --allow-unrelated-histories</code>(能用<code>git pull</code>的就别加后缀，加后缀容易有BUG)；可解决或者强行合并<code>git push -f origin master</code></p><p>  如果远端文件你已经不需要，直接删除，即可push;仓库的文件夹无法直接删除，需要使用<code>git rm file_path</code>删除，或者用上文中的方法，先pull下来本地删除文件，最后再推送。</p><p>注意在github上云分支默认为<code>Main</code>但是本地还是<code>master</code></p><ul><li>[√]所以要先将本地的仓库改名使用</li><li>[√]改云仓库为master也可(推荐)</li><li><code>git branch -m master main</code><br>即可！<br>遇到仓库不一致的情况要先删掉原来的仓库<code>git remote rm origin</code>再重新add。</li></ul><h2 id="白嫖代码">白嫖代码</h2><blockquote><p>白嫖总是让人开心~<br>所以熟练掌握白嫖的奥义灵活运用是相当重要的！<br>  通过<code>git clone &#123;仓库的url&#125;</code>白嫖代码，也可直接下载zip包(推荐因为这样能调用第三方下载器例如idm 64线程下载)解压后再进行<code>git init</code>即可。</p></blockquote><p>  对于支持npm包管理的插件除了下载整个仓库外；还可以直接<code>npm install &#123;packname&#125;</code>或者<code>yarn install &#123;packname&#125;</code>(高版本)，根据实际情况末尾添加<code>--save</code>或者其他参数。<br>关于环境<br>白嫖的代码环境肯定不与你的一致，所以要灵活运用，也可直接看package.json内详细插件和依赖的参数来做判断 在用<code>npm install &#123;packname&#125;@x.x.x(版本)</code>即可。<br>有些文件后缀内不存代码github无法解析会改后缀但是没关系，因为代码才是核心。</p><mark class="hl-label green">参考链接</mark> <p><a href="https://gitee.com/help/articles/4114#article-header0">gitee git基本用法</a></p>]]></content>
      
      
      <categories>
          
          <category> 代码云管理 </category>
          
          <category> git </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 教程 </tag>
            
            <tag> 记录 </tag>
            
            <tag> gitee </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>TCP局域网内点对点控制方案</title>
      <link href="/posts/15a6564e/"/>
      <url>/posts/15a6564e/</url>
      
        <content type="html"><![CDATA[<h1 id="原理说明">原理说明</h1><p>  使用本地TCP服务器直接可以接受发送<code>char[]</code>型数据而无需处理。<br>  设置C52与无线通讯模块为相同的波特率进行有线串口通讯连接。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">Uart_Init</span><span class="params">()</span><span class="comment">//4800bps@12.000MHz          //误差太大用4800</span></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">PCON |= <span class="number">0x80</span>;<span class="comment">//使能波特率倍速位SMOD</span></span><br><span class="line">SCON = <span class="number">0x50</span>;<span class="comment">//8位数据,可变波特率</span></span><br><span class="line"><span class="comment">//AUXR &amp;= 0xBF;//定时器1时钟为Fosc/12,即12T</span></span><br><span class="line"><span class="comment">//AUXR &amp;= 0xFE;//串口1选择定时器1为波特率发生器</span></span><br><span class="line">TMOD &amp;= <span class="number">0x0F</span>;<span class="comment">//清除定时器1模式位</span></span><br><span class="line">TMOD |= <span class="number">0x21</span>;<span class="comment">//设定定时器1为8位自动重装方式  定时器T0为16位定时模式（低八位）</span></span><br><span class="line">TL1 = <span class="number">0xF3</span>;<span class="comment">//设定定时初值</span></span><br><span class="line">TH1 = <span class="number">0xF3</span>;<span class="comment">//设定定时器重装值</span></span><br><span class="line">ET1 = <span class="number">0</span>;<span class="comment">//禁止定时器1中断</span></span><br><span class="line">TR1 = <span class="number">1</span>;<span class="comment">//启动定时器1</span></span><br><span class="line">  EA=<span class="number">1</span>;                            <span class="comment">//总中断打开</span></span><br><span class="line">ES=<span class="number">0</span>;                             <span class="comment">//关闭串口中断</span></span><br><span class="line">  ET0=<span class="number">1</span>;   <span class="comment">//定时器T0中断允许</span></span><br><span class="line">TR0=<span class="number">1</span>;    <span class="comment">//启动T0计数器  </span></span><br><span class="line">  TH0=<span class="number">0x3C</span>;</span><br><span class="line">  TL0=<span class="number">0xB0</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>RI串口中断接受：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">Uart_Interrupt</span><span class="params">()</span> interrupt 4        </span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">      <span class="keyword">if</span>(RI==<span class="number">1</span>)</span><br><span class="line">      &#123;</span><br><span class="line">           RI=<span class="number">0</span>;</span><br><span class="line">           Receive=SBUF;        <span class="comment">//MCU接收wifi模块反馈回来的数据</span></span><br><span class="line">           Recive_table[i]=Receive;      </span><br><span class="line">           i++;         </span><br><span class="line">           <span class="keyword">if</span>((Receive ==<span class="string">&#x27;\n&#x27;</span>))&#123;</span><br><span class="line">i=<span class="number">0</span>;</span><br><span class="line">flag = <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">      <span class="keyword">else</span> TI=<span class="number">0</span>;   </span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>串口发送：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/********************************************************************</span></span><br><span class="line"><span class="comment">名称：串口发送函数</span></span><br><span class="line"><span class="comment">功能：MCU向其他与其连接的设备发送数据（此处是无线WIFI模块ESP8266)</span></span><br><span class="line"><span class="comment">********************************************************************/</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">Send_Uart</span><span class="params">(uchar value)</span></span><br><span class="line">&#123;</span><br><span class="line">      ES=<span class="number">0</span>;         <span class="comment">//关闭串口中断</span></span><br><span class="line">      TI=<span class="number">0</span>;         <span class="comment">//清发送完毕中断请求标志位</span></span><br><span class="line">      SBUF=value;     <span class="comment">//发送</span></span><br><span class="line">      <span class="keyword">while</span>(TI==<span class="number">0</span>);    <span class="comment">//等待发送完毕</span></span><br><span class="line">      TI=<span class="number">0</span>;         <span class="comment">//清发送完毕中断请求标志位</span></span><br><span class="line">      ES=<span class="number">1</span>;         <span class="comment">//允许串口中断</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/********************************************************************</span></span><br><span class="line"><span class="comment">名称：串口发送数据</span></span><br><span class="line"><span class="comment">作用: 通过串口发送指令到WIFI模块，以便可以实现无线接入和控制，带回车换行</span></span><br><span class="line"><span class="comment">********************************************************************/</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">SerialSend</span><span class="params">(uchar *puf)</span> <span class="comment">// 数组指针*puf指向字符串数组               </span></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">      <span class="keyword">while</span>(*puf!=<span class="string">&#x27;\0&#x27;</span>)    <span class="comment">//遇到空格跳出循环</span></span><br><span class="line">      &#123;</span><br><span class="line">           Send_Uart(*puf);  <span class="comment">//向WIFI模块发送控制指令。</span></span><br><span class="line">           us_delay(<span class="number">5</span>);</span><br><span class="line">           puf++;      </span><br><span class="line">      &#125;</span><br><span class="line">      us_delay(<span class="number">5</span>);</span><br><span class="line">      Send_Uart(<span class="string">&#x27;\r&#x27;</span>);<span class="comment">//回车</span></span><br><span class="line">     us_delay(<span class="number">5</span>);</span><br><span class="line">      Send_Uart(<span class="string">&#x27;\n&#x27;</span>);   <span class="comment">//换行                //本身已经包含了回车和换行</span></span><br><span class="line">&#125;   </span><br><span class="line"></span><br><span class="line"><span class="comment">/********************************************************************</span></span><br><span class="line"><span class="comment">名称：串口发送数据</span></span><br><span class="line"><span class="comment">作用: 通过串口发送指令到WIFI模块，不带回车换行</span></span><br><span class="line"><span class="comment">********************************************************************/</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">SerialSend_byte</span><span class="params">(uchar *puf)</span> <span class="comment">// 数组指针*puf指向字符串数组               </span></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">      <span class="keyword">while</span>(*puf!=<span class="string">&#x27;\0&#x27;</span>)    <span class="comment">//遇到空格跳出循环</span></span><br><span class="line">      &#123;</span><br><span class="line">           Send_Uart(*puf);  <span class="comment">//向WIFI模块发送控制指令。</span></span><br><span class="line">           us_delay(<span class="number">5</span>);</span><br><span class="line">           puf++;      </span><br><span class="line">      &#125;</span><br><span class="line">&#125;   </span><br></pre></td></tr></table></figure><p>最后本地解析即可！</p><h3 id="效果演示视频">效果演示视频</h3><div style="position: relative; width: 100%; height: 0; padding-bottom: 75%;"><iframe src="//player.bilibili.com/player.html?aid=421963708&bvid=BV1J3411b7oR&cid=448963426&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true" style="position: absolute; width: 100%; height: 100%; Left: 0; top: 0;" ></iframe></div><h3 id="tips">Tips</h3><a href="/posts/63350/" title="一种轻量化云端闭环设备间协同算法设计">一种轻量化云端闭环设备间协同算法设计</a>]]></content>
      
      
      <categories>
          
          <category> 嵌入式 </category>
          
          <category> C51 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 局域网远程控制 </tag>
            
            <tag> 解决方案 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>一种轻量化云端闭环设备间协同算法设计</title>
      <link href="/posts/63350/"/>
      <url>/posts/63350/</url>
      
        <content type="html"><![CDATA[<h4 id="摘要">摘要</h4><p>  本文将介绍云端链式闭环协同算法，该算法以TCP云/MQTT3.1.1协议的云端主题耦合思想为核心，建立在物联网云平台应用层的基础上，具有开关功能，是一种面向低算力场景下的设备间协同算法。云端耦合特性使该算法具有跨平台能力，该算法下又包含n重功能位校验算法与数据类型转换算法，能实现复杂指令轻量化自定义传输，利用异步通讯结合闭环反馈的思想能保证通讯数据可信情况下减少云端和本地双向资源占用，并使用软多线程保证通讯的稳定性。为提升该算法的应用范围及稳定性，本文还将探讨如何将传统设备接入本算法以及使用本地TCP Sever作为备用方案。<br><em>关键词：</em> 设备协同算法；轻量化；异步闭环；传统设备接入及本地TCP Sever；跨平台</p><h3 id="引言">引言</h3><p>  无线通讯技术的发展使“万物互联”成为可能，以华为的Openharmony开源物联网系统为代表，已经为支持运行操作系统的较高算力芯片，提供设备间协同解决方案。但是目前面向低算力低内存场景下的跨平台设备间协同解决方案依然很少，物联网云平台失效情况下的备用解决方案较少，并且如何将传统不搭载无线通讯模块的设备接入物联网待需解决。<br>因此作者针对低算力场景下的设备间协同，提出云端链式闭环协同算法概念，使用云端主题间的耦合进行数据传递，利用网络通信中的字符串数据流校验进行设备状态识别与控制，并且包含多种子算法。经测试该算法具有轻量化，使用简便，稳定性较高，数据可信性较强等特性，还可基于此探究跨平台硬件协同和设备硬件资源通过云端优势互补等方案设计。</p><h1 id="云端链式闭环协同算法框架">云端链式闭环协同算法框架</h1><img src="/posts/63350/kj.png" class="" title="[图1-算法框架流程图]"><h2 id="算法框架解析">算法框架解析</h2><p>  该算法通过向另一设备订阅的主题1发布信息，另一设备通过本地解析该信息达到设备间协同的目的。<br>其中“静态信息”在本算法中指在本次协同过程中不会改变的量如联网IP信息，设备ID，WIFI信息等。<br>“动态信息”在本算法中指当前设备在协同过程中会动态变化的量，如所带负载的状态信息变化。<br>开关灯这样的BOOL量本算法可以轻易处理，若遇到像电机转速控制这样的连续的状态变化量，建议读者设置转速等级标志位，再通过功能位校验进行协同，或者通过定时器定时发送转速来达到异步闭环的目的。<br>同时两者均带有闭环反馈以保证数据的可信度。</p><h2 id="算法扩展性解析">算法扩展性解析</h2><p>  图1使用设备1 作为带有显示器的主设备，接收设备2的状态信息。如果读者想要设备1,2均作为主设备互相显示状态信息和协同控制，只需利用轮换对称思想即可改进该框架。<br>使用该算法可以绕过软上位机，通过本地按键实现两台设备的互相控制和状态显示，一定程度上做到了设备间硬件资源的共享。<br>由于该算法的云端耦合特性，使用云端主题耦合进行数据传输，不需要本地有线通讯所以可以做到跨平台的设备协同。</p><h2 id="算法的局限性">算法的局限性</h2><p>  云端链式闭环协同算法作为面向低算力芯片的，较为简易的协同算法。不建议将该算法用在实时性要求比较强的场景，开发者可用一台主设备协同多台从设备，但要控制同一时间内的并发数量，以免低算力芯片因内存溢出而软重启。<br>该算法是建立在物联网云平台上的，需要TCP云服务器具有订阅和发布主题功能，或者使用MQTT3.1.1及以上协议才可使用，基于无线通讯特性，该算法稳定性不足，无法用于工业控制。且无法传输图片和视频流，具有一定的局限性。仅仅是一套应用层上的设备间协同解决方案之一。</p><h1 id="云端链式闭环协同算法下的关键子算法">云端链式闭环协同算法下的关键子算法</h1><p>  上文已经介绍了云端链式闭环协同算法的总体框架，下文将介绍该算法下的部分关键子算法的核心思想，还将以搭载了ESP8266-NodeMcu 1.0的物联网开发板为例，在Arduino IDE下使用支持MQTT协议的第三方&quot;PubSubClient.cpp&quot;，&quot;PubSubClient.h&quot;库[2]，定义MQTT收发数据为String类型，以此为基础，提供部分子算法的示例程序。</p><img src="/posts/63350/2.png" class="" title="[图2-关键子算法结构图]"><h2 id="轻量化子算法">轻量化子算法</h2><h3 id="复杂指令的轻量化传输n重位校验算法">复杂指令的轻量化传输N重位校验算法</h3><p>  微处理器能处理的指令是有限的，可以先将复杂指令转换为约定好的“功能位”，通过已烧入的程序由微处理器进行功能位校验并可在中间穿插自定义参数实现复杂指令的轻量化自定义传输。</p><img src="/posts/63350/3.png" class="" title="[图3轻量化子算法传输流程图]"><h4 id="n重位校验算法核心代码示例">N重位校验算法核心代码示例</h4><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line">Int R,G,B;  <span class="comment">//全局变量</span></span><br><span class="line"><span class="comment">//String类型的MQTT数据流转换为Char赋值给Str1首地址</span></span><br><span class="line"><span class="built_in">strcpy</span>(str1,Mqtt_Buff.c_str());</span><br><span class="line"><span class="comment">//截取字符串函数</span></span><br><span class="line"><span class="type">char</span> *<span class="title function_">substring</span><span class="params">(<span class="type">char</span> *dst,<span class="type">char</span> *src,<span class="type">int</span> start,<span class="type">int</span> len)</span></span><br><span class="line">&#123;  </span><br><span class="line">  <span class="type">char</span> *p=dst;  </span><br><span class="line">  <span class="type">char</span> *q=src;  </span><br><span class="line">  <span class="type">int</span> length=<span class="built_in">strlen</span>(src); </span><br><span class="line">  <span class="keyword">if</span>(start&gt;=length||start&lt;<span class="number">0</span>) </span><br><span class="line">    <span class="keyword">return</span> <span class="literal">NULL</span>;  </span><br><span class="line">  <span class="keyword">if</span>(len&gt;length) </span><br><span class="line">    len=length-start; </span><br><span class="line">  q+=start;</span><br><span class="line">  <span class="keyword">while</span>(len--)  </span><br><span class="line">  &#123;   </span><br><span class="line">    *(p++)=*(q++); </span><br><span class="line">  &#125;  </span><br><span class="line">  *(p++)=<span class="string">&#x27;\0&#x27;</span>;  </span><br><span class="line">  <span class="keyword">return</span> dst;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//定位功能位函数</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">dw</span><span class="params">(<span class="type">char</span> *scr,<span class="type">char</span> dst,<span class="type">int</span> b)</span>   <span class="comment">//遍历scr数据流中的dst功能位字符 从b位开始遍历    </span></span><br><span class="line">&#123;  </span><br><span class="line">    <span class="type">char</span> *p=scr;     </span><br><span class="line"><span class="type">char</span> *q=dst;</span><br><span class="line">    <span class="type">int</span> a,len=<span class="built_in">strlen</span>(scr);</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> w=b;w&lt;(len<span class="number">-1</span>);w++)</span><br><span class="line">    &#123;</span><br><span class="line">    <span class="keyword">if</span>(*(p+w)==dst)  <span class="comment">//检测到功能位</span></span><br><span class="line">     &#123;a=w;<span class="keyword">break</span>;&#125;        <span class="comment">//锁定位置</span></span><br><span class="line">    &#125; </span><br><span class="line">    <span class="keyword">return</span> a;</span><br><span class="line">  &#125;</span><br><span class="line"><span class="keyword">if</span>(str1[<span class="number">0</span>] == <span class="string">&#x27;R&#x27;</span>)       <span class="comment">//检测到某一复杂指令的功能位1     </span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> a=dw(str1,<span class="string">&#x27;L&#x27;</span>,<span class="number">1</span>),b=dw(str1,<span class="string">&#x27;D&#x27;</span>,<span class="number">2</span>); <span class="comment">//定位第2第3功能位并赋值给int值</span></span><br><span class="line">substring(str2,str1,<span class="number">1</span>,a<span class="number">-1</span>);   <span class="comment">//截取功能位1的自定义参数1</span></span><br><span class="line"> R=atoi(str10);   <span class="comment">//转Int类型可用于赋值给对应操作函数</span></span><br><span class="line">substring(str11,str1,a+<span class="number">1</span>,b<span class="number">-1</span>);</span><br><span class="line"> G=atoi(str4);    <span class="comment">//截取功能位2的自定义参数2</span></span><br><span class="line">substring(str12,str1,b+<span class="number">1</span>,<span class="built_in">strlen</span>(str1)<span class="number">-1</span>);  <span class="comment">//截取最后功能位的自定义参数3</span></span><br><span class="line"> B=atoi(str5);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="状态扫描子算法">状态扫描子算法</h2><p>  通过软上位机或本地按键接收到协同指令后开启基于异步通讯的状态扫描算法，主设备开启扫描在带有一定冗余时间(2s的扫描冗余)内接收到了协同设备的在线信息则表示当前协同设备在线，进入下一个阶段的扫描，经验证该方法延迟不超过1s且资源占用低。</p><img src="/posts/63350/4.png" class="" title="[图4状态扫描子算法流程图]"><h3 id="主设备实时扫描核心代码示例">主设备实时扫描核心代码示例</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//主设备</span></span><br><span class="line">OH.attach(<span class="number">1</span>,oh2,<span class="number">12</span>);     <span class="comment">//每隔1s扫描扫描时间12s冗余2s</span></span><br><span class="line">client.publish(ttopic5, “O”);    <span class="comment">//向设备2发送开启协同指令</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">oh2</span><span class="params">(<span class="type">int</span> h)</span></span><br><span class="line">&#123; </span><br><span class="line"> <span class="keyword">if</span>(s&lt;h)</span><br><span class="line"> &#123;s++;</span><br><span class="line">  <span class="keyword">if</span>(b==<span class="number">1</span>)         <span class="comment">//接收到了在线信息标志位b置1 </span></span><br><span class="line">  &#123; Serial.print(<span class="string">&quot;m2on&quot;</span>);s=<span class="number">0</span>;b=<span class="number">0</span>;z=<span class="number">1</span>; &#125;      <span class="comment">//扫描到了在线并将s置0重新扫描</span></span><br><span class="line"> &#125;</span><br><span class="line">  <span class="keyword">else</span> </span><br><span class="line">  &#123;Serial.print(<span class="string">&quot;m2off&quot;</span>); s=<span class="number">0</span>;b=<span class="number">0</span>; z=<span class="number">0</span>;&#125;  <span class="comment">//显示离线并将s置0重新扫描</span></span><br><span class="line">  <span class="keyword">if</span>(m!=<span class="number">1</span>)&#123;OH.detach();&#125;       <span class="comment">//检测到关闭协同指令标志位m不为1销毁进程  </span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="异步闭环通讯子算法">异步闭环通讯子算法</h2><h3 id="异步闭环的实现方法">异步闭环的实现方法</h3><p>  仅当设备2状态信息改变时才会向设备1发送数据流，设备1接收该数据流的同时立即向设备2发送收到的数据流，设备2再对该数据流同本地状态进行校验，若不一致则重新上传给设备1形成异步闭环。经检验，该方法能在资源占用较小的情况下做到数据的可信协同。</p><h3 id="异步闭环的优势">异步闭环的优势</h3><p>  由于异步闭环通讯与其他数据指令在同一时间内同时向设备1发送概率较小，耦合可能性较低，故在设备协同时也可以正常接收软上位机或本地按键的其他控制指令。</p><img src="/posts/63350/5.png" class="" title="[图5异步闭环数据流耦合性较低]"><h2 id="软多线程技术">软多线程技术</h2><p>  作为面向低算力的设备协同算法，在硬件本身不支持多线程的情况下使用定时器/中断/时间戳来保护或调用并行线程是必要的，尤其是在网络不佳的情况下可有效避免进程滞塞。</p><h3 id="防止进程滞塞">防止进程滞塞</h3><p>  使用该算法时物联网既要做本地控制又要设备协同还要保持和服务器的连接为有效防止进程滞塞，应该尽量避免使用for,delay等容易使设备陷入循环或等待从而影响其他进程的函数。可用毫秒级定时器定时自增的思想代替for循环也可用定时器或时间戳代替delay如：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">long</span> now = millis(); <span class="comment">//获取当前时间戳</span></span><br><span class="line"><span class="keyword">if</span> (now - lastMsg &gt; timeval)  <span class="comment">//超过该时间戳几毫秒后执行</span></span><br><span class="line">....  <span class="comment">//执行的操作</span></span><br></pre></td></tr></table></figure><h3 id="关键通讯线程保护">关键通讯线程保护</h3><p>  在实际项目中，遇到网络不稳定的情况，如果短时间反复与服务器重新连接会导致其他线程卡死。所以设备通讯不畅时定时[3]重新与服务器连接至关重要。<br>核心代码示例：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//断线时</span></span><br><span class="line"><span class="keyword">if</span>(count1&gt;=<span class="number">3</span>)</span><br><span class="line">&#123;       <span class="comment">//调用定时器每3s重连</span></span><br><span class="line">      count1=<span class="number">0</span>;         <span class="comment">//清零以进行下一次计数</span></span><br><span class="line">  <span class="keyword">if</span> (client.connect(ID_MQTT))   <span class="comment">//重新连接mqtt</span></span><br><span class="line"></span><br><span class="line"> &#123;   </span><br><span class="line">  m=<span class="number">1</span>;          <span class="comment">//连接成功标志位          </span></span><br><span class="line">Serial.println(<span class="string">&quot;connected&quot;</span>);</span><br><span class="line">      client.subscribe(topic);          <span class="comment">//修改，修改为你的主题</span></span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      Serial.println(<span class="string">&quot; try again&quot;</span>);</span><br><span class="line">          &#125;</span><br><span class="line"><span class="comment">//创建间隔1s的计时器</span></span><br><span class="line">rtd.attach(<span class="number">1</span>, tickerCount1);</span><br><span class="line">    <span class="comment">//定时计数子函数</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">tickerCount1</span><span class="params">()</span></span><br><span class="line">&#123;  </span><br><span class="line">      <span class="keyword">if</span>(m!=<span class="number">1</span>)</span><br><span class="line">&#123;  </span><br><span class="line">count1++; </span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="arduino下的线程回收方法">Arduino下的线程回收方法</h3><p>  当我们使用定时器调用的并行线程结束或者被关闭后，如果定时器还在持续计数，那么无疑会造成资源的浪费，在Arduino IDE下可以使用函数来销毁定时器[3]回收这部分内存减少低算力芯片的资源占用。(部分芯片不支持)<br>核心代码示例：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//接受到开启指令，通过毫秒级定时器调用函数</span></span><br><span class="line">ticker.attach_ms(d3, HLED, n);  <span class="comment">//每d3毫秒调用一次函数HLED(int n)</span></span><br><span class="line"><span class="comment">//循环结束或收到关闭指令</span></span><br><span class="line"><span class="keyword">if</span> (count &gt;= DX || DXC != <span class="number">2</span>)   <span class="comment">//当前线程循环结束或被关闭</span></span><br><span class="line"> &#123;count=<span class="number">0</span>;ticker.detach();&#125;   <span class="comment">//计时清零，定时器销毁</span></span><br></pre></td></tr></table></figure><h1 id="传统设备接入本算法及本地tcp-sever多机位控制">传统设备接入本算法及本地TCP Sever多机位控制</h1><p>  上文中的示例代码开发环境为Arduino IDE且开发板本身就搭载无线通讯模块，不具有普遍适用性。对于如何将传统不搭载无线通讯模块的微处理器，接入物联网M2M技术的方案依然较少，如何在云平台服务器崩溃的环境下提供一种备用的远程控制方案也是值得思考的问题。下文将以传统C52开发板配合ESP8266 01(S)wifi模块连接本地TCP Sever为例，探究如何通过本地TCP Sever进行多机位设备控制，以及如何使用TCP云平台的主题订阅和发布功能使传统设备接入本算法。</p><h2 id="建立与无线通讯模块的有线串口通讯">建立与无线通讯模块的有线串口通讯</h2><p>  先按如图6所示，完成ESP8266无线通讯模块与C52的有线连接。</p><p>  C52的RXD(P3.0)连WiFi模块的TXD,TXD(P3.1)连RXD 才能实现设备间的有线串口通讯。连线完成后使用相同的波特率建立有线串口通讯[4]。本文使用T1定时器配合12Mhz晶振，串行口工作方式为1，波特率设置为4800。ESP8266模块可以直接使用固件中集成的AT指令设置波特率。<br>  STC89C52芯片串行口控制寄存器SCON中自带两个接受与发送标志位[5]，RI和TI。<br>  通过发送与接收串口中断中的RI,TI标志位，使C52单片机能与ESP8266WiFi模块建立有线串口通讯。</p><h2 id="本地tcp-server多机位控制">本地TCP Server多机位控制</h2><p>  与ESP8266WiFi模块建立有线串口通讯后，可利用其无线通讯特性再建立与服务器的连接。下文使用本地TCP Sever为例，本地TCP Sever可以作为物联网云平台崩溃的情况下，一种可靠的远程控制备用解决方案，且成本很低，对于稳定性要求较高的场景预留备用方案是必要的。<br>ESP8266WiFi模块可用固件自带的AT指令[6]接入TCP Sever：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//开启透明传输模式</span></span><br><span class="line">AT+CIPMODE=<span class="number">1</span></span><br><span class="line"><span class="comment">//连接TCP</span></span><br><span class="line">AT+CIPSTART=”TCP”,”服务器地址”，端口</span><br><span class="line"><span class="comment">//进入透传模式用于向服务器发送信息</span></span><br><span class="line">AT+CIPSEND</span><br></pre></td></tr></table></figure><p>  其他型号的wifi模块指令，可查阅官方固件文档，也可以反编译开源固件来自定义函数接口。</p><img src="/posts/63350/7.png" class="" title="[图7TCPSever多机位控制流程图]"><p>  本文使用网络调试助手建立的TCP Sever作为本地服务器，经过测试，使用上文中的方法可以实现同一局域网内的多机位控制如图8所示。</p><img src="/posts/63350/8.png" class="" title="[图8接线图]"><h2 id="传统设备接入本算法">传统设备接入本算法</h2><p>  上文介绍了一种传统设备通过与WiFi模块的有线通讯连接TCP的方法，本文介绍的云端链式闭环协同算法只需物联网云平台具有发布和订阅主题功能即可使用，部分物联网云平台通过后端开发，将TCP云提供了与MQTT协议类似的发布和订阅主题功能，这种情况可在建立与WIFI模块的有线通讯后，按照物联网云平台的TCP接入文档[7]，订阅上主题后实现本算法功能，不用额外移植MQTT协议，使用串口中断定义unsigned char 类型逐位收发数据流，不需要C++编译器支持。<br>也可使用更为通用的MQTT协议接入本算法，由于MQTT协议需要第三方库支持，需要针对不同的硬件和编译平台进行移植[8]。</p><h1 id="结论">结论</h1><p>  本文介绍了一种面向低算力场景下的轻量化设备间协同解决方案——云端链式闭环协同算法，该算法扩展性较强，使用方法简单，可以在目前物联网云平台广泛使用的TCP云或MQTT3.1.1协议进行适配，兼容性强，同时通过云端主题耦合可以支持跨平台的设备间协同与相互控制，实现硬件资源的优势互补，经实验验证该算法有效。并且本文以C52为例浅谈如何将传统设备接入本算法，以扩展本算法的应用范围。本文还介绍了一种通过本地TCP Sever的备用物联网多机位控制方案，以提升在云平台失效场景下的控制稳定性。</p><blockquote><p>视频示例：</p></blockquote><div style="position: relative; width: 100%; height: 0; padding-bottom: 75%;"><iframe src="//player.bilibili.com/player.html?aid=421535709&bvid=BV1U3411b7JG&cid=437385587&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true" style="position: absolute; width: 100%; height: 100%; Left: 0; top: 0;" ></iframe></div><mark class="hl-label red">本文节选自本人论文未经授权禁止用于学术及商业用途!</mark> ]]></content>
      
      
      <categories>
          
          <category> 嵌入式 </category>
          
          <category> Arduino </category>
          
          <category> 物联网 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 解决方案 </tag>
            
            <tag> 设备协同技术 </tag>
            
            <tag> 云端 </tag>
            
            <tag> 可视化 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/posts/16107/"/>
      <url>/posts/16107/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="quick-start">Quick Start</h2><h3 id="create-a-new-post">Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="run-server">Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="generate-static-files">Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="deploy-to-remote-sites">Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> 初始化 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>选择性分布式shell脚本应用-以安卓Magisk刷机流程为例</title>
      <link href="/posts/46099/"/>
      <url>/posts/46099/</url>
      
        <content type="html"><![CDATA[<h1 id="原理说明">原理说明</h1><p>  使用if+shell<code>source ./xxx.sh</code>命令 通过<code>KEYCHECK=$INSTALLER/common/keycheck</code>检测按键状态配合if和可视化程序块进行选择和按需调用<br>xxx.sh文件放入自己设置的目录在用<code>cd $xxx/xxx/xxx</code>即可调用<br>注意：</p><ol><li><p>./是当前目录</p></li><li><p>../是父级目录</p></li><li><p>/是根目录<br>代码如下:</p></li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">if $FUNCTION; then</span><br><span class="line">  echo -n &quot;  兼容模式    &quot; &gt;&gt;$INSTALLER/module.prop</span><br><span class="line">cd $INSTALLER/common/qita</span><br><span class="line">  source ./jian.sh</span><br></pre></td></tr></table></figure><h3 id="开源地址">开源地址</h3><p>  项目比较简单可自行看开源地址:<a href="https://gitee.com/HG666889/selectShell.git">gitee-开源传送门</a></p>]]></content>
      
      
      <categories>
          
          <category> 开源 </category>
          
          <category> 安卓 </category>
          
          <category> Shell </category>
          
      </categories>
      
      
        <tags>
            
            <tag> gitee </tag>
            
            <tag> Magisk </tag>
            
            <tag> shell脚本 </tag>
            
            <tag> ROOT </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
